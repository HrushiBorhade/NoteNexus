{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { noteCreateReducer, noteDeleteReducer, noteListReducer, noteUpdateReducer } from \"./reducers/notesReducers\";\nimport { userLoginReducer, userRegisterReducer } from \"./reducers/userReducers\";\nconst reducer = combineReducers({\n  noteList: noteListReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  noteCreate: noteCreateReducer,\n  noteDelete: noteDeleteReducer,\n  noteUpdate: noteUpdateReducer\n  // userUpdate: userUpdateReducer,\n});\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","noteCreateReducer","noteDeleteReducer","noteListReducer","noteUpdateReducer","userLoginReducer","userRegisterReducer","reducer","noteList","userLogin","userRegister","noteCreate","noteDelete","noteUpdate","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"sources":["/Users/hrushi/Desktop/notenexus/client/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  noteCreateReducer,\n  noteDeleteReducer,\n  noteListReducer,\n  noteUpdateReducer,\n} from \"./reducers/notesReducers\";\nimport { userLoginReducer, userRegisterReducer } from \"./reducers/userReducers\";\n\nconst reducer = combineReducers({\n  noteList: noteListReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  noteCreate: noteCreateReducer,\n  noteDelete: noteDeleteReducer,\n  noteUpdate: noteUpdateReducer,\n  // userUpdate: userUpdateReducer,\n});\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SACEC,iBAAiB,EACjBC,iBAAiB,EACjBC,eAAe,EACfC,iBAAiB,QACZ,0BAA0B;AACjC,SAASC,gBAAgB,EAAEC,mBAAmB,QAAQ,yBAAyB;AAE/E,MAAMC,OAAO,GAAGV,eAAe,CAAC;EAC9BW,QAAQ,EAAEL,eAAe;EACzBM,SAAS,EAAEJ,gBAAgB;EAC3BK,YAAY,EAAEJ,mBAAmB;EACjCK,UAAU,EAAEV,iBAAiB;EAC7BW,UAAU,EAAEV,iBAAiB;EAC7BW,UAAU,EAAET;EACZ;AACF,CAAC,CAAC;;AAEF,MAAMU,mBAAmB,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAC5C,IAAI;AAER,MAAMG,YAAY,GAAG;EACnBV,SAAS,EAAE;IAAEW,QAAQ,EAAEN;EAAoB;AAC7C,CAAC;AAED,MAAMO,UAAU,GAAG,CAACtB,KAAK,CAAC;AAE1B,MAAMuB,KAAK,GAAG1B,WAAW,CACvBW,OAAO,EACPY,YAAY,EACZnB,mBAAmB,CAACF,eAAe,CAAC,GAAGuB,UAAU,CAAC,CAAC,CACpD;AAED,eAAeC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}