{"ast":null,"code":"/*\n  @license\n\tRollup.js v3.18.0\n\tWed, 01 Mar 2023 18:45:12 GMT - commit 25bdc129d21685b69a00ee55397d42ac6eff6449\n\n\thttps://github.com/rollup/rollup\n\n\tReleased under the MIT License.\n*/\nimport { resolve, basename, extname, dirname, relative as relative$1 } from 'node:path';\nimport require$$0$1, { win32, posix, isAbsolute as isAbsolute$1, resolve as resolve$1 } from 'path';\nimport process$1, { env as env$1 } from 'node:process';\nimport { performance } from 'node:perf_hooks';\nimport { createHash as createHash$1 } from 'node:crypto';\nimport { lstat, realpath, readdir, readFile, mkdir, writeFile } from 'node:fs/promises';\nimport { EventEmitter } from 'node:events';\nimport * as tty from 'tty';\nvar version$1 = \"3.18.0\";\nconst comma = ','.charCodeAt(0);\nconst semicolon = ';'.charCodeAt(0);\nconst chars$1 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst intToChar = new Uint8Array(64); // 64 possible chars.\nconst charToInt = new Uint8Array(128); // z is 122 in ASCII\nfor (let i = 0; i < chars$1.length; i++) {\n  const c = chars$1.charCodeAt(i);\n  intToChar[i] = c;\n  charToInt[c] = i;\n}\n// Provide a fallback for older environments.\nconst td = typeof TextDecoder !== 'undefined' ? /* #__PURE__ */new TextDecoder() : typeof Buffer !== 'undefined' ? {\n  decode(buf) {\n    const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);\n    return out.toString();\n  }\n} : {\n  decode(buf) {\n    let out = '';\n    for (let i = 0; i < buf.length; i++) {\n      out += String.fromCharCode(buf[i]);\n    }\n    return out;\n  }\n};\nfunction decode(mappings) {\n  const state = new Int32Array(5);\n  const decoded = [];\n  let index = 0;\n  do {\n    const semi = indexOf(mappings, index);\n    const line = [];\n    let sorted = true;\n    let lastCol = 0;\n    state[0] = 0;\n    for (let i = index; i < semi; i++) {\n      let seg;\n      i = decodeInteger(mappings, i, state, 0); // genColumn\n      const col = state[0];\n      if (col < lastCol) sorted = false;\n      lastCol = col;\n      if (hasMoreVlq(mappings, i, semi)) {\n        i = decodeInteger(mappings, i, state, 1); // sourcesIndex\n        i = decodeInteger(mappings, i, state, 2); // sourceLine\n        i = decodeInteger(mappings, i, state, 3); // sourceColumn\n        if (hasMoreVlq(mappings, i, semi)) {\n          i = decodeInteger(mappings, i, state, 4); // namesIndex\n          seg = [col, state[1], state[2], state[3], state[4]];\n        } else {\n          seg = [col, state[1], state[2], state[3]];\n        }\n      } else {\n        seg = [col];\n      }\n      line.push(seg);\n    }\n    if (!sorted) sort(line);\n    decoded.push(line);\n    index = semi + 1;\n  } while (index <= mappings.length);\n  return decoded;\n}\nfunction indexOf(mappings, index) {\n  const idx = mappings.indexOf(';', index);\n  return idx === -1 ? mappings.length : idx;\n}\nfunction decodeInteger(mappings, pos, state, j) {\n  let value = 0;\n  let shift = 0;\n  let integer = 0;\n  do {\n    const c = mappings.charCodeAt(pos++);\n    integer = charToInt[c];\n    value |= (integer & 31) << shift;\n    shift += 5;\n  } while (integer & 32);\n  const shouldNegate = value & 1;\n  value >>>= 1;\n  if (shouldNegate) {\n    value = -0x80000000 | -value;\n  }\n  state[j] += value;\n  return pos;\n}\nfunction hasMoreVlq(mappings, i, length) {\n  if (i >= length) return false;\n  return mappings.charCodeAt(i) !== comma;\n}\nfunction sort(line) {\n  line.sort(sortComparator);\n}\nfunction sortComparator(a, b) {\n  return a[0] - b[0];\n}\nfunction encode(decoded) {\n  const state = new Int32Array(5);\n  const bufLength = 1024 * 16;\n  const subLength = bufLength - 36;\n  const buf = new Uint8Array(bufLength);\n  const sub = buf.subarray(0, subLength);\n  let pos = 0;\n  let out = '';\n  for (let i = 0; i < decoded.length; i++) {\n    const line = decoded[i];\n    if (i > 0) {\n      if (pos === bufLength) {\n        out += td.decode(buf);\n        pos = 0;\n      }\n      buf[pos++] = semicolon;\n    }\n    if (line.length === 0) continue;\n    state[0] = 0;\n    for (let j = 0; j < line.length; j++) {\n      const segment = line[j];\n      // We can push up to 5 ints, each int can take at most 7 chars, and we\n      // may push a comma.\n      if (pos > subLength) {\n        out += td.decode(sub);\n        buf.copyWithin(0, subLength, pos);\n        pos -= subLength;\n      }\n      if (j > 0) buf[pos++] = comma;\n      pos = encodeInteger(buf, pos, state, segment, 0); // genColumn\n      if (segment.length === 1) continue;\n      pos = encodeInteger(buf, pos, state, segment, 1); // sourcesIndex\n      pos = encodeInteger(buf, pos, state, segment, 2); // sourceLine\n      pos = encodeInteger(buf, pos, state, segment, 3); // sourceColumn\n      if (segment.length === 4) continue;\n      pos = encodeInteger(buf, pos, state, segment, 4); // namesIndex\n    }\n  }\n\n  return out + td.decode(buf.subarray(0, pos));\n}\nfunction encodeInteger(buf, pos, state, segment, j) {\n  const next = segment[j];\n  let num = next - state[j];\n  state[j] = next;\n  num = num < 0 ? -num << 1 | 1 : num << 1;\n  do {\n    let clamped = num & 0b011111;\n    num >>>= 5;\n    if (num > 0) clamped |= 0b100000;\n    buf[pos++] = intToChar[clamped];\n  } while (num > 0);\n  return pos;\n}\nclass BitSet {\n  constructor(arg) {\n    this.bits = arg instanceof BitSet ? arg.bits.slice() : [];\n  }\n  add(n) {\n    this.bits[n >> 5] |= 1 << (n & 31);\n  }\n  has(n) {\n    return !!(this.bits[n >> 5] & 1 << (n & 31));\n  }\n}\nlet Chunk$1 = class Chunk {\n  constructor(start, end, content) {\n    this.start = start;\n    this.end = end;\n    this.original = content;\n    this.intro = '';\n    this.outro = '';\n    this.content = content;\n    this.storeName = false;\n    this.edited = false;\n    {\n      this.previous = null;\n      this.next = null;\n    }\n  }\n  appendLeft(content) {\n    this.outro += content;\n  }\n  appendRight(content) {\n    this.intro = this.intro + content;\n  }\n  clone() {\n    const chunk = new Chunk(this.start, this.end, this.original);\n    chunk.intro = this.intro;\n    chunk.outro = this.outro;\n    chunk.content = this.content;\n    chunk.storeName = this.storeName;\n    chunk.edited = this.edited;\n    return chunk;\n  }\n  contains(index) {\n    return this.start < index && index < this.end;\n  }\n  eachNext(fn) {\n    let chunk = this;\n    while (chunk) {\n      fn(chunk);\n      chunk = chunk.next;\n    }\n  }\n  eachPrevious(fn) {\n    let chunk = this;\n    while (chunk) {\n      fn(chunk);\n      chunk = chunk.previous;\n    }\n  }\n  edit(content, storeName, contentOnly) {\n    this.content = content;\n    if (!contentOnly) {\n      this.intro = '';\n      this.outro = '';\n    }\n    this.storeName = storeName;\n    this.edited = true;\n    return this;\n  }\n  prependLeft(content) {\n    this.outro = content + this.outro;\n  }\n  prependRight(content) {\n    this.intro = content + this.intro;\n  }\n  split(index) {\n    const sliceIndex = index - this.start;\n    const originalBefore = this.original.slice(0, sliceIndex);\n    const originalAfter = this.original.slice(sliceIndex);\n    this.original = originalBefore;\n    const newChunk = new Chunk(index, this.end, originalAfter);\n    newChunk.outro = this.outro;\n    this.outro = '';\n    this.end = index;\n    if (this.edited) {\n      // TODO is this block necessary?...\n      newChunk.edit('', false);\n      this.content = '';\n    } else {\n      this.content = originalBefore;\n    }\n    newChunk.next = this.next;\n    if (newChunk.next) newChunk.next.previous = newChunk;\n    newChunk.previous = this;\n    this.next = newChunk;\n    return newChunk;\n  }\n  toString() {\n    return this.intro + this.content + this.outro;\n  }\n  trimEnd(rx) {\n    this.outro = this.outro.replace(rx, '');\n    if (this.outro.length) return true;\n    const trimmed = this.content.replace(rx, '');\n    if (trimmed.length) {\n      if (trimmed !== this.content) {\n        this.split(this.start + trimmed.length).edit('', undefined, true);\n      }\n      return true;\n    } else {\n      this.edit('', undefined, true);\n      this.intro = this.intro.replace(rx, '');\n      if (this.intro.length) return true;\n    }\n  }\n  trimStart(rx) {\n    this.intro = this.intro.replace(rx, '');\n    if (this.intro.length) return true;\n    const trimmed = this.content.replace(rx, '');\n    if (trimmed.length) {\n      if (trimmed !== this.content) {\n        this.split(this.end - trimmed.length);\n        this.edit('', undefined, true);\n      }\n      return true;\n    } else {\n      this.edit('', undefined, true);\n      this.outro = this.outro.replace(rx, '');\n      if (this.outro.length) return true;\n    }\n  }\n};\nfunction getBtoa() {\n  if (typeof window !== 'undefined' && typeof window.btoa === 'function') {\n    return str => window.btoa(unescape(encodeURIComponent(str)));\n  } else if (typeof Buffer === 'function') {\n    return str => Buffer.from(str, 'utf-8').toString('base64');\n  } else {\n    return () => {\n      throw new Error('Unsupported environment: `window.btoa` or `Buffer` should be supported.');\n    };\n  }\n}\nconst btoa = /*#__PURE__*/getBtoa();\nclass SourceMap {\n  constructor(properties) {\n    this.version = 3;\n    this.file = properties.file;\n    this.sources = properties.sources;\n    this.sourcesContent = properties.sourcesContent;\n    this.names = properties.names;\n    this.mappings = encode(properties.mappings);\n    if (typeof properties.x_google_ignoreList !== 'undefined') {\n      this.x_google_ignoreList = properties.x_google_ignoreList;\n    }\n  }\n  toString() {\n    return JSON.stringify(this);\n  }\n  toUrl() {\n    return 'data:application/json;charset=utf-8;base64,' + btoa(this.toString());\n  }\n}\nfunction guessIndent(code) {\n  const lines = code.split('\\n');\n  const tabbed = lines.filter(line => /^\\t+/.test(line));\n  const spaced = lines.filter(line => /^ {2,}/.test(line));\n  if (tabbed.length === 0 && spaced.length === 0) {\n    return null;\n  }\n\n  // More lines tabbed than spaced? Assume tabs, and\n  // default to tabs in the case of a tie (or nothing\n  // to go on)\n  if (tabbed.length >= spaced.length) {\n    return '\\t';\n  }\n\n  // Otherwise, we need to guess the multiple\n  const min = spaced.reduce((previous, current) => {\n    const numSpaces = /^ +/.exec(current)[0].length;\n    return Math.min(numSpaces, previous);\n  }, Infinity);\n  return new Array(min + 1).join(' ');\n}\nfunction getRelativePath(from, to) {\n  const fromParts = from.split(/[/\\\\]/);\n  const toParts = to.split(/[/\\\\]/);\n  fromParts.pop(); // get dirname\n\n  while (fromParts[0] === toParts[0]) {\n    fromParts.shift();\n    toParts.shift();\n  }\n  if (fromParts.length) {\n    let i = fromParts.length;\n    while (i--) fromParts[i] = '..';\n  }\n  return fromParts.concat(toParts).join('/');\n}\nconst toString$1 = Object.prototype.toString;\nfunction isObject$1(thing) {\n  return toString$1.call(thing) === '[object Object]';\n}\nfunction getLocator$1(source) {\n  const originalLines = source.split('\\n');\n  const lineOffsets = [];\n  for (let i = 0, pos = 0; i < originalLines.length; i++) {\n    lineOffsets.push(pos);\n    pos += originalLines[i].length + 1;\n  }\n  return function locate(index) {\n    let i = 0;\n    let j = lineOffsets.length;\n    while (i < j) {\n      const m = i + j >> 1;\n      if (index < lineOffsets[m]) {\n        j = m;\n      } else {\n        i = m + 1;\n      }\n    }\n    const line = i - 1;\n    const column = index - lineOffsets[line];\n    return {\n      line,\n      column\n    };\n  };\n}\nclass Mappings {\n  constructor(hires) {\n    this.hires = hires;\n    this.generatedCodeLine = 0;\n    this.generatedCodeColumn = 0;\n    this.raw = [];\n    this.rawSegments = this.raw[this.generatedCodeLine] = [];\n    this.pending = null;\n  }\n  addEdit(sourceIndex, content, loc, nameIndex) {\n    if (content.length) {\n      const segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\n      if (nameIndex >= 0) {\n        segment.push(nameIndex);\n      }\n      this.rawSegments.push(segment);\n    } else if (this.pending) {\n      this.rawSegments.push(this.pending);\n    }\n    this.advance(content);\n    this.pending = null;\n  }\n  addUneditedChunk(sourceIndex, chunk, original, loc, sourcemapLocations) {\n    let originalCharIndex = chunk.start;\n    let first = true;\n    while (originalCharIndex < chunk.end) {\n      if (this.hires || first || sourcemapLocations.has(originalCharIndex)) {\n        this.rawSegments.push([this.generatedCodeColumn, sourceIndex, loc.line, loc.column]);\n      }\n      if (original[originalCharIndex] === '\\n') {\n        loc.line += 1;\n        loc.column = 0;\n        this.generatedCodeLine += 1;\n        this.raw[this.generatedCodeLine] = this.rawSegments = [];\n        this.generatedCodeColumn = 0;\n        first = true;\n      } else {\n        loc.column += 1;\n        this.generatedCodeColumn += 1;\n        first = false;\n      }\n      originalCharIndex += 1;\n    }\n    this.pending = null;\n  }\n  advance(str) {\n    if (!str) return;\n    const lines = str.split('\\n');\n    if (lines.length > 1) {\n      for (let i = 0; i < lines.length - 1; i++) {\n        this.generatedCodeLine++;\n        this.raw[this.generatedCodeLine] = this.rawSegments = [];\n      }\n      this.generatedCodeColumn = 0;\n    }\n    this.generatedCodeColumn += lines[lines.length - 1].length;\n  }\n}\nconst n = '\\n';\nconst warned = {\n  insertLeft: false,\n  insertRight: false,\n  storeName: false\n};\nclass MagicString {\n  constructor(string) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const chunk = new Chunk$1(0, string.length, string);\n    Object.defineProperties(this, {\n      original: {\n        writable: true,\n        value: string\n      },\n      outro: {\n        writable: true,\n        value: ''\n      },\n      intro: {\n        writable: true,\n        value: ''\n      },\n      firstChunk: {\n        writable: true,\n        value: chunk\n      },\n      lastChunk: {\n        writable: true,\n        value: chunk\n      },\n      lastSearchedChunk: {\n        writable: true,\n        value: chunk\n      },\n      byStart: {\n        writable: true,\n        value: {}\n      },\n      byEnd: {\n        writable: true,\n        value: {}\n      },\n      filename: {\n        writable: true,\n        value: options.filename\n      },\n      indentExclusionRanges: {\n        writable: true,\n        value: options.indentExclusionRanges\n      },\n      sourcemapLocations: {\n        writable: true,\n        value: new BitSet()\n      },\n      storedNames: {\n        writable: true,\n        value: {}\n      },\n      indentStr: {\n        writable: true,\n        value: undefined\n      }\n    });\n    this.byStart[0] = chunk;\n    this.byEnd[string.length] = chunk;\n  }\n  addSourcemapLocation(char) {\n    this.sourcemapLocations.add(char);\n  }\n  append(content) {\n    if (typeof content !== 'string') throw new TypeError('outro content must be a string');\n    this.outro += content;\n    return this;\n  }\n  appendLeft(index, content) {\n    if (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n    this._split(index);\n    const chunk = this.byEnd[index];\n    if (chunk) {\n      chunk.appendLeft(content);\n    } else {\n      this.intro += content;\n    }\n    return this;\n  }\n  appendRight(index, content) {\n    if (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n    this._split(index);\n    const chunk = this.byStart[index];\n    if (chunk) {\n      chunk.appendRight(content);\n    } else {\n      this.outro += content;\n    }\n    return this;\n  }\n  clone() {\n    const cloned = new MagicString(this.original, {\n      filename: this.filename\n    });\n    let originalChunk = this.firstChunk;\n    let clonedChunk = cloned.firstChunk = cloned.lastSearchedChunk = originalChunk.clone();\n    while (originalChunk) {\n      cloned.byStart[clonedChunk.start] = clonedChunk;\n      cloned.byEnd[clonedChunk.end] = clonedChunk;\n      const nextOriginalChunk = originalChunk.next;\n      const nextClonedChunk = nextOriginalChunk && nextOriginalChunk.clone();\n      if (nextClonedChunk) {\n        clonedChunk.next = nextClonedChunk;\n        nextClonedChunk.previous = clonedChunk;\n        clonedChunk = nextClonedChunk;\n      }\n      originalChunk = nextOriginalChunk;\n    }\n    cloned.lastChunk = clonedChunk;\n    if (this.indentExclusionRanges) {\n      cloned.indentExclusionRanges = this.indentExclusionRanges.slice();\n    }\n    cloned.sourcemapLocations = new BitSet(this.sourcemapLocations);\n    cloned.intro = this.intro;\n    cloned.outro = this.outro;\n    return cloned;\n  }\n  generateDecodedMap(options) {\n    options = options || {};\n    const sourceIndex = 0;\n    const names = Object.keys(this.storedNames);\n    const mappings = new Mappings(options.hires);\n    const locate = getLocator$1(this.original);\n    if (this.intro) {\n      mappings.advance(this.intro);\n    }\n    this.firstChunk.eachNext(chunk => {\n      const loc = locate(chunk.start);\n      if (chunk.intro.length) mappings.advance(chunk.intro);\n      if (chunk.edited) {\n        mappings.addEdit(sourceIndex, chunk.content, loc, chunk.storeName ? names.indexOf(chunk.original) : -1);\n      } else {\n        mappings.addUneditedChunk(sourceIndex, chunk, this.original, loc, this.sourcemapLocations);\n      }\n      if (chunk.outro.length) mappings.advance(chunk.outro);\n    });\n    return {\n      file: options.file ? options.file.split(/[/\\\\]/).pop() : null,\n      sources: [options.source ? getRelativePath(options.file || '', options.source) : null],\n      sourcesContent: options.includeContent ? [this.original] : [null],\n      names,\n      mappings: mappings.raw\n    };\n  }\n  generateMap(options) {\n    return new SourceMap(this.generateDecodedMap(options));\n  }\n  _ensureindentStr() {\n    if (this.indentStr === undefined) {\n      this.indentStr = guessIndent(this.original);\n    }\n  }\n  _getRawIndentString() {\n    this._ensureindentStr();\n    return this.indentStr;\n  }\n  getIndentString() {\n    this._ensureindentStr();\n    return this.indentStr === null ? '\\t' : this.indentStr;\n  }\n  indent(indentStr, options) {\n    const pattern = /^[^\\r\\n]/gm;\n    if (isObject$1(indentStr)) {\n      options = indentStr;\n      indentStr = undefined;\n    }\n    if (indentStr === undefined) {\n      this._ensureindentStr();\n      indentStr = this.indentStr || '\\t';\n    }\n    if (indentStr === '') return this; // noop\n\n    options = options || {};\n\n    // Process exclusion ranges\n    const isExcluded = {};\n    if (options.exclude) {\n      const exclusions = typeof options.exclude[0] === 'number' ? [options.exclude] : options.exclude;\n      exclusions.forEach(exclusion => {\n        for (let i = exclusion[0]; i < exclusion[1]; i += 1) {\n          isExcluded[i] = true;\n        }\n      });\n    }\n    let shouldIndentNextCharacter = options.indentStart !== false;\n    const replacer = match => {\n      if (shouldIndentNextCharacter) return `${indentStr}${match}`;\n      shouldIndentNextCharacter = true;\n      return match;\n    };\n    this.intro = this.intro.replace(pattern, replacer);\n    let charIndex = 0;\n    let chunk = this.firstChunk;\n    while (chunk) {\n      const end = chunk.end;\n      if (chunk.edited) {\n        if (!isExcluded[charIndex]) {\n          chunk.content = chunk.content.replace(pattern, replacer);\n          if (chunk.content.length) {\n            shouldIndentNextCharacter = chunk.content[chunk.content.length - 1] === '\\n';\n          }\n        }\n      } else {\n        charIndex = chunk.start;\n        while (charIndex < end) {\n          if (!isExcluded[charIndex]) {\n            const char = this.original[charIndex];\n            if (char === '\\n') {\n              shouldIndentNextCharacter = true;\n            } else if (char !== '\\r' && shouldIndentNextCharacter) {\n              shouldIndentNextCharacter = false;\n              if (charIndex === chunk.start) {\n                chunk.prependRight(indentStr);\n              } else {\n                this._splitChunk(chunk, charIndex);\n                chunk = chunk.next;\n                chunk.prependRight(indentStr);\n              }\n            }\n          }\n          charIndex += 1;\n        }\n      }\n      charIndex = chunk.end;\n      chunk = chunk.next;\n    }\n    this.outro = this.outro.replace(pattern, replacer);\n    return this;\n  }\n  insert() {\n    throw new Error('magicString.insert(...) is deprecated. Use prependRight(...) or appendLeft(...)');\n  }\n  insertLeft(index, content) {\n    if (!warned.insertLeft) {\n      console.warn('magicString.insertLeft(...) is deprecated. Use magicString.appendLeft(...) instead'); // eslint-disable-line no-console\n      warned.insertLeft = true;\n    }\n    return this.appendLeft(index, content);\n  }\n  insertRight(index, content) {\n    if (!warned.insertRight) {\n      console.warn('magicString.insertRight(...) is deprecated. Use magicString.prependRight(...) instead'); // eslint-disable-line no-console\n      warned.insertRight = true;\n    }\n    return this.prependRight(index, content);\n  }\n  move(start, end, index) {\n    if (index >= start && index <= end) throw new Error('Cannot move a selection inside itself');\n    this._split(start);\n    this._split(end);\n    this._split(index);\n    const first = this.byStart[start];\n    const last = this.byEnd[end];\n    const oldLeft = first.previous;\n    const oldRight = last.next;\n    const newRight = this.byStart[index];\n    if (!newRight && last === this.lastChunk) return this;\n    const newLeft = newRight ? newRight.previous : this.lastChunk;\n    if (oldLeft) oldLeft.next = oldRight;\n    if (oldRight) oldRight.previous = oldLeft;\n    if (newLeft) newLeft.next = first;\n    if (newRight) newRight.previous = last;\n    if (!first.previous) this.firstChunk = last.next;\n    if (!last.next) {\n      this.lastChunk = first.previous;\n      this.lastChunk.next = null;\n    }\n    first.previous = newLeft;\n    last.next = newRight || null;\n    if (!newLeft) this.firstChunk = first;\n    if (!newRight) this.lastChunk = last;\n    return this;\n  }\n  overwrite(start, end, content, options) {\n    options = options || {};\n    return this.update(start, end, content, {\n      ...options,\n      overwrite: !options.contentOnly\n    });\n  }\n  update(start, end, content, options) {\n    if (typeof content !== 'string') throw new TypeError('replacement content must be a string');\n    while (start < 0) start += this.original.length;\n    while (end < 0) end += this.original.length;\n    if (end > this.original.length) throw new Error('end is out of bounds');\n    if (start === end) throw new Error('Cannot overwrite a zero-length range – use appendLeft or prependRight instead');\n    this._split(start);\n    this._split(end);\n    if (options === true) {\n      if (!warned.storeName) {\n        console.warn('The final argument to magicString.overwrite(...) should be an options object. See https://github.com/rich-harris/magic-string'); // eslint-disable-line no-console\n        warned.storeName = true;\n      }\n      options = {\n        storeName: true\n      };\n    }\n    const storeName = options !== undefined ? options.storeName : false;\n    const overwrite = options !== undefined ? options.overwrite : false;\n    if (storeName) {\n      const original = this.original.slice(start, end);\n      Object.defineProperty(this.storedNames, original, {\n        writable: true,\n        value: true,\n        enumerable: true\n      });\n    }\n    const first = this.byStart[start];\n    const last = this.byEnd[end];\n    if (first) {\n      let chunk = first;\n      while (chunk !== last) {\n        if (chunk.next !== this.byStart[chunk.end]) {\n          throw new Error('Cannot overwrite across a split point');\n        }\n        chunk = chunk.next;\n        chunk.edit('', false);\n      }\n      first.edit(content, storeName, !overwrite);\n    } else {\n      // must be inserting at the end\n      const newChunk = new Chunk$1(start, end, '').edit(content, storeName);\n\n      // TODO last chunk in the array may not be the last chunk, if it's moved...\n      last.next = newChunk;\n      newChunk.previous = last;\n    }\n    return this;\n  }\n  prepend(content) {\n    if (typeof content !== 'string') throw new TypeError('outro content must be a string');\n    this.intro = content + this.intro;\n    return this;\n  }\n  prependLeft(index, content) {\n    if (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n    this._split(index);\n    const chunk = this.byEnd[index];\n    if (chunk) {\n      chunk.prependLeft(content);\n    } else {\n      this.intro = content + this.intro;\n    }\n    return this;\n  }\n  prependRight(index, content) {\n    if (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n    this._split(index);\n    const chunk = this.byStart[index];\n    if (chunk) {\n      chunk.prependRight(content);\n    } else {\n      this.outro = content + this.outro;\n    }\n    return this;\n  }\n  remove(start, end) {\n    while (start < 0) start += this.original.length;\n    while (end < 0) end += this.original.length;\n    if (start === end) return this;\n    if (start < 0 || end > this.original.length) throw new Error('Character is out of bounds');\n    if (start > end) throw new Error('end must be greater than start');\n    this._split(start);\n    this._split(end);\n    let chunk = this.byStart[start];\n    while (chunk) {\n      chunk.intro = '';\n      chunk.outro = '';\n      chunk.edit('');\n      chunk = end > chunk.end ? this.byStart[chunk.end] : null;\n    }\n    return this;\n  }\n  lastChar() {\n    if (this.outro.length) return this.outro[this.outro.length - 1];\n    let chunk = this.lastChunk;\n    do {\n      if (chunk.outro.length) return chunk.outro[chunk.outro.length - 1];\n      if (chunk.content.length) return chunk.content[chunk.content.length - 1];\n      if (chunk.intro.length) return chunk.intro[chunk.intro.length - 1];\n    } while (chunk = chunk.previous);\n    if (this.intro.length) return this.intro[this.intro.length - 1];\n    return '';\n  }\n  lastLine() {\n    let lineIndex = this.outro.lastIndexOf(n);\n    if (lineIndex !== -1) return this.outro.substr(lineIndex + 1);\n    let lineStr = this.outro;\n    let chunk = this.lastChunk;\n    do {\n      if (chunk.outro.length > 0) {\n        lineIndex = chunk.outro.lastIndexOf(n);\n        if (lineIndex !== -1) return chunk.outro.substr(lineIndex + 1) + lineStr;\n        lineStr = chunk.outro + lineStr;\n      }\n      if (chunk.content.length > 0) {\n        lineIndex = chunk.content.lastIndexOf(n);\n        if (lineIndex !== -1) return chunk.content.substr(lineIndex + 1) + lineStr;\n        lineStr = chunk.content + lineStr;\n      }\n      if (chunk.intro.length > 0) {\n        lineIndex = chunk.intro.lastIndexOf(n);\n        if (lineIndex !== -1) return chunk.intro.substr(lineIndex + 1) + lineStr;\n        lineStr = chunk.intro + lineStr;\n      }\n    } while (chunk = chunk.previous);\n    lineIndex = this.intro.lastIndexOf(n);\n    if (lineIndex !== -1) return this.intro.substr(lineIndex + 1) + lineStr;\n    return this.intro + lineStr;\n  }\n  slice() {\n    let start = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.original.length;\n    while (start < 0) start += this.original.length;\n    while (end < 0) end += this.original.length;\n    let result = '';\n\n    // find start chunk\n    let chunk = this.firstChunk;\n    while (chunk && (chunk.start > start || chunk.end <= start)) {\n      // found end chunk before start\n      if (chunk.start < end && chunk.end >= end) {\n        return result;\n      }\n      chunk = chunk.next;\n    }\n    if (chunk && chunk.edited && chunk.start !== start) throw new Error(`Cannot use replaced character ${start} as slice start anchor.`);\n    const startChunk = chunk;\n    while (chunk) {\n      if (chunk.intro && (startChunk !== chunk || chunk.start === start)) {\n        result += chunk.intro;\n      }\n      const containsEnd = chunk.start < end && chunk.end >= end;\n      if (containsEnd && chunk.edited && chunk.end !== end) throw new Error(`Cannot use replaced character ${end} as slice end anchor.`);\n      const sliceStart = startChunk === chunk ? start - chunk.start : 0;\n      const sliceEnd = containsEnd ? chunk.content.length + end - chunk.end : chunk.content.length;\n      result += chunk.content.slice(sliceStart, sliceEnd);\n      if (chunk.outro && (!containsEnd || chunk.end === end)) {\n        result += chunk.outro;\n      }\n      if (containsEnd) {\n        break;\n      }\n      chunk = chunk.next;\n    }\n    return result;\n  }\n\n  // TODO deprecate this? not really very useful\n  snip(start, end) {\n    const clone = this.clone();\n    clone.remove(0, start);\n    clone.remove(end, clone.original.length);\n    return clone;\n  }\n  _split(index) {\n    if (this.byStart[index] || this.byEnd[index]) return;\n    let chunk = this.lastSearchedChunk;\n    const searchForward = index > chunk.end;\n    while (chunk) {\n      if (chunk.contains(index)) return this._splitChunk(chunk, index);\n      chunk = searchForward ? this.byStart[chunk.end] : this.byEnd[chunk.start];\n    }\n  }\n  _splitChunk(chunk, index) {\n    if (chunk.edited && chunk.content.length) {\n      // zero-length edited chunks are a special case (overlapping replacements)\n      const loc = getLocator$1(this.original)(index);\n      throw new Error(`Cannot split a chunk that has already been edited (${loc.line}:${loc.column} – \"${chunk.original}\")`);\n    }\n    const newChunk = chunk.split(index);\n    this.byEnd[index] = chunk;\n    this.byStart[index] = newChunk;\n    this.byEnd[newChunk.end] = newChunk;\n    if (chunk === this.lastChunk) this.lastChunk = newChunk;\n    this.lastSearchedChunk = chunk;\n    return true;\n  }\n  toString() {\n    let str = this.intro;\n    let chunk = this.firstChunk;\n    while (chunk) {\n      str += chunk.toString();\n      chunk = chunk.next;\n    }\n    return str + this.outro;\n  }\n  isEmpty() {\n    let chunk = this.firstChunk;\n    do {\n      if (chunk.intro.length && chunk.intro.trim() || chunk.content.length && chunk.content.trim() || chunk.outro.length && chunk.outro.trim()) return false;\n    } while (chunk = chunk.next);\n    return true;\n  }\n  length() {\n    let chunk = this.firstChunk;\n    let length = 0;\n    do {\n      length += chunk.intro.length + chunk.content.length + chunk.outro.length;\n    } while (chunk = chunk.next);\n    return length;\n  }\n  trimLines() {\n    return this.trim('[\\\\r\\\\n]');\n  }\n  trim(charType) {\n    return this.trimStart(charType).trimEnd(charType);\n  }\n  trimEndAborted(charType) {\n    const rx = new RegExp((charType || '\\\\s') + '+$');\n    this.outro = this.outro.replace(rx, '');\n    if (this.outro.length) return true;\n    let chunk = this.lastChunk;\n    do {\n      const end = chunk.end;\n      const aborted = chunk.trimEnd(rx);\n\n      // if chunk was trimmed, we have a new lastChunk\n      if (chunk.end !== end) {\n        if (this.lastChunk === chunk) {\n          this.lastChunk = chunk.next;\n        }\n        this.byEnd[chunk.end] = chunk;\n        this.byStart[chunk.next.start] = chunk.next;\n        this.byEnd[chunk.next.end] = chunk.next;\n      }\n      if (aborted) return true;\n      chunk = chunk.previous;\n    } while (chunk);\n    return false;\n  }\n  trimEnd(charType) {\n    this.trimEndAborted(charType);\n    return this;\n  }\n  trimStartAborted(charType) {\n    const rx = new RegExp('^' + (charType || '\\\\s') + '+');\n    this.intro = this.intro.replace(rx, '');\n    if (this.intro.length) return true;\n    let chunk = this.firstChunk;\n    do {\n      const end = chunk.end;\n      const aborted = chunk.trimStart(rx);\n      if (chunk.end !== end) {\n        // special case...\n        if (chunk === this.lastChunk) this.lastChunk = chunk.next;\n        this.byEnd[chunk.end] = chunk;\n        this.byStart[chunk.next.start] = chunk.next;\n        this.byEnd[chunk.next.end] = chunk.next;\n      }\n      if (aborted) return true;\n      chunk = chunk.next;\n    } while (chunk);\n    return false;\n  }\n  trimStart(charType) {\n    this.trimStartAborted(charType);\n    return this;\n  }\n  hasChanged() {\n    return this.original !== this.toString();\n  }\n  _replaceRegexp(searchValue, replacement) {\n    function getReplacement(match, str) {\n      if (typeof replacement === 'string') {\n        return replacement.replace(/\\$(\\$|&|\\d+)/g, (_, i) => {\n          // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_string_as_a_parameter\n          if (i === '$') return '$';\n          if (i === '&') return match[0];\n          const num = +i;\n          if (num < match.length) return match[+i];\n          return `$${i}`;\n        });\n      } else {\n        return replacement(...match, match.index, str, match.groups);\n      }\n    }\n    function matchAll(re, str) {\n      let match;\n      const matches = [];\n      while (match = re.exec(str)) {\n        matches.push(match);\n      }\n      return matches;\n    }\n    if (searchValue.global) {\n      const matches = matchAll(searchValue, this.original);\n      matches.forEach(match => {\n        if (match.index != null) this.overwrite(match.index, match.index + match[0].length, getReplacement(match, this.original));\n      });\n    } else {\n      const match = this.original.match(searchValue);\n      if (match && match.index != null) this.overwrite(match.index, match.index + match[0].length, getReplacement(match, this.original));\n    }\n    return this;\n  }\n  _replaceString(string, replacement) {\n    const {\n      original\n    } = this;\n    const index = original.indexOf(string);\n    if (index !== -1) {\n      this.overwrite(index, index + string.length, replacement);\n    }\n    return this;\n  }\n  replace(searchValue, replacement) {\n    if (typeof searchValue === 'string') {\n      return this._replaceString(searchValue, replacement);\n    }\n    return this._replaceRegexp(searchValue, replacement);\n  }\n  _replaceAllString(string, replacement) {\n    const {\n      original\n    } = this;\n    const stringLength = string.length;\n    for (let index = original.indexOf(string); index !== -1; index = original.indexOf(string, index + stringLength)) {\n      this.overwrite(index, index + stringLength, replacement);\n    }\n    return this;\n  }\n  replaceAll(searchValue, replacement) {\n    if (typeof searchValue === 'string') {\n      return this._replaceAllString(searchValue, replacement);\n    }\n    if (!searchValue.global) {\n      throw new TypeError('MagicString.prototype.replaceAll called with a non-global RegExp argument');\n    }\n    return this._replaceRegexp(searchValue, replacement);\n  }\n}\nconst hasOwnProp = Object.prototype.hasOwnProperty;\nlet Bundle$1 = class Bundle {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.intro = options.intro || '';\n    this.separator = options.separator !== undefined ? options.separator : '\\n';\n    this.sources = [];\n    this.uniqueSources = [];\n    this.uniqueSourceIndexByFilename = {};\n  }\n  addSource(source) {\n    if (source instanceof MagicString) {\n      return this.addSource({\n        content: source,\n        filename: source.filename,\n        separator: this.separator\n      });\n    }\n    if (!isObject$1(source) || !source.content) {\n      throw new Error('bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`');\n    }\n    ['filename', 'indentExclusionRanges', 'separator'].forEach(option => {\n      if (!hasOwnProp.call(source, option)) source[option] = source.content[option];\n    });\n    if (source.separator === undefined) {\n      // TODO there's a bunch of this sort of thing, needs cleaning up\n      source.separator = this.separator;\n    }\n    if (source.filename) {\n      if (!hasOwnProp.call(this.uniqueSourceIndexByFilename, source.filename)) {\n        this.uniqueSourceIndexByFilename[source.filename] = this.uniqueSources.length;\n        this.uniqueSources.push({\n          filename: source.filename,\n          content: source.content.original\n        });\n      } else {\n        const uniqueSource = this.uniqueSources[this.uniqueSourceIndexByFilename[source.filename]];\n        if (source.content.original !== uniqueSource.content) {\n          throw new Error(`Illegal source: same filename (${source.filename}), different contents`);\n        }\n      }\n    }\n    this.sources.push(source);\n    return this;\n  }\n  append(str, options) {\n    this.addSource({\n      content: new MagicString(str),\n      separator: options && options.separator || ''\n    });\n    return this;\n  }\n  clone() {\n    const bundle = new Bundle({\n      intro: this.intro,\n      separator: this.separator\n    });\n    this.sources.forEach(source => {\n      bundle.addSource({\n        filename: source.filename,\n        content: source.content.clone(),\n        separator: source.separator\n      });\n    });\n    return bundle;\n  }\n  generateDecodedMap() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const names = [];\n    this.sources.forEach(source => {\n      Object.keys(source.content.storedNames).forEach(name => {\n        if (!~names.indexOf(name)) names.push(name);\n      });\n    });\n    const mappings = new Mappings(options.hires);\n    if (this.intro) {\n      mappings.advance(this.intro);\n    }\n    this.sources.forEach((source, i) => {\n      if (i > 0) {\n        mappings.advance(this.separator);\n      }\n      const sourceIndex = source.filename ? this.uniqueSourceIndexByFilename[source.filename] : -1;\n      const magicString = source.content;\n      const locate = getLocator$1(magicString.original);\n      if (magicString.intro) {\n        mappings.advance(magicString.intro);\n      }\n      magicString.firstChunk.eachNext(chunk => {\n        const loc = locate(chunk.start);\n        if (chunk.intro.length) mappings.advance(chunk.intro);\n        if (source.filename) {\n          if (chunk.edited) {\n            mappings.addEdit(sourceIndex, chunk.content, loc, chunk.storeName ? names.indexOf(chunk.original) : -1);\n          } else {\n            mappings.addUneditedChunk(sourceIndex, chunk, magicString.original, loc, magicString.sourcemapLocations);\n          }\n        } else {\n          mappings.advance(chunk.content);\n        }\n        if (chunk.outro.length) mappings.advance(chunk.outro);\n      });\n      if (magicString.outro) {\n        mappings.advance(magicString.outro);\n      }\n    });\n    return {\n      file: options.file ? options.file.split(/[/\\\\]/).pop() : null,\n      sources: this.uniqueSources.map(source => {\n        return options.file ? getRelativePath(options.file, source.filename) : source.filename;\n      }),\n      sourcesContent: this.uniqueSources.map(source => {\n        return options.includeContent ? source.content : null;\n      }),\n      names,\n      mappings: mappings.raw\n    };\n  }\n  generateMap(options) {\n    return new SourceMap(this.generateDecodedMap(options));\n  }\n  getIndentString() {\n    const indentStringCounts = {};\n    this.sources.forEach(source => {\n      const indentStr = source.content._getRawIndentString();\n      if (indentStr === null) return;\n      if (!indentStringCounts[indentStr]) indentStringCounts[indentStr] = 0;\n      indentStringCounts[indentStr] += 1;\n    });\n    return Object.keys(indentStringCounts).sort((a, b) => {\n      return indentStringCounts[a] - indentStringCounts[b];\n    })[0] || '\\t';\n  }\n  indent(indentStr) {\n    if (!arguments.length) {\n      indentStr = this.getIndentString();\n    }\n    if (indentStr === '') return this; // noop\n\n    let trailingNewline = !this.intro || this.intro.slice(-1) === '\\n';\n    this.sources.forEach((source, i) => {\n      const separator = source.separator !== undefined ? source.separator : this.separator;\n      const indentStart = trailingNewline || i > 0 && /\\r?\\n$/.test(separator);\n      source.content.indent(indentStr, {\n        exclude: source.indentExclusionRanges,\n        indentStart //: trailingNewline || /\\r?\\n$/.test( separator )  //true///\\r?\\n/.test( separator )\n      });\n\n      trailingNewline = source.content.lastChar() === '\\n';\n    });\n    if (this.intro) {\n      this.intro = indentStr + this.intro.replace(/^[^\\n]/gm, (match, index) => {\n        return index > 0 ? indentStr + match : match;\n      });\n    }\n    return this;\n  }\n  prepend(str) {\n    this.intro = str + this.intro;\n    return this;\n  }\n  toString() {\n    const body = this.sources.map((source, i) => {\n      const separator = source.separator !== undefined ? source.separator : this.separator;\n      const str = (i > 0 ? separator : '') + source.content.toString();\n      return str;\n    }).join('');\n    return this.intro + body;\n  }\n  isEmpty() {\n    if (this.intro.length && this.intro.trim()) return false;\n    if (this.sources.some(source => !source.content.isEmpty())) return false;\n    return true;\n  }\n  length() {\n    return this.sources.reduce((length, source) => length + source.content.length(), this.intro.length);\n  }\n  trimLines() {\n    return this.trim('[\\\\r\\\\n]');\n  }\n  trim(charType) {\n    return this.trimStart(charType).trimEnd(charType);\n  }\n  trimStart(charType) {\n    const rx = new RegExp('^' + (charType || '\\\\s') + '+');\n    this.intro = this.intro.replace(rx, '');\n    if (!this.intro) {\n      let source;\n      let i = 0;\n      do {\n        source = this.sources[i++];\n        if (!source) {\n          break;\n        }\n      } while (!source.content.trimStartAborted(charType));\n    }\n    return this;\n  }\n  trimEnd(charType) {\n    const rx = new RegExp((charType || '\\\\s') + '+$');\n    let source;\n    let i = this.sources.length - 1;\n    do {\n      source = this.sources[i--];\n      if (!source) {\n        this.intro = this.intro.replace(rx, '');\n        break;\n      }\n    } while (!source.content.trimEndAborted(charType));\n    return this;\n  }\n};\nconst ANY_SLASH_REGEX = /[/\\\\]/;\nfunction relative(from, to) {\n  const fromParts = from.split(ANY_SLASH_REGEX).filter(Boolean);\n  const toParts = to.split(ANY_SLASH_REGEX).filter(Boolean);\n  if (fromParts[0] === '.') fromParts.shift();\n  if (toParts[0] === '.') toParts.shift();\n  while (fromParts[0] && toParts[0] && fromParts[0] === toParts[0]) {\n    fromParts.shift();\n    toParts.shift();\n  }\n  while (toParts[0] === '..' && fromParts.length > 0) {\n    toParts.shift();\n    fromParts.pop();\n  }\n  while (fromParts.pop()) {\n    toParts.unshift('..');\n  }\n  return toParts.join('/');\n}\nconst needsEscapeRegEx = /[\\n\\r'\\\\\\u2028\\u2029]/;\nconst quoteNewlineRegEx = /([\\n\\r'\\u2028\\u2029])/g;\nconst backSlashRegEx = /\\\\/g;\nfunction escapeId(id) {\n  if (!needsEscapeRegEx.test(id)) return id;\n  return id.replace(backSlashRegEx, '\\\\\\\\').replace(quoteNewlineRegEx, '\\\\$1');\n}\nconst ABSOLUTE_PATH_REGEX = /^(?:\\/|(?:[A-Za-z]:)?[/\\\\|])/;\nconst RELATIVE_PATH_REGEX = /^\\.?\\.(\\/|$)/;\nfunction isAbsolute(path) {\n  return ABSOLUTE_PATH_REGEX.test(path);\n}\nfunction isRelative(path) {\n  return RELATIVE_PATH_REGEX.test(path);\n}\nconst BACKSLASH_REGEX = /\\\\/g;\nfunction normalize(path) {\n  return path.replace(BACKSLASH_REGEX, '/');\n}\nfunction getAliasName(id) {\n  const base = basename(id);\n  return base.slice(0, Math.max(0, base.length - extname(id).length));\n}\nfunction relativeId(id) {\n  if (!isAbsolute(id)) return id;\n  return relative(resolve(), id);\n}\nfunction isPathFragment(name) {\n  // starting with \"/\", \"./\", \"../\", \"C:/\"\n  return name[0] === '/' || name[0] === '.' && (name[1] === '/' || name[1] === '.') || isAbsolute(name);\n}\nconst UPPER_DIR_REGEX = /^(\\.\\.\\/)*\\.\\.$/;\nfunction getImportPath(importerId, targetPath, stripJsExtension, ensureFileName) {\n  let relativePath = normalize(relative(dirname(importerId), targetPath));\n  if (stripJsExtension && relativePath.endsWith('.js')) {\n    relativePath = relativePath.slice(0, -3);\n  }\n  if (ensureFileName) {\n    if (relativePath === '') return '../' + basename(targetPath);\n    if (UPPER_DIR_REGEX.test(relativePath)) {\n      return [...relativePath.split('/'), '..', basename(targetPath)].join('/');\n    }\n  }\n  return relativePath ? relativePath.startsWith('..') ? relativePath : './' + relativePath : '.';\n}\nclass ExternalChunk {\n  constructor(module, options, inputBase) {\n    this.options = options;\n    this.inputBase = inputBase;\n    this.defaultVariableName = '';\n    this.namespaceVariableName = '';\n    this.variableName = '';\n    this.fileName = null;\n    this.importAssertions = null;\n    this.id = module.id;\n    this.moduleInfo = module.info;\n    this.renormalizeRenderPath = module.renormalizeRenderPath;\n    this.suggestedVariableName = module.suggestedVariableName;\n  }\n  getFileName() {\n    if (this.fileName) {\n      return this.fileName;\n    }\n    const {\n      paths\n    } = this.options;\n    return this.fileName = (typeof paths === 'function' ? paths(this.id) : paths[this.id]) || (this.renormalizeRenderPath ? normalize(relative$1(this.inputBase, this.id)) : this.id);\n  }\n  getImportAssertions(snippets) {\n    return this.importAssertions || (this.importAssertions = formatAssertions$1(this.options.format === 'es' && this.options.externalImportAssertions && this.moduleInfo.assertions, snippets));\n  }\n  getImportPath(importer) {\n    return escapeId(this.renormalizeRenderPath ? getImportPath(importer, this.getFileName(), this.options.format === 'amd', false) : this.getFileName());\n  }\n}\nfunction formatAssertions$1(assertions, _ref) {\n  let {\n    getObject\n  } = _ref;\n  if (!assertions) {\n    return null;\n  }\n  const assertionEntries = Object.entries(assertions).map(_ref2 => {\n    let [key, value] = _ref2;\n    return [key, `'${value}'`];\n  });\n  if (assertionEntries.length > 0) {\n    return getObject(assertionEntries, {\n      lineBreakIndent: null\n    });\n  }\n  return null;\n}\nfunction getOrCreate(map, key, init) {\n  const existing = map.get(key);\n  if (existing !== undefined) {\n    return existing;\n  }\n  const value = init();\n  map.set(key, value);\n  return value;\n}\nfunction getNewSet() {\n  return new Set();\n}\nfunction getNewArray() {\n  return [];\n}\nconst UnknownKey = Symbol('Unknown Key');\nconst UnknownNonAccessorKey = Symbol('Unknown Non-Accessor Key');\nconst UnknownInteger = Symbol('Unknown Integer');\nconst SymbolToStringTag = Symbol('Symbol.toStringTag');\nconst EMPTY_PATH = [];\nconst UNKNOWN_PATH = [UnknownKey];\n// For deoptimizations, this means we are modifying an unknown property but did\n// not lose track of the object or are creating a setter/getter;\n// For assignment effects it means we do not check for setter/getter effects\n// but only if something is mutated that is included, which is relevant for\n// Object.defineProperty\nconst UNKNOWN_NON_ACCESSOR_PATH = [UnknownNonAccessorKey];\nconst UNKNOWN_INTEGER_PATH = [UnknownInteger];\nconst EntitiesKey = Symbol('Entities');\nclass PathTracker {\n  constructor() {\n    this.entityPaths = Object.create(null, {\n      [EntitiesKey]: {\n        value: new Set()\n      }\n    });\n  }\n  trackEntityAtPathAndGetIfTracked(path, entity) {\n    const trackedEntities = this.getEntities(path);\n    if (trackedEntities.has(entity)) return true;\n    trackedEntities.add(entity);\n    return false;\n  }\n  withTrackedEntityAtPath(path, entity, onUntracked, returnIfTracked) {\n    const trackedEntities = this.getEntities(path);\n    if (trackedEntities.has(entity)) return returnIfTracked;\n    trackedEntities.add(entity);\n    const result = onUntracked();\n    trackedEntities.delete(entity);\n    return result;\n  }\n  getEntities(path) {\n    let currentPaths = this.entityPaths;\n    for (const pathSegment of path) {\n      currentPaths = currentPaths[pathSegment] = currentPaths[pathSegment] || Object.create(null, {\n        [EntitiesKey]: {\n          value: new Set()\n        }\n      });\n    }\n    return currentPaths[EntitiesKey];\n  }\n}\nconst SHARED_RECURSION_TRACKER = new PathTracker();\nclass DiscriminatedPathTracker {\n  constructor() {\n    this.entityPaths = Object.create(null, {\n      [EntitiesKey]: {\n        value: new Map()\n      }\n    });\n  }\n  trackEntityAtPathAndGetIfTracked(path, discriminator, entity) {\n    let currentPaths = this.entityPaths;\n    for (const pathSegment of path) {\n      currentPaths = currentPaths[pathSegment] = currentPaths[pathSegment] || Object.create(null, {\n        [EntitiesKey]: {\n          value: new Map()\n        }\n      });\n    }\n    const trackedEntities = getOrCreate(currentPaths[EntitiesKey], discriminator, getNewSet);\n    if (trackedEntities.has(entity)) return true;\n    trackedEntities.add(entity);\n    return false;\n  }\n}\nconst UnknownValue = Symbol('Unknown Value');\nconst UnknownTruthyValue = Symbol('Unknown Truthy Value');\nclass ExpressionEntity {\n  constructor() {\n    this.included = false;\n  }\n  deoptimizePath(_path) {}\n  deoptimizeThisOnInteractionAtPath(_ref3, _path, _recursionTracker) {\n    let {\n      thisArg\n    } = _ref3;\n    thisArg.deoptimizePath(UNKNOWN_PATH);\n  }\n  /**\n   * If possible it returns a stringifyable literal value for this node that can be used\n   * for inlining or comparing values.\n   * Otherwise, it should return UnknownValue.\n   */\n  getLiteralValueAtPath(_path, _recursionTracker, _origin) {\n    return UnknownValue;\n  }\n  getReturnExpressionWhenCalledAtPath(_path, _interaction, _recursionTracker, _origin) {\n    return UNKNOWN_RETURN_EXPRESSION;\n  }\n  hasEffectsOnInteractionAtPath(_path, _interaction, _context) {\n    return true;\n  }\n  include(_context, _includeChildrenRecursively, _options) {\n    this.included = true;\n  }\n  includeCallArguments(context, parameters) {\n    for (const argument of parameters) {\n      argument.include(context, false);\n    }\n  }\n  shouldBeIncluded(_context) {\n    return true;\n  }\n}\nconst UNKNOWN_EXPRESSION = new class UnknownExpression extends ExpressionEntity {}();\nconst UNKNOWN_RETURN_EXPRESSION = [UNKNOWN_EXPRESSION, false];\nconst INTERACTION_ACCESSED = 0;\nconst INTERACTION_ASSIGNED = 1;\nconst INTERACTION_CALLED = 2;\nconst NODE_INTERACTION_UNKNOWN_ACCESS = {\n  thisArg: null,\n  type: INTERACTION_ACCESSED\n};\nconst UNKNOWN_ARG = [UNKNOWN_EXPRESSION];\nconst NODE_INTERACTION_UNKNOWN_ASSIGNMENT = {\n  args: UNKNOWN_ARG,\n  thisArg: null,\n  type: INTERACTION_ASSIGNED\n};\nconst NO_ARGS = [];\n// While this is technically a call without arguments, we can compare against\n// this reference in places where precise values or thisArg would make a\n// difference\nconst NODE_INTERACTION_UNKNOWN_CALL = {\n  args: NO_ARGS,\n  thisArg: null,\n  type: INTERACTION_CALLED,\n  withNew: false\n};\nclass Variable extends ExpressionEntity {\n  constructor(name) {\n    super();\n    this.name = name;\n    this.alwaysRendered = false;\n    this.forbiddenNames = null;\n    this.initReached = false;\n    this.isId = false;\n    this.isReassigned = false;\n    this.kind = null;\n    this.renderBaseName = null;\n    this.renderName = null;\n  }\n  /**\n   * Binds identifiers that reference this variable to this variable.\n   * Necessary to be able to change variable names.\n   */\n  addReference(_identifier) {}\n  /**\n   * Prevent this variable from being renamed to this name to avoid name\n   * collisions\n   */\n  forbidName(name) {\n    (this.forbiddenNames || (this.forbiddenNames = new Set())).add(name);\n  }\n  getBaseVariableName() {\n    return this.renderBaseName || this.renderName || this.name;\n  }\n  getName(getPropertyAccess, useOriginalName) {\n    if (useOriginalName?.(this)) {\n      return this.name;\n    }\n    const name = this.renderName || this.name;\n    return this.renderBaseName ? `${this.renderBaseName}${getPropertyAccess(name)}` : name;\n  }\n  hasEffectsOnInteractionAtPath(path, _ref4, _context) {\n    let {\n      type\n    } = _ref4;\n    return type !== INTERACTION_ACCESSED || path.length > 0;\n  }\n  /**\n   * Marks this variable as being part of the bundle, which is usually the case when one of\n   * its identifiers becomes part of the bundle. Returns true if it has not been included\n   * previously.\n   * Once a variable is included, it should take care all its declarations are included.\n   */\n  include() {\n    this.included = true;\n  }\n  markCalledFromTryStatement() {}\n  setRenderNames(baseName, name) {\n    this.renderBaseName = baseName;\n    this.renderName = name;\n  }\n}\nclass ExternalVariable extends Variable {\n  constructor(module, name) {\n    super(name);\n    this.referenced = false;\n    this.module = module;\n    this.isNamespace = name === '*';\n  }\n  addReference(identifier) {\n    this.referenced = true;\n    if (this.name === 'default' || this.name === '*') {\n      this.module.suggestName(identifier.name);\n    }\n  }\n  hasEffectsOnInteractionAtPath(path, _ref5) {\n    let {\n      type\n    } = _ref5;\n    return type !== INTERACTION_ACCESSED || path.length > (this.isNamespace ? 1 : 0);\n  }\n  include() {\n    if (!this.included) {\n      this.included = true;\n      this.module.used = true;\n    }\n  }\n}\nconst BLANK = Object.freeze(Object.create(null));\nconst EMPTY_OBJECT = Object.freeze({});\nconst EMPTY_ARRAY = Object.freeze([]);\nfunction getLocator(source, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var offsetLine = options.offsetLine || 0;\n  var offsetColumn = options.offsetColumn || 0;\n  var originalLines = source.split('\\n');\n  var start = 0;\n  var lineRanges = originalLines.map(function (line, i) {\n    var end = start + line.length + 1;\n    var range = {\n      start: start,\n      end: end,\n      line: i\n    };\n    start = end;\n    return range;\n  });\n  var i = 0;\n  function rangeContains(range, index) {\n    return range.start <= index && index < range.end;\n  }\n  function getLocation(range, index) {\n    return {\n      line: offsetLine + range.line,\n      column: offsetColumn + index - range.start,\n      character: index\n    };\n  }\n  function locate(search, startIndex) {\n    if (typeof search === 'string') {\n      search = source.indexOf(search, startIndex || 0);\n    }\n    var range = lineRanges[i];\n    var d = search >= range.end ? 1 : -1;\n    while (range) {\n      if (rangeContains(range, search)) return getLocation(range, search);\n      i += d;\n      range = lineRanges[i];\n    }\n  }\n  return locate;\n}\nfunction locate(source, search, options) {\n  if (typeof options === 'number') {\n    throw new Error('locate takes a { startIndex, offsetLine, offsetColumn } object as the third argument');\n  }\n  return getLocator(source, options)(search, options && options.startIndex);\n}\nfunction spaces(index) {\n  let result = '';\n  while (index--) result += ' ';\n  return result;\n}\nfunction tabsToSpaces(value) {\n  return value.replace(/^\\t+/, match => match.split('\\t').join('  '));\n}\nconst LINE_TRUNCATE_LENGTH = 120;\nconst MIN_CHARACTERS_SHOWN_AFTER_LOCATION = 10;\nconst ELLIPSIS = '...';\nfunction getCodeFrame(source, line, column) {\n  let lines = source.split('\\n');\n  const maxLineLength = Math.max(tabsToSpaces(lines[line - 1].slice(0, column)).length + MIN_CHARACTERS_SHOWN_AFTER_LOCATION + ELLIPSIS.length, LINE_TRUNCATE_LENGTH);\n  const frameStart = Math.max(0, line - 3);\n  let frameEnd = Math.min(line + 2, lines.length);\n  lines = lines.slice(frameStart, frameEnd);\n  while (!/\\S/.test(lines[lines.length - 1])) {\n    lines.pop();\n    frameEnd -= 1;\n  }\n  const digits = String(frameEnd).length;\n  return lines.map((sourceLine, index) => {\n    const isErrorLine = frameStart + index + 1 === line;\n    let lineNumber = String(index + frameStart + 1);\n    while (lineNumber.length < digits) lineNumber = ` ${lineNumber}`;\n    let displayedLine = tabsToSpaces(sourceLine);\n    if (displayedLine.length > maxLineLength) {\n      displayedLine = `${displayedLine.slice(0, maxLineLength - ELLIPSIS.length)}${ELLIPSIS}`;\n    }\n    if (isErrorLine) {\n      const indicator = spaces(digits + 2 + tabsToSpaces(sourceLine.slice(0, column)).length) + '^';\n      return `${lineNumber}: ${displayedLine}\\n${indicator}`;\n    }\n    return `${lineNumber}: ${displayedLine}`;\n  }).join('\\n');\n}\nfunction printQuotedStringList(list, verbs) {\n  const isSingleItem = list.length <= 1;\n  const quotedList = list.map(item => `\"${item}\"`);\n  let output = isSingleItem ? quotedList[0] : `${quotedList.slice(0, -1).join(', ')} and ${quotedList.slice(-1)[0]}`;\n  if (verbs) {\n    output += ` ${isSingleItem ? verbs[0] : verbs[1]}`;\n  }\n  return output;\n}\nfunction isValidUrl(url) {\n  try {\n    new URL(url);\n  } catch {\n    return false;\n  }\n  return true;\n}\nfunction getRollupUrl(snippet) {\n  return `https://rollupjs.org/${snippet}`;\n}\n\n// troubleshooting\nconst URL_AVOIDING_EVAL = 'troubleshooting/#avoiding-eval';\nconst URL_NAME_IS_NOT_EXPORTED = 'troubleshooting/#error-name-is-not-exported-by-module';\nconst URL_THIS_IS_UNDEFINED = 'troubleshooting/#error-this-is-undefined';\nconst URL_TREATING_MODULE_AS_EXTERNAL_DEPENDENCY = 'troubleshooting/#warning-treating-module-as-external-dependency';\nconst URL_SOURCEMAP_IS_LIKELY_TO_BE_INCORRECT = 'troubleshooting/#warning-sourcemap-is-likely-to-be-incorrect';\n// configuration-options\nconst URL_MAXPARALLELFILEOPS = 'configuration-options/#maxparallelfileops';\nconst URL_OUTPUT_AMD_ID = 'configuration-options/#output-amd-id';\nconst URL_OUTPUT_AMD_BASEPATH = 'configuration-options/#output-amd-basepath';\nconst URL_OUTPUT_DIR = 'configuration-options/#output-dir';\nconst URL_OUTPUT_DYNAMICIMPORTFUNCTION = 'configuration-options/#output-dynamicimportfunction';\nconst URL_OUTPUT_EXPORTS = 'configuration-options/#output-exports';\nconst URL_OUTPUT_EXTEND = 'configuration-options/#output-extend';\nconst URL_OUTPUT_FORMAT = 'configuration-options/#output-format';\nconst URL_OUTPUT_GENERATEDCODE = 'configuration-options/#output-generatedcode';\nconst URL_OUTPUT_EXPERIMENTALDEEPCHUNKOPTIMIZATION = 'configuration-options/#output-experimentaldeepdynamicchunkoptimization';\nconst URL_OUTPUT_GENERATEDCODE_CONSTBINDINGS = 'configuration-options/#output-generatedcode-constbindings';\nconst URL_OUTPUT_GENERATEDCODE_SYMBOLS = 'configuration-options/#output-generatedcode-symbols';\nconst URL_OUTPUT_GLOBALS = 'configuration-options/#output-globals';\nconst URL_OUTPUT_INLINEDYNAMICIMPORTS = 'configuration-options/#output-inlinedynamicimports';\nconst URL_OUTPUT_INTEROP = 'configuration-options/#output-interop';\nconst URL_OUTPUT_MANUALCHUNKS = 'configuration-options/#output-manualchunks';\nconst URL_OUTPUT_NAME = 'configuration-options/#output-name';\nconst URL_OUTPUT_PRESERVEMODULES = 'configuration-options/#output-preservemodules';\nconst URL_OUTPUT_SOURCEMAPBASEURL = 'configuration-options/#output-sourcemapbaseurl';\nconst URL_OUTPUT_SOURCEMAPFILE = 'configuration-options/#output-sourcemapfile';\nconst URL_PRESERVEENTRYSIGNATURES = 'configuration-options/#preserveentrysignatures';\nconst URL_TREESHAKE = 'configuration-options/#treeshake';\nconst URL_TREESHAKE_MODULESIDEEFFECTS = 'configuration-options/#treeshake-modulesideeffects';\nconst URL_WATCH = 'configuration-options/#watch';\nconst URL_RENDERDYNAMICIMPORT = 'plugin-development/#renderdynamicimport';\nconst URL_THIS_GETMODULEIDS = 'plugin-development/#this-getmoduleids';\nconst URL_THIS_GETMODULEINFO = 'plugin-development/#this-getmoduleinfo';\nfunction error(base) {\n  if (!(base instanceof Error)) {\n    base = Object.assign(new Error(base.message), base);\n    Object.defineProperty(base, 'name', {\n      value: 'RollupError'\n    });\n  }\n  throw base;\n}\nfunction augmentCodeLocation(properties, pos, source, id) {\n  if (typeof pos === 'object') {\n    const {\n      line,\n      column\n    } = pos;\n    properties.loc = {\n      column,\n      file: id,\n      line\n    };\n  } else {\n    properties.pos = pos;\n    const {\n      line,\n      column\n    } = locate(source, pos, {\n      offsetLine: 1\n    });\n    properties.loc = {\n      column,\n      file: id,\n      line\n    };\n  }\n  if (properties.frame === undefined) {\n    const {\n      line,\n      column\n    } = properties.loc;\n    properties.frame = getCodeFrame(source, line, column);\n  }\n}\n// Error codes should be sorted alphabetically while errors should be sorted by\n// error code below\nconst ADDON_ERROR = 'ADDON_ERROR',\n  ALREADY_CLOSED = 'ALREADY_CLOSED',\n  AMBIGUOUS_EXTERNAL_NAMESPACES = 'AMBIGUOUS_EXTERNAL_NAMESPACES',\n  ANONYMOUS_PLUGIN_CACHE = 'ANONYMOUS_PLUGIN_CACHE',\n  ASSET_NOT_FINALISED = 'ASSET_NOT_FINALISED',\n  ASSET_NOT_FOUND = 'ASSET_NOT_FOUND',\n  ASSET_SOURCE_ALREADY_SET = 'ASSET_SOURCE_ALREADY_SET',\n  ASSET_SOURCE_MISSING = 'ASSET_SOURCE_MISSING',\n  BAD_LOADER = 'BAD_LOADER',\n  CANNOT_CALL_NAMESPACE = 'CANNOT_CALL_NAMESPACE',\n  CANNOT_EMIT_FROM_OPTIONS_HOOK = 'CANNOT_EMIT_FROM_OPTIONS_HOOK',\n  CHUNK_NOT_GENERATED = 'CHUNK_NOT_GENERATED',\n  CHUNK_INVALID = 'CHUNK_INVALID',\n  CIRCULAR_DEPENDENCY = 'CIRCULAR_DEPENDENCY',\n  CIRCULAR_REEXPORT = 'CIRCULAR_REEXPORT',\n  CYCLIC_CROSS_CHUNK_REEXPORT = 'CYCLIC_CROSS_CHUNK_REEXPORT',\n  DEPRECATED_FEATURE = 'DEPRECATED_FEATURE',\n  DUPLICATE_PLUGIN_NAME = 'DUPLICATE_PLUGIN_NAME',\n  EMPTY_BUNDLE = 'EMPTY_BUNDLE',\n  EVAL = 'EVAL',\n  EXTERNAL_SYNTHETIC_EXPORTS = 'EXTERNAL_SYNTHETIC_EXPORTS',\n  FILE_NAME_CONFLICT = 'FILE_NAME_CONFLICT',\n  FILE_NOT_FOUND = 'FILE_NOT_FOUND',\n  ILLEGAL_IDENTIFIER_AS_NAME = 'ILLEGAL_IDENTIFIER_AS_NAME',\n  ILLEGAL_REASSIGNMENT = 'ILLEGAL_REASSIGNMENT',\n  INCONSISTENT_IMPORT_ASSERTIONS = 'INCONSISTENT_IMPORT_ASSERTIONS',\n  INPUT_HOOK_IN_OUTPUT_PLUGIN = 'INPUT_HOOK_IN_OUTPUT_PLUGIN',\n  INVALID_CHUNK = 'INVALID_CHUNK',\n  INVALID_EXPORT_OPTION = 'INVALID_EXPORT_OPTION',\n  INVALID_EXTERNAL_ID = 'INVALID_EXTERNAL_ID',\n  INVALID_OPTION = 'INVALID_OPTION',\n  INVALID_PLUGIN_HOOK = 'INVALID_PLUGIN_HOOK',\n  INVALID_ROLLUP_PHASE = 'INVALID_ROLLUP_PHASE',\n  INVALID_SETASSETSOURCE = 'INVALID_SETASSETSOURCE',\n  INVALID_TLA_FORMAT = 'INVALID_TLA_FORMAT',\n  MISSING_EXPORT = 'MISSING_EXPORT',\n  MISSING_GLOBAL_NAME = 'MISSING_GLOBAL_NAME',\n  MISSING_IMPLICIT_DEPENDANT = 'MISSING_IMPLICIT_DEPENDANT',\n  MISSING_NAME_OPTION_FOR_IIFE_EXPORT = 'MISSING_NAME_OPTION_FOR_IIFE_EXPORT',\n  MISSING_NODE_BUILTINS = 'MISSING_NODE_BUILTINS',\n  MISSING_OPTION = 'MISSING_OPTION',\n  MIXED_EXPORTS = 'MIXED_EXPORTS',\n  MODULE_LEVEL_DIRECTIVE = 'MODULE_LEVEL_DIRECTIVE',\n  NAMESPACE_CONFLICT = 'NAMESPACE_CONFLICT',\n  NO_TRANSFORM_MAP_OR_AST_WITHOUT_CODE = 'NO_TRANSFORM_MAP_OR_AST_WITHOUT_CODE',\n  PARSE_ERROR = 'PARSE_ERROR',\n  PLUGIN_ERROR = 'PLUGIN_ERROR',\n  SHIMMED_EXPORT = 'SHIMMED_EXPORT',\n  SOURCEMAP_BROKEN = 'SOURCEMAP_BROKEN',\n  SOURCEMAP_ERROR = 'SOURCEMAP_ERROR',\n  SYNTHETIC_NAMED_EXPORTS_NEED_NAMESPACE_EXPORT = 'SYNTHETIC_NAMED_EXPORTS_NEED_NAMESPACE_EXPORT',\n  THIS_IS_UNDEFINED = 'THIS_IS_UNDEFINED',\n  UNEXPECTED_NAMED_IMPORT = 'UNEXPECTED_NAMED_IMPORT',\n  UNKNOWN_OPTION = 'UNKNOWN_OPTION',\n  UNRESOLVED_ENTRY = 'UNRESOLVED_ENTRY',\n  UNRESOLVED_IMPORT = 'UNRESOLVED_IMPORT',\n  UNUSED_EXTERNAL_IMPORT = 'UNUSED_EXTERNAL_IMPORT',\n  VALIDATION_ERROR = 'VALIDATION_ERROR';\nfunction errorAddonNotGenerated(message, hook, plugin) {\n  return {\n    code: ADDON_ERROR,\n    message: `Could not retrieve \"${hook}\". Check configuration of plugin \"${plugin}\".\n\\tError Message: ${message}`\n  };\n}\nfunction errorAlreadyClosed() {\n  return {\n    code: ALREADY_CLOSED,\n    message: 'Bundle is already closed, no more calls to \"generate\" or \"write\" are allowed.'\n  };\n}\nfunction errorAmbiguousExternalNamespaces(binding, reexportingModule, usedModule, sources) {\n  return {\n    binding,\n    code: AMBIGUOUS_EXTERNAL_NAMESPACES,\n    ids: sources,\n    message: `Ambiguous external namespace resolution: \"${relativeId(reexportingModule)}\" re-exports \"${binding}\" from one of the external modules ${printQuotedStringList(sources.map(module => relativeId(module)))}, guessing \"${relativeId(usedModule)}\".`,\n    reexporter: reexportingModule\n  };\n}\nfunction errorAnonymousPluginCache() {\n  return {\n    code: ANONYMOUS_PLUGIN_CACHE,\n    message: 'A plugin is trying to use the Rollup cache but is not declaring a plugin name or cacheKey.'\n  };\n}\nfunction errorAssetNotFinalisedForFileName(name) {\n  return {\n    code: ASSET_NOT_FINALISED,\n    message: `Plugin error - Unable to get file name for asset \"${name}\". Ensure that the source is set and that generate is called first. If you reference assets via import.meta.ROLLUP_FILE_URL_<referenceId>, you need to either have set their source after \"renderStart\" or need to provide an explicit \"fileName\" when emitting them.`\n  };\n}\nfunction errorAssetReferenceIdNotFoundForSetSource(assetReferenceId) {\n  return {\n    code: ASSET_NOT_FOUND,\n    message: `Plugin error - Unable to set the source for unknown asset \"${assetReferenceId}\".`\n  };\n}\nfunction errorAssetSourceAlreadySet(name) {\n  return {\n    code: ASSET_SOURCE_ALREADY_SET,\n    message: `Unable to set the source for asset \"${name}\", source already set.`\n  };\n}\nfunction errorNoAssetSourceSet(assetName) {\n  return {\n    code: ASSET_SOURCE_MISSING,\n    message: `Plugin error creating asset \"${assetName}\" - no asset source set.`\n  };\n}\nfunction errorBadLoader(id) {\n  return {\n    code: BAD_LOADER,\n    message: `Error loading \"${relativeId(id)}\": plugin load hook should return a string, a { code, map } object, or nothing/null.`\n  };\n}\nfunction errorCannotCallNamespace(name) {\n  return {\n    code: CANNOT_CALL_NAMESPACE,\n    message: `Cannot call a namespace (\"${name}\").`\n  };\n}\nfunction errorCannotEmitFromOptionsHook() {\n  return {\n    code: CANNOT_EMIT_FROM_OPTIONS_HOOK,\n    message: `Cannot emit files or set asset sources in the \"outputOptions\" hook, use the \"renderStart\" hook instead.`\n  };\n}\nfunction errorChunkNotGeneratedForFileName(name) {\n  return {\n    code: CHUNK_NOT_GENERATED,\n    message: `Plugin error - Unable to get file name for emitted chunk \"${name}\". You can only get file names once chunks have been generated after the \"renderStart\" hook.`\n  };\n}\nfunction errorChunkInvalid(_ref6, exception) {\n  let {\n    fileName,\n    code\n  } = _ref6;\n  const errorProperties = {\n    code: CHUNK_INVALID,\n    message: `Chunk \"${fileName}\" is not valid JavaScript: ${exception.message}.`\n  };\n  augmentCodeLocation(errorProperties, exception.loc, code, fileName);\n  return errorProperties;\n}\nfunction errorCircularDependency(cyclePath) {\n  return {\n    code: CIRCULAR_DEPENDENCY,\n    ids: cyclePath,\n    message: `Circular dependency: ${cyclePath.map(relativeId).join(' -> ')}`\n  };\n}\nfunction errorCircularReexport(exportName, exporter) {\n  return {\n    code: CIRCULAR_REEXPORT,\n    exporter,\n    message: `\"${exportName}\" cannot be exported from \"${relativeId(exporter)}\" as it is a reexport that references itself.`\n  };\n}\nfunction errorCyclicCrossChunkReexport(exportName, exporter, reexporter, importer, preserveModules) {\n  return {\n    code: CYCLIC_CROSS_CHUNK_REEXPORT,\n    exporter,\n    id: importer,\n    message: `Export \"${exportName}\" of module \"${relativeId(exporter)}\" was reexported through module \"${relativeId(reexporter)}\" while both modules are dependencies of each other and will end up in different chunks by current Rollup settings. This scenario is not well supported at the moment as it will produce a circular dependency between chunks and will likely lead to broken execution order.\\nEither change the import in \"${relativeId(importer)}\" to point directly to the exporting module or ${preserveModules ? 'do not use \"output.preserveModules\"' : 'reconfigure \"output.manualChunks\"'} to ensure these modules end up in the same chunk.`,\n    reexporter\n  };\n}\nfunction errorDeprecation(deprecation, urlSnippet, plugin) {\n  return {\n    code: DEPRECATED_FEATURE,\n    message: deprecation,\n    url: getRollupUrl(urlSnippet),\n    ...(plugin ? {\n      plugin\n    } : {})\n  };\n}\nfunction errorDuplicatePluginName(plugin) {\n  return {\n    code: DUPLICATE_PLUGIN_NAME,\n    message: `The plugin name ${plugin} is being used twice in the same build. Plugin names must be distinct or provide a cacheKey (please post an issue to the plugin if you are a plugin user).`\n  };\n}\nfunction errorEmptyChunk(chunkName) {\n  return {\n    code: EMPTY_BUNDLE,\n    message: `Generated an empty chunk: \"${chunkName}\".`,\n    names: [chunkName]\n  };\n}\nfunction errorEval(id) {\n  return {\n    code: EVAL,\n    id,\n    message: `Use of eval in \"${relativeId(id)}\" is strongly discouraged as it poses security risks and may cause issues with minification.`,\n    url: getRollupUrl(URL_AVOIDING_EVAL)\n  };\n}\nfunction errorExternalSyntheticExports(id, importer) {\n  return {\n    code: EXTERNAL_SYNTHETIC_EXPORTS,\n    exporter: id,\n    message: `External \"${id}\" cannot have \"syntheticNamedExports\" enabled (imported by \"${relativeId(importer)}\").`\n  };\n}\nfunction errorFileNameConflict(fileName) {\n  return {\n    code: FILE_NAME_CONFLICT,\n    message: `The emitted file \"${fileName}\" overwrites a previously emitted file of the same name.`\n  };\n}\nfunction errorFileReferenceIdNotFoundForFilename(assetReferenceId) {\n  return {\n    code: FILE_NOT_FOUND,\n    message: `Plugin error - Unable to get file name for unknown file \"${assetReferenceId}\".`\n  };\n}\nfunction errorIllegalIdentifierAsName(name) {\n  return {\n    code: ILLEGAL_IDENTIFIER_AS_NAME,\n    message: `Given name \"${name}\" is not a legal JS identifier. If you need this, you can try \"output.extend: true\".`,\n    url: getRollupUrl(URL_OUTPUT_EXTEND)\n  };\n}\nfunction errorIllegalImportReassignment(name, importingId) {\n  return {\n    code: ILLEGAL_REASSIGNMENT,\n    message: `Illegal reassignment of import \"${name}\" in \"${relativeId(importingId)}\".`\n  };\n}\nfunction errorInconsistentImportAssertions(existingAssertions, newAssertions, source, importer) {\n  return {\n    code: INCONSISTENT_IMPORT_ASSERTIONS,\n    message: `Module \"${relativeId(importer)}\" tried to import \"${relativeId(source)}\" with ${formatAssertions(newAssertions)} assertions, but it was already imported elsewhere with ${formatAssertions(existingAssertions)} assertions. Please ensure that import assertions for the same module are always consistent.`\n  };\n}\nconst formatAssertions = assertions => {\n  const entries = Object.entries(assertions);\n  if (entries.length === 0) return 'no';\n  return entries.map(_ref7 => {\n    let [key, value] = _ref7;\n    return `\"${key}\": \"${value}\"`;\n  }).join(', ');\n};\nfunction errorInputHookInOutputPlugin(pluginName, hookName) {\n  return {\n    code: INPUT_HOOK_IN_OUTPUT_PLUGIN,\n    message: `The \"${hookName}\" hook used by the output plugin ${pluginName} is a build time hook and will not be run for that plugin. Either this plugin cannot be used as an output plugin, or it should have an option to configure it as an output plugin.`\n  };\n}\nfunction errorCannotAssignModuleToChunk(moduleId, assignToAlias, currentAlias) {\n  return {\n    code: INVALID_CHUNK,\n    message: `Cannot assign \"${relativeId(moduleId)}\" to the \"${assignToAlias}\" chunk as it is already in the \"${currentAlias}\" chunk.`\n  };\n}\nfunction errorInvalidExportOptionValue(optionValue) {\n  return {\n    code: INVALID_EXPORT_OPTION,\n    message: `\"output.exports\" must be \"default\", \"named\", \"none\", \"auto\", or left unspecified (defaults to \"auto\"), received \"${optionValue}\".`,\n    url: getRollupUrl(URL_OUTPUT_EXPORTS)\n  };\n}\nfunction errorIncompatibleExportOptionValue(optionValue, keys, entryModule) {\n  return {\n    code: INVALID_EXPORT_OPTION,\n    message: `\"${optionValue}\" was specified for \"output.exports\", but entry module \"${relativeId(entryModule)}\" has the following exports: ${printQuotedStringList(keys)}`,\n    url: getRollupUrl(URL_OUTPUT_EXPORTS)\n  };\n}\nfunction errorInternalIdCannotBeExternal(source, importer) {\n  return {\n    code: INVALID_EXTERNAL_ID,\n    message: `\"${source}\" is imported as an external by \"${relativeId(importer)}\", but is already an existing non-external module id.`\n  };\n}\nfunction errorInvalidOption(option, urlSnippet, explanation, value) {\n  return {\n    code: INVALID_OPTION,\n    message: `Invalid value ${value === undefined ? '' : `${JSON.stringify(value)} `}for option \"${option}\" - ${explanation}.`,\n    url: getRollupUrl(urlSnippet)\n  };\n}\nfunction errorInvalidAddonPluginHook(hook, plugin) {\n  return {\n    code: INVALID_PLUGIN_HOOK,\n    hook,\n    message: `Error running plugin hook \"${hook}\" for plugin \"${plugin}\", expected a string, a function hook or an object with a \"handler\" string or function.`,\n    plugin\n  };\n}\nfunction errorInvalidFunctionPluginHook(hook, plugin) {\n  return {\n    code: INVALID_PLUGIN_HOOK,\n    hook,\n    message: `Error running plugin hook \"${hook}\" for plugin \"${plugin}\", expected a function hook or an object with a \"handler\" function.`,\n    plugin\n  };\n}\nfunction errorInvalidRollupPhaseForAddWatchFile() {\n  return {\n    code: INVALID_ROLLUP_PHASE,\n    message: `Cannot call \"addWatchFile\" after the build has finished.`\n  };\n}\nfunction errorInvalidRollupPhaseForChunkEmission() {\n  return {\n    code: INVALID_ROLLUP_PHASE,\n    message: `Cannot emit chunks after module loading has finished.`\n  };\n}\nfunction errorInvalidSetAssetSourceCall() {\n  return {\n    code: INVALID_SETASSETSOURCE,\n    message: `setAssetSource cannot be called in transform for caching reasons. Use emitFile with a source, or call setAssetSource in another hook.`\n  };\n}\nfunction errorInvalidFormatForTopLevelAwait(id, format) {\n  return {\n    code: INVALID_TLA_FORMAT,\n    id,\n    message: `Module format \"${format}\" does not support top-level await. Use the \"es\" or \"system\" output formats rather.`\n  };\n}\nfunction errorMissingExport(binding, importingModule, exporter) {\n  const isJson = extname(exporter) === '.json';\n  return {\n    binding,\n    code: MISSING_EXPORT,\n    exporter,\n    id: importingModule,\n    message: `\"${binding}\" is not exported by \"${relativeId(exporter)}\", imported by \"${relativeId(importingModule)}\".${isJson ? ' (Note that you need @rollup/plugin-json to import JSON files)' : ''}`,\n    url: getRollupUrl(URL_NAME_IS_NOT_EXPORTED)\n  };\n}\nfunction errorMissingGlobalName(externalId, guess) {\n  return {\n    code: MISSING_GLOBAL_NAME,\n    id: externalId,\n    message: `No name was provided for external module \"${externalId}\" in \"output.globals\" – guessing \"${guess}\".`,\n    names: [guess],\n    url: getRollupUrl(URL_OUTPUT_GLOBALS)\n  };\n}\nfunction errorImplicitDependantCannotBeExternal(unresolvedId, implicitlyLoadedBefore) {\n  return {\n    code: MISSING_IMPLICIT_DEPENDANT,\n    message: `Module \"${relativeId(unresolvedId)}\" that should be implicitly loaded before \"${relativeId(implicitlyLoadedBefore)}\" cannot be external.`\n  };\n}\nfunction errorUnresolvedImplicitDependant(unresolvedId, implicitlyLoadedBefore) {\n  return {\n    code: MISSING_IMPLICIT_DEPENDANT,\n    message: `Module \"${relativeId(unresolvedId)}\" that should be implicitly loaded before \"${relativeId(implicitlyLoadedBefore)}\" could not be resolved.`\n  };\n}\nfunction errorImplicitDependantIsNotIncluded(module) {\n  const implicitDependencies = [...module.implicitlyLoadedBefore].map(dependency => relativeId(dependency.id)).sort();\n  return {\n    code: MISSING_IMPLICIT_DEPENDANT,\n    message: `Module \"${relativeId(module.id)}\" that should be implicitly loaded before ${printQuotedStringList(implicitDependencies)} is not included in the module graph. Either it was not imported by an included module or only via a tree-shaken dynamic import, or no imported bindings were used and it had otherwise no side-effects.`\n  };\n}\nfunction errorMissingNameOptionForIifeExport() {\n  return {\n    code: MISSING_NAME_OPTION_FOR_IIFE_EXPORT,\n    message: `If you do not supply \"output.name\", you may not be able to access the exports of an IIFE bundle.`,\n    url: getRollupUrl(URL_OUTPUT_NAME)\n  };\n}\nfunction errorMissingNameOptionForUmdExport() {\n  return {\n    code: MISSING_NAME_OPTION_FOR_IIFE_EXPORT,\n    message: 'You must supply \"output.name\" for UMD bundles that have exports so that the exports are accessible in environments without a module loader.',\n    url: getRollupUrl(URL_OUTPUT_NAME)\n  };\n}\nfunction errorMissingNodeBuiltins(externalBuiltins) {\n  return {\n    code: MISSING_NODE_BUILTINS,\n    ids: externalBuiltins,\n    message: `Creating a browser bundle that depends on Node.js built-in modules (${printQuotedStringList(externalBuiltins)}). You might need to include https://github.com/FredKSchott/rollup-plugin-polyfill-node`\n  };\n}\n// eslint-disable-next-line unicorn/prevent-abbreviations\nfunction errorMissingFileOrDirOption() {\n  return {\n    code: MISSING_OPTION,\n    message: 'You must specify \"output.file\" or \"output.dir\" for the build.',\n    url: getRollupUrl(URL_OUTPUT_DIR)\n  };\n}\nfunction errorMixedExport(facadeModuleId, name) {\n  return {\n    code: MIXED_EXPORTS,\n    id: facadeModuleId,\n    message: `Entry module \"${relativeId(facadeModuleId)}\" is using named and default exports together. Consumers of your bundle will have to use \\`${name || 'chunk'}.default\\` to access the default export, which may not be what you want. Use \\`output.exports: \"named\"\\` to disable this warning.`,\n    url: getRollupUrl(URL_OUTPUT_EXPORTS)\n  };\n}\nfunction errorModuleLevelDirective(directive, id) {\n  return {\n    code: MODULE_LEVEL_DIRECTIVE,\n    id,\n    message: `Module level directives cause errors when bundled, \"${directive}\" in \"${relativeId(id)}\" was ignored.`\n  };\n}\nfunction errorNamespaceConflict(binding, reexportingModuleId, sources) {\n  return {\n    binding,\n    code: NAMESPACE_CONFLICT,\n    ids: sources,\n    message: `Conflicting namespaces: \"${relativeId(reexportingModuleId)}\" re-exports \"${binding}\" from one of the modules ${printQuotedStringList(sources.map(moduleId => relativeId(moduleId)))} (will be ignored).`,\n    reexporter: reexportingModuleId\n  };\n}\nfunction errorNoTransformMapOrAstWithoutCode(pluginName) {\n  return {\n    code: NO_TRANSFORM_MAP_OR_AST_WITHOUT_CODE,\n    message: `The plugin \"${pluginName}\" returned a \"map\" or \"ast\" without returning ` + 'a \"code\". This will be ignored.'\n  };\n}\nfunction errorParseError(error, moduleId) {\n  let message = error.message.replace(/ \\(\\d+:\\d+\\)$/, '');\n  if (moduleId.endsWith('.json')) {\n    message += ' (Note that you need @rollup/plugin-json to import JSON files)';\n  } else if (!moduleId.endsWith('.js')) {\n    message += ' (Note that you need plugins to import files that are not JavaScript)';\n  }\n  return {\n    cause: error,\n    code: PARSE_ERROR,\n    id: moduleId,\n    message\n  };\n}\nfunction errorPluginError(error, plugin) {\n  let {\n    hook,\n    id\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (typeof error === 'string') error = {\n    message: error\n  };\n  if (error.code && error.code !== PLUGIN_ERROR) {\n    error.pluginCode = error.code;\n  }\n  error.code = PLUGIN_ERROR;\n  error.plugin = plugin;\n  if (hook) {\n    error.hook = hook;\n  }\n  if (id) {\n    error.id = id;\n  }\n  return error;\n}\nfunction errorShimmedExport(id, binding) {\n  return {\n    binding,\n    code: SHIMMED_EXPORT,\n    exporter: id,\n    message: `Missing export \"${binding}\" has been shimmed in module \"${relativeId(id)}\".`\n  };\n}\nfunction errorSourcemapBroken(plugin) {\n  return {\n    code: SOURCEMAP_BROKEN,\n    message: `Sourcemap is likely to be incorrect: a plugin (${plugin}) was used to transform files, but didn't generate a sourcemap for the transformation. Consult the plugin documentation for help`,\n    plugin,\n    url: getRollupUrl(URL_SOURCEMAP_IS_LIKELY_TO_BE_INCORRECT)\n  };\n}\nfunction errorConflictingSourcemapSources(filename) {\n  return {\n    code: SOURCEMAP_BROKEN,\n    message: `Multiple conflicting contents for sourcemap source ${filename}`\n  };\n}\nfunction errorInvalidSourcemapForError(error, id, column, line, pos) {\n  return {\n    cause: error,\n    code: SOURCEMAP_ERROR,\n    id,\n    loc: {\n      column,\n      file: id,\n      line\n    },\n    message: `Error when using sourcemap for reporting an error: ${error.message}`,\n    pos\n  };\n}\nfunction errorSyntheticNamedExportsNeedNamespaceExport(id, syntheticNamedExportsOption) {\n  return {\n    code: SYNTHETIC_NAMED_EXPORTS_NEED_NAMESPACE_EXPORT,\n    exporter: id,\n    message: `Module \"${relativeId(id)}\" that is marked with \\`syntheticNamedExports: ${JSON.stringify(syntheticNamedExportsOption)}\\` needs ${typeof syntheticNamedExportsOption === 'string' && syntheticNamedExportsOption !== 'default' ? `an explicit export named \"${syntheticNamedExportsOption}\"` : 'a default export'} that does not reexport an unresolved named export of the same module.`\n  };\n}\nfunction errorThisIsUndefined() {\n  return {\n    code: THIS_IS_UNDEFINED,\n    message: `The 'this' keyword is equivalent to 'undefined' at the top level of an ES module, and has been rewritten`,\n    url: getRollupUrl(URL_THIS_IS_UNDEFINED)\n  };\n}\nfunction errorUnexpectedNamedImport(id, imported, isReexport) {\n  const importType = isReexport ? 'reexport' : 'import';\n  return {\n    code: UNEXPECTED_NAMED_IMPORT,\n    exporter: id,\n    message: `The named export \"${imported}\" was ${importType}ed from the external module \"${relativeId(id)}\" even though its interop type is \"defaultOnly\". Either remove or change this ${importType} or change the value of the \"output.interop\" option.`,\n    url: getRollupUrl(URL_OUTPUT_INTEROP)\n  };\n}\nfunction errorUnexpectedNamespaceReexport(id) {\n  return {\n    code: UNEXPECTED_NAMED_IMPORT,\n    exporter: id,\n    message: `There was a namespace \"*\" reexport from the external module \"${relativeId(id)}\" even though its interop type is \"defaultOnly\". This will be ignored as namespace reexports only reexport named exports. If this is not intended, either remove or change this reexport or change the value of the \"output.interop\" option.`,\n    url: getRollupUrl(URL_OUTPUT_INTEROP)\n  };\n}\nfunction errorUnknownOption(optionType, unknownOptions, validOptions) {\n  return {\n    code: UNKNOWN_OPTION,\n    message: `Unknown ${optionType}: ${unknownOptions.join(', ')}. Allowed options: ${validOptions.join(', ')}`\n  };\n}\nfunction errorEntryCannotBeExternal(unresolvedId) {\n  return {\n    code: UNRESOLVED_ENTRY,\n    message: `Entry module \"${relativeId(unresolvedId)}\" cannot be external.`\n  };\n}\nfunction errorUnresolvedEntry(unresolvedId) {\n  return {\n    code: UNRESOLVED_ENTRY,\n    message: `Could not resolve entry module \"${relativeId(unresolvedId)}\".`\n  };\n}\nfunction errorUnresolvedImport(source, importer) {\n  return {\n    code: UNRESOLVED_IMPORT,\n    exporter: source,\n    id: importer,\n    message: `Could not resolve \"${source}\" from \"${relativeId(importer)}\"`\n  };\n}\nfunction errorUnresolvedImportTreatedAsExternal(source, importer) {\n  return {\n    code: UNRESOLVED_IMPORT,\n    exporter: source,\n    id: importer,\n    message: `\"${source}\" is imported by \"${relativeId(importer)}\", but could not be resolved – treating it as an external dependency.`,\n    url: getRollupUrl(URL_TREATING_MODULE_AS_EXTERNAL_DEPENDENCY)\n  };\n}\nfunction errorUnusedExternalImports(externalId, names, importers) {\n  return {\n    code: UNUSED_EXTERNAL_IMPORT,\n    exporter: externalId,\n    ids: importers,\n    message: `${printQuotedStringList(names, ['is', 'are'])} imported from external module \"${externalId}\" but never used in ${printQuotedStringList(importers.map(importer => relativeId(importer)))}.`,\n    names\n  };\n}\nfunction errorFailedValidation(message) {\n  return {\n    code: VALIDATION_ERROR,\n    message\n  };\n}\nfunction warnDeprecation(deprecation, urlSnippet, activeDeprecation, options, plugin) {\n  warnDeprecationWithOptions(deprecation, urlSnippet, activeDeprecation, options.onwarn, options.strictDeprecations, plugin);\n}\nfunction warnDeprecationWithOptions(deprecation, urlSnippet, activeDeprecation, warn, strictDeprecations, plugin) {\n  if (activeDeprecation || strictDeprecations) {\n    const warning = errorDeprecation(deprecation, urlSnippet, plugin);\n    if (strictDeprecations) {\n      return error(warning);\n    }\n    warn(warning);\n  }\n}\nconst RESERVED_NAMES = new Set(['await', 'break', 'case', 'catch', 'class', 'const', 'continue', 'debugger', 'default', 'delete', 'do', 'else', 'enum', 'eval', 'export', 'extends', 'false', 'finally', 'for', 'function', 'if', 'implements', 'import', 'in', 'instanceof', 'interface', 'let', 'NaN', 'new', 'null', 'package', 'private', 'protected', 'public', 'return', 'static', 'super', 'switch', 'this', 'throw', 'true', 'try', 'typeof', 'undefined', 'var', 'void', 'while', 'with', 'yield']);\nconst RESERVED_NAMES$1 = RESERVED_NAMES;\nconst illegalCharacters = /[^\\w$]/g;\nconst startsWithDigit = value => /\\d/.test(value[0]);\nconst needsEscape = value => startsWithDigit(value) || RESERVED_NAMES$1.has(value) || value === 'arguments';\nfunction isLegal(value) {\n  if (needsEscape(value)) {\n    return false;\n  }\n  return !illegalCharacters.test(value);\n}\nfunction makeLegal(value) {\n  value = value.replace(/-(\\w)/g, (_, letter) => letter.toUpperCase()).replace(illegalCharacters, '_');\n  if (needsEscape(value)) value = `_${value}`;\n  return value || '_';\n}\nclass ExternalModule {\n  constructor(options, id, moduleSideEffects, meta, renormalizeRenderPath, assertions) {\n    this.options = options;\n    this.id = id;\n    this.renormalizeRenderPath = renormalizeRenderPath;\n    this.dynamicImporters = [];\n    this.execIndex = Infinity;\n    this.exportedVariables = new Map();\n    this.importers = [];\n    this.reexported = false;\n    this.used = false;\n    this.declarations = new Map();\n    this.mostCommonSuggestion = 0;\n    this.nameSuggestions = new Map();\n    this.suggestedVariableName = makeLegal(id.split(/[/\\\\]/).pop());\n    const {\n      importers,\n      dynamicImporters\n    } = this;\n    const info = this.info = {\n      assertions,\n      ast: null,\n      code: null,\n      dynamicallyImportedIdResolutions: EMPTY_ARRAY,\n      dynamicallyImportedIds: EMPTY_ARRAY,\n      get dynamicImporters() {\n        return dynamicImporters.sort();\n      },\n      exportedBindings: null,\n      exports: null,\n      hasDefaultExport: null,\n      get hasModuleSideEffects() {\n        warnDeprecation('Accessing ModuleInfo.hasModuleSideEffects from plugins is deprecated. Please use ModuleInfo.moduleSideEffects instead.', URL_THIS_GETMODULEINFO, true, options);\n        return info.moduleSideEffects;\n      },\n      id,\n      implicitlyLoadedAfterOneOf: EMPTY_ARRAY,\n      implicitlyLoadedBefore: EMPTY_ARRAY,\n      importedIdResolutions: EMPTY_ARRAY,\n      importedIds: EMPTY_ARRAY,\n      get importers() {\n        return importers.sort();\n      },\n      isEntry: false,\n      isExternal: true,\n      isIncluded: null,\n      meta,\n      moduleSideEffects,\n      syntheticNamedExports: false\n    };\n    // Hide the deprecated key so that it only warns when accessed explicitly\n    Object.defineProperty(this.info, 'hasModuleSideEffects', {\n      enumerable: false\n    });\n  }\n  getVariableForExportName(name) {\n    const declaration = this.declarations.get(name);\n    if (declaration) return [declaration];\n    const externalVariable = new ExternalVariable(this, name);\n    this.declarations.set(name, externalVariable);\n    this.exportedVariables.set(externalVariable, name);\n    return [externalVariable];\n  }\n  suggestName(name) {\n    const value = (this.nameSuggestions.get(name) ?? 0) + 1;\n    this.nameSuggestions.set(name, value);\n    if (value > this.mostCommonSuggestion) {\n      this.mostCommonSuggestion = value;\n      this.suggestedVariableName = name;\n    }\n  }\n  warnUnusedImports() {\n    const unused = [...this.declarations].filter(_ref8 => {\n      let [name, declaration] = _ref8;\n      return name !== '*' && !declaration.included && !this.reexported && !declaration.referenced;\n    }).map(_ref9 => {\n      let [name] = _ref9;\n      return name;\n    });\n    if (unused.length === 0) return;\n    const importersSet = new Set();\n    for (const name of unused) {\n      for (const importer of this.declarations.get(name).module.importers) {\n        importersSet.add(importer);\n      }\n    }\n    const importersArray = [...importersSet];\n    this.options.onwarn(errorUnusedExternalImports(this.id, unused, importersArray));\n  }\n}\nfunction getDefaultExportFromCjs(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\nfunction getAugmentedNamespace(n) {\n  if (n.__esModule) return n;\n  var f = n.default;\n  if (typeof f == \"function\") {\n    var a = function a() {\n      if (this instanceof a) {\n        var args = [null];\n        args.push.apply(args, arguments);\n        var Ctor = Function.bind.apply(f, args);\n        return new Ctor();\n      }\n      return f.apply(this, arguments);\n    };\n    a.prototype = f.prototype;\n  } else a = {};\n  Object.defineProperty(a, '__esModule', {\n    value: true\n  });\n  Object.keys(n).forEach(function (k) {\n    var d = Object.getOwnPropertyDescriptor(n, k);\n    Object.defineProperty(a, k, d.get ? d : {\n      enumerable: true,\n      get: function () {\n        return n[k];\n      }\n    });\n  });\n  return a;\n}\nvar picomatchExports = {};\nvar picomatch$1 = {\n  get exports() {\n    return picomatchExports;\n  },\n  set exports(v) {\n    picomatchExports = v;\n  }\n};\nvar utils$3 = {};\nconst path$1 = require$$0$1;\nconst WIN_SLASH = '\\\\\\\\/';\nconst WIN_NO_SLASH = `[^${WIN_SLASH}]`;\n\n/**\n * Posix glob regex\n */\n\nconst DOT_LITERAL = '\\\\.';\nconst PLUS_LITERAL = '\\\\+';\nconst QMARK_LITERAL = '\\\\?';\nconst SLASH_LITERAL = '\\\\/';\nconst ONE_CHAR = '(?=.)';\nconst QMARK = '[^/]';\nconst END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;\nconst START_ANCHOR = `(?:^|${SLASH_LITERAL})`;\nconst DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;\nconst NO_DOT = `(?!${DOT_LITERAL})`;\nconst NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;\nconst NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;\nconst NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;\nconst QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;\nconst STAR = `${QMARK}*?`;\nconst POSIX_CHARS = {\n  DOT_LITERAL,\n  PLUS_LITERAL,\n  QMARK_LITERAL,\n  SLASH_LITERAL,\n  ONE_CHAR,\n  QMARK,\n  END_ANCHOR,\n  DOTS_SLASH,\n  NO_DOT,\n  NO_DOTS,\n  NO_DOT_SLASH,\n  NO_DOTS_SLASH,\n  QMARK_NO_DOT,\n  STAR,\n  START_ANCHOR\n};\n\n/**\n * Windows glob regex\n */\n\nconst WINDOWS_CHARS = {\n  ...POSIX_CHARS,\n  SLASH_LITERAL: `[${WIN_SLASH}]`,\n  QMARK: WIN_NO_SLASH,\n  STAR: `${WIN_NO_SLASH}*?`,\n  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,\n  NO_DOT: `(?!${DOT_LITERAL})`,\n  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,\n  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,\n  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,\n  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`\n};\n\n/**\n * POSIX Bracket Regex\n */\n\nconst POSIX_REGEX_SOURCE$1 = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  ascii: '\\\\x00-\\\\x7F',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E ',\n  punct: '\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word: 'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9'\n};\nvar constants$2 = {\n  MAX_LENGTH: 1024 * 64,\n  POSIX_REGEX_SOURCE: POSIX_REGEX_SOURCE$1,\n  // regular expressions\n  REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\n  REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\n  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\n  REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\n  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\n  REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\n  // Replace globs with equivalent patterns to reduce parsing time.\n  REPLACEMENTS: {\n    '***': '*',\n    '**/**': '**',\n    '**/**/**': '**'\n  },\n  // Digits\n  CHAR_0: 48,\n  /* 0 */\n  CHAR_9: 57,\n  /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 65,\n  /* A */\n  CHAR_LOWERCASE_A: 97,\n  /* a */\n  CHAR_UPPERCASE_Z: 90,\n  /* Z */\n  CHAR_LOWERCASE_Z: 122,\n  /* z */\n\n  CHAR_LEFT_PARENTHESES: 40,\n  /* ( */\n  CHAR_RIGHT_PARENTHESES: 41,\n  /* ) */\n\n  CHAR_ASTERISK: 42,\n  /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: 38,\n  /* & */\n  CHAR_AT: 64,\n  /* @ */\n  CHAR_BACKWARD_SLASH: 92,\n  /* \\ */\n  CHAR_CARRIAGE_RETURN: 13,\n  /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: 94,\n  /* ^ */\n  CHAR_COLON: 58,\n  /* : */\n  CHAR_COMMA: 44,\n  /* , */\n  CHAR_DOT: 46,\n  /* . */\n  CHAR_DOUBLE_QUOTE: 34,\n  /* \" */\n  CHAR_EQUAL: 61,\n  /* = */\n  CHAR_EXCLAMATION_MARK: 33,\n  /* ! */\n  CHAR_FORM_FEED: 12,\n  /* \\f */\n  CHAR_FORWARD_SLASH: 47,\n  /* / */\n  CHAR_GRAVE_ACCENT: 96,\n  /* ` */\n  CHAR_HASH: 35,\n  /* # */\n  CHAR_HYPHEN_MINUS: 45,\n  /* - */\n  CHAR_LEFT_ANGLE_BRACKET: 60,\n  /* < */\n  CHAR_LEFT_CURLY_BRACE: 123,\n  /* { */\n  CHAR_LEFT_SQUARE_BRACKET: 91,\n  /* [ */\n  CHAR_LINE_FEED: 10,\n  /* \\n */\n  CHAR_NO_BREAK_SPACE: 160,\n  /* \\u00A0 */\n  CHAR_PERCENT: 37,\n  /* % */\n  CHAR_PLUS: 43,\n  /* + */\n  CHAR_QUESTION_MARK: 63,\n  /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: 62,\n  /* > */\n  CHAR_RIGHT_CURLY_BRACE: 125,\n  /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: 93,\n  /* ] */\n  CHAR_SEMICOLON: 59,\n  /* ; */\n  CHAR_SINGLE_QUOTE: 39,\n  /* ' */\n  CHAR_SPACE: 32,\n  /*   */\n  CHAR_TAB: 9,\n  /* \\t */\n  CHAR_UNDERSCORE: 95,\n  /* _ */\n  CHAR_VERTICAL_LINE: 124,\n  /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279,\n  /* \\uFEFF */\n\n  SEP: path$1.sep,\n  /**\n   * Create EXTGLOB_CHARS\n   */\n\n  extglobChars(chars) {\n    return {\n      '!': {\n        type: 'negate',\n        open: '(?:(?!(?:',\n        close: `))${chars.STAR})`\n      },\n      '?': {\n        type: 'qmark',\n        open: '(?:',\n        close: ')?'\n      },\n      '+': {\n        type: 'plus',\n        open: '(?:',\n        close: ')+'\n      },\n      '*': {\n        type: 'star',\n        open: '(?:',\n        close: ')*'\n      },\n      '@': {\n        type: 'at',\n        open: '(?:',\n        close: ')'\n      }\n    };\n  },\n  /**\n   * Create GLOB_CHARS\n   */\n\n  globChars(win32) {\n    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;\n  }\n};\n(function (exports) {\n  const path = require$$0$1;\n  const win32 = process.platform === 'win32';\n  const {\n    REGEX_BACKSLASH,\n    REGEX_REMOVE_BACKSLASH,\n    REGEX_SPECIAL_CHARS,\n    REGEX_SPECIAL_CHARS_GLOBAL\n  } = constants$2;\n  exports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\n  exports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\n  exports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\n  exports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\n  exports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\n  exports.removeBackslashes = str => {\n    return str.replace(REGEX_REMOVE_BACKSLASH, match => {\n      return match === '\\\\' ? '' : match;\n    });\n  };\n  exports.supportsLookbehinds = () => {\n    const segs = process.version.slice(1).split('.').map(Number);\n    if (segs.length === 3 && segs[0] >= 9 || segs[0] === 8 && segs[1] >= 10) {\n      return true;\n    }\n    return false;\n  };\n  exports.isWindows = options => {\n    if (options && typeof options.windows === 'boolean') {\n      return options.windows;\n    }\n    return win32 === true || path.sep === '\\\\';\n  };\n  exports.escapeLast = (input, char, lastIdx) => {\n    const idx = input.lastIndexOf(char, lastIdx);\n    if (idx === -1) return input;\n    if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\n    return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\n  };\n  exports.removePrefix = function (input) {\n    let state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let output = input;\n    if (output.startsWith('./')) {\n      output = output.slice(2);\n      state.prefix = './';\n    }\n    return output;\n  };\n  exports.wrapOutput = function (input) {\n    let state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const prepend = options.contains ? '' : '^';\n    const append = options.contains ? '' : '$';\n    let output = `${prepend}(?:${input})${append}`;\n    if (state.negated === true) {\n      output = `(?:^(?!${output}).*$)`;\n    }\n    return output;\n  };\n})(utils$3);\nconst utils$2 = utils$3;\nconst {\n  CHAR_ASTERISK,\n  /* * */\n  CHAR_AT,\n  /* @ */\n  CHAR_BACKWARD_SLASH,\n  /* \\ */\n  CHAR_COMMA,\n  /* , */\n  CHAR_DOT,\n  /* . */\n  CHAR_EXCLAMATION_MARK,\n  /* ! */\n  CHAR_FORWARD_SLASH,\n  /* / */\n  CHAR_LEFT_CURLY_BRACE,\n  /* { */\n  CHAR_LEFT_PARENTHESES,\n  /* ( */\n  CHAR_LEFT_SQUARE_BRACKET,\n  /* [ */\n  CHAR_PLUS,\n  /* + */\n  CHAR_QUESTION_MARK,\n  /* ? */\n  CHAR_RIGHT_CURLY_BRACE,\n  /* } */\n  CHAR_RIGHT_PARENTHESES,\n  /* ) */\n  CHAR_RIGHT_SQUARE_BRACKET /* ] */\n} = constants$2;\nconst isPathSeparator = code => {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n};\nconst depth = token => {\n  if (token.isPrefix !== true) {\n    token.depth = token.isGlobstar ? Infinity : 1;\n  }\n};\n\n/**\n * Quickly scans a glob pattern and returns an object with a handful of\n * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),\n * `glob` (the actual pattern), `negated` (true if the path starts with `!` but not\n * with `!(`) and `negatedExtglob` (true if the path starts with `!(`).\n *\n * ```js\n * const pm = require('picomatch');\n * console.log(pm.scan('foo/bar/*.js'));\n * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {Object} Returns an object with tokens and regex source string.\n * @api public\n */\n\nconst scan$1 = (input, options) => {\n  const opts = options || {};\n  const length = input.length - 1;\n  const scanToEnd = opts.parts === true || opts.scanToEnd === true;\n  const slashes = [];\n  const tokens = [];\n  const parts = [];\n  let str = input;\n  let index = -1;\n  let start = 0;\n  let lastIndex = 0;\n  let isBrace = false;\n  let isBracket = false;\n  let isGlob = false;\n  let isExtglob = false;\n  let isGlobstar = false;\n  let braceEscaped = false;\n  let backslashes = false;\n  let negated = false;\n  let negatedExtglob = false;\n  let finished = false;\n  let braces = 0;\n  let prev;\n  let code;\n  let token = {\n    value: '',\n    depth: 0,\n    isGlob: false\n  };\n  const eos = () => index >= length;\n  const peek = () => str.charCodeAt(index + 1);\n  const advance = () => {\n    prev = code;\n    return str.charCodeAt(++index);\n  };\n  while (index < length) {\n    code = advance();\n    let next;\n    if (code === CHAR_BACKWARD_SLASH) {\n      backslashes = token.backslashes = true;\n      code = advance();\n      if (code === CHAR_LEFT_CURLY_BRACE) {\n        braceEscaped = true;\n      }\n      continue;\n    }\n    if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE) {\n      braces++;\n      while (eos() !== true && (code = advance())) {\n        if (code === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n        if (code === CHAR_LEFT_CURLY_BRACE) {\n          braces++;\n          continue;\n        }\n        if (braceEscaped !== true && code === CHAR_DOT && (code = advance()) === CHAR_DOT) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n          if (scanToEnd === true) {\n            continue;\n          }\n          break;\n        }\n        if (braceEscaped !== true && code === CHAR_COMMA) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n          if (scanToEnd === true) {\n            continue;\n          }\n          break;\n        }\n        if (code === CHAR_RIGHT_CURLY_BRACE) {\n          braces--;\n          if (braces === 0) {\n            braceEscaped = false;\n            isBrace = token.isBrace = true;\n            finished = true;\n            break;\n          }\n        }\n      }\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n    if (code === CHAR_FORWARD_SLASH) {\n      slashes.push(index);\n      tokens.push(token);\n      token = {\n        value: '',\n        depth: 0,\n        isGlob: false\n      };\n      if (finished === true) continue;\n      if (prev === CHAR_DOT && index === start + 1) {\n        start += 2;\n        continue;\n      }\n      lastIndex = index + 1;\n      continue;\n    }\n    if (opts.noext !== true) {\n      const isExtglobChar = code === CHAR_PLUS || code === CHAR_AT || code === CHAR_ASTERISK || code === CHAR_QUESTION_MARK || code === CHAR_EXCLAMATION_MARK;\n      if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES) {\n        isGlob = token.isGlob = true;\n        isExtglob = token.isExtglob = true;\n        finished = true;\n        if (code === CHAR_EXCLAMATION_MARK && index === start) {\n          negatedExtglob = true;\n        }\n        if (scanToEnd === true) {\n          while (eos() !== true && (code = advance())) {\n            if (code === CHAR_BACKWARD_SLASH) {\n              backslashes = token.backslashes = true;\n              code = advance();\n              continue;\n            }\n            if (code === CHAR_RIGHT_PARENTHESES) {\n              isGlob = token.isGlob = true;\n              finished = true;\n              break;\n            }\n          }\n          continue;\n        }\n        break;\n      }\n    }\n    if (code === CHAR_ASTERISK) {\n      if (prev === CHAR_ASTERISK) isGlobstar = token.isGlobstar = true;\n      isGlob = token.isGlob = true;\n      finished = true;\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n    if (code === CHAR_QUESTION_MARK) {\n      isGlob = token.isGlob = true;\n      finished = true;\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n    if (code === CHAR_LEFT_SQUARE_BRACKET) {\n      while (eos() !== true && (next = advance())) {\n        if (next === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          isBracket = token.isBracket = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n          break;\n        }\n      }\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n    if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {\n      negated = token.negated = true;\n      start++;\n      continue;\n    }\n    if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES) {\n      isGlob = token.isGlob = true;\n      if (scanToEnd === true) {\n        while (eos() !== true && (code = advance())) {\n          if (code === CHAR_LEFT_PARENTHESES) {\n            backslashes = token.backslashes = true;\n            code = advance();\n            continue;\n          }\n          if (code === CHAR_RIGHT_PARENTHESES) {\n            finished = true;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n    if (isGlob === true) {\n      finished = true;\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n  }\n  if (opts.noext === true) {\n    isExtglob = false;\n    isGlob = false;\n  }\n  let base = str;\n  let prefix = '';\n  let glob = '';\n  if (start > 0) {\n    prefix = str.slice(0, start);\n    str = str.slice(start);\n    lastIndex -= start;\n  }\n  if (base && isGlob === true && lastIndex > 0) {\n    base = str.slice(0, lastIndex);\n    glob = str.slice(lastIndex);\n  } else if (isGlob === true) {\n    base = '';\n    glob = str;\n  } else {\n    base = str;\n  }\n  if (base && base !== '' && base !== '/' && base !== str) {\n    if (isPathSeparator(base.charCodeAt(base.length - 1))) {\n      base = base.slice(0, -1);\n    }\n  }\n  if (opts.unescape === true) {\n    if (glob) glob = utils$2.removeBackslashes(glob);\n    if (base && backslashes === true) {\n      base = utils$2.removeBackslashes(base);\n    }\n  }\n  const state = {\n    prefix,\n    input,\n    start,\n    base,\n    glob,\n    isBrace,\n    isBracket,\n    isGlob,\n    isExtglob,\n    isGlobstar,\n    negated,\n    negatedExtglob\n  };\n  if (opts.tokens === true) {\n    state.maxDepth = 0;\n    if (!isPathSeparator(code)) {\n      tokens.push(token);\n    }\n    state.tokens = tokens;\n  }\n  if (opts.parts === true || opts.tokens === true) {\n    let prevIndex;\n    for (let idx = 0; idx < slashes.length; idx++) {\n      const n = prevIndex ? prevIndex + 1 : start;\n      const i = slashes[idx];\n      const value = input.slice(n, i);\n      if (opts.tokens) {\n        if (idx === 0 && start !== 0) {\n          tokens[idx].isPrefix = true;\n          tokens[idx].value = prefix;\n        } else {\n          tokens[idx].value = value;\n        }\n        depth(tokens[idx]);\n        state.maxDepth += tokens[idx].depth;\n      }\n      if (idx !== 0 || value !== '') {\n        parts.push(value);\n      }\n      prevIndex = i;\n    }\n    if (prevIndex && prevIndex + 1 < input.length) {\n      const value = input.slice(prevIndex + 1);\n      parts.push(value);\n      if (opts.tokens) {\n        tokens[tokens.length - 1].value = value;\n        depth(tokens[tokens.length - 1]);\n        state.maxDepth += tokens[tokens.length - 1].depth;\n      }\n    }\n    state.slashes = slashes;\n    state.parts = parts;\n  }\n  return state;\n};\nvar scan_1 = scan$1;\nconst constants$1 = constants$2;\nconst utils$1 = utils$3;\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  POSIX_REGEX_SOURCE,\n  REGEX_NON_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_BACKREF,\n  REPLACEMENTS\n} = constants$1;\n\n/**\n * Helpers\n */\n\nconst expandRange = (args, options) => {\n  if (typeof options.expandRange === 'function') {\n    return options.expandRange(...args, options);\n  }\n  args.sort();\n  const value = `[${args.join('-')}]`;\n  return value;\n};\n\n/**\n * Create the message for a syntax error\n */\n\nconst syntaxError = (type, char) => {\n  return `Missing ${type}: \"${char}\" - use \"\\\\\\\\${char}\" to match literal characters`;\n};\n\n/**\n * Parse the given input string.\n * @param {String} input\n * @param {Object} options\n * @return {Object}\n */\n\nconst parse$2 = (input, options) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n  input = REPLACEMENTS[input] || input;\n  const opts = {\n    ...options\n  };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  let len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n  const bos = {\n    type: 'bos',\n    value: '',\n    output: opts.prepend || ''\n  };\n  const tokens = [bos];\n  const capture = opts.capture ? '' : '?:';\n  const win32 = utils$1.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const PLATFORM_CHARS = constants$1.globChars(win32);\n  const EXTGLOB_CHARS = constants$1.extglobChars(PLATFORM_CHARS);\n  const {\n    DOT_LITERAL,\n    PLUS_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOT_SLASH,\n    NO_DOTS_SLASH,\n    QMARK,\n    QMARK_NO_DOT,\n    STAR,\n    START_ANCHOR\n  } = PLATFORM_CHARS;\n  const globstar = opts => {\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n  const nodot = opts.dot ? '' : NO_DOT;\n  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;\n  let star = opts.bash === true ? globstar(opts) : STAR;\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  // minimatch options support\n  if (typeof opts.noext === 'boolean') {\n    opts.noextglob = opts.noext;\n  }\n  const state = {\n    input,\n    index: -1,\n    start: 0,\n    dot: opts.dot === true,\n    consumed: '',\n    output: '',\n    prefix: '',\n    backtrack: false,\n    negated: false,\n    brackets: 0,\n    braces: 0,\n    parens: 0,\n    quotes: 0,\n    globstar: false,\n    tokens\n  };\n  input = utils$1.removePrefix(input, state);\n  len = input.length;\n  const extglobs = [];\n  const braces = [];\n  const stack = [];\n  let prev = bos;\n  let value;\n\n  /**\n   * Tokenizing helpers\n   */\n\n  const eos = () => state.index === len - 1;\n  const peek = state.peek = function () {\n    let n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return input[state.index + n];\n  };\n  const advance = state.advance = () => input[++state.index] || '';\n  const remaining = () => input.slice(state.index + 1);\n  const consume = function () {\n    let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let num = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    state.consumed += value;\n    state.index += num;\n  };\n  const append = token => {\n    state.output += token.output != null ? token.output : token.value;\n    consume(token.value);\n  };\n  const negate = () => {\n    let count = 1;\n    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {\n      advance();\n      state.start++;\n      count++;\n    }\n    if (count % 2 === 0) {\n      return false;\n    }\n    state.negated = true;\n    state.start++;\n    return true;\n  };\n  const increment = type => {\n    state[type]++;\n    stack.push(type);\n  };\n  const decrement = type => {\n    state[type]--;\n    stack.pop();\n  };\n\n  /**\n   * Push tokens onto the tokens array. This helper speeds up\n   * tokenizing by 1) helping us avoid backtracking as much as possible,\n   * and 2) helping us avoid creating extra tokens when consecutive\n   * characters are plain text. This improves performance and simplifies\n   * lookbehinds.\n   */\n\n  const push = tok => {\n    if (prev.type === 'globstar') {\n      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');\n      const isExtglob = tok.extglob === true || extglobs.length && (tok.type === 'pipe' || tok.type === 'paren');\n      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {\n        state.output = state.output.slice(0, -prev.output.length);\n        prev.type = 'star';\n        prev.value = '*';\n        prev.output = star;\n        state.output += prev.output;\n      }\n    }\n    if (extglobs.length && tok.type !== 'paren') {\n      extglobs[extglobs.length - 1].inner += tok.value;\n    }\n    if (tok.value || tok.output) append(tok);\n    if (prev && prev.type === 'text' && tok.type === 'text') {\n      prev.value += tok.value;\n      prev.output = (prev.output || '') + tok.value;\n      return;\n    }\n    tok.prev = prev;\n    tokens.push(tok);\n    prev = tok;\n  };\n  const extglobOpen = (type, value) => {\n    const token = {\n      ...EXTGLOB_CHARS[value],\n      conditions: 1,\n      inner: ''\n    };\n    token.prev = prev;\n    token.parens = state.parens;\n    token.output = state.output;\n    const output = (opts.capture ? '(' : '') + token.open;\n    increment('parens');\n    push({\n      type,\n      value,\n      output: state.output ? '' : ONE_CHAR\n    });\n    push({\n      type: 'paren',\n      extglob: true,\n      value: advance(),\n      output\n    });\n    extglobs.push(token);\n  };\n  const extglobClose = token => {\n    let output = token.close + (opts.capture ? ')' : '');\n    let rest;\n    if (token.type === 'negate') {\n      let extglobStar = star;\n      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {\n        extglobStar = globstar(opts);\n      }\n      if (extglobStar !== star || eos() || /^\\)+$/.test(remaining())) {\n        output = token.close = `)$))${extglobStar}`;\n      }\n      if (token.inner.includes('*') && (rest = remaining()) && /^\\.[^\\\\/.]+$/.test(rest)) {\n        // Any non-magical string (`.ts`) or even nested expression (`.{ts,tsx}`) can follow after the closing parenthesis.\n        // In this case, we need to parse the string and use it in the output of the original pattern.\n        // Suitable patterns: `/!(*.d).ts`, `/!(*.d).{ts,tsx}`, `**/!(*-dbg).@(js)`.\n        //\n        // Disabling the `fastpaths` option due to a problem with parsing strings as `.ts` in the pattern like `**/!(*.d).ts`.\n        const expression = parse$2(rest, {\n          ...options,\n          fastpaths: false\n        }).output;\n        output = token.close = `)${expression})${extglobStar})`;\n      }\n      if (token.prev.type === 'bos') {\n        state.negatedExtglob = true;\n      }\n    }\n    push({\n      type: 'paren',\n      extglob: true,\n      value,\n      output\n    });\n    decrement('parens');\n  };\n\n  /**\n   * Fast paths\n   */\n\n  if (opts.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(input)) {\n    let backslashes = false;\n    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {\n      if (first === '\\\\') {\n        backslashes = true;\n        return m;\n      }\n      if (first === '?') {\n        if (esc) {\n          return esc + first + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        if (index === 0) {\n          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        return QMARK.repeat(chars.length);\n      }\n      if (first === '.') {\n        return DOT_LITERAL.repeat(chars.length);\n      }\n      if (first === '*') {\n        if (esc) {\n          return esc + first + (rest ? star : '');\n        }\n        return star;\n      }\n      return esc ? m : `\\\\${m}`;\n    });\n    if (backslashes === true) {\n      if (opts.unescape === true) {\n        output = output.replace(/\\\\/g, '');\n      } else {\n        output = output.replace(/\\\\+/g, m => {\n          return m.length % 2 === 0 ? '\\\\\\\\' : m ? '\\\\' : '';\n        });\n      }\n    }\n    if (output === input && opts.contains === true) {\n      state.output = input;\n      return state;\n    }\n    state.output = utils$1.wrapOutput(output, state, options);\n    return state;\n  }\n\n  /**\n   * Tokenize input until we reach end-of-string\n   */\n\n  while (!eos()) {\n    value = advance();\n    if (value === '\\u0000') {\n      continue;\n    }\n\n    /**\n     * Escaped characters\n     */\n\n    if (value === '\\\\') {\n      const next = peek();\n      if (next === '/' && opts.bash !== true) {\n        continue;\n      }\n      if (next === '.' || next === ';') {\n        continue;\n      }\n      if (!next) {\n        value += '\\\\';\n        push({\n          type: 'text',\n          value\n        });\n        continue;\n      }\n\n      // collapse slashes to reduce potential for exploits\n      const match = /^\\\\+/.exec(remaining());\n      let slashes = 0;\n      if (match && match[0].length > 2) {\n        slashes = match[0].length;\n        state.index += slashes;\n        if (slashes % 2 !== 0) {\n          value += '\\\\';\n        }\n      }\n      if (opts.unescape === true) {\n        value = advance();\n      } else {\n        value += advance();\n      }\n      if (state.brackets === 0) {\n        push({\n          type: 'text',\n          value\n        });\n        continue;\n      }\n    }\n\n    /**\n     * If we're inside a regex character class, continue\n     * until we reach the closing bracket.\n     */\n\n    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {\n      if (opts.posix !== false && value === ':') {\n        const inner = prev.value.slice(1);\n        if (inner.includes('[')) {\n          prev.posix = true;\n          if (inner.includes(':')) {\n            const idx = prev.value.lastIndexOf('[');\n            const pre = prev.value.slice(0, idx);\n            const rest = prev.value.slice(idx + 2);\n            const posix = POSIX_REGEX_SOURCE[rest];\n            if (posix) {\n              prev.value = pre + posix;\n              state.backtrack = true;\n              advance();\n              if (!bos.output && tokens.indexOf(prev) === 1) {\n                bos.output = ONE_CHAR;\n              }\n              continue;\n            }\n          }\n        }\n      }\n      if (value === '[' && peek() !== ':' || value === '-' && peek() === ']') {\n        value = `\\\\${value}`;\n      }\n      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {\n        value = `\\\\${value}`;\n      }\n      if (opts.posix === true && value === '!' && prev.value === '[') {\n        value = '^';\n      }\n      prev.value += value;\n      append({\n        value\n      });\n      continue;\n    }\n\n    /**\n     * If we're inside a quoted string, continue\n     * until we reach the closing double quote.\n     */\n\n    if (state.quotes === 1 && value !== '\"') {\n      value = utils$1.escapeRegex(value);\n      prev.value += value;\n      append({\n        value\n      });\n      continue;\n    }\n\n    /**\n     * Double quotes\n     */\n\n    if (value === '\"') {\n      state.quotes = state.quotes === 1 ? 0 : 1;\n      if (opts.keepQuotes === true) {\n        push({\n          type: 'text',\n          value\n        });\n      }\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === '(') {\n      increment('parens');\n      push({\n        type: 'paren',\n        value\n      });\n      continue;\n    }\n    if (value === ')') {\n      if (state.parens === 0 && opts.strictBrackets === true) {\n        throw new SyntaxError(syntaxError('opening', '('));\n      }\n      const extglob = extglobs[extglobs.length - 1];\n      if (extglob && state.parens === extglob.parens + 1) {\n        extglobClose(extglobs.pop());\n        continue;\n      }\n      push({\n        type: 'paren',\n        value,\n        output: state.parens ? ')' : '\\\\)'\n      });\n      decrement('parens');\n      continue;\n    }\n\n    /**\n     * Square brackets\n     */\n\n    if (value === '[') {\n      if (opts.nobracket === true || !remaining().includes(']')) {\n        if (opts.nobracket !== true && opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('closing', ']'));\n        }\n        value = `\\\\${value}`;\n      } else {\n        increment('brackets');\n      }\n      push({\n        type: 'bracket',\n        value\n      });\n      continue;\n    }\n    if (value === ']') {\n      if (opts.nobracket === true || prev && prev.type === 'bracket' && prev.value.length === 1) {\n        push({\n          type: 'text',\n          value,\n          output: `\\\\${value}`\n        });\n        continue;\n      }\n      if (state.brackets === 0) {\n        if (opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('opening', '['));\n        }\n        push({\n          type: 'text',\n          value,\n          output: `\\\\${value}`\n        });\n        continue;\n      }\n      decrement('brackets');\n      const prevValue = prev.value.slice(1);\n      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {\n        value = `/${value}`;\n      }\n      prev.value += value;\n      append({\n        value\n      });\n\n      // when literal brackets are explicitly disabled\n      // assume we should match with a regex character class\n      if (opts.literalBrackets === false || utils$1.hasRegexChars(prevValue)) {\n        continue;\n      }\n      const escaped = utils$1.escapeRegex(prev.value);\n      state.output = state.output.slice(0, -prev.value.length);\n\n      // when literal brackets are explicitly enabled\n      // assume we should escape the brackets to match literal characters\n      if (opts.literalBrackets === true) {\n        state.output += escaped;\n        prev.value = escaped;\n        continue;\n      }\n\n      // when the user specifies nothing, try to match both\n      prev.value = `(${capture}${escaped}|${prev.value})`;\n      state.output += prev.value;\n      continue;\n    }\n\n    /**\n     * Braces\n     */\n\n    if (value === '{' && opts.nobrace !== true) {\n      increment('braces');\n      const open = {\n        type: 'brace',\n        value,\n        output: '(',\n        outputIndex: state.output.length,\n        tokensIndex: state.tokens.length\n      };\n      braces.push(open);\n      push(open);\n      continue;\n    }\n    if (value === '}') {\n      const brace = braces[braces.length - 1];\n      if (opts.nobrace === true || !brace) {\n        push({\n          type: 'text',\n          value,\n          output: value\n        });\n        continue;\n      }\n      let output = ')';\n      if (brace.dots === true) {\n        const arr = tokens.slice();\n        const range = [];\n        for (let i = arr.length - 1; i >= 0; i--) {\n          tokens.pop();\n          if (arr[i].type === 'brace') {\n            break;\n          }\n          if (arr[i].type !== 'dots') {\n            range.unshift(arr[i].value);\n          }\n        }\n        output = expandRange(range, opts);\n        state.backtrack = true;\n      }\n      if (brace.comma !== true && brace.dots !== true) {\n        const out = state.output.slice(0, brace.outputIndex);\n        const toks = state.tokens.slice(brace.tokensIndex);\n        brace.value = brace.output = '\\\\{';\n        value = output = '\\\\}';\n        state.output = out;\n        for (const t of toks) {\n          state.output += t.output || t.value;\n        }\n      }\n      push({\n        type: 'brace',\n        value,\n        output\n      });\n      decrement('braces');\n      braces.pop();\n      continue;\n    }\n\n    /**\n     * Pipes\n     */\n\n    if (value === '|') {\n      if (extglobs.length > 0) {\n        extglobs[extglobs.length - 1].conditions++;\n      }\n      push({\n        type: 'text',\n        value\n      });\n      continue;\n    }\n\n    /**\n     * Commas\n     */\n\n    if (value === ',') {\n      let output = value;\n      const brace = braces[braces.length - 1];\n      if (brace && stack[stack.length - 1] === 'braces') {\n        brace.comma = true;\n        output = '|';\n      }\n      push({\n        type: 'comma',\n        value,\n        output\n      });\n      continue;\n    }\n\n    /**\n     * Slashes\n     */\n\n    if (value === '/') {\n      // if the beginning of the glob is \"./\", advance the start\n      // to the current index, and don't add the \"./\" characters\n      // to the state. This greatly simplifies lookbehinds when\n      // checking for BOS characters like \"!\" and \".\" (not \"./\")\n      if (prev.type === 'dot' && state.index === state.start + 1) {\n        state.start = state.index + 1;\n        state.consumed = '';\n        state.output = '';\n        tokens.pop();\n        prev = bos; // reset \"prev\" to the first token\n        continue;\n      }\n      push({\n        type: 'slash',\n        value,\n        output: SLASH_LITERAL\n      });\n      continue;\n    }\n\n    /**\n     * Dots\n     */\n\n    if (value === '.') {\n      if (state.braces > 0 && prev.type === 'dot') {\n        if (prev.value === '.') prev.output = DOT_LITERAL;\n        const brace = braces[braces.length - 1];\n        prev.type = 'dots';\n        prev.output += value;\n        prev.value += value;\n        brace.dots = true;\n        continue;\n      }\n      if (state.braces + state.parens === 0 && prev.type !== 'bos' && prev.type !== 'slash') {\n        push({\n          type: 'text',\n          value,\n          output: DOT_LITERAL\n        });\n        continue;\n      }\n      push({\n        type: 'dot',\n        value,\n        output: DOT_LITERAL\n      });\n      continue;\n    }\n\n    /**\n     * Question marks\n     */\n\n    if (value === '?') {\n      const isGroup = prev && prev.value === '(';\n      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('qmark', value);\n        continue;\n      }\n      if (prev && prev.type === 'paren') {\n        const next = peek();\n        let output = value;\n        if (next === '<' && !utils$1.supportsLookbehinds()) {\n          throw new Error('Node.js v10 or higher is required for regex lookbehinds');\n        }\n        if (prev.value === '(' && !/[!=<:]/.test(next) || next === '<' && !/<([!=]|\\w+>)/.test(remaining())) {\n          output = `\\\\${value}`;\n        }\n        push({\n          type: 'text',\n          value,\n          output\n        });\n        continue;\n      }\n      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {\n        push({\n          type: 'qmark',\n          value,\n          output: QMARK_NO_DOT\n        });\n        continue;\n      }\n      push({\n        type: 'qmark',\n        value,\n        output: QMARK\n      });\n      continue;\n    }\n\n    /**\n     * Exclamation\n     */\n\n    if (value === '!') {\n      if (opts.noextglob !== true && peek() === '(') {\n        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {\n          extglobOpen('negate', value);\n          continue;\n        }\n      }\n      if (opts.nonegate !== true && state.index === 0) {\n        negate();\n        continue;\n      }\n    }\n\n    /**\n     * Plus\n     */\n\n    if (value === '+') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('plus', value);\n        continue;\n      }\n      if (prev && prev.value === '(' || opts.regex === false) {\n        push({\n          type: 'plus',\n          value,\n          output: PLUS_LITERAL\n        });\n        continue;\n      }\n      if (prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace') || state.parens > 0) {\n        push({\n          type: 'plus',\n          value\n        });\n        continue;\n      }\n      push({\n        type: 'plus',\n        value: PLUS_LITERAL\n      });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value === '@') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        push({\n          type: 'at',\n          extglob: true,\n          value,\n          output: ''\n        });\n        continue;\n      }\n      push({\n        type: 'text',\n        value\n      });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value !== '*') {\n      if (value === '$' || value === '^') {\n        value = `\\\\${value}`;\n      }\n      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());\n      if (match) {\n        value += match[0];\n        state.index += match[0].length;\n      }\n      push({\n        type: 'text',\n        value\n      });\n      continue;\n    }\n\n    /**\n     * Stars\n     */\n\n    if (prev && (prev.type === 'globstar' || prev.star === true)) {\n      prev.type = 'star';\n      prev.star = true;\n      prev.value += value;\n      prev.output = star;\n      state.backtrack = true;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n    let rest = remaining();\n    if (opts.noextglob !== true && /^\\([^?]/.test(rest)) {\n      extglobOpen('star', value);\n      continue;\n    }\n    if (prev.type === 'star') {\n      if (opts.noglobstar === true) {\n        consume(value);\n        continue;\n      }\n      const prior = prev.prev;\n      const before = prior.prev;\n      const isStart = prior.type === 'slash' || prior.type === 'bos';\n      const afterStar = before && (before.type === 'star' || before.type === 'globstar');\n      if (opts.bash === true && (!isStart || rest[0] && rest[0] !== '/')) {\n        push({\n          type: 'star',\n          value,\n          output: ''\n        });\n        continue;\n      }\n      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');\n      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');\n      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {\n        push({\n          type: 'star',\n          value,\n          output: ''\n        });\n        continue;\n      }\n\n      // strip consecutive `/**/`\n      while (rest.slice(0, 3) === '/**') {\n        const after = input[state.index + 4];\n        if (after && after !== '/') {\n          break;\n        }\n        rest = rest.slice(3);\n        consume('/**', 3);\n      }\n      if (prior.type === 'bos' && eos()) {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = globstar(opts);\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value);\n        continue;\n      }\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n        prev.type = 'globstar';\n        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');\n        prev.value += value;\n        state.globstar = true;\n        state.output += prior.output + prev.output;\n        consume(value);\n        continue;\n      }\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {\n        const end = rest[1] !== void 0 ? '|$' : '';\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n        prev.type = 'globstar';\n        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;\n        prev.value += value;\n        state.output += prior.output + prev.output;\n        state.globstar = true;\n        consume(value + advance());\n        push({\n          type: 'slash',\n          value: '/',\n          output: ''\n        });\n        continue;\n      }\n      if (prior.type === 'bos' && rest[0] === '/') {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value + advance());\n        push({\n          type: 'slash',\n          value: '/',\n          output: ''\n        });\n        continue;\n      }\n\n      // remove single star from output\n      state.output = state.output.slice(0, -prev.output.length);\n\n      // reset previous token to globstar\n      prev.type = 'globstar';\n      prev.output = globstar(opts);\n      prev.value += value;\n\n      // reset output with globstar\n      state.output += prev.output;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n    const token = {\n      type: 'star',\n      value,\n      output: star\n    };\n    if (opts.bash === true) {\n      token.output = '.*?';\n      if (prev.type === 'bos' || prev.type === 'slash') {\n        token.output = nodot + token.output;\n      }\n      push(token);\n      continue;\n    }\n    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {\n      token.output = value;\n      push(token);\n      continue;\n    }\n    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {\n      if (prev.type === 'dot') {\n        state.output += NO_DOT_SLASH;\n        prev.output += NO_DOT_SLASH;\n      } else if (opts.dot === true) {\n        state.output += NO_DOTS_SLASH;\n        prev.output += NO_DOTS_SLASH;\n      } else {\n        state.output += nodot;\n        prev.output += nodot;\n      }\n      if (peek() !== '*') {\n        state.output += ONE_CHAR;\n        prev.output += ONE_CHAR;\n      }\n    }\n    push(token);\n  }\n  while (state.brackets > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ']'));\n    state.output = utils$1.escapeLast(state.output, '[');\n    decrement('brackets');\n  }\n  while (state.parens > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ')'));\n    state.output = utils$1.escapeLast(state.output, '(');\n    decrement('parens');\n  }\n  while (state.braces > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', '}'));\n    state.output = utils$1.escapeLast(state.output, '{');\n    decrement('braces');\n  }\n  if (opts.strictSlashes !== true && (prev.type === 'star' || prev.type === 'bracket')) {\n    push({\n      type: 'maybe_slash',\n      value: '',\n      output: `${SLASH_LITERAL}?`\n    });\n  }\n\n  // rebuild the output if we had to backtrack at any point\n  if (state.backtrack === true) {\n    state.output = '';\n    for (const token of state.tokens) {\n      state.output += token.output != null ? token.output : token.value;\n      if (token.suffix) {\n        state.output += token.suffix;\n      }\n    }\n  }\n  return state;\n};\n\n/**\n * Fast paths for creating regular expressions for common glob patterns.\n * This can significantly speed up processing and has very little downside\n * impact when none of the fast paths match.\n */\n\nparse$2.fastpaths = (input, options) => {\n  const opts = {\n    ...options\n  };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  const len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n  input = REPLACEMENTS[input] || input;\n  const win32 = utils$1.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const {\n    DOT_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOTS,\n    NO_DOTS_SLASH,\n    STAR,\n    START_ANCHOR\n  } = constants$1.globChars(win32);\n  const nodot = opts.dot ? NO_DOTS : NO_DOT;\n  const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;\n  const capture = opts.capture ? '' : '?:';\n  const state = {\n    negated: false,\n    prefix: ''\n  };\n  let star = opts.bash === true ? '.*?' : STAR;\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n  const globstar = opts => {\n    if (opts.noglobstar === true) return star;\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n  const create = str => {\n    switch (str) {\n      case '*':\n        return `${nodot}${ONE_CHAR}${star}`;\n      case '.*':\n        return `${DOT_LITERAL}${ONE_CHAR}${star}`;\n      case '*.*':\n        return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n      case '*/*':\n        return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;\n      case '**':\n        return nodot + globstar(opts);\n      case '**/*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;\n      case '**/*.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n      case '**/.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;\n      default:\n        {\n          const match = /^(.*?)\\.(\\w+)$/.exec(str);\n          if (!match) return;\n          const source = create(match[1]);\n          if (!source) return;\n          return source + DOT_LITERAL + match[2];\n        }\n    }\n  };\n  const output = utils$1.removePrefix(input, state);\n  let source = create(output);\n  if (source && opts.strictSlashes !== true) {\n    source += `${SLASH_LITERAL}?`;\n  }\n  return source;\n};\nvar parse_1 = parse$2;\nconst path = require$$0$1;\nconst scan = scan_1;\nconst parse$1 = parse_1;\nconst utils = utils$3;\nconst constants = constants$2;\nconst isObject = val => val && typeof val === 'object' && !Array.isArray(val);\n\n/**\n * Creates a matcher function from one or more glob patterns. The\n * returned function takes a string to match as its first argument,\n * and returns true if the string is a match. The returned matcher\n * function also takes a boolean as the second argument that, when true,\n * returns an object with additional information.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch(glob[, options]);\n *\n * const isMatch = picomatch('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @name picomatch\n * @param {String|Array} `globs` One or more glob patterns.\n * @param {Object=} `options`\n * @return {Function=} Returns a matcher function.\n * @api public\n */\n\nconst picomatch = function (glob, options) {\n  let returnState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  if (Array.isArray(glob)) {\n    const fns = glob.map(input => picomatch(input, options, returnState));\n    const arrayMatcher = str => {\n      for (const isMatch of fns) {\n        const state = isMatch(str);\n        if (state) return state;\n      }\n      return false;\n    };\n    return arrayMatcher;\n  }\n  const isState = isObject(glob) && glob.tokens && glob.input;\n  if (glob === '' || typeof glob !== 'string' && !isState) {\n    throw new TypeError('Expected pattern to be a non-empty string');\n  }\n  const opts = options || {};\n  const posix = utils.isWindows(options);\n  const regex = isState ? picomatch.compileRe(glob, options) : picomatch.makeRe(glob, options, false, true);\n  const state = regex.state;\n  delete regex.state;\n  let isIgnored = () => false;\n  if (opts.ignore) {\n    const ignoreOpts = {\n      ...options,\n      ignore: null,\n      onMatch: null,\n      onResult: null\n    };\n    isIgnored = picomatch(opts.ignore, ignoreOpts, returnState);\n  }\n  const matcher = function (input) {\n    let returnObject = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const {\n      isMatch,\n      match,\n      output\n    } = picomatch.test(input, regex, options, {\n      glob,\n      posix\n    });\n    const result = {\n      glob,\n      state,\n      regex,\n      posix,\n      input,\n      output,\n      match,\n      isMatch\n    };\n    if (typeof opts.onResult === 'function') {\n      opts.onResult(result);\n    }\n    if (isMatch === false) {\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n    if (isIgnored(input)) {\n      if (typeof opts.onIgnore === 'function') {\n        opts.onIgnore(result);\n      }\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n    if (typeof opts.onMatch === 'function') {\n      opts.onMatch(result);\n    }\n    return returnObject ? result : true;\n  };\n  if (returnState) {\n    matcher.state = state;\n  }\n  return matcher;\n};\n\n/**\n * Test `input` with the given `regex`. This is used by the main\n * `picomatch()` function to test the input string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.test(input, regex[, options]);\n *\n * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\n * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp} `regex`\n * @return {Object} Returns an object with matching info.\n * @api public\n */\n\npicomatch.test = function (input, regex, options) {\n  let {\n    glob,\n    posix\n  } = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected input to be a string');\n  }\n  if (input === '') {\n    return {\n      isMatch: false,\n      output: ''\n    };\n  }\n  const opts = options || {};\n  const format = opts.format || (posix ? utils.toPosixSlashes : null);\n  let match = input === glob;\n  let output = match && format ? format(input) : input;\n  if (match === false) {\n    output = format ? format(input) : input;\n    match = output === glob;\n  }\n  if (match === false || opts.capture === true) {\n    if (opts.matchBase === true || opts.basename === true) {\n      match = picomatch.matchBase(input, regex, options, posix);\n    } else {\n      match = regex.exec(output);\n    }\n  }\n  return {\n    isMatch: Boolean(match),\n    match,\n    output\n  };\n};\n\n/**\n * Match the basename of a filepath.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.matchBase(input, glob[, options]);\n * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).\n * @return {Boolean}\n * @api public\n */\n\npicomatch.matchBase = function (input, glob, options) {\n  let posix = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : utils.isWindows(options);\n  const regex = glob instanceof RegExp ? glob : picomatch.makeRe(glob, options);\n  return regex.test(path.basename(input));\n};\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.isMatch(string, patterns[, options]);\n *\n * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String|Array} str The string to test.\n * @param {String|Array} patterns One or more glob patterns to use for matching.\n * @param {Object} [options] See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\npicomatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const result = picomatch.parse(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as a regex source string.\n * @api public\n */\n\npicomatch.parse = (pattern, options) => {\n  if (Array.isArray(pattern)) return pattern.map(p => picomatch.parse(p, options));\n  return parse$1(pattern, {\n    ...options,\n    fastpaths: false\n  });\n};\n\n/**\n * Scan a glob pattern to separate the pattern into segments.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.scan(input[, options]);\n *\n * const result = picomatch.scan('!./foo/*.js');\n * console.log(result);\n * { prefix: '!./',\n *   input: '!./foo/*.js',\n *   start: 3,\n *   base: 'foo',\n *   glob: '*.js',\n *   isBrace: false,\n *   isBracket: false,\n *   isGlob: true,\n *   isExtglob: false,\n *   isGlobstar: false,\n *   negated: true }\n * ```\n * @param {String} `input` Glob pattern to scan.\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\npicomatch.scan = (input, options) => scan(input, options);\n\n/**\n * Compile a regular expression from the `state` object returned by the\n * [parse()](#parse) method.\n *\n * @param {Object} `state`\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Intended for implementors, this argument allows you to return the raw output from the parser.\n * @param {Boolean} `returnState` Adds the state to a `state` property on the returned regex. Useful for implementors and debugging.\n * @return {RegExp}\n * @api public\n */\n\npicomatch.compileRe = function (state, options) {\n  let returnOutput = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  let returnState = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  if (returnOutput === true) {\n    return state.output;\n  }\n  const opts = options || {};\n  const prepend = opts.contains ? '' : '^';\n  const append = opts.contains ? '' : '$';\n  let source = `${prepend}(?:${state.output})${append}`;\n  if (state && state.negated === true) {\n    source = `^(?!${source}).*$`;\n  }\n  const regex = picomatch.toRegex(source, options);\n  if (returnState === true) {\n    regex.state = state;\n  }\n  return regex;\n};\n\n/**\n * Create a regular expression from a parsed glob pattern.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const state = picomatch.parse('*.js');\n * // picomatch.compileRe(state[, options]);\n *\n * console.log(picomatch.compileRe(state));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `state` The object returned from the `.parse` method.\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result.\n * @param {Boolean} `returnState` Implementors may use this argument to return the state from the parsed glob with the returned regular expression.\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\npicomatch.makeRe = function (input) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let returnOutput = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  let returnState = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  if (!input || typeof input !== 'string') {\n    throw new TypeError('Expected a non-empty string');\n  }\n  let parsed = {\n    negated: false,\n    fastpaths: true\n  };\n  if (options.fastpaths !== false && (input[0] === '.' || input[0] === '*')) {\n    parsed.output = parse$1.fastpaths(input, options);\n  }\n  if (!parsed.output) {\n    parsed = parse$1(input, options);\n  }\n  return picomatch.compileRe(parsed, options, returnOutput, returnState);\n};\n\n/**\n * Create a regular expression from the given regex source string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.toRegex(source[, options]);\n *\n * const { output } = picomatch.parse('*.js');\n * console.log(picomatch.toRegex(output));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `source` Regular expression source string.\n * @param {Object} `options`\n * @return {RegExp}\n * @api public\n */\n\npicomatch.toRegex = (source, options) => {\n  try {\n    const opts = options || {};\n    return new RegExp(source, opts.flags || (opts.nocase ? 'i' : ''));\n  } catch (err) {\n    if (options && options.debug === true) throw err;\n    return /$^/;\n  }\n};\n\n/**\n * Picomatch constants.\n * @return {Object}\n */\n\npicomatch.constants = constants;\n\n/**\n * Expose \"picomatch\"\n */\n\nvar picomatch_1 = picomatch;\n(function (module) {\n  module.exports = picomatch_1;\n})(picomatch$1);\nconst pm = /*@__PURE__*/getDefaultExportFromCjs(picomatchExports);\nconst extractors = {\n  ArrayPattern(names, param) {\n    for (const element of param.elements) {\n      if (element) extractors[element.type](names, element);\n    }\n  },\n  AssignmentPattern(names, param) {\n    extractors[param.left.type](names, param.left);\n  },\n  Identifier(names, param) {\n    names.push(param.name);\n  },\n  MemberExpression() {},\n  ObjectPattern(names, param) {\n    for (const prop of param.properties) {\n      // @ts-ignore Typescript reports that this is not a valid type\n      if (prop.type === 'RestElement') {\n        extractors.RestElement(names, prop);\n      } else {\n        extractors[prop.value.type](names, prop.value);\n      }\n    }\n  },\n  RestElement(names, param) {\n    extractors[param.argument.type](names, param.argument);\n  }\n};\nconst extractAssignedNames = function extractAssignedNames(param) {\n  const names = [];\n  extractors[param.type](names, param);\n  return names;\n};\n\n// Helper since Typescript can't detect readonly arrays with Array.isArray\nfunction isArray$1(arg) {\n  return Array.isArray(arg);\n}\nfunction ensureArray$1(thing) {\n  if (isArray$1(thing)) return thing;\n  if (thing == null) return [];\n  return [thing];\n}\nconst normalizePath = function normalizePath(filename) {\n  return filename.split(win32.sep).join(posix.sep);\n};\nfunction getMatcherString(id, resolutionBase) {\n  if (resolutionBase === false || isAbsolute$1(id) || id.startsWith('*')) {\n    return normalizePath(id);\n  }\n  // resolve('') is valid and will default to process.cwd()\n  const basePath = normalizePath(resolve$1(resolutionBase || ''))\n  // escape all possible (posix + win) path characters that might interfere with regex\n  .replace(/[-^$*+?.()|[\\]{}]/g, '\\\\$&');\n  // Note that we use posix.join because:\n  // 1. the basePath has been normalized to use /\n  // 2. the incoming glob (id) matcher, also uses /\n  // otherwise Node will force backslash (\\) on windows\n  return posix.join(basePath, normalizePath(id));\n}\nconst createFilter = function createFilter(include, exclude, options) {\n  const resolutionBase = options && options.resolve;\n  const getMatcher = id => id instanceof RegExp ? id : {\n    test: what => {\n      // this refactor is a tad overly verbose but makes for easy debugging\n      const pattern = getMatcherString(id, resolutionBase);\n      const fn = pm(pattern, {\n        dot: true\n      });\n      const result = fn(what);\n      return result;\n    }\n  };\n  const includeMatchers = ensureArray$1(include).map(getMatcher);\n  const excludeMatchers = ensureArray$1(exclude).map(getMatcher);\n  return function result(id) {\n    if (typeof id !== 'string') return false;\n    if (/\\0/.test(id)) return false;\n    const pathId = normalizePath(id);\n    for (let i = 0; i < excludeMatchers.length; ++i) {\n      const matcher = excludeMatchers[i];\n      if (matcher.test(pathId)) return false;\n    }\n    for (let i = 0; i < includeMatchers.length; ++i) {\n      const matcher = includeMatchers[i];\n      if (matcher.test(pathId)) return true;\n    }\n    return !includeMatchers.length;\n  };\n};\nconst reservedWords$1 = 'break case class catch const continue debugger default delete do else export extends finally for function if import in instanceof let new return super switch this throw try typeof var void while with yield enum await implements package protected static interface private public';\nconst builtins = 'arguments Infinity NaN undefined null true false eval uneval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape Object Function Boolean Symbol Error EvalError InternalError RangeError ReferenceError SyntaxError TypeError URIError Number Math Date String RegExp Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array Map Set WeakMap WeakSet SIMD ArrayBuffer DataView JSON Promise Generator GeneratorFunction Reflect Proxy Intl';\nconst forbiddenIdentifiers = new Set(`${reservedWords$1} ${builtins}`.split(' '));\nforbiddenIdentifiers.add('');\nconst BROKEN_FLOW_NONE = 0;\nconst BROKEN_FLOW_BREAK_CONTINUE = 1;\nconst BROKEN_FLOW_ERROR_RETURN_LABEL = 2;\nfunction createInclusionContext() {\n  return {\n    brokenFlow: BROKEN_FLOW_NONE,\n    includedCallArguments: new Set(),\n    includedLabels: new Set()\n  };\n}\nfunction createHasEffectsContext() {\n  return {\n    accessed: new PathTracker(),\n    assigned: new PathTracker(),\n    brokenFlow: BROKEN_FLOW_NONE,\n    called: new DiscriminatedPathTracker(),\n    ignore: {\n      breaks: false,\n      continues: false,\n      labels: new Set(),\n      returnYield: false,\n      this: false\n    },\n    includedLabels: new Set(),\n    instantiated: new DiscriminatedPathTracker(),\n    replacedVariableInits: new Map()\n  };\n}\nfunction assembleMemberDescriptions(memberDescriptions) {\n  let inheritedDescriptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return Object.create(inheritedDescriptions, memberDescriptions);\n}\nconst UNDEFINED_EXPRESSION = new class UndefinedExpression extends ExpressionEntity {\n  getLiteralValueAtPath() {\n    return undefined;\n  }\n}();\nconst returnsUnknown = {\n  value: {\n    hasEffectsWhenCalled: null,\n    returns: UNKNOWN_EXPRESSION\n  }\n};\nconst UNKNOWN_LITERAL_BOOLEAN = new class UnknownBoolean extends ExpressionEntity {\n  getReturnExpressionWhenCalledAtPath(path) {\n    if (path.length === 1) {\n      return getMemberReturnExpressionWhenCalled(literalBooleanMembers, path[0]);\n    }\n    return UNKNOWN_RETURN_EXPRESSION;\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    if (interaction.type === INTERACTION_ACCESSED) {\n      return path.length > 1;\n    }\n    if (interaction.type === INTERACTION_CALLED && path.length === 1) {\n      return hasMemberEffectWhenCalled(literalBooleanMembers, path[0], interaction, context);\n    }\n    return true;\n  }\n}();\nconst returnsBoolean = {\n  value: {\n    hasEffectsWhenCalled: null,\n    returns: UNKNOWN_LITERAL_BOOLEAN\n  }\n};\nconst UNKNOWN_LITERAL_NUMBER = new class UnknownNumber extends ExpressionEntity {\n  getReturnExpressionWhenCalledAtPath(path) {\n    if (path.length === 1) {\n      return getMemberReturnExpressionWhenCalled(literalNumberMembers, path[0]);\n    }\n    return UNKNOWN_RETURN_EXPRESSION;\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    if (interaction.type === INTERACTION_ACCESSED) {\n      return path.length > 1;\n    }\n    if (interaction.type === INTERACTION_CALLED && path.length === 1) {\n      return hasMemberEffectWhenCalled(literalNumberMembers, path[0], interaction, context);\n    }\n    return true;\n  }\n}();\nconst returnsNumber = {\n  value: {\n    hasEffectsWhenCalled: null,\n    returns: UNKNOWN_LITERAL_NUMBER\n  }\n};\nconst UNKNOWN_LITERAL_STRING = new class UnknownString extends ExpressionEntity {\n  getReturnExpressionWhenCalledAtPath(path) {\n    if (path.length === 1) {\n      return getMemberReturnExpressionWhenCalled(literalStringMembers, path[0]);\n    }\n    return UNKNOWN_RETURN_EXPRESSION;\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    if (interaction.type === INTERACTION_ACCESSED) {\n      return path.length > 1;\n    }\n    if (interaction.type === INTERACTION_CALLED && path.length === 1) {\n      return hasMemberEffectWhenCalled(literalStringMembers, path[0], interaction, context);\n    }\n    return true;\n  }\n}();\nconst returnsString = {\n  value: {\n    hasEffectsWhenCalled: null,\n    returns: UNKNOWN_LITERAL_STRING\n  }\n};\nconst stringReplace = {\n  value: {\n    hasEffectsWhenCalled(_ref10, context) {\n      let {\n        args\n      } = _ref10;\n      const argument1 = args[1];\n      return args.length < 2 || typeof argument1.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, {\n        deoptimizeCache() {}\n      }) === 'symbol' && argument1.hasEffectsOnInteractionAtPath(EMPTY_PATH, NODE_INTERACTION_UNKNOWN_CALL, context);\n    },\n    returns: UNKNOWN_LITERAL_STRING\n  }\n};\nconst objectMembers = assembleMemberDescriptions({\n  hasOwnProperty: returnsBoolean,\n  isPrototypeOf: returnsBoolean,\n  propertyIsEnumerable: returnsBoolean,\n  toLocaleString: returnsString,\n  toString: returnsString,\n  valueOf: returnsUnknown\n});\nconst literalBooleanMembers = assembleMemberDescriptions({\n  valueOf: returnsBoolean\n}, objectMembers);\nconst literalNumberMembers = assembleMemberDescriptions({\n  toExponential: returnsString,\n  toFixed: returnsString,\n  toLocaleString: returnsString,\n  toPrecision: returnsString,\n  valueOf: returnsNumber\n}, objectMembers);\n/**\n * RegExp are stateful when they have the global or sticky flags set.\n * But if we actually don't use them, the side effect does not matter.\n * the check logic in `hasEffectsOnInteractionAtPath`.\n */\nconst literalRegExpMembers = assembleMemberDescriptions({\n  exec: returnsUnknown,\n  test: returnsBoolean\n}, objectMembers);\nconst literalStringMembers = assembleMemberDescriptions({\n  anchor: returnsString,\n  at: returnsUnknown,\n  big: returnsString,\n  blink: returnsString,\n  bold: returnsString,\n  charAt: returnsString,\n  charCodeAt: returnsNumber,\n  codePointAt: returnsUnknown,\n  concat: returnsString,\n  endsWith: returnsBoolean,\n  fixed: returnsString,\n  fontcolor: returnsString,\n  fontsize: returnsString,\n  includes: returnsBoolean,\n  indexOf: returnsNumber,\n  italics: returnsString,\n  lastIndexOf: returnsNumber,\n  link: returnsString,\n  localeCompare: returnsNumber,\n  match: returnsUnknown,\n  matchAll: returnsUnknown,\n  normalize: returnsString,\n  padEnd: returnsString,\n  padStart: returnsString,\n  repeat: returnsString,\n  replace: stringReplace,\n  replaceAll: stringReplace,\n  search: returnsNumber,\n  slice: returnsString,\n  small: returnsString,\n  split: returnsUnknown,\n  startsWith: returnsBoolean,\n  strike: returnsString,\n  sub: returnsString,\n  substr: returnsString,\n  substring: returnsString,\n  sup: returnsString,\n  toLocaleLowerCase: returnsString,\n  toLocaleUpperCase: returnsString,\n  toLowerCase: returnsString,\n  toString: returnsString,\n  toUpperCase: returnsString,\n  trim: returnsString,\n  trimEnd: returnsString,\n  trimLeft: returnsString,\n  trimRight: returnsString,\n  trimStart: returnsString,\n  valueOf: returnsString\n}, objectMembers);\nfunction getLiteralMembersForValue(value) {\n  if (value instanceof RegExp) {\n    return literalRegExpMembers;\n  }\n  switch (typeof value) {\n    case 'boolean':\n      {\n        return literalBooleanMembers;\n      }\n    case 'number':\n      {\n        return literalNumberMembers;\n      }\n    case 'string':\n      {\n        return literalStringMembers;\n      }\n  }\n  return Object.create(null);\n}\nfunction hasMemberEffectWhenCalled(members, memberName, interaction, context) {\n  if (typeof memberName !== 'string' || !members[memberName]) {\n    return true;\n  }\n  return members[memberName].hasEffectsWhenCalled?.(interaction, context) || false;\n}\nfunction getMemberReturnExpressionWhenCalled(members, memberName) {\n  if (typeof memberName !== 'string' || !members[memberName]) return UNKNOWN_RETURN_EXPRESSION;\n  return [members[memberName].returns, false];\n}\n\n// AST walker module for Mozilla Parser API compatible trees\n\nfunction skipThrough(node, st, c) {\n  c(node, st);\n}\nfunction ignore(_node, _st, _c) {}\n\n// Node walkers.\n\nvar base$1 = {};\nbase$1.Program = base$1.BlockStatement = base$1.StaticBlock = function (node, st, c) {\n  for (var i = 0, list = node.body; i < list.length; i += 1) {\n    var stmt = list[i];\n    c(stmt, st, \"Statement\");\n  }\n};\nbase$1.Statement = skipThrough;\nbase$1.EmptyStatement = ignore;\nbase$1.ExpressionStatement = base$1.ParenthesizedExpression = base$1.ChainExpression = function (node, st, c) {\n  return c(node.expression, st, \"Expression\");\n};\nbase$1.IfStatement = function (node, st, c) {\n  c(node.test, st, \"Expression\");\n  c(node.consequent, st, \"Statement\");\n  if (node.alternate) {\n    c(node.alternate, st, \"Statement\");\n  }\n};\nbase$1.LabeledStatement = function (node, st, c) {\n  return c(node.body, st, \"Statement\");\n};\nbase$1.BreakStatement = base$1.ContinueStatement = ignore;\nbase$1.WithStatement = function (node, st, c) {\n  c(node.object, st, \"Expression\");\n  c(node.body, st, \"Statement\");\n};\nbase$1.SwitchStatement = function (node, st, c) {\n  c(node.discriminant, st, \"Expression\");\n  for (var i$1 = 0, list$1 = node.cases; i$1 < list$1.length; i$1 += 1) {\n    var cs = list$1[i$1];\n    if (cs.test) {\n      c(cs.test, st, \"Expression\");\n    }\n    for (var i = 0, list = cs.consequent; i < list.length; i += 1) {\n      var cons = list[i];\n      c(cons, st, \"Statement\");\n    }\n  }\n};\nbase$1.SwitchCase = function (node, st, c) {\n  if (node.test) {\n    c(node.test, st, \"Expression\");\n  }\n  for (var i = 0, list = node.consequent; i < list.length; i += 1) {\n    var cons = list[i];\n    c(cons, st, \"Statement\");\n  }\n};\nbase$1.ReturnStatement = base$1.YieldExpression = base$1.AwaitExpression = function (node, st, c) {\n  if (node.argument) {\n    c(node.argument, st, \"Expression\");\n  }\n};\nbase$1.ThrowStatement = base$1.SpreadElement = function (node, st, c) {\n  return c(node.argument, st, \"Expression\");\n};\nbase$1.TryStatement = function (node, st, c) {\n  c(node.block, st, \"Statement\");\n  if (node.handler) {\n    c(node.handler, st);\n  }\n  if (node.finalizer) {\n    c(node.finalizer, st, \"Statement\");\n  }\n};\nbase$1.CatchClause = function (node, st, c) {\n  if (node.param) {\n    c(node.param, st, \"Pattern\");\n  }\n  c(node.body, st, \"Statement\");\n};\nbase$1.WhileStatement = base$1.DoWhileStatement = function (node, st, c) {\n  c(node.test, st, \"Expression\");\n  c(node.body, st, \"Statement\");\n};\nbase$1.ForStatement = function (node, st, c) {\n  if (node.init) {\n    c(node.init, st, \"ForInit\");\n  }\n  if (node.test) {\n    c(node.test, st, \"Expression\");\n  }\n  if (node.update) {\n    c(node.update, st, \"Expression\");\n  }\n  c(node.body, st, \"Statement\");\n};\nbase$1.ForInStatement = base$1.ForOfStatement = function (node, st, c) {\n  c(node.left, st, \"ForInit\");\n  c(node.right, st, \"Expression\");\n  c(node.body, st, \"Statement\");\n};\nbase$1.ForInit = function (node, st, c) {\n  if (node.type === \"VariableDeclaration\") {\n    c(node, st);\n  } else {\n    c(node, st, \"Expression\");\n  }\n};\nbase$1.DebuggerStatement = ignore;\nbase$1.FunctionDeclaration = function (node, st, c) {\n  return c(node, st, \"Function\");\n};\nbase$1.VariableDeclaration = function (node, st, c) {\n  for (var i = 0, list = node.declarations; i < list.length; i += 1) {\n    var decl = list[i];\n    c(decl, st);\n  }\n};\nbase$1.VariableDeclarator = function (node, st, c) {\n  c(node.id, st, \"Pattern\");\n  if (node.init) {\n    c(node.init, st, \"Expression\");\n  }\n};\nbase$1.Function = function (node, st, c) {\n  if (node.id) {\n    c(node.id, st, \"Pattern\");\n  }\n  for (var i = 0, list = node.params; i < list.length; i += 1) {\n    var param = list[i];\n    c(param, st, \"Pattern\");\n  }\n  c(node.body, st, node.expression ? \"Expression\" : \"Statement\");\n};\nbase$1.Pattern = function (node, st, c) {\n  if (node.type === \"Identifier\") {\n    c(node, st, \"VariablePattern\");\n  } else if (node.type === \"MemberExpression\") {\n    c(node, st, \"MemberPattern\");\n  } else {\n    c(node, st);\n  }\n};\nbase$1.VariablePattern = ignore;\nbase$1.MemberPattern = skipThrough;\nbase$1.RestElement = function (node, st, c) {\n  return c(node.argument, st, \"Pattern\");\n};\nbase$1.ArrayPattern = function (node, st, c) {\n  for (var i = 0, list = node.elements; i < list.length; i += 1) {\n    var elt = list[i];\n    if (elt) {\n      c(elt, st, \"Pattern\");\n    }\n  }\n};\nbase$1.ObjectPattern = function (node, st, c) {\n  for (var i = 0, list = node.properties; i < list.length; i += 1) {\n    var prop = list[i];\n    if (prop.type === \"Property\") {\n      if (prop.computed) {\n        c(prop.key, st, \"Expression\");\n      }\n      c(prop.value, st, \"Pattern\");\n    } else if (prop.type === \"RestElement\") {\n      c(prop.argument, st, \"Pattern\");\n    }\n  }\n};\nbase$1.Expression = skipThrough;\nbase$1.ThisExpression = base$1.Super = base$1.MetaProperty = ignore;\nbase$1.ArrayExpression = function (node, st, c) {\n  for (var i = 0, list = node.elements; i < list.length; i += 1) {\n    var elt = list[i];\n    if (elt) {\n      c(elt, st, \"Expression\");\n    }\n  }\n};\nbase$1.ObjectExpression = function (node, st, c) {\n  for (var i = 0, list = node.properties; i < list.length; i += 1) {\n    var prop = list[i];\n    c(prop, st);\n  }\n};\nbase$1.FunctionExpression = base$1.ArrowFunctionExpression = base$1.FunctionDeclaration;\nbase$1.SequenceExpression = function (node, st, c) {\n  for (var i = 0, list = node.expressions; i < list.length; i += 1) {\n    var expr = list[i];\n    c(expr, st, \"Expression\");\n  }\n};\nbase$1.TemplateLiteral = function (node, st, c) {\n  for (var i = 0, list = node.quasis; i < list.length; i += 1) {\n    var quasi = list[i];\n    c(quasi, st);\n  }\n  for (var i$1 = 0, list$1 = node.expressions; i$1 < list$1.length; i$1 += 1) {\n    var expr = list$1[i$1];\n    c(expr, st, \"Expression\");\n  }\n};\nbase$1.TemplateElement = ignore;\nbase$1.UnaryExpression = base$1.UpdateExpression = function (node, st, c) {\n  c(node.argument, st, \"Expression\");\n};\nbase$1.BinaryExpression = base$1.LogicalExpression = function (node, st, c) {\n  c(node.left, st, \"Expression\");\n  c(node.right, st, \"Expression\");\n};\nbase$1.AssignmentExpression = base$1.AssignmentPattern = function (node, st, c) {\n  c(node.left, st, \"Pattern\");\n  c(node.right, st, \"Expression\");\n};\nbase$1.ConditionalExpression = function (node, st, c) {\n  c(node.test, st, \"Expression\");\n  c(node.consequent, st, \"Expression\");\n  c(node.alternate, st, \"Expression\");\n};\nbase$1.NewExpression = base$1.CallExpression = function (node, st, c) {\n  c(node.callee, st, \"Expression\");\n  if (node.arguments) {\n    for (var i = 0, list = node.arguments; i < list.length; i += 1) {\n      var arg = list[i];\n      c(arg, st, \"Expression\");\n    }\n  }\n};\nbase$1.MemberExpression = function (node, st, c) {\n  c(node.object, st, \"Expression\");\n  if (node.computed) {\n    c(node.property, st, \"Expression\");\n  }\n};\nbase$1.ExportNamedDeclaration = base$1.ExportDefaultDeclaration = function (node, st, c) {\n  if (node.declaration) {\n    c(node.declaration, st, node.type === \"ExportNamedDeclaration\" || node.declaration.id ? \"Statement\" : \"Expression\");\n  }\n  if (node.source) {\n    c(node.source, st, \"Expression\");\n  }\n};\nbase$1.ExportAllDeclaration = function (node, st, c) {\n  if (node.exported) {\n    c(node.exported, st);\n  }\n  c(node.source, st, \"Expression\");\n};\nbase$1.ImportDeclaration = function (node, st, c) {\n  for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n    var spec = list[i];\n    c(spec, st);\n  }\n  c(node.source, st, \"Expression\");\n};\nbase$1.ImportExpression = function (node, st, c) {\n  c(node.source, st, \"Expression\");\n};\nbase$1.ImportSpecifier = base$1.ImportDefaultSpecifier = base$1.ImportNamespaceSpecifier = base$1.Identifier = base$1.PrivateIdentifier = base$1.Literal = ignore;\nbase$1.TaggedTemplateExpression = function (node, st, c) {\n  c(node.tag, st, \"Expression\");\n  c(node.quasi, st, \"Expression\");\n};\nbase$1.ClassDeclaration = base$1.ClassExpression = function (node, st, c) {\n  return c(node, st, \"Class\");\n};\nbase$1.Class = function (node, st, c) {\n  if (node.id) {\n    c(node.id, st, \"Pattern\");\n  }\n  if (node.superClass) {\n    c(node.superClass, st, \"Expression\");\n  }\n  c(node.body, st);\n};\nbase$1.ClassBody = function (node, st, c) {\n  for (var i = 0, list = node.body; i < list.length; i += 1) {\n    var elt = list[i];\n    c(elt, st);\n  }\n};\nbase$1.MethodDefinition = base$1.PropertyDefinition = base$1.Property = function (node, st, c) {\n  if (node.computed) {\n    c(node.key, st, \"Expression\");\n  }\n  if (node.value) {\n    c(node.value, st, \"Expression\");\n  }\n};\nconst ArrowFunctionExpression$1 = 'ArrowFunctionExpression';\nconst BinaryExpression$1 = 'BinaryExpression';\nconst BlockStatement$1 = 'BlockStatement';\nconst CallExpression$1 = 'CallExpression';\nconst ChainExpression$1 = 'ChainExpression';\nconst ConditionalExpression$1 = 'ConditionalExpression';\nconst ExpressionStatement$1 = 'ExpressionStatement';\nconst Identifier$1 = 'Identifier';\nconst LogicalExpression$1 = 'LogicalExpression';\nconst NewExpression$1 = 'NewExpression';\nconst Program$1 = 'Program';\nconst Property$1 = 'Property';\nconst ReturnStatement$1 = 'ReturnStatement';\nconst SequenceExpression$1 = 'SequenceExpression';\n\n// this looks ridiculous, but it prevents sourcemap tooling from mistaking\n// this for an actual sourceMappingURL\nlet SOURCEMAPPING_URL = 'sourceMa';\nSOURCEMAPPING_URL += 'ppingURL';\nconst whiteSpaceNoNewline = '[ \\\\f\\\\r\\\\t\\\\v\\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]';\nconst SOURCEMAPPING_URL_RE = new RegExp(`^#${whiteSpaceNoNewline}+${SOURCEMAPPING_URL}=.+`);\nconst ANNOTATION_KEY = '_rollupAnnotations';\nconst INVALID_COMMENT_KEY = '_rollupRemoved';\nfunction handlePureAnnotationsOfNode(node, state) {\n  let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : node.type;\n  const {\n    annotations,\n    code\n  } = state;\n  // eslint-disable-next-line unicorn/consistent-destructuring\n  let comment = annotations[state.annotationIndex];\n  while (comment && node.start >= comment.end) {\n    markPureNode(node, comment, code);\n    comment = annotations[++state.annotationIndex];\n  }\n  if (comment && comment.end <= node.end) {\n    base$1[type](node, state, handlePureAnnotationsOfNode);\n    // eslint-disable-next-line unicorn/consistent-destructuring\n    while ((comment = annotations[state.annotationIndex]) && comment.end <= node.end) {\n      ++state.annotationIndex;\n      annotateNode(node, comment, false);\n    }\n  }\n}\nconst neitherWithespaceNorBrackets = /[^\\s(]/g;\nconst noWhitespace = /\\S/g;\nfunction markPureNode(node, comment, code) {\n  const annotatedNodes = [];\n  let invalidAnnotation;\n  const codeInBetween = code.slice(comment.end, node.start);\n  if (doesNotMatchOutsideComment(codeInBetween, neitherWithespaceNorBrackets)) {\n    const parentStart = node.start;\n    while (true) {\n      annotatedNodes.push(node);\n      switch (node.type) {\n        case ExpressionStatement$1:\n        case ChainExpression$1:\n          {\n            node = node.expression;\n            continue;\n          }\n        case SequenceExpression$1:\n          {\n            // if there are parentheses, the annotation would apply to the entire expression\n            if (doesNotMatchOutsideComment(code.slice(parentStart, node.start), noWhitespace)) {\n              node = node.expressions[0];\n              continue;\n            }\n            invalidAnnotation = true;\n            break;\n          }\n        case ConditionalExpression$1:\n          {\n            // if there are parentheses, the annotation would apply to the entire expression\n            if (doesNotMatchOutsideComment(code.slice(parentStart, node.start), noWhitespace)) {\n              node = node.test;\n              continue;\n            }\n            invalidAnnotation = true;\n            break;\n          }\n        case LogicalExpression$1:\n        case BinaryExpression$1:\n          {\n            // if there are parentheses, the annotation would apply to the entire expression\n            if (doesNotMatchOutsideComment(code.slice(parentStart, node.start), noWhitespace)) {\n              node = node.left;\n              continue;\n            }\n            invalidAnnotation = true;\n            break;\n          }\n        case CallExpression$1:\n        case NewExpression$1:\n          {\n            break;\n          }\n        default:\n          {\n            invalidAnnotation = true;\n          }\n      }\n      break;\n    }\n  } else {\n    invalidAnnotation = true;\n  }\n  if (invalidAnnotation) {\n    annotateNode(node, comment, false);\n  } else {\n    for (const node of annotatedNodes) {\n      annotateNode(node, comment, true);\n    }\n  }\n}\nfunction doesNotMatchOutsideComment(code, forbiddenChars) {\n  let nextMatch;\n  while ((nextMatch = forbiddenChars.exec(code)) !== null) {\n    if (nextMatch[0] === '/') {\n      const charCodeAfterSlash = code.charCodeAt(forbiddenChars.lastIndex);\n      if (charCodeAfterSlash === 42 /*\"*\"*/) {\n        forbiddenChars.lastIndex = code.indexOf('*/', forbiddenChars.lastIndex + 1) + 2;\n        continue;\n      } else if (charCodeAfterSlash === 47 /*\"/\"*/) {\n        forbiddenChars.lastIndex = code.indexOf('\\n', forbiddenChars.lastIndex + 1) + 1;\n        continue;\n      }\n    }\n    forbiddenChars.lastIndex = 0;\n    return false;\n  }\n  return true;\n}\nconst pureCommentRegex = /[#@]__PURE__/;\nfunction addAnnotations(comments, esTreeAst, code) {\n  const annotations = [];\n  const sourceMappingComments = [];\n  for (const comment of comments) {\n    if (pureCommentRegex.test(comment.value)) {\n      annotations.push(comment);\n    } else if (SOURCEMAPPING_URL_RE.test(comment.value)) {\n      sourceMappingComments.push(comment);\n    }\n  }\n  for (const comment of sourceMappingComments) {\n    annotateNode(esTreeAst, comment, false);\n  }\n  handlePureAnnotationsOfNode(esTreeAst, {\n    annotationIndex: 0,\n    annotations,\n    code\n  });\n}\nfunction annotateNode(node, comment, valid) {\n  const key = valid ? ANNOTATION_KEY : INVALID_COMMENT_KEY;\n  const property = node[key];\n  if (property) {\n    property.push(comment);\n  } else {\n    node[key] = [comment];\n  }\n}\nconst keys = {\n  // TODO this should be removed once ImportExpression follows official ESTree\n  //  specs with \"null\" as default\n  ImportExpression: ['arguments'],\n  Literal: [],\n  Program: ['body']\n};\nfunction getAndCreateKeys(esTreeNode) {\n  keys[esTreeNode.type] = Object.keys(esTreeNode).filter(key => typeof esTreeNode[key] === 'object' && key.charCodeAt(0) !== 95 /* _ */);\n  return keys[esTreeNode.type];\n}\nconst INCLUDE_PARAMETERS = 'variables';\nclass NodeBase extends ExpressionEntity {\n  constructor(esTreeNode, parent, parentScope) {\n    let keepEsTreeNode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    super();\n    /**\n     * Nodes can apply custom deoptimizations once they become part of the\n     * executed code. To do this, they must initialize this as false, implement\n     * applyDeoptimizations and call this from include and hasEffects if they have\n     * custom handlers\n     */\n    this.deoptimized = false;\n    // Nodes can opt-in to keep the AST if needed during the build pipeline.\n    // Avoid true when possible as large AST takes up memory.\n    this.esTreeNode = keepEsTreeNode ? esTreeNode : null;\n    this.keys = keys[esTreeNode.type] || getAndCreateKeys(esTreeNode);\n    this.parent = parent;\n    this.context = parent.context;\n    this.createScope(parentScope);\n    this.parseNode(esTreeNode);\n    this.initialise();\n    this.context.magicString.addSourcemapLocation(this.start);\n    this.context.magicString.addSourcemapLocation(this.end);\n  }\n  addExportedVariables(_variables, _exportNamesByVariable) {}\n  /**\n   * Override this to bind assignments to variables and do any initialisations\n   * that require the scopes to be populated with variables.\n   */\n  bind() {\n    for (const key of this.keys) {\n      const value = this[key];\n      if (Array.isArray(value)) {\n        for (const child of value) {\n          child?.bind();\n        }\n      } else if (value) {\n        value.bind();\n      }\n    }\n  }\n  /**\n   * Override if this node should receive a different scope than the parent\n   * scope.\n   */\n  createScope(parentScope) {\n    this.scope = parentScope;\n  }\n  hasEffects(context) {\n    if (!this.deoptimized) this.applyDeoptimizations();\n    for (const key of this.keys) {\n      const value = this[key];\n      if (value === null) continue;\n      if (Array.isArray(value)) {\n        for (const child of value) {\n          if (child?.hasEffects(context)) return true;\n        }\n      } else if (value.hasEffects(context)) return true;\n    }\n    return false;\n  }\n  hasEffectsAsAssignmentTarget(context, _checkAccess) {\n    return this.hasEffects(context) || this.hasEffectsOnInteractionAtPath(EMPTY_PATH, this.assignmentInteraction, context);\n  }\n  include(context, includeChildrenRecursively, _options) {\n    if (!this.deoptimized) this.applyDeoptimizations();\n    this.included = true;\n    for (const key of this.keys) {\n      const value = this[key];\n      if (value === null) continue;\n      if (Array.isArray(value)) {\n        for (const child of value) {\n          child?.include(context, includeChildrenRecursively);\n        }\n      } else {\n        value.include(context, includeChildrenRecursively);\n      }\n    }\n  }\n  includeAsAssignmentTarget(context, includeChildrenRecursively, _deoptimizeAccess) {\n    this.include(context, includeChildrenRecursively);\n  }\n  /**\n   * Override to perform special initialisation steps after the scope is\n   * initialised\n   */\n  initialise() {}\n  insertSemicolon(code) {\n    if (code.original[this.end - 1] !== ';') {\n      code.appendLeft(this.end, ';');\n    }\n  }\n  parseNode(esTreeNode, keepEsTreeNodeKeys) {\n    for (const [key, value] of Object.entries(esTreeNode)) {\n      // That way, we can override this function to add custom initialisation and then call super.parseNode\n      if (this.hasOwnProperty(key)) continue;\n      if (key.charCodeAt(0) === 95 /* _ */) {\n        if (key === ANNOTATION_KEY) {\n          this.annotations = value;\n        } else if (key === INVALID_COMMENT_KEY) {\n          for (const {\n            start,\n            end\n          } of value) this.context.magicString.remove(start, end);\n        }\n      } else if (typeof value !== 'object' || value === null) {\n        this[key] = value;\n      } else if (Array.isArray(value)) {\n        this[key] = [];\n        for (const child of value) {\n          this[key].push(child === null ? null : new (this.context.getNodeConstructor(child.type))(child, this, this.scope, keepEsTreeNodeKeys?.includes(key)));\n        }\n      } else {\n        this[key] = new (this.context.getNodeConstructor(value.type))(value, this, this.scope, keepEsTreeNodeKeys?.includes(key));\n      }\n    }\n  }\n  render(code, options) {\n    for (const key of this.keys) {\n      const value = this[key];\n      if (value === null) continue;\n      if (Array.isArray(value)) {\n        for (const child of value) {\n          child?.render(code, options);\n        }\n      } else {\n        value.render(code, options);\n      }\n    }\n  }\n  setAssignedValue(value) {\n    this.assignmentInteraction = {\n      args: [value],\n      thisArg: null,\n      type: INTERACTION_ASSIGNED\n    };\n  }\n  shouldBeIncluded(context) {\n    return this.included || !context.brokenFlow && this.hasEffects(createHasEffectsContext());\n  }\n  /**\n   * Just deoptimize everything by default so that when e.g. we do not track\n   * something properly, it is deoptimized.\n   * @protected\n   */\n  applyDeoptimizations() {\n    this.deoptimized = true;\n    for (const key of this.keys) {\n      const value = this[key];\n      if (value === null) continue;\n      if (Array.isArray(value)) {\n        for (const child of value) {\n          child?.deoptimizePath(UNKNOWN_PATH);\n        }\n      } else {\n        value.deoptimizePath(UNKNOWN_PATH);\n      }\n    }\n    this.context.requestTreeshakingPass();\n  }\n}\nclass SpreadElement extends NodeBase {\n  deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n    if (path.length > 0) {\n      this.argument.deoptimizeThisOnInteractionAtPath(interaction, [UnknownKey, ...path], recursionTracker);\n    }\n  }\n  hasEffects(context) {\n    if (!this.deoptimized) this.applyDeoptimizations();\n    const {\n      propertyReadSideEffects\n    } = this.context.options.treeshake;\n    return this.argument.hasEffects(context) || propertyReadSideEffects && (propertyReadSideEffects === 'always' || this.argument.hasEffectsOnInteractionAtPath(UNKNOWN_PATH, NODE_INTERACTION_UNKNOWN_ACCESS, context));\n  }\n  applyDeoptimizations() {\n    this.deoptimized = true;\n    // Only properties of properties of the argument could become subject to reassignment\n    // This will also reassign the return values of iterators\n    this.argument.deoptimizePath([UnknownKey, UnknownKey]);\n    this.context.requestTreeshakingPass();\n  }\n}\nclass Method extends ExpressionEntity {\n  constructor(description) {\n    super();\n    this.description = description;\n  }\n  deoptimizeThisOnInteractionAtPath(_ref11, path) {\n    let {\n      type,\n      thisArg\n    } = _ref11;\n    if (type === INTERACTION_CALLED && path.length === 0 && this.description.mutatesSelfAsArray) {\n      thisArg.deoptimizePath(UNKNOWN_INTEGER_PATH);\n    }\n  }\n  getReturnExpressionWhenCalledAtPath(path, _ref12) {\n    let {\n      thisArg\n    } = _ref12;\n    if (path.length > 0) {\n      return UNKNOWN_RETURN_EXPRESSION;\n    }\n    return [this.description.returnsPrimitive || (this.description.returns === 'self' ? thisArg || UNKNOWN_EXPRESSION : this.description.returns()), false];\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    const {\n      type\n    } = interaction;\n    if (path.length > (type === INTERACTION_ACCESSED ? 1 : 0)) {\n      return true;\n    }\n    if (type === INTERACTION_CALLED) {\n      const {\n        args,\n        thisArg\n      } = interaction;\n      if (this.description.mutatesSelfAsArray === true && thisArg?.hasEffectsOnInteractionAtPath(UNKNOWN_INTEGER_PATH, NODE_INTERACTION_UNKNOWN_ASSIGNMENT, context)) {\n        return true;\n      }\n      if (this.description.callsArgs) {\n        for (const argumentIndex of this.description.callsArgs) {\n          if (args[argumentIndex]?.hasEffectsOnInteractionAtPath(EMPTY_PATH, NODE_INTERACTION_UNKNOWN_CALL, context)) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n}\nconst METHOD_RETURNS_BOOLEAN = [new Method({\n  callsArgs: null,\n  mutatesSelfAsArray: false,\n  returns: null,\n  returnsPrimitive: UNKNOWN_LITERAL_BOOLEAN\n})];\nconst METHOD_RETURNS_STRING = [new Method({\n  callsArgs: null,\n  mutatesSelfAsArray: false,\n  returns: null,\n  returnsPrimitive: UNKNOWN_LITERAL_STRING\n})];\nconst METHOD_RETURNS_NUMBER = [new Method({\n  callsArgs: null,\n  mutatesSelfAsArray: false,\n  returns: null,\n  returnsPrimitive: UNKNOWN_LITERAL_NUMBER\n})];\nconst METHOD_RETURNS_UNKNOWN = [new Method({\n  callsArgs: null,\n  mutatesSelfAsArray: false,\n  returns: null,\n  returnsPrimitive: UNKNOWN_EXPRESSION\n})];\nconst INTEGER_REG_EXP = /^\\d+$/;\nclass ObjectEntity extends ExpressionEntity {\n  // If a PropertyMap is used, this will be taken as propertiesAndGettersByKey\n  // and we assume there are no setters or getters\n  constructor(properties, prototypeExpression) {\n    let immutable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    super();\n    this.prototypeExpression = prototypeExpression;\n    this.immutable = immutable;\n    this.allProperties = [];\n    this.deoptimizedPaths = Object.create(null);\n    this.expressionsToBeDeoptimizedByKey = Object.create(null);\n    this.gettersByKey = Object.create(null);\n    this.hasLostTrack = false;\n    this.hasUnknownDeoptimizedInteger = false;\n    this.hasUnknownDeoptimizedProperty = false;\n    this.propertiesAndGettersByKey = Object.create(null);\n    this.propertiesAndSettersByKey = Object.create(null);\n    this.settersByKey = Object.create(null);\n    this.thisParametersToBeDeoptimized = new Set();\n    this.unknownIntegerProps = [];\n    this.unmatchableGetters = [];\n    this.unmatchablePropertiesAndGetters = [];\n    this.unmatchableSetters = [];\n    if (Array.isArray(properties)) {\n      this.buildPropertyMaps(properties);\n    } else {\n      this.propertiesAndGettersByKey = this.propertiesAndSettersByKey = properties;\n      for (const propertiesForKey of Object.values(properties)) {\n        this.allProperties.push(...propertiesForKey);\n      }\n    }\n  }\n  deoptimizeAllProperties(noAccessors) {\n    const isDeoptimized = this.hasLostTrack || this.hasUnknownDeoptimizedProperty;\n    if (noAccessors) {\n      this.hasUnknownDeoptimizedProperty = true;\n    } else {\n      this.hasLostTrack = true;\n    }\n    if (isDeoptimized) {\n      return;\n    }\n    for (const properties of [...Object.values(this.propertiesAndGettersByKey), ...Object.values(this.settersByKey)]) {\n      for (const property of properties) {\n        property.deoptimizePath(UNKNOWN_PATH);\n      }\n    }\n    // While the prototype itself cannot be mutated, each property can\n    this.prototypeExpression?.deoptimizePath([UnknownKey, UnknownKey]);\n    this.deoptimizeCachedEntities();\n  }\n  deoptimizeIntegerProperties() {\n    if (this.hasLostTrack || this.hasUnknownDeoptimizedProperty || this.hasUnknownDeoptimizedInteger) {\n      return;\n    }\n    this.hasUnknownDeoptimizedInteger = true;\n    for (const [key, propertiesAndGetters] of Object.entries(this.propertiesAndGettersByKey)) {\n      if (INTEGER_REG_EXP.test(key)) {\n        for (const property of propertiesAndGetters) {\n          property.deoptimizePath(UNKNOWN_PATH);\n        }\n      }\n    }\n    this.deoptimizeCachedIntegerEntities();\n  }\n  // Assumption: If only a specific path is deoptimized, no accessors are created\n  deoptimizePath(path) {\n    if (this.hasLostTrack || this.immutable) {\n      return;\n    }\n    const key = path[0];\n    if (path.length === 1) {\n      if (typeof key !== 'string') {\n        if (key === UnknownInteger) {\n          return this.deoptimizeIntegerProperties();\n        }\n        return this.deoptimizeAllProperties(key === UnknownNonAccessorKey);\n      }\n      if (!this.deoptimizedPaths[key]) {\n        this.deoptimizedPaths[key] = true;\n        // we only deoptimizeCache exact matches as in all other cases,\n        // we do not return a literal value or return expression\n        const expressionsToBeDeoptimized = this.expressionsToBeDeoptimizedByKey[key];\n        if (expressionsToBeDeoptimized) {\n          for (const expression of expressionsToBeDeoptimized) {\n            expression.deoptimizeCache();\n          }\n        }\n      }\n    }\n    const subPath = path.length === 1 ? UNKNOWN_PATH : path.slice(1);\n    for (const property of typeof key === 'string' ? [...(this.propertiesAndGettersByKey[key] || this.unmatchablePropertiesAndGetters), ...(this.settersByKey[key] || this.unmatchableSetters)] : this.allProperties) {\n      property.deoptimizePath(subPath);\n    }\n    this.prototypeExpression?.deoptimizePath(path.length === 1 ? [...path, UnknownKey] : path);\n  }\n  deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n    const [key, ...subPath] = path;\n    if (this.hasLostTrack ||\n    // single paths that are deoptimized will not become getters or setters\n    (interaction.type === INTERACTION_CALLED || path.length > 1) && (this.hasUnknownDeoptimizedProperty || typeof key === 'string' && this.deoptimizedPaths[key])) {\n      interaction.thisArg.deoptimizePath(UNKNOWN_PATH);\n      return;\n    }\n    const [propertiesForExactMatchByKey, relevantPropertiesByKey, relevantUnmatchableProperties] = interaction.type === INTERACTION_CALLED || path.length > 1 ? [this.propertiesAndGettersByKey, this.propertiesAndGettersByKey, this.unmatchablePropertiesAndGetters] : interaction.type === INTERACTION_ACCESSED ? [this.propertiesAndGettersByKey, this.gettersByKey, this.unmatchableGetters] : [this.propertiesAndSettersByKey, this.settersByKey, this.unmatchableSetters];\n    if (typeof key === 'string') {\n      if (propertiesForExactMatchByKey[key]) {\n        const properties = relevantPropertiesByKey[key];\n        if (properties) {\n          for (const property of properties) {\n            property.deoptimizeThisOnInteractionAtPath(interaction, subPath, recursionTracker);\n          }\n        }\n        if (!this.immutable) {\n          this.thisParametersToBeDeoptimized.add(interaction.thisArg);\n        }\n        return;\n      }\n      for (const property of relevantUnmatchableProperties) {\n        property.deoptimizeThisOnInteractionAtPath(interaction, subPath, recursionTracker);\n      }\n      if (INTEGER_REG_EXP.test(key)) {\n        for (const property of this.unknownIntegerProps) {\n          property.deoptimizeThisOnInteractionAtPath(interaction, subPath, recursionTracker);\n        }\n      }\n    } else {\n      for (const properties of [...Object.values(relevantPropertiesByKey), relevantUnmatchableProperties]) {\n        for (const property of properties) {\n          property.deoptimizeThisOnInteractionAtPath(interaction, subPath, recursionTracker);\n        }\n      }\n      for (const property of this.unknownIntegerProps) {\n        property.deoptimizeThisOnInteractionAtPath(interaction, subPath, recursionTracker);\n      }\n    }\n    if (!this.immutable) {\n      this.thisParametersToBeDeoptimized.add(interaction.thisArg);\n    }\n    this.prototypeExpression?.deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n  }\n  getLiteralValueAtPath(path, recursionTracker, origin) {\n    if (path.length === 0) {\n      return UnknownTruthyValue;\n    }\n    const key = path[0];\n    const expressionAtPath = this.getMemberExpressionAndTrackDeopt(key, origin);\n    if (expressionAtPath) {\n      return expressionAtPath.getLiteralValueAtPath(path.slice(1), recursionTracker, origin);\n    }\n    if (this.prototypeExpression) {\n      return this.prototypeExpression.getLiteralValueAtPath(path, recursionTracker, origin);\n    }\n    if (path.length === 1) {\n      return undefined;\n    }\n    return UnknownValue;\n  }\n  getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n    if (path.length === 0) {\n      return UNKNOWN_RETURN_EXPRESSION;\n    }\n    const [key, ...subPath] = path;\n    const expressionAtPath = this.getMemberExpressionAndTrackDeopt(key, origin);\n    if (expressionAtPath) {\n      return expressionAtPath.getReturnExpressionWhenCalledAtPath(subPath, interaction, recursionTracker, origin);\n    }\n    if (this.prototypeExpression) {\n      return this.prototypeExpression.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\n    }\n    return UNKNOWN_RETURN_EXPRESSION;\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    const [key, ...subPath] = path;\n    if (subPath.length > 0 || interaction.type === INTERACTION_CALLED) {\n      const expressionAtPath = this.getMemberExpression(key);\n      if (expressionAtPath) {\n        return expressionAtPath.hasEffectsOnInteractionAtPath(subPath, interaction, context);\n      }\n      if (this.prototypeExpression) {\n        return this.prototypeExpression.hasEffectsOnInteractionAtPath(path, interaction, context);\n      }\n      return true;\n    }\n    if (key === UnknownNonAccessorKey) return false;\n    if (this.hasLostTrack) return true;\n    const [propertiesAndAccessorsByKey, accessorsByKey, unmatchableAccessors] = interaction.type === INTERACTION_ACCESSED ? [this.propertiesAndGettersByKey, this.gettersByKey, this.unmatchableGetters] : [this.propertiesAndSettersByKey, this.settersByKey, this.unmatchableSetters];\n    if (typeof key === 'string') {\n      if (propertiesAndAccessorsByKey[key]) {\n        const accessors = accessorsByKey[key];\n        if (accessors) {\n          for (const accessor of accessors) {\n            if (accessor.hasEffectsOnInteractionAtPath(subPath, interaction, context)) return true;\n          }\n        }\n        return false;\n      }\n      for (const accessor of unmatchableAccessors) {\n        if (accessor.hasEffectsOnInteractionAtPath(subPath, interaction, context)) {\n          return true;\n        }\n      }\n    } else {\n      for (const accessors of [...Object.values(accessorsByKey), unmatchableAccessors]) {\n        for (const accessor of accessors) {\n          if (accessor.hasEffectsOnInteractionAtPath(subPath, interaction, context)) return true;\n        }\n      }\n    }\n    if (this.prototypeExpression) {\n      return this.prototypeExpression.hasEffectsOnInteractionAtPath(path, interaction, context);\n    }\n    return false;\n  }\n  buildPropertyMaps(properties) {\n    const {\n      allProperties,\n      propertiesAndGettersByKey,\n      propertiesAndSettersByKey,\n      settersByKey,\n      gettersByKey,\n      unknownIntegerProps,\n      unmatchablePropertiesAndGetters,\n      unmatchableGetters,\n      unmatchableSetters\n    } = this;\n    const unmatchablePropertiesAndSetters = [];\n    for (let index = properties.length - 1; index >= 0; index--) {\n      const {\n        key,\n        kind,\n        property\n      } = properties[index];\n      allProperties.push(property);\n      if (typeof key === 'string') {\n        if (kind === 'set') {\n          if (!propertiesAndSettersByKey[key]) {\n            propertiesAndSettersByKey[key] = [property, ...unmatchablePropertiesAndSetters];\n            settersByKey[key] = [property, ...unmatchableSetters];\n          }\n        } else if (kind === 'get') {\n          if (!propertiesAndGettersByKey[key]) {\n            propertiesAndGettersByKey[key] = [property, ...unmatchablePropertiesAndGetters];\n            gettersByKey[key] = [property, ...unmatchableGetters];\n          }\n        } else {\n          if (!propertiesAndSettersByKey[key]) {\n            propertiesAndSettersByKey[key] = [property, ...unmatchablePropertiesAndSetters];\n          }\n          if (!propertiesAndGettersByKey[key]) {\n            propertiesAndGettersByKey[key] = [property, ...unmatchablePropertiesAndGetters];\n          }\n        }\n      } else {\n        if (key === UnknownInteger) {\n          unknownIntegerProps.push(property);\n          continue;\n        }\n        if (kind === 'set') unmatchableSetters.push(property);\n        if (kind === 'get') unmatchableGetters.push(property);\n        if (kind !== 'get') unmatchablePropertiesAndSetters.push(property);\n        if (kind !== 'set') unmatchablePropertiesAndGetters.push(property);\n      }\n    }\n  }\n  deoptimizeCachedEntities() {\n    for (const expressionsToBeDeoptimized of Object.values(this.expressionsToBeDeoptimizedByKey)) {\n      for (const expression of expressionsToBeDeoptimized) {\n        expression.deoptimizeCache();\n      }\n    }\n    for (const expression of this.thisParametersToBeDeoptimized) {\n      expression.deoptimizePath(UNKNOWN_PATH);\n    }\n  }\n  deoptimizeCachedIntegerEntities() {\n    for (const [key, expressionsToBeDeoptimized] of Object.entries(this.expressionsToBeDeoptimizedByKey)) {\n      if (INTEGER_REG_EXP.test(key)) {\n        for (const expression of expressionsToBeDeoptimized) {\n          expression.deoptimizeCache();\n        }\n      }\n    }\n    for (const expression of this.thisParametersToBeDeoptimized) {\n      expression.deoptimizePath(UNKNOWN_INTEGER_PATH);\n    }\n  }\n  getMemberExpression(key) {\n    if (this.hasLostTrack || this.hasUnknownDeoptimizedProperty || typeof key !== 'string' || this.hasUnknownDeoptimizedInteger && INTEGER_REG_EXP.test(key) || this.deoptimizedPaths[key]) {\n      return UNKNOWN_EXPRESSION;\n    }\n    const properties = this.propertiesAndGettersByKey[key];\n    if (properties?.length === 1) {\n      return properties[0];\n    }\n    if (properties || this.unmatchablePropertiesAndGetters.length > 0 || this.unknownIntegerProps.length > 0 && INTEGER_REG_EXP.test(key)) {\n      return UNKNOWN_EXPRESSION;\n    }\n    return null;\n  }\n  getMemberExpressionAndTrackDeopt(key, origin) {\n    if (typeof key !== 'string') {\n      return UNKNOWN_EXPRESSION;\n    }\n    const expression = this.getMemberExpression(key);\n    if (!(expression === UNKNOWN_EXPRESSION || this.immutable)) {\n      const expressionsToBeDeoptimized = this.expressionsToBeDeoptimizedByKey[key] = this.expressionsToBeDeoptimizedByKey[key] || [];\n      expressionsToBeDeoptimized.push(origin);\n    }\n    return expression;\n  }\n}\nconst isInteger = property => typeof property === 'string' && /^\\d+$/.test(property);\n// This makes sure unknown properties are not handled as \"undefined\" but as\n// \"unknown\" but without access side effects. An exception is done for numeric\n// properties as we do not expect new builtin properties to be numbers, this\n// will improve tree-shaking for out-of-bounds array properties\nconst OBJECT_PROTOTYPE_FALLBACK = new class ObjectPrototypeFallbackExpression extends ExpressionEntity {\n  deoptimizeThisOnInteractionAtPath(_ref13, path) {\n    let {\n      type,\n      thisArg\n    } = _ref13;\n    if (type === INTERACTION_CALLED && path.length === 1 && !isInteger(path[0])) {\n      thisArg.deoptimizePath(UNKNOWN_PATH);\n    }\n  }\n  getLiteralValueAtPath(path) {\n    // We ignore number properties as we do not expect new properties to be\n    // numbers and also want to keep handling out-of-bound array elements as\n    // \"undefined\"\n    return path.length === 1 && isInteger(path[0]) ? undefined : UnknownValue;\n  }\n  hasEffectsOnInteractionAtPath(path, _ref14) {\n    let {\n      type\n    } = _ref14;\n    return path.length > 1 || type === INTERACTION_CALLED;\n  }\n}();\nconst OBJECT_PROTOTYPE = new ObjectEntity({\n  __proto__: null,\n  hasOwnProperty: METHOD_RETURNS_BOOLEAN,\n  isPrototypeOf: METHOD_RETURNS_BOOLEAN,\n  propertyIsEnumerable: METHOD_RETURNS_BOOLEAN,\n  toLocaleString: METHOD_RETURNS_STRING,\n  toString: METHOD_RETURNS_STRING,\n  valueOf: METHOD_RETURNS_UNKNOWN\n}, OBJECT_PROTOTYPE_FALLBACK, true);\nconst NEW_ARRAY_PROPERTIES = [{\n  key: UnknownInteger,\n  kind: 'init',\n  property: UNKNOWN_EXPRESSION\n}, {\n  key: 'length',\n  kind: 'init',\n  property: UNKNOWN_LITERAL_NUMBER\n}];\nconst METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_BOOLEAN = [new Method({\n  callsArgs: [0],\n  mutatesSelfAsArray: 'deopt-only',\n  returns: null,\n  returnsPrimitive: UNKNOWN_LITERAL_BOOLEAN\n})];\nconst METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NUMBER = [new Method({\n  callsArgs: [0],\n  mutatesSelfAsArray: 'deopt-only',\n  returns: null,\n  returnsPrimitive: UNKNOWN_LITERAL_NUMBER\n})];\nconst METHOD_MUTATES_SELF_RETURNS_NEW_ARRAY = [new Method({\n  callsArgs: null,\n  mutatesSelfAsArray: true,\n  returns: () => new ObjectEntity(NEW_ARRAY_PROPERTIES, ARRAY_PROTOTYPE),\n  returnsPrimitive: null\n})];\nconst METHOD_DEOPTS_SELF_RETURNS_NEW_ARRAY = [new Method({\n  callsArgs: null,\n  mutatesSelfAsArray: 'deopt-only',\n  returns: () => new ObjectEntity(NEW_ARRAY_PROPERTIES, ARRAY_PROTOTYPE),\n  returnsPrimitive: null\n})];\nconst METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NEW_ARRAY = [new Method({\n  callsArgs: [0],\n  mutatesSelfAsArray: 'deopt-only',\n  returns: () => new ObjectEntity(NEW_ARRAY_PROPERTIES, ARRAY_PROTOTYPE),\n  returnsPrimitive: null\n})];\nconst METHOD_MUTATES_SELF_RETURNS_NUMBER = [new Method({\n  callsArgs: null,\n  mutatesSelfAsArray: true,\n  returns: null,\n  returnsPrimitive: UNKNOWN_LITERAL_NUMBER\n})];\nconst METHOD_MUTATES_SELF_RETURNS_UNKNOWN = [new Method({\n  callsArgs: null,\n  mutatesSelfAsArray: true,\n  returns: null,\n  returnsPrimitive: UNKNOWN_EXPRESSION\n})];\nconst METHOD_DEOPTS_SELF_RETURNS_UNKNOWN = [new Method({\n  callsArgs: null,\n  mutatesSelfAsArray: 'deopt-only',\n  returns: null,\n  returnsPrimitive: UNKNOWN_EXPRESSION\n})];\nconst METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_UNKNOWN = [new Method({\n  callsArgs: [0],\n  mutatesSelfAsArray: 'deopt-only',\n  returns: null,\n  returnsPrimitive: UNKNOWN_EXPRESSION\n})];\nconst METHOD_MUTATES_SELF_RETURNS_SELF = [new Method({\n  callsArgs: null,\n  mutatesSelfAsArray: true,\n  returns: 'self',\n  returnsPrimitive: null\n})];\nconst METHOD_CALLS_ARG_MUTATES_SELF_RETURNS_SELF = [new Method({\n  callsArgs: [0],\n  mutatesSelfAsArray: true,\n  returns: 'self',\n  returnsPrimitive: null\n})];\nconst ARRAY_PROTOTYPE = new ObjectEntity({\n  __proto__: null,\n  // We assume that accessors have effects as we do not track the accessed value afterwards\n  at: METHOD_DEOPTS_SELF_RETURNS_UNKNOWN,\n  concat: METHOD_DEOPTS_SELF_RETURNS_NEW_ARRAY,\n  copyWithin: METHOD_MUTATES_SELF_RETURNS_SELF,\n  entries: METHOD_DEOPTS_SELF_RETURNS_NEW_ARRAY,\n  every: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_BOOLEAN,\n  fill: METHOD_MUTATES_SELF_RETURNS_SELF,\n  filter: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NEW_ARRAY,\n  find: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_UNKNOWN,\n  findIndex: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NUMBER,\n  findLast: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_UNKNOWN,\n  findLastIndex: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NUMBER,\n  flat: METHOD_DEOPTS_SELF_RETURNS_NEW_ARRAY,\n  flatMap: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NEW_ARRAY,\n  forEach: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_UNKNOWN,\n  includes: METHOD_RETURNS_BOOLEAN,\n  indexOf: METHOD_RETURNS_NUMBER,\n  join: METHOD_RETURNS_STRING,\n  keys: METHOD_RETURNS_UNKNOWN,\n  lastIndexOf: METHOD_RETURNS_NUMBER,\n  map: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NEW_ARRAY,\n  pop: METHOD_MUTATES_SELF_RETURNS_UNKNOWN,\n  push: METHOD_MUTATES_SELF_RETURNS_NUMBER,\n  reduce: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_UNKNOWN,\n  reduceRight: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_UNKNOWN,\n  reverse: METHOD_MUTATES_SELF_RETURNS_SELF,\n  shift: METHOD_MUTATES_SELF_RETURNS_UNKNOWN,\n  slice: METHOD_DEOPTS_SELF_RETURNS_NEW_ARRAY,\n  some: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_BOOLEAN,\n  sort: METHOD_CALLS_ARG_MUTATES_SELF_RETURNS_SELF,\n  splice: METHOD_MUTATES_SELF_RETURNS_NEW_ARRAY,\n  toLocaleString: METHOD_RETURNS_STRING,\n  toString: METHOD_RETURNS_STRING,\n  unshift: METHOD_MUTATES_SELF_RETURNS_NUMBER,\n  values: METHOD_DEOPTS_SELF_RETURNS_UNKNOWN\n}, OBJECT_PROTOTYPE, true);\nclass ArrayExpression extends NodeBase {\n  constructor() {\n    super(...arguments);\n    this.objectEntity = null;\n  }\n  deoptimizePath(path) {\n    this.getObjectEntity().deoptimizePath(path);\n  }\n  deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n    this.getObjectEntity().deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n  }\n  getLiteralValueAtPath(path, recursionTracker, origin) {\n    return this.getObjectEntity().getLiteralValueAtPath(path, recursionTracker, origin);\n  }\n  getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n    return this.getObjectEntity().getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    return this.getObjectEntity().hasEffectsOnInteractionAtPath(path, interaction, context);\n  }\n  applyDeoptimizations() {\n    this.deoptimized = true;\n    let hasSpread = false;\n    for (let index = 0; index < this.elements.length; index++) {\n      const element = this.elements[index];\n      if (element && (hasSpread || element instanceof SpreadElement)) {\n        hasSpread = true;\n        element.deoptimizePath(UNKNOWN_PATH);\n      }\n    }\n    this.context.requestTreeshakingPass();\n  }\n  getObjectEntity() {\n    if (this.objectEntity !== null) {\n      return this.objectEntity;\n    }\n    const properties = [{\n      key: 'length',\n      kind: 'init',\n      property: UNKNOWN_LITERAL_NUMBER\n    }];\n    let hasSpread = false;\n    for (let index = 0; index < this.elements.length; index++) {\n      const element = this.elements[index];\n      if (hasSpread || element instanceof SpreadElement) {\n        if (element) {\n          hasSpread = true;\n          properties.unshift({\n            key: UnknownInteger,\n            kind: 'init',\n            property: element\n          });\n        }\n      } else if (element) {\n        properties.push({\n          key: String(index),\n          kind: 'init',\n          property: element\n        });\n      } else {\n        properties.push({\n          key: String(index),\n          kind: 'init',\n          property: UNDEFINED_EXPRESSION\n        });\n      }\n    }\n    return this.objectEntity = new ObjectEntity(properties, ARRAY_PROTOTYPE);\n  }\n}\nclass ArrayPattern extends NodeBase {\n  addExportedVariables(variables, exportNamesByVariable) {\n    for (const element of this.elements) {\n      element?.addExportedVariables(variables, exportNamesByVariable);\n    }\n  }\n  declare(kind) {\n    const variables = [];\n    for (const element of this.elements) {\n      if (element !== null) {\n        variables.push(...element.declare(kind, UNKNOWN_EXPRESSION));\n      }\n    }\n    return variables;\n  }\n  // Patterns can only be deoptimized at the empty path at the moment\n  deoptimizePath() {\n    for (const element of this.elements) {\n      element?.deoptimizePath(EMPTY_PATH);\n    }\n  }\n  // Patterns are only checked at the emtpy path at the moment\n  hasEffectsOnInteractionAtPath(_path, interaction, context) {\n    for (const element of this.elements) {\n      if (element?.hasEffectsOnInteractionAtPath(EMPTY_PATH, interaction, context)) return true;\n    }\n    return false;\n  }\n  markDeclarationReached() {\n    for (const element of this.elements) {\n      element?.markDeclarationReached();\n    }\n  }\n}\nclass LocalVariable extends Variable {\n  constructor(name, declarator, init, context) {\n    super(name);\n    this.calledFromTryStatement = false;\n    this.additionalInitializers = null;\n    this.expressionsToBeDeoptimized = [];\n    this.declarations = declarator ? [declarator] : [];\n    this.init = init;\n    this.deoptimizationTracker = context.deoptimizationTracker;\n    this.module = context.module;\n  }\n  addDeclaration(identifier, init) {\n    this.declarations.push(identifier);\n    const additionalInitializers = this.markInitializersForDeoptimization();\n    if (init !== null) {\n      additionalInitializers.push(init);\n    }\n  }\n  consolidateInitializers() {\n    if (this.additionalInitializers !== null) {\n      for (const initializer of this.additionalInitializers) {\n        initializer.deoptimizePath(UNKNOWN_PATH);\n      }\n      this.additionalInitializers = null;\n    }\n  }\n  deoptimizePath(path) {\n    if (this.isReassigned || this.deoptimizationTracker.trackEntityAtPathAndGetIfTracked(path, this)) {\n      return;\n    }\n    if (path.length === 0) {\n      if (!this.isReassigned) {\n        this.isReassigned = true;\n        const expressionsToBeDeoptimized = this.expressionsToBeDeoptimized;\n        this.expressionsToBeDeoptimized = [];\n        for (const expression of expressionsToBeDeoptimized) {\n          expression.deoptimizeCache();\n        }\n        this.init?.deoptimizePath(UNKNOWN_PATH);\n      }\n    } else {\n      this.init?.deoptimizePath(path);\n    }\n  }\n  deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n    if (this.isReassigned || !this.init) {\n      return interaction.thisArg.deoptimizePath(UNKNOWN_PATH);\n    }\n    recursionTracker.withTrackedEntityAtPath(path, this.init, () => this.init.deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker), undefined);\n  }\n  getLiteralValueAtPath(path, recursionTracker, origin) {\n    if (this.isReassigned || !this.init) {\n      return UnknownValue;\n    }\n    return recursionTracker.withTrackedEntityAtPath(path, this.init, () => {\n      this.expressionsToBeDeoptimized.push(origin);\n      return this.init.getLiteralValueAtPath(path, recursionTracker, origin);\n    }, UnknownValue);\n  }\n  getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n    if (this.isReassigned || !this.init) {\n      return UNKNOWN_RETURN_EXPRESSION;\n    }\n    return recursionTracker.withTrackedEntityAtPath(path, this.init, () => {\n      this.expressionsToBeDeoptimized.push(origin);\n      return this.init.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\n    }, UNKNOWN_RETURN_EXPRESSION);\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    switch (interaction.type) {\n      case INTERACTION_ACCESSED:\n        {\n          if (this.isReassigned) return true;\n          return !!(this.init && !context.accessed.trackEntityAtPathAndGetIfTracked(path, this) && this.init.hasEffectsOnInteractionAtPath(path, interaction, context));\n        }\n      case INTERACTION_ASSIGNED:\n        {\n          if (this.included) return true;\n          if (path.length === 0) return false;\n          if (this.isReassigned) return true;\n          return !!(this.init && !context.assigned.trackEntityAtPathAndGetIfTracked(path, this) && this.init.hasEffectsOnInteractionAtPath(path, interaction, context));\n        }\n      case INTERACTION_CALLED:\n        {\n          if (this.isReassigned) return true;\n          return !!(this.init && !(interaction.withNew ? context.instantiated : context.called).trackEntityAtPathAndGetIfTracked(path, interaction.args, this) && this.init.hasEffectsOnInteractionAtPath(path, interaction, context));\n        }\n    }\n  }\n  include() {\n    if (!this.included) {\n      this.included = true;\n      for (const declaration of this.declarations) {\n        // If node is a default export, it can save a tree-shaking run to include the full declaration now\n        if (!declaration.included) declaration.include(createInclusionContext(), false);\n        let node = declaration.parent;\n        while (!node.included) {\n          // We do not want to properly include parents in case they are part of a dead branch\n          // in which case .include() might pull in more dead code\n          node.included = true;\n          if (node.type === Program$1) break;\n          node = node.parent;\n        }\n      }\n    }\n  }\n  includeCallArguments(context, parameters) {\n    if (this.isReassigned || this.init && context.includedCallArguments.has(this.init)) {\n      for (const argument of parameters) {\n        argument.include(context, false);\n      }\n    } else if (this.init) {\n      context.includedCallArguments.add(this.init);\n      this.init.includeCallArguments(context, parameters);\n      context.includedCallArguments.delete(this.init);\n    }\n  }\n  markCalledFromTryStatement() {\n    this.calledFromTryStatement = true;\n  }\n  markInitializersForDeoptimization() {\n    if (this.additionalInitializers === null) {\n      this.additionalInitializers = this.init === null ? [] : [this.init];\n      this.init = UNKNOWN_EXPRESSION;\n      this.isReassigned = true;\n    }\n    return this.additionalInitializers;\n  }\n}\nconst chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_$';\nconst base = 64;\nfunction toBase64(value) {\n  let outString = '';\n  do {\n    const currentDigit = value % base;\n    value = value / base | 0;\n    outString = chars[currentDigit] + outString;\n  } while (value !== 0);\n  return outString;\n}\nfunction getSafeName(baseName, usedNames, forbiddenNames) {\n  let safeName = baseName;\n  let count = 1;\n  while (usedNames.has(safeName) || RESERVED_NAMES$1.has(safeName) || forbiddenNames?.has(safeName)) {\n    safeName = `${baseName}$${toBase64(count++)}`;\n  }\n  usedNames.add(safeName);\n  return safeName;\n}\nlet Scope$1 = class Scope {\n  constructor() {\n    this.children = [];\n    this.variables = new Map();\n  }\n  addDeclaration(identifier, context, init, _isHoisted) {\n    const name = identifier.name;\n    let variable = this.variables.get(name);\n    if (variable) {\n      variable.addDeclaration(identifier, init);\n    } else {\n      variable = new LocalVariable(identifier.name, identifier, init || UNDEFINED_EXPRESSION, context);\n      this.variables.set(name, variable);\n    }\n    return variable;\n  }\n  contains(name) {\n    return this.variables.has(name);\n  }\n  findVariable(_name) {\n    throw new Error('Internal Error: findVariable needs to be implemented by a subclass');\n  }\n};\nclass ChildScope extends Scope$1 {\n  constructor(parent) {\n    super();\n    this.accessedOutsideVariables = new Map();\n    this.parent = parent;\n    parent.children.push(this);\n  }\n  addAccessedDynamicImport(importExpression) {\n    (this.accessedDynamicImports || (this.accessedDynamicImports = new Set())).add(importExpression);\n    if (this.parent instanceof ChildScope) {\n      this.parent.addAccessedDynamicImport(importExpression);\n    }\n  }\n  addAccessedGlobals(globals, accessedGlobalsByScope) {\n    const accessedGlobals = accessedGlobalsByScope.get(this) || new Set();\n    for (const name of globals) {\n      accessedGlobals.add(name);\n    }\n    accessedGlobalsByScope.set(this, accessedGlobals);\n    if (this.parent instanceof ChildScope) {\n      this.parent.addAccessedGlobals(globals, accessedGlobalsByScope);\n    }\n  }\n  addNamespaceMemberAccess(name, variable) {\n    this.accessedOutsideVariables.set(name, variable);\n    this.parent.addNamespaceMemberAccess(name, variable);\n  }\n  addReturnExpression(expression) {\n    this.parent instanceof ChildScope && this.parent.addReturnExpression(expression);\n  }\n  addUsedOutsideNames(usedNames, format, exportNamesByVariable, accessedGlobalsByScope) {\n    for (const variable of this.accessedOutsideVariables.values()) {\n      if (variable.included) {\n        usedNames.add(variable.getBaseVariableName());\n        if (format === 'system' && exportNamesByVariable.has(variable)) {\n          usedNames.add('exports');\n        }\n      }\n    }\n    const accessedGlobals = accessedGlobalsByScope.get(this);\n    if (accessedGlobals) {\n      for (const name of accessedGlobals) {\n        usedNames.add(name);\n      }\n    }\n  }\n  contains(name) {\n    return this.variables.has(name) || this.parent.contains(name);\n  }\n  deconflict(format, exportNamesByVariable, accessedGlobalsByScope) {\n    const usedNames = new Set();\n    this.addUsedOutsideNames(usedNames, format, exportNamesByVariable, accessedGlobalsByScope);\n    if (this.accessedDynamicImports) {\n      for (const importExpression of this.accessedDynamicImports) {\n        if (importExpression.inlineNamespace) {\n          usedNames.add(importExpression.inlineNamespace.getBaseVariableName());\n        }\n      }\n    }\n    for (const [name, variable] of this.variables) {\n      if (variable.included || variable.alwaysRendered) {\n        variable.setRenderNames(null, getSafeName(name, usedNames, variable.forbiddenNames));\n      }\n    }\n    for (const scope of this.children) {\n      scope.deconflict(format, exportNamesByVariable, accessedGlobalsByScope);\n    }\n  }\n  findLexicalBoundary() {\n    return this.parent.findLexicalBoundary();\n  }\n  findVariable(name) {\n    const knownVariable = this.variables.get(name) || this.accessedOutsideVariables.get(name);\n    if (knownVariable) {\n      return knownVariable;\n    }\n    const variable = this.parent.findVariable(name);\n    this.accessedOutsideVariables.set(name, variable);\n    return variable;\n  }\n}\nclass ParameterScope extends ChildScope {\n  constructor(parent, context) {\n    super(parent);\n    this.parameters = [];\n    this.hasRest = false;\n    this.context = context;\n    this.hoistedBodyVarScope = new ChildScope(this);\n  }\n  /**\n   * Adds a parameter to this scope. Parameters must be added in the correct\n   * order, e.g. from left to right.\n   */\n  addParameterDeclaration(identifier) {\n    const name = identifier.name;\n    let variable = this.hoistedBodyVarScope.variables.get(name);\n    if (variable) {\n      variable.addDeclaration(identifier, null);\n    } else {\n      variable = new LocalVariable(name, identifier, UNKNOWN_EXPRESSION, this.context);\n    }\n    this.variables.set(name, variable);\n    return variable;\n  }\n  addParameterVariables(parameters, hasRest) {\n    this.parameters = parameters;\n    for (const parameterList of parameters) {\n      for (const parameter of parameterList) {\n        parameter.alwaysRendered = true;\n      }\n    }\n    this.hasRest = hasRest;\n  }\n  includeCallArguments(context, parameters) {\n    let calledFromTryStatement = false;\n    let argumentIncluded = false;\n    const restParameter = this.hasRest && this.parameters[this.parameters.length - 1];\n    for (const checkedArgument of parameters) {\n      if (checkedArgument instanceof SpreadElement) {\n        for (const argument of parameters) {\n          argument.include(context, false);\n        }\n        break;\n      }\n    }\n    for (let index = parameters.length - 1; index >= 0; index--) {\n      const parameterVariables = this.parameters[index] || restParameter;\n      const argument = parameters[index];\n      if (parameterVariables) {\n        calledFromTryStatement = false;\n        if (parameterVariables.length === 0) {\n          // handle empty destructuring\n          argumentIncluded = true;\n        } else {\n          for (const variable of parameterVariables) {\n            if (variable.included) {\n              argumentIncluded = true;\n            }\n            if (variable.calledFromTryStatement) {\n              calledFromTryStatement = true;\n            }\n          }\n        }\n      }\n      if (!argumentIncluded && argument.shouldBeIncluded(context)) {\n        argumentIncluded = true;\n      }\n      if (argumentIncluded) {\n        argument.include(context, calledFromTryStatement);\n      }\n    }\n  }\n}\nclass ReturnValueScope extends ParameterScope {\n  constructor() {\n    super(...arguments);\n    this.returnExpression = null;\n    this.returnExpressions = [];\n  }\n  addReturnExpression(expression) {\n    this.returnExpressions.push(expression);\n  }\n  getReturnExpression() {\n    if (this.returnExpression === null) this.updateReturnExpression();\n    return this.returnExpression;\n  }\n  updateReturnExpression() {\n    if (this.returnExpressions.length === 1) {\n      this.returnExpression = this.returnExpressions[0];\n    } else {\n      this.returnExpression = UNKNOWN_EXPRESSION;\n      for (const expression of this.returnExpressions) {\n        expression.deoptimizePath(UNKNOWN_PATH);\n      }\n    }\n  }\n}\n\n/** @typedef { import('estree').Node} Node */\n/** @typedef {Node | {\n *   type: 'PropertyDefinition';\n *   computed: boolean;\n *   value: Node\n * }} NodeWithPropertyDefinition */\n\n/**\n *\n * @param {NodeWithPropertyDefinition} node\n * @param {NodeWithPropertyDefinition} parent\n * @returns {boolean}\n */\nfunction is_reference(node, parent) {\n  if (node.type === 'MemberExpression') {\n    return !node.computed && is_reference(node.object, node);\n  }\n  if (node.type === 'Identifier') {\n    if (!parent) return true;\n    switch (parent.type) {\n      // disregard `bar` in `foo.bar`\n      case 'MemberExpression':\n        return parent.computed || node === parent.object;\n\n      // disregard the `foo` in `class {foo(){}}` but keep it in `class {[foo](){}}`\n      case 'MethodDefinition':\n        return parent.computed;\n\n      // disregard the `foo` in `class {foo=bar}` but keep it in `class {[foo]=bar}` and `class {bar=foo}`\n      case 'PropertyDefinition':\n        return parent.computed || node === parent.value;\n\n      // disregard the `bar` in `{ bar: foo }`, but keep it in `{ [bar]: foo }`\n      case 'Property':\n        return parent.computed || node === parent.value;\n\n      // disregard the `bar` in `export { foo as bar }` or\n      // the foo in `import { foo as bar }`\n      case 'ExportSpecifier':\n      case 'ImportSpecifier':\n        return node === parent.local;\n\n      // disregard the `foo` in `foo: while (...) { ... break foo; ... continue foo;}`\n      case 'LabeledStatement':\n      case 'BreakStatement':\n      case 'ContinueStatement':\n        return false;\n      default:\n        return true;\n    }\n  }\n  return false;\n}\nconst PureFunctionKey = Symbol('PureFunction');\nconst getPureFunctions = _ref15 => {\n  let {\n    treeshake\n  } = _ref15;\n  const pureFunctions = Object.create(null);\n  for (const functionName of treeshake ? treeshake.manualPureFunctions : []) {\n    let currentFunctions = pureFunctions;\n    for (const pathSegment of functionName.split('.')) {\n      currentFunctions = currentFunctions[pathSegment] || (currentFunctions[pathSegment] = Object.create(null));\n    }\n    currentFunctions[PureFunctionKey] = true;\n  }\n  return pureFunctions;\n};\n\n/* eslint sort-keys: \"off\" */\nconst ValueProperties = Symbol('Value Properties');\nconst getTruthyLiteralValue = () => UnknownTruthyValue;\nconst returnFalse = () => false;\nconst returnTrue = () => true;\nconst PURE = {\n  getLiteralValue: getTruthyLiteralValue,\n  hasEffectsWhenCalled: returnFalse\n};\nconst IMPURE = {\n  getLiteralValue: getTruthyLiteralValue,\n  hasEffectsWhenCalled: returnTrue\n};\n// We use shortened variables to reduce file size here\n/* OBJECT */\nconst O = {\n  __proto__: null,\n  [ValueProperties]: IMPURE\n};\n/* PURE FUNCTION */\nconst PF = {\n  __proto__: null,\n  [ValueProperties]: PURE\n};\n/* FUNCTION THAT MUTATES FIRST ARG WITHOUT TRIGGERING ACCESSORS */\nconst MUTATES_ARG_WITHOUT_ACCESSOR = {\n  __proto__: null,\n  [ValueProperties]: {\n    getLiteralValue: getTruthyLiteralValue,\n    hasEffectsWhenCalled(_ref16, context) {\n      let {\n        args\n      } = _ref16;\n      return args.length === 0 || args[0].hasEffectsOnInteractionAtPath(UNKNOWN_NON_ACCESSOR_PATH, NODE_INTERACTION_UNKNOWN_ASSIGNMENT, context);\n    }\n  }\n};\n/* CONSTRUCTOR */\nconst C = {\n  __proto__: null,\n  [ValueProperties]: IMPURE,\n  prototype: O\n};\n/* PURE CONSTRUCTOR */\nconst PC = {\n  __proto__: null,\n  [ValueProperties]: PURE,\n  prototype: O\n};\nconst ARRAY_TYPE = {\n  __proto__: null,\n  [ValueProperties]: PURE,\n  from: PF,\n  of: PF,\n  prototype: O\n};\nconst INTL_MEMBER = {\n  __proto__: null,\n  [ValueProperties]: PURE,\n  supportedLocalesOf: PC\n};\nconst knownGlobals = {\n  // Placeholders for global objects to avoid shape mutations\n  global: O,\n  globalThis: O,\n  self: O,\n  window: O,\n  // Common globals\n  __proto__: null,\n  [ValueProperties]: IMPURE,\n  Array: {\n    __proto__: null,\n    [ValueProperties]: IMPURE,\n    from: O,\n    isArray: PF,\n    of: PF,\n    prototype: O\n  },\n  ArrayBuffer: {\n    __proto__: null,\n    [ValueProperties]: PURE,\n    isView: PF,\n    prototype: O\n  },\n  Atomics: O,\n  BigInt: C,\n  BigInt64Array: C,\n  BigUint64Array: C,\n  Boolean: PC,\n  constructor: C,\n  DataView: PC,\n  Date: {\n    __proto__: null,\n    [ValueProperties]: PURE,\n    now: PF,\n    parse: PF,\n    prototype: O,\n    UTC: PF\n  },\n  decodeURI: PF,\n  decodeURIComponent: PF,\n  encodeURI: PF,\n  encodeURIComponent: PF,\n  Error: PC,\n  escape: PF,\n  eval: O,\n  EvalError: PC,\n  Float32Array: ARRAY_TYPE,\n  Float64Array: ARRAY_TYPE,\n  Function: C,\n  hasOwnProperty: O,\n  Infinity: O,\n  Int16Array: ARRAY_TYPE,\n  Int32Array: ARRAY_TYPE,\n  Int8Array: ARRAY_TYPE,\n  isFinite: PF,\n  isNaN: PF,\n  isPrototypeOf: O,\n  JSON: O,\n  Map: PC,\n  Math: {\n    __proto__: null,\n    [ValueProperties]: IMPURE,\n    abs: PF,\n    acos: PF,\n    acosh: PF,\n    asin: PF,\n    asinh: PF,\n    atan: PF,\n    atan2: PF,\n    atanh: PF,\n    cbrt: PF,\n    ceil: PF,\n    clz32: PF,\n    cos: PF,\n    cosh: PF,\n    exp: PF,\n    expm1: PF,\n    floor: PF,\n    fround: PF,\n    hypot: PF,\n    imul: PF,\n    log: PF,\n    log10: PF,\n    log1p: PF,\n    log2: PF,\n    max: PF,\n    min: PF,\n    pow: PF,\n    random: PF,\n    round: PF,\n    sign: PF,\n    sin: PF,\n    sinh: PF,\n    sqrt: PF,\n    tan: PF,\n    tanh: PF,\n    trunc: PF\n  },\n  NaN: O,\n  Number: {\n    __proto__: null,\n    [ValueProperties]: PURE,\n    isFinite: PF,\n    isInteger: PF,\n    isNaN: PF,\n    isSafeInteger: PF,\n    parseFloat: PF,\n    parseInt: PF,\n    prototype: O\n  },\n  Object: {\n    __proto__: null,\n    [ValueProperties]: PURE,\n    create: PF,\n    // Technically those can throw in certain situations, but we ignore this as\n    // code that relies on this will hopefully wrap this in a try-catch, which\n    // deoptimizes everything anyway\n    defineProperty: MUTATES_ARG_WITHOUT_ACCESSOR,\n    defineProperties: MUTATES_ARG_WITHOUT_ACCESSOR,\n    freeze: MUTATES_ARG_WITHOUT_ACCESSOR,\n    getOwnPropertyDescriptor: PF,\n    getOwnPropertyDescriptors: PF,\n    getOwnPropertyNames: PF,\n    getOwnPropertySymbols: PF,\n    getPrototypeOf: PF,\n    hasOwn: PF,\n    is: PF,\n    isExtensible: PF,\n    isFrozen: PF,\n    isSealed: PF,\n    keys: PF,\n    fromEntries: PF,\n    entries: PF,\n    prototype: O\n  },\n  parseFloat: PF,\n  parseInt: PF,\n  Promise: {\n    __proto__: null,\n    [ValueProperties]: IMPURE,\n    all: O,\n    allSettled: O,\n    any: O,\n    prototype: O,\n    race: O,\n    reject: O,\n    resolve: O\n  },\n  propertyIsEnumerable: O,\n  Proxy: O,\n  RangeError: PC,\n  ReferenceError: PC,\n  Reflect: O,\n  RegExp: PC,\n  Set: PC,\n  SharedArrayBuffer: C,\n  String: {\n    __proto__: null,\n    [ValueProperties]: PURE,\n    fromCharCode: PF,\n    fromCodePoint: PF,\n    prototype: O,\n    raw: PF\n  },\n  Symbol: {\n    __proto__: null,\n    [ValueProperties]: PURE,\n    for: PF,\n    keyFor: PF,\n    prototype: O,\n    toStringTag: {\n      __proto__: null,\n      [ValueProperties]: {\n        getLiteralValue() {\n          return SymbolToStringTag;\n        },\n        hasEffectsWhenCalled: returnTrue\n      }\n    }\n  },\n  SyntaxError: PC,\n  toLocaleString: O,\n  toString: O,\n  TypeError: PC,\n  Uint16Array: ARRAY_TYPE,\n  Uint32Array: ARRAY_TYPE,\n  Uint8Array: ARRAY_TYPE,\n  Uint8ClampedArray: ARRAY_TYPE,\n  // Technically, this is a global, but it needs special handling\n  // undefined: ?,\n  unescape: PF,\n  URIError: PC,\n  valueOf: O,\n  WeakMap: PC,\n  WeakSet: PC,\n  // Additional globals shared by Node and Browser that are not strictly part of the language\n  clearInterval: C,\n  clearTimeout: C,\n  console: O,\n  Intl: {\n    __proto__: null,\n    [ValueProperties]: IMPURE,\n    Collator: INTL_MEMBER,\n    DateTimeFormat: INTL_MEMBER,\n    ListFormat: INTL_MEMBER,\n    NumberFormat: INTL_MEMBER,\n    PluralRules: INTL_MEMBER,\n    RelativeTimeFormat: INTL_MEMBER\n  },\n  setInterval: C,\n  setTimeout: C,\n  TextDecoder: C,\n  TextEncoder: C,\n  URL: C,\n  URLSearchParams: C,\n  // Browser specific globals\n  AbortController: C,\n  AbortSignal: C,\n  addEventListener: O,\n  alert: O,\n  AnalyserNode: C,\n  Animation: C,\n  AnimationEvent: C,\n  applicationCache: O,\n  ApplicationCache: C,\n  ApplicationCacheErrorEvent: C,\n  atob: O,\n  Attr: C,\n  Audio: C,\n  AudioBuffer: C,\n  AudioBufferSourceNode: C,\n  AudioContext: C,\n  AudioDestinationNode: C,\n  AudioListener: C,\n  AudioNode: C,\n  AudioParam: C,\n  AudioProcessingEvent: C,\n  AudioScheduledSourceNode: C,\n  AudioWorkletNode: C,\n  BarProp: C,\n  BaseAudioContext: C,\n  BatteryManager: C,\n  BeforeUnloadEvent: C,\n  BiquadFilterNode: C,\n  Blob: C,\n  BlobEvent: C,\n  blur: O,\n  BroadcastChannel: C,\n  btoa: O,\n  ByteLengthQueuingStrategy: C,\n  Cache: C,\n  caches: O,\n  CacheStorage: C,\n  cancelAnimationFrame: O,\n  cancelIdleCallback: O,\n  CanvasCaptureMediaStreamTrack: C,\n  CanvasGradient: C,\n  CanvasPattern: C,\n  CanvasRenderingContext2D: C,\n  ChannelMergerNode: C,\n  ChannelSplitterNode: C,\n  CharacterData: C,\n  clientInformation: O,\n  ClipboardEvent: C,\n  close: O,\n  closed: O,\n  CloseEvent: C,\n  Comment: C,\n  CompositionEvent: C,\n  confirm: O,\n  ConstantSourceNode: C,\n  ConvolverNode: C,\n  CountQueuingStrategy: C,\n  createImageBitmap: O,\n  Credential: C,\n  CredentialsContainer: C,\n  crypto: O,\n  Crypto: C,\n  CryptoKey: C,\n  CSS: C,\n  CSSConditionRule: C,\n  CSSFontFaceRule: C,\n  CSSGroupingRule: C,\n  CSSImportRule: C,\n  CSSKeyframeRule: C,\n  CSSKeyframesRule: C,\n  CSSMediaRule: C,\n  CSSNamespaceRule: C,\n  CSSPageRule: C,\n  CSSRule: C,\n  CSSRuleList: C,\n  CSSStyleDeclaration: C,\n  CSSStyleRule: C,\n  CSSStyleSheet: C,\n  CSSSupportsRule: C,\n  CustomElementRegistry: C,\n  customElements: O,\n  CustomEvent: C,\n  DataTransfer: C,\n  DataTransferItem: C,\n  DataTransferItemList: C,\n  defaultstatus: O,\n  defaultStatus: O,\n  DelayNode: C,\n  DeviceMotionEvent: C,\n  DeviceOrientationEvent: C,\n  devicePixelRatio: O,\n  dispatchEvent: O,\n  document: O,\n  Document: C,\n  DocumentFragment: C,\n  DocumentType: C,\n  DOMError: C,\n  DOMException: C,\n  DOMImplementation: C,\n  DOMMatrix: C,\n  DOMMatrixReadOnly: C,\n  DOMParser: C,\n  DOMPoint: C,\n  DOMPointReadOnly: C,\n  DOMQuad: C,\n  DOMRect: C,\n  DOMRectReadOnly: C,\n  DOMStringList: C,\n  DOMStringMap: C,\n  DOMTokenList: C,\n  DragEvent: C,\n  DynamicsCompressorNode: C,\n  Element: C,\n  ErrorEvent: C,\n  Event: C,\n  EventSource: C,\n  EventTarget: C,\n  external: O,\n  fetch: O,\n  File: C,\n  FileList: C,\n  FileReader: C,\n  find: O,\n  focus: O,\n  FocusEvent: C,\n  FontFace: C,\n  FontFaceSetLoadEvent: C,\n  FormData: C,\n  frames: O,\n  GainNode: C,\n  Gamepad: C,\n  GamepadButton: C,\n  GamepadEvent: C,\n  getComputedStyle: O,\n  getSelection: O,\n  HashChangeEvent: C,\n  Headers: C,\n  history: O,\n  History: C,\n  HTMLAllCollection: C,\n  HTMLAnchorElement: C,\n  HTMLAreaElement: C,\n  HTMLAudioElement: C,\n  HTMLBaseElement: C,\n  HTMLBodyElement: C,\n  HTMLBRElement: C,\n  HTMLButtonElement: C,\n  HTMLCanvasElement: C,\n  HTMLCollection: C,\n  HTMLContentElement: C,\n  HTMLDataElement: C,\n  HTMLDataListElement: C,\n  HTMLDetailsElement: C,\n  HTMLDialogElement: C,\n  HTMLDirectoryElement: C,\n  HTMLDivElement: C,\n  HTMLDListElement: C,\n  HTMLDocument: C,\n  HTMLElement: C,\n  HTMLEmbedElement: C,\n  HTMLFieldSetElement: C,\n  HTMLFontElement: C,\n  HTMLFormControlsCollection: C,\n  HTMLFormElement: C,\n  HTMLFrameElement: C,\n  HTMLFrameSetElement: C,\n  HTMLHeadElement: C,\n  HTMLHeadingElement: C,\n  HTMLHRElement: C,\n  HTMLHtmlElement: C,\n  HTMLIFrameElement: C,\n  HTMLImageElement: C,\n  HTMLInputElement: C,\n  HTMLLabelElement: C,\n  HTMLLegendElement: C,\n  HTMLLIElement: C,\n  HTMLLinkElement: C,\n  HTMLMapElement: C,\n  HTMLMarqueeElement: C,\n  HTMLMediaElement: C,\n  HTMLMenuElement: C,\n  HTMLMetaElement: C,\n  HTMLMeterElement: C,\n  HTMLModElement: C,\n  HTMLObjectElement: C,\n  HTMLOListElement: C,\n  HTMLOptGroupElement: C,\n  HTMLOptionElement: C,\n  HTMLOptionsCollection: C,\n  HTMLOutputElement: C,\n  HTMLParagraphElement: C,\n  HTMLParamElement: C,\n  HTMLPictureElement: C,\n  HTMLPreElement: C,\n  HTMLProgressElement: C,\n  HTMLQuoteElement: C,\n  HTMLScriptElement: C,\n  HTMLSelectElement: C,\n  HTMLShadowElement: C,\n  HTMLSlotElement: C,\n  HTMLSourceElement: C,\n  HTMLSpanElement: C,\n  HTMLStyleElement: C,\n  HTMLTableCaptionElement: C,\n  HTMLTableCellElement: C,\n  HTMLTableColElement: C,\n  HTMLTableElement: C,\n  HTMLTableRowElement: C,\n  HTMLTableSectionElement: C,\n  HTMLTemplateElement: C,\n  HTMLTextAreaElement: C,\n  HTMLTimeElement: C,\n  HTMLTitleElement: C,\n  HTMLTrackElement: C,\n  HTMLUListElement: C,\n  HTMLUnknownElement: C,\n  HTMLVideoElement: C,\n  IDBCursor: C,\n  IDBCursorWithValue: C,\n  IDBDatabase: C,\n  IDBFactory: C,\n  IDBIndex: C,\n  IDBKeyRange: C,\n  IDBObjectStore: C,\n  IDBOpenDBRequest: C,\n  IDBRequest: C,\n  IDBTransaction: C,\n  IDBVersionChangeEvent: C,\n  IdleDeadline: C,\n  IIRFilterNode: C,\n  Image: C,\n  ImageBitmap: C,\n  ImageBitmapRenderingContext: C,\n  ImageCapture: C,\n  ImageData: C,\n  indexedDB: O,\n  innerHeight: O,\n  innerWidth: O,\n  InputEvent: C,\n  IntersectionObserver: C,\n  IntersectionObserverEntry: C,\n  isSecureContext: O,\n  KeyboardEvent: C,\n  KeyframeEffect: C,\n  length: O,\n  localStorage: O,\n  location: O,\n  Location: C,\n  locationbar: O,\n  matchMedia: O,\n  MediaDeviceInfo: C,\n  MediaDevices: C,\n  MediaElementAudioSourceNode: C,\n  MediaEncryptedEvent: C,\n  MediaError: C,\n  MediaKeyMessageEvent: C,\n  MediaKeySession: C,\n  MediaKeyStatusMap: C,\n  MediaKeySystemAccess: C,\n  MediaList: C,\n  MediaQueryList: C,\n  MediaQueryListEvent: C,\n  MediaRecorder: C,\n  MediaSettingsRange: C,\n  MediaSource: C,\n  MediaStream: C,\n  MediaStreamAudioDestinationNode: C,\n  MediaStreamAudioSourceNode: C,\n  MediaStreamEvent: C,\n  MediaStreamTrack: C,\n  MediaStreamTrackEvent: C,\n  menubar: O,\n  MessageChannel: C,\n  MessageEvent: C,\n  MessagePort: C,\n  MIDIAccess: C,\n  MIDIConnectionEvent: C,\n  MIDIInput: C,\n  MIDIInputMap: C,\n  MIDIMessageEvent: C,\n  MIDIOutput: C,\n  MIDIOutputMap: C,\n  MIDIPort: C,\n  MimeType: C,\n  MimeTypeArray: C,\n  MouseEvent: C,\n  moveBy: O,\n  moveTo: O,\n  MutationEvent: C,\n  MutationObserver: C,\n  MutationRecord: C,\n  name: O,\n  NamedNodeMap: C,\n  NavigationPreloadManager: C,\n  navigator: O,\n  Navigator: C,\n  NetworkInformation: C,\n  Node: C,\n  NodeFilter: O,\n  NodeIterator: C,\n  NodeList: C,\n  Notification: C,\n  OfflineAudioCompletionEvent: C,\n  OfflineAudioContext: C,\n  offscreenBuffering: O,\n  OffscreenCanvas: C,\n  open: O,\n  openDatabase: O,\n  Option: C,\n  origin: O,\n  OscillatorNode: C,\n  outerHeight: O,\n  outerWidth: O,\n  PageTransitionEvent: C,\n  pageXOffset: O,\n  pageYOffset: O,\n  PannerNode: C,\n  parent: O,\n  Path2D: C,\n  PaymentAddress: C,\n  PaymentRequest: C,\n  PaymentRequestUpdateEvent: C,\n  PaymentResponse: C,\n  performance: O,\n  Performance: C,\n  PerformanceEntry: C,\n  PerformanceLongTaskTiming: C,\n  PerformanceMark: C,\n  PerformanceMeasure: C,\n  PerformanceNavigation: C,\n  PerformanceNavigationTiming: C,\n  PerformanceObserver: C,\n  PerformanceObserverEntryList: C,\n  PerformancePaintTiming: C,\n  PerformanceResourceTiming: C,\n  PerformanceTiming: C,\n  PeriodicWave: C,\n  Permissions: C,\n  PermissionStatus: C,\n  personalbar: O,\n  PhotoCapabilities: C,\n  Plugin: C,\n  PluginArray: C,\n  PointerEvent: C,\n  PopStateEvent: C,\n  postMessage: O,\n  Presentation: C,\n  PresentationAvailability: C,\n  PresentationConnection: C,\n  PresentationConnectionAvailableEvent: C,\n  PresentationConnectionCloseEvent: C,\n  PresentationConnectionList: C,\n  PresentationReceiver: C,\n  PresentationRequest: C,\n  print: O,\n  ProcessingInstruction: C,\n  ProgressEvent: C,\n  PromiseRejectionEvent: C,\n  prompt: O,\n  PushManager: C,\n  PushSubscription: C,\n  PushSubscriptionOptions: C,\n  queueMicrotask: O,\n  RadioNodeList: C,\n  Range: C,\n  ReadableStream: C,\n  RemotePlayback: C,\n  removeEventListener: O,\n  Request: C,\n  requestAnimationFrame: O,\n  requestIdleCallback: O,\n  resizeBy: O,\n  ResizeObserver: C,\n  ResizeObserverEntry: C,\n  resizeTo: O,\n  Response: C,\n  RTCCertificate: C,\n  RTCDataChannel: C,\n  RTCDataChannelEvent: C,\n  RTCDtlsTransport: C,\n  RTCIceCandidate: C,\n  RTCIceTransport: C,\n  RTCPeerConnection: C,\n  RTCPeerConnectionIceEvent: C,\n  RTCRtpReceiver: C,\n  RTCRtpSender: C,\n  RTCSctpTransport: C,\n  RTCSessionDescription: C,\n  RTCStatsReport: C,\n  RTCTrackEvent: C,\n  screen: O,\n  Screen: C,\n  screenLeft: O,\n  ScreenOrientation: C,\n  screenTop: O,\n  screenX: O,\n  screenY: O,\n  ScriptProcessorNode: C,\n  scroll: O,\n  scrollbars: O,\n  scrollBy: O,\n  scrollTo: O,\n  scrollX: O,\n  scrollY: O,\n  SecurityPolicyViolationEvent: C,\n  Selection: C,\n  ServiceWorker: C,\n  ServiceWorkerContainer: C,\n  ServiceWorkerRegistration: C,\n  sessionStorage: O,\n  ShadowRoot: C,\n  SharedWorker: C,\n  SourceBuffer: C,\n  SourceBufferList: C,\n  speechSynthesis: O,\n  SpeechSynthesisEvent: C,\n  SpeechSynthesisUtterance: C,\n  StaticRange: C,\n  status: O,\n  statusbar: O,\n  StereoPannerNode: C,\n  stop: O,\n  Storage: C,\n  StorageEvent: C,\n  StorageManager: C,\n  styleMedia: O,\n  StyleSheet: C,\n  StyleSheetList: C,\n  SubtleCrypto: C,\n  SVGAElement: C,\n  SVGAngle: C,\n  SVGAnimatedAngle: C,\n  SVGAnimatedBoolean: C,\n  SVGAnimatedEnumeration: C,\n  SVGAnimatedInteger: C,\n  SVGAnimatedLength: C,\n  SVGAnimatedLengthList: C,\n  SVGAnimatedNumber: C,\n  SVGAnimatedNumberList: C,\n  SVGAnimatedPreserveAspectRatio: C,\n  SVGAnimatedRect: C,\n  SVGAnimatedString: C,\n  SVGAnimatedTransformList: C,\n  SVGAnimateElement: C,\n  SVGAnimateMotionElement: C,\n  SVGAnimateTransformElement: C,\n  SVGAnimationElement: C,\n  SVGCircleElement: C,\n  SVGClipPathElement: C,\n  SVGComponentTransferFunctionElement: C,\n  SVGDefsElement: C,\n  SVGDescElement: C,\n  SVGDiscardElement: C,\n  SVGElement: C,\n  SVGEllipseElement: C,\n  SVGFEBlendElement: C,\n  SVGFEColorMatrixElement: C,\n  SVGFEComponentTransferElement: C,\n  SVGFECompositeElement: C,\n  SVGFEConvolveMatrixElement: C,\n  SVGFEDiffuseLightingElement: C,\n  SVGFEDisplacementMapElement: C,\n  SVGFEDistantLightElement: C,\n  SVGFEDropShadowElement: C,\n  SVGFEFloodElement: C,\n  SVGFEFuncAElement: C,\n  SVGFEFuncBElement: C,\n  SVGFEFuncGElement: C,\n  SVGFEFuncRElement: C,\n  SVGFEGaussianBlurElement: C,\n  SVGFEImageElement: C,\n  SVGFEMergeElement: C,\n  SVGFEMergeNodeElement: C,\n  SVGFEMorphologyElement: C,\n  SVGFEOffsetElement: C,\n  SVGFEPointLightElement: C,\n  SVGFESpecularLightingElement: C,\n  SVGFESpotLightElement: C,\n  SVGFETileElement: C,\n  SVGFETurbulenceElement: C,\n  SVGFilterElement: C,\n  SVGForeignObjectElement: C,\n  SVGGElement: C,\n  SVGGeometryElement: C,\n  SVGGradientElement: C,\n  SVGGraphicsElement: C,\n  SVGImageElement: C,\n  SVGLength: C,\n  SVGLengthList: C,\n  SVGLinearGradientElement: C,\n  SVGLineElement: C,\n  SVGMarkerElement: C,\n  SVGMaskElement: C,\n  SVGMatrix: C,\n  SVGMetadataElement: C,\n  SVGMPathElement: C,\n  SVGNumber: C,\n  SVGNumberList: C,\n  SVGPathElement: C,\n  SVGPatternElement: C,\n  SVGPoint: C,\n  SVGPointList: C,\n  SVGPolygonElement: C,\n  SVGPolylineElement: C,\n  SVGPreserveAspectRatio: C,\n  SVGRadialGradientElement: C,\n  SVGRect: C,\n  SVGRectElement: C,\n  SVGScriptElement: C,\n  SVGSetElement: C,\n  SVGStopElement: C,\n  SVGStringList: C,\n  SVGStyleElement: C,\n  SVGSVGElement: C,\n  SVGSwitchElement: C,\n  SVGSymbolElement: C,\n  SVGTextContentElement: C,\n  SVGTextElement: C,\n  SVGTextPathElement: C,\n  SVGTextPositioningElement: C,\n  SVGTitleElement: C,\n  SVGTransform: C,\n  SVGTransformList: C,\n  SVGTSpanElement: C,\n  SVGUnitTypes: C,\n  SVGUseElement: C,\n  SVGViewElement: C,\n  TaskAttributionTiming: C,\n  Text: C,\n  TextEvent: C,\n  TextMetrics: C,\n  TextTrack: C,\n  TextTrackCue: C,\n  TextTrackCueList: C,\n  TextTrackList: C,\n  TimeRanges: C,\n  toolbar: O,\n  top: O,\n  Touch: C,\n  TouchEvent: C,\n  TouchList: C,\n  TrackEvent: C,\n  TransitionEvent: C,\n  TreeWalker: C,\n  UIEvent: C,\n  ValidityState: C,\n  visualViewport: O,\n  VisualViewport: C,\n  VTTCue: C,\n  WaveShaperNode: C,\n  WebAssembly: O,\n  WebGL2RenderingContext: C,\n  WebGLActiveInfo: C,\n  WebGLBuffer: C,\n  WebGLContextEvent: C,\n  WebGLFramebuffer: C,\n  WebGLProgram: C,\n  WebGLQuery: C,\n  WebGLRenderbuffer: C,\n  WebGLRenderingContext: C,\n  WebGLSampler: C,\n  WebGLShader: C,\n  WebGLShaderPrecisionFormat: C,\n  WebGLSync: C,\n  WebGLTexture: C,\n  WebGLTransformFeedback: C,\n  WebGLUniformLocation: C,\n  WebGLVertexArrayObject: C,\n  WebSocket: C,\n  WheelEvent: C,\n  Window: C,\n  Worker: C,\n  WritableStream: C,\n  XMLDocument: C,\n  XMLHttpRequest: C,\n  XMLHttpRequestEventTarget: C,\n  XMLHttpRequestUpload: C,\n  XMLSerializer: C,\n  XPathEvaluator: C,\n  XPathExpression: C,\n  XPathResult: C,\n  XSLTProcessor: C\n};\nfor (const global of ['window', 'global', 'self', 'globalThis']) {\n  knownGlobals[global] = knownGlobals;\n}\nfunction getGlobalAtPath(path) {\n  let currentGlobal = knownGlobals;\n  for (const pathSegment of path) {\n    if (typeof pathSegment !== 'string') {\n      return null;\n    }\n    currentGlobal = currentGlobal[pathSegment];\n    if (!currentGlobal) {\n      return null;\n    }\n  }\n  return currentGlobal[ValueProperties];\n}\nclass GlobalVariable extends Variable {\n  constructor() {\n    super(...arguments);\n    // Ensure we use live-bindings for globals as we do not know if they have\n    // been reassigned\n    this.isReassigned = true;\n  }\n  getLiteralValueAtPath(path, _recursionTracker, _origin) {\n    const globalAtPath = getGlobalAtPath([this.name, ...path]);\n    return globalAtPath ? globalAtPath.getLiteralValue() : UnknownValue;\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    switch (interaction.type) {\n      case INTERACTION_ACCESSED:\n        {\n          if (path.length === 0) {\n            // Technically, \"undefined\" is a global variable of sorts\n            return this.name !== 'undefined' && !getGlobalAtPath([this.name]);\n          }\n          return !getGlobalAtPath([this.name, ...path].slice(0, -1));\n        }\n      case INTERACTION_ASSIGNED:\n        {\n          return true;\n        }\n      case INTERACTION_CALLED:\n        {\n          const globalAtPath = getGlobalAtPath([this.name, ...path]);\n          return !globalAtPath || globalAtPath.hasEffectsWhenCalled(interaction, context);\n        }\n    }\n  }\n}\nconst tdzVariableKinds = {\n  __proto__: null,\n  class: true,\n  const: true,\n  let: true,\n  var: true\n};\nclass Identifier extends NodeBase {\n  constructor() {\n    super(...arguments);\n    this.variable = null;\n    this.isTDZAccess = null;\n  }\n  addExportedVariables(variables, exportNamesByVariable) {\n    if (exportNamesByVariable.has(this.variable)) {\n      variables.push(this.variable);\n    }\n  }\n  bind() {\n    if (!this.variable && is_reference(this, this.parent)) {\n      this.variable = this.scope.findVariable(this.name);\n      this.variable.addReference(this);\n    }\n  }\n  declare(kind, init) {\n    let variable;\n    const {\n      treeshake\n    } = this.context.options;\n    switch (kind) {\n      case 'var':\n        {\n          variable = this.scope.addDeclaration(this, this.context, init, true);\n          if (treeshake && treeshake.correctVarValueBeforeDeclaration) {\n            // Necessary to make sure the init is deoptimized. We cannot call deoptimizePath here.\n            variable.markInitializersForDeoptimization();\n          }\n          break;\n        }\n      case 'function':\n        {\n          // in strict mode, functions are only hoisted within a scope but not across block scopes\n          variable = this.scope.addDeclaration(this, this.context, init, false);\n          break;\n        }\n      case 'let':\n      case 'const':\n      case 'class':\n        {\n          variable = this.scope.addDeclaration(this, this.context, init, false);\n          break;\n        }\n      case 'parameter':\n        {\n          variable = this.scope.addParameterDeclaration(this);\n          break;\n        }\n      /* istanbul ignore next */\n      default:\n        {\n          /* istanbul ignore next */\n          throw new Error(`Internal Error: Unexpected identifier kind ${kind}.`);\n        }\n    }\n    variable.kind = kind;\n    return [this.variable = variable];\n  }\n  deoptimizePath(path) {\n    if (path.length === 0 && !this.scope.contains(this.name)) {\n      this.disallowImportReassignment();\n    }\n    // We keep conditional chaining because an unknown Node could have an\n    // Identifier as property that might be deoptimized by default\n    this.variable?.deoptimizePath(path);\n  }\n  deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n    this.variable.deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n  }\n  getLiteralValueAtPath(path, recursionTracker, origin) {\n    return this.getVariableRespectingTDZ().getLiteralValueAtPath(path, recursionTracker, origin);\n  }\n  getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n    const [expression, isPure] = this.getVariableRespectingTDZ().getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\n    return [expression, isPure || this.isPureFunction(path)];\n  }\n  hasEffects(context) {\n    if (!this.deoptimized) this.applyDeoptimizations();\n    if (this.isPossibleTDZ() && this.variable.kind !== 'var') {\n      return true;\n    }\n    return this.context.options.treeshake.unknownGlobalSideEffects && this.variable instanceof GlobalVariable && !this.isPureFunction(EMPTY_PATH) && this.variable.hasEffectsOnInteractionAtPath(EMPTY_PATH, NODE_INTERACTION_UNKNOWN_ACCESS, context);\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    switch (interaction.type) {\n      case INTERACTION_ACCESSED:\n        {\n          return this.variable !== null && !this.isPureFunction(path) && this.getVariableRespectingTDZ().hasEffectsOnInteractionAtPath(path, interaction, context);\n        }\n      case INTERACTION_ASSIGNED:\n        {\n          return (path.length > 0 ? this.getVariableRespectingTDZ() : this.variable).hasEffectsOnInteractionAtPath(path, interaction, context);\n        }\n      case INTERACTION_CALLED:\n        {\n          return !this.isPureFunction(path) && this.getVariableRespectingTDZ().hasEffectsOnInteractionAtPath(path, interaction, context);\n        }\n    }\n  }\n  include() {\n    if (!this.deoptimized) this.applyDeoptimizations();\n    if (!this.included) {\n      this.included = true;\n      if (this.variable !== null) {\n        this.context.includeVariableInModule(this.variable);\n      }\n    }\n  }\n  includeCallArguments(context, parameters) {\n    this.variable.includeCallArguments(context, parameters);\n  }\n  isPossibleTDZ() {\n    // return cached value to avoid issues with the next tree-shaking pass\n    if (this.isTDZAccess !== null) return this.isTDZAccess;\n    if (!(this.variable instanceof LocalVariable && this.variable.kind && this.variable.kind in tdzVariableKinds &&\n    // we ignore possible TDZs due to circular module dependencies as\n    // otherwise we get many false positives\n    this.variable.module === this.context.module)) {\n      return this.isTDZAccess = false;\n    }\n    let decl_id;\n    if (this.variable.declarations && this.variable.declarations.length === 1 && (decl_id = this.variable.declarations[0]) && this.start < decl_id.start && closestParentFunctionOrProgram(this) === closestParentFunctionOrProgram(decl_id)) {\n      // a variable accessed before its declaration\n      // in the same function or at top level of module\n      return this.isTDZAccess = true;\n    }\n    if (!this.variable.initReached) {\n      // Either a const/let TDZ violation or\n      // var use before declaration was encountered.\n      return this.isTDZAccess = true;\n    }\n    return this.isTDZAccess = false;\n  }\n  markDeclarationReached() {\n    this.variable.initReached = true;\n  }\n  render(code, _ref17) {\n    let {\n      snippets: {\n        getPropertyAccess\n      },\n      useOriginalName\n    } = _ref17;\n    let {\n      renderedParentType,\n      isCalleeOfRenderedParent,\n      isShorthandProperty\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : BLANK;\n    if (this.variable) {\n      const name = this.variable.getName(getPropertyAccess, useOriginalName);\n      if (name !== this.name) {\n        code.overwrite(this.start, this.end, name, {\n          contentOnly: true,\n          storeName: true\n        });\n        if (isShorthandProperty) {\n          code.prependRight(this.start, `${this.name}: `);\n        }\n      }\n      // In strict mode, any variable named \"eval\" must be the actual \"eval\" function\n      if (name === 'eval' && renderedParentType === CallExpression$1 && isCalleeOfRenderedParent) {\n        code.appendRight(this.start, '0, ');\n      }\n    }\n  }\n  applyDeoptimizations() {\n    this.deoptimized = true;\n    if (this.variable instanceof LocalVariable) {\n      this.variable.consolidateInitializers();\n      this.context.requestTreeshakingPass();\n    }\n  }\n  disallowImportReassignment() {\n    return this.context.error(errorIllegalImportReassignment(this.name, this.context.module.id), this.start);\n  }\n  getVariableRespectingTDZ() {\n    if (this.isPossibleTDZ()) {\n      return UNKNOWN_EXPRESSION;\n    }\n    return this.variable;\n  }\n  isPureFunction(path) {\n    let currentPureFunction = this.context.manualPureFunctions[this.name];\n    for (const segment of path) {\n      if (currentPureFunction) {\n        if (currentPureFunction[PureFunctionKey]) {\n          return true;\n        }\n        currentPureFunction = currentPureFunction[segment];\n      } else {\n        return false;\n      }\n    }\n    return currentPureFunction?.[PureFunctionKey];\n  }\n}\nfunction closestParentFunctionOrProgram(node) {\n  while (node && !/^Program|Function/.test(node.type)) {\n    node = node.parent;\n  }\n  // one of: ArrowFunctionExpression, FunctionDeclaration, FunctionExpression or Program\n  return node;\n}\nfunction treeshakeNode(node, code, start, end) {\n  code.remove(start, end);\n  if (node.annotations) {\n    for (const annotation of node.annotations) {\n      if (annotation.start < start) {\n        code.remove(annotation.start, annotation.end);\n      } else {\n        return;\n      }\n    }\n  }\n}\nfunction removeAnnotations(node, code) {\n  if (!node.annotations && node.parent.type === ExpressionStatement$1) {\n    node = node.parent;\n  }\n  if (node.annotations) {\n    for (const annotation of node.annotations) {\n      code.remove(annotation.start, annotation.end);\n    }\n  }\n}\nconst NO_SEMICOLON = {\n  isNoStatement: true\n};\n// This assumes there are only white-space and comments between start and the string we are looking for\nfunction findFirstOccurrenceOutsideComment(code, searchString) {\n  let start = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let searchPos, charCodeAfterSlash;\n  searchPos = code.indexOf(searchString, start);\n  while (true) {\n    start = code.indexOf('/', start);\n    if (start === -1 || start >= searchPos) return searchPos;\n    charCodeAfterSlash = code.charCodeAt(++start);\n    ++start;\n    // With our assumption, '/' always starts a comment. Determine comment type:\n    start = charCodeAfterSlash === 47 /*\"/\"*/ ? code.indexOf('\\n', start) + 1 : code.indexOf('*/', start) + 2;\n    if (start > searchPos) {\n      searchPos = code.indexOf(searchString, start);\n    }\n  }\n}\nconst NON_WHITESPACE = /\\S/g;\nfunction findNonWhiteSpace(code, index) {\n  NON_WHITESPACE.lastIndex = index;\n  const result = NON_WHITESPACE.exec(code);\n  return result.index;\n}\n// This assumes \"code\" only contains white-space and comments\n// Returns position of line-comment if applicable\nfunction findFirstLineBreakOutsideComment(code) {\n  let lineBreakPos,\n    charCodeAfterSlash,\n    start = 0;\n  lineBreakPos = code.indexOf('\\n', start);\n  while (true) {\n    start = code.indexOf('/', start);\n    if (start === -1 || start > lineBreakPos) return [lineBreakPos, lineBreakPos + 1];\n    // With our assumption, '/' always starts a comment. Determine comment type:\n    charCodeAfterSlash = code.charCodeAt(start + 1);\n    if (charCodeAfterSlash === 47 /*\"/\"*/) return [start, lineBreakPos + 1];\n    start = code.indexOf('*/', start + 3) + 2;\n    if (start > lineBreakPos) {\n      lineBreakPos = code.indexOf('\\n', start);\n    }\n  }\n}\nfunction renderStatementList(statements, code, start, end, options) {\n  let currentNode, currentNodeStart, currentNodeNeedsBoundaries, nextNodeStart;\n  let nextNode = statements[0];\n  let nextNodeNeedsBoundaries = !nextNode.included || nextNode.needsBoundaries;\n  if (nextNodeNeedsBoundaries) {\n    nextNodeStart = start + findFirstLineBreakOutsideComment(code.original.slice(start, nextNode.start))[1];\n  }\n  for (let nextIndex = 1; nextIndex <= statements.length; nextIndex++) {\n    currentNode = nextNode;\n    currentNodeStart = nextNodeStart;\n    currentNodeNeedsBoundaries = nextNodeNeedsBoundaries;\n    nextNode = statements[nextIndex];\n    nextNodeNeedsBoundaries = nextNode === undefined ? false : !nextNode.included || nextNode.needsBoundaries;\n    if (currentNodeNeedsBoundaries || nextNodeNeedsBoundaries) {\n      nextNodeStart = currentNode.end + findFirstLineBreakOutsideComment(code.original.slice(currentNode.end, nextNode === undefined ? end : nextNode.start))[1];\n      if (currentNode.included) {\n        currentNodeNeedsBoundaries ? currentNode.render(code, options, {\n          end: nextNodeStart,\n          start: currentNodeStart\n        }) : currentNode.render(code, options);\n      } else {\n        treeshakeNode(currentNode, code, currentNodeStart, nextNodeStart);\n      }\n    } else {\n      currentNode.render(code, options);\n    }\n  }\n}\n// This assumes that the first character is not part of the first node\nfunction getCommaSeparatedNodesWithBoundaries(nodes, code, start, end) {\n  const splitUpNodes = [];\n  let node, nextNodeStart, contentEnd, char;\n  let separator = start - 1;\n  for (const nextNode of nodes) {\n    if (node !== undefined) {\n      separator = node.end + findFirstOccurrenceOutsideComment(code.original.slice(node.end, nextNode.start), ',');\n    }\n    nextNodeStart = contentEnd = separator + 1 + findFirstLineBreakOutsideComment(code.original.slice(separator + 1, nextNode.start))[1];\n    while (char = code.original.charCodeAt(nextNodeStart), char === 32 /*\" \"*/ || char === 9 /*\"\\t\"*/ || char === 10 /*\"\\n\"*/ || char === 13 /*\"\\r\"*/) nextNodeStart++;\n    if (node !== undefined) {\n      splitUpNodes.push({\n        contentEnd,\n        end: nextNodeStart,\n        node,\n        separator,\n        start\n      });\n    }\n    node = nextNode;\n    start = nextNodeStart;\n  }\n  splitUpNodes.push({\n    contentEnd: end,\n    end,\n    node: node,\n    separator: null,\n    start\n  });\n  return splitUpNodes;\n}\n// This assumes there are only white-space and comments between start and end\nfunction removeLineBreaks(code, start, end) {\n  while (true) {\n    const [removeStart, removeEnd] = findFirstLineBreakOutsideComment(code.original.slice(start, end));\n    if (removeStart === -1) {\n      break;\n    }\n    code.remove(start + removeStart, start += removeEnd);\n  }\n}\nclass BlockScope extends ChildScope {\n  addDeclaration(identifier, context, init, isHoisted) {\n    if (isHoisted) {\n      const variable = this.parent.addDeclaration(identifier, context, init, isHoisted);\n      // Necessary to make sure the init is deoptimized for conditional declarations.\n      // We cannot call deoptimizePath here.\n      variable.markInitializersForDeoptimization();\n      return variable;\n    } else {\n      return super.addDeclaration(identifier, context, init, false);\n    }\n  }\n}\nclass ExpressionStatement extends NodeBase {\n  initialise() {\n    if (this.directive && this.directive !== 'use strict' && this.parent.type === Program$1) {\n      this.context.warn(\n      // This is necessary, because either way (deleting or not) can lead to errors.\n      errorModuleLevelDirective(this.directive, this.context.module.id), this.start);\n    }\n  }\n  render(code, options) {\n    super.render(code, options);\n    if (this.included) this.insertSemicolon(code);\n  }\n  shouldBeIncluded(context) {\n    if (this.directive && this.directive !== 'use strict') return this.parent.type !== Program$1;\n    return super.shouldBeIncluded(context);\n  }\n  applyDeoptimizations() {}\n}\nclass BlockStatement extends NodeBase {\n  constructor() {\n    super(...arguments);\n    this.directlyIncluded = false;\n  }\n  addImplicitReturnExpressionToScope() {\n    const lastStatement = this.body[this.body.length - 1];\n    if (!lastStatement || lastStatement.type !== ReturnStatement$1) {\n      this.scope.addReturnExpression(UNKNOWN_EXPRESSION);\n    }\n  }\n  createScope(parentScope) {\n    this.scope = this.parent.preventChildBlockScope ? parentScope : new BlockScope(parentScope);\n  }\n  hasEffects(context) {\n    if (this.deoptimizeBody) return true;\n    for (const node of this.body) {\n      if (context.brokenFlow) break;\n      if (node.hasEffects(context)) return true;\n    }\n    return false;\n  }\n  include(context, includeChildrenRecursively) {\n    if (!(this.deoptimizeBody && this.directlyIncluded)) {\n      this.included = true;\n      this.directlyIncluded = true;\n      if (this.deoptimizeBody) includeChildrenRecursively = true;\n      for (const node of this.body) {\n        if (includeChildrenRecursively || node.shouldBeIncluded(context)) node.include(context, includeChildrenRecursively);\n      }\n    }\n  }\n  initialise() {\n    const firstBodyStatement = this.body[0];\n    this.deoptimizeBody = firstBodyStatement instanceof ExpressionStatement && firstBodyStatement.directive === 'use asm';\n  }\n  render(code, options) {\n    if (this.body.length > 0) {\n      renderStatementList(this.body, code, this.start + 1, this.end - 1, options);\n    } else {\n      super.render(code, options);\n    }\n  }\n}\nclass RestElement extends NodeBase {\n  constructor() {\n    super(...arguments);\n    this.declarationInit = null;\n  }\n  addExportedVariables(variables, exportNamesByVariable) {\n    this.argument.addExportedVariables(variables, exportNamesByVariable);\n  }\n  declare(kind, init) {\n    this.declarationInit = init;\n    return this.argument.declare(kind, UNKNOWN_EXPRESSION);\n  }\n  deoptimizePath(path) {\n    path.length === 0 && this.argument.deoptimizePath(EMPTY_PATH);\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    return path.length > 0 || this.argument.hasEffectsOnInteractionAtPath(EMPTY_PATH, interaction, context);\n  }\n  markDeclarationReached() {\n    this.argument.markDeclarationReached();\n  }\n  applyDeoptimizations() {\n    this.deoptimized = true;\n    if (this.declarationInit !== null) {\n      this.declarationInit.deoptimizePath([UnknownKey, UnknownKey]);\n      this.context.requestTreeshakingPass();\n    }\n  }\n}\nclass FunctionBase extends NodeBase {\n  constructor() {\n    super(...arguments);\n    this.objectEntity = null;\n    this.deoptimizedReturn = false;\n  }\n  deoptimizePath(path) {\n    this.getObjectEntity().deoptimizePath(path);\n    if (path.length === 1 && path[0] === UnknownKey) {\n      // A reassignment of UNKNOWN_PATH is considered equivalent to having lost track\n      // which means the return expression needs to be reassigned\n      this.scope.getReturnExpression().deoptimizePath(UNKNOWN_PATH);\n    }\n  }\n  deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n    if (path.length > 0) {\n      this.getObjectEntity().deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n    }\n  }\n  getLiteralValueAtPath(path, recursionTracker, origin) {\n    return this.getObjectEntity().getLiteralValueAtPath(path, recursionTracker, origin);\n  }\n  getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n    if (path.length > 0) {\n      return this.getObjectEntity().getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\n    }\n    if (this.async) {\n      if (!this.deoptimizedReturn) {\n        this.deoptimizedReturn = true;\n        this.scope.getReturnExpression().deoptimizePath(UNKNOWN_PATH);\n        this.context.requestTreeshakingPass();\n      }\n      return UNKNOWN_RETURN_EXPRESSION;\n    }\n    return [this.scope.getReturnExpression(), false];\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    if (path.length > 0 || interaction.type !== INTERACTION_CALLED) {\n      return this.getObjectEntity().hasEffectsOnInteractionAtPath(path, interaction, context);\n    }\n    if (this.async) {\n      const {\n        propertyReadSideEffects\n      } = this.context.options.treeshake;\n      const returnExpression = this.scope.getReturnExpression();\n      if (returnExpression.hasEffectsOnInteractionAtPath(['then'], NODE_INTERACTION_UNKNOWN_CALL, context) || propertyReadSideEffects && (propertyReadSideEffects === 'always' || returnExpression.hasEffectsOnInteractionAtPath(['then'], NODE_INTERACTION_UNKNOWN_ACCESS, context))) {\n        return true;\n      }\n    }\n    for (const parameter of this.params) {\n      if (parameter.hasEffects(context)) return true;\n    }\n    return false;\n  }\n  include(context, includeChildrenRecursively) {\n    if (!this.deoptimized) this.applyDeoptimizations();\n    this.included = true;\n    const {\n      brokenFlow\n    } = context;\n    context.brokenFlow = BROKEN_FLOW_NONE;\n    this.body.include(context, includeChildrenRecursively);\n    context.brokenFlow = brokenFlow;\n  }\n  includeCallArguments(context, parameters) {\n    this.scope.includeCallArguments(context, parameters);\n  }\n  initialise() {\n    this.scope.addParameterVariables(this.params.map(parameter => parameter.declare('parameter', UNKNOWN_EXPRESSION)), this.params[this.params.length - 1] instanceof RestElement);\n    if (this.body instanceof BlockStatement) {\n      this.body.addImplicitReturnExpressionToScope();\n    } else {\n      this.scope.addReturnExpression(this.body);\n    }\n  }\n  parseNode(esTreeNode) {\n    if (esTreeNode.body.type === BlockStatement$1) {\n      this.body = new BlockStatement(esTreeNode.body, this, this.scope.hoistedBodyVarScope);\n    }\n    super.parseNode(esTreeNode);\n  }\n  applyDeoptimizations() {}\n}\nFunctionBase.prototype.preventChildBlockScope = true;\nclass ArrowFunctionExpression extends FunctionBase {\n  constructor() {\n    super(...arguments);\n    this.objectEntity = null;\n  }\n  createScope(parentScope) {\n    this.scope = new ReturnValueScope(parentScope, this.context);\n  }\n  hasEffects() {\n    if (!this.deoptimized) this.applyDeoptimizations();\n    return false;\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    if (super.hasEffectsOnInteractionAtPath(path, interaction, context)) return true;\n    if (interaction.type === INTERACTION_CALLED) {\n      const {\n        ignore,\n        brokenFlow\n      } = context;\n      context.ignore = {\n        breaks: false,\n        continues: false,\n        labels: new Set(),\n        returnYield: true,\n        this: false\n      };\n      if (this.body.hasEffects(context)) return true;\n      context.ignore = ignore;\n      context.brokenFlow = brokenFlow;\n    }\n    return false;\n  }\n  include(context, includeChildrenRecursively) {\n    super.include(context, includeChildrenRecursively);\n    for (const parameter of this.params) {\n      if (!(parameter instanceof Identifier)) {\n        parameter.include(context, includeChildrenRecursively);\n      }\n    }\n  }\n  getObjectEntity() {\n    if (this.objectEntity !== null) {\n      return this.objectEntity;\n    }\n    return this.objectEntity = new ObjectEntity([], OBJECT_PROTOTYPE);\n  }\n}\nfunction getSystemExportStatement(exportedVariables, _ref18) {\n  let {\n    exportNamesByVariable,\n    snippets: {\n      _,\n      getObject,\n      getPropertyAccess\n    }\n  } = _ref18;\n  let modifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  if (exportedVariables.length === 1 && exportNamesByVariable.get(exportedVariables[0]).length === 1) {\n    const variable = exportedVariables[0];\n    return `exports('${exportNamesByVariable.get(variable)}',${_}${variable.getName(getPropertyAccess)}${modifier})`;\n  } else {\n    const fields = [];\n    for (const variable of exportedVariables) {\n      for (const exportName of exportNamesByVariable.get(variable)) {\n        fields.push([exportName, variable.getName(getPropertyAccess) + modifier]);\n      }\n    }\n    return `exports(${getObject(fields, {\n      lineBreakIndent: null\n    })})`;\n  }\n}\nfunction renderSystemExportExpression(exportedVariable, expressionStart, expressionEnd, code, _ref19) {\n  let {\n    exportNamesByVariable,\n    snippets: {\n      _\n    }\n  } = _ref19;\n  code.prependRight(expressionStart, `exports('${exportNamesByVariable.get(exportedVariable)}',${_}`);\n  code.appendLeft(expressionEnd, ')');\n}\nfunction renderSystemExportFunction(exportedVariables, expressionStart, expressionEnd, needsParens, code, options) {\n  const {\n    _,\n    getDirectReturnIifeLeft\n  } = options.snippets;\n  code.prependRight(expressionStart, getDirectReturnIifeLeft(['v'], `${getSystemExportStatement(exportedVariables, options)},${_}v`, {\n    needsArrowReturnParens: true,\n    needsWrappedFunction: needsParens\n  }));\n  code.appendLeft(expressionEnd, ')');\n}\nfunction renderSystemExportSequenceAfterExpression(exportedVariable, expressionStart, expressionEnd, needsParens, code, options) {\n  const {\n    _,\n    getPropertyAccess\n  } = options.snippets;\n  code.appendLeft(expressionEnd, `,${_}${getSystemExportStatement([exportedVariable], options)},${_}${exportedVariable.getName(getPropertyAccess)}`);\n  if (needsParens) {\n    code.prependRight(expressionStart, '(');\n    code.appendLeft(expressionEnd, ')');\n  }\n}\nfunction renderSystemExportSequenceBeforeExpression(exportedVariable, expressionStart, expressionEnd, needsParens, code, options, modifier) {\n  const {\n    _\n  } = options.snippets;\n  code.prependRight(expressionStart, `${getSystemExportStatement([exportedVariable], options, modifier)},${_}`);\n  if (needsParens) {\n    code.prependRight(expressionStart, '(');\n    code.appendLeft(expressionEnd, ')');\n  }\n}\nclass ObjectPattern extends NodeBase {\n  addExportedVariables(variables, exportNamesByVariable) {\n    for (const property of this.properties) {\n      if (property.type === Property$1) {\n        property.value.addExportedVariables(variables, exportNamesByVariable);\n      } else {\n        property.argument.addExportedVariables(variables, exportNamesByVariable);\n      }\n    }\n  }\n  declare(kind, init) {\n    const variables = [];\n    for (const property of this.properties) {\n      variables.push(...property.declare(kind, init));\n    }\n    return variables;\n  }\n  deoptimizePath(path) {\n    if (path.length === 0) {\n      for (const property of this.properties) {\n        property.deoptimizePath(path);\n      }\n    }\n  }\n  hasEffectsOnInteractionAtPath(\n  // At the moment, this is only triggered for assignment left-hand sides,\n  // where the path is empty\n  _path, interaction, context) {\n    for (const property of this.properties) {\n      if (property.hasEffectsOnInteractionAtPath(EMPTY_PATH, interaction, context)) return true;\n    }\n    return false;\n  }\n  markDeclarationReached() {\n    for (const property of this.properties) {\n      property.markDeclarationReached();\n    }\n  }\n}\nclass AssignmentExpression extends NodeBase {\n  hasEffects(context) {\n    const {\n      deoptimized,\n      left,\n      operator,\n      right\n    } = this;\n    if (!deoptimized) this.applyDeoptimizations();\n    // MemberExpressions do not access the property before assignments if the\n    // operator is '='.\n    return right.hasEffects(context) || left.hasEffectsAsAssignmentTarget(context, operator !== '=');\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    return this.right.hasEffectsOnInteractionAtPath(path, interaction, context);\n  }\n  include(context, includeChildrenRecursively) {\n    const {\n      deoptimized,\n      left,\n      right,\n      operator\n    } = this;\n    if (!deoptimized) this.applyDeoptimizations();\n    this.included = true;\n    if (includeChildrenRecursively || operator !== '=' || left.included || left.hasEffectsAsAssignmentTarget(createHasEffectsContext(), false)) {\n      left.includeAsAssignmentTarget(context, includeChildrenRecursively, operator !== '=');\n    }\n    right.include(context, includeChildrenRecursively);\n  }\n  initialise() {\n    this.left.setAssignedValue(this.right);\n  }\n  render(code, options) {\n    let {\n      preventASI,\n      renderedParentType,\n      renderedSurroundingElement\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : BLANK;\n    const {\n      left,\n      right,\n      start,\n      end,\n      parent\n    } = this;\n    if (left.included) {\n      left.render(code, options);\n      right.render(code, options);\n    } else {\n      const inclusionStart = findNonWhiteSpace(code.original, findFirstOccurrenceOutsideComment(code.original, '=', left.end) + 1);\n      code.remove(start, inclusionStart);\n      if (preventASI) {\n        removeLineBreaks(code, inclusionStart, right.start);\n      }\n      right.render(code, options, {\n        renderedParentType: renderedParentType || parent.type,\n        renderedSurroundingElement: renderedSurroundingElement || parent.type\n      });\n    }\n    if (options.format === 'system') {\n      if (left instanceof Identifier) {\n        const variable = left.variable;\n        const exportNames = options.exportNamesByVariable.get(variable);\n        if (exportNames) {\n          if (exportNames.length === 1) {\n            renderSystemExportExpression(variable, start, end, code, options);\n          } else {\n            renderSystemExportSequenceAfterExpression(variable, start, end, parent.type !== ExpressionStatement$1, code, options);\n          }\n          return;\n        }\n      } else {\n        const systemPatternExports = [];\n        left.addExportedVariables(systemPatternExports, options.exportNamesByVariable);\n        if (systemPatternExports.length > 0) {\n          renderSystemExportFunction(systemPatternExports, start, end, renderedSurroundingElement === ExpressionStatement$1, code, options);\n          return;\n        }\n      }\n    }\n    if (left.included && left instanceof ObjectPattern && (renderedSurroundingElement === ExpressionStatement$1 || renderedSurroundingElement === ArrowFunctionExpression$1)) {\n      code.appendRight(start, '(');\n      code.prependLeft(end, ')');\n    }\n  }\n  applyDeoptimizations() {\n    this.deoptimized = true;\n    this.left.deoptimizePath(EMPTY_PATH);\n    this.right.deoptimizePath(UNKNOWN_PATH);\n    this.context.requestTreeshakingPass();\n  }\n}\nclass AssignmentPattern extends NodeBase {\n  addExportedVariables(variables, exportNamesByVariable) {\n    this.left.addExportedVariables(variables, exportNamesByVariable);\n  }\n  declare(kind, init) {\n    return this.left.declare(kind, init);\n  }\n  deoptimizePath(path) {\n    path.length === 0 && this.left.deoptimizePath(path);\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    return path.length > 0 || this.left.hasEffectsOnInteractionAtPath(EMPTY_PATH, interaction, context);\n  }\n  markDeclarationReached() {\n    this.left.markDeclarationReached();\n  }\n  render(code, options) {\n    let {\n      isShorthandProperty\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : BLANK;\n    this.left.render(code, options, {\n      isShorthandProperty\n    });\n    this.right.render(code, options);\n  }\n  applyDeoptimizations() {\n    this.deoptimized = true;\n    this.left.deoptimizePath(EMPTY_PATH);\n    this.right.deoptimizePath(UNKNOWN_PATH);\n    this.context.requestTreeshakingPass();\n  }\n}\nclass ArgumentsVariable extends LocalVariable {\n  constructor(context) {\n    super('arguments', null, UNKNOWN_EXPRESSION, context);\n  }\n  hasEffectsOnInteractionAtPath(path, _ref20) {\n    let {\n      type\n    } = _ref20;\n    return type !== INTERACTION_ACCESSED || path.length > 1;\n  }\n}\nclass ThisVariable extends LocalVariable {\n  constructor(context) {\n    super('this', null, null, context);\n    this.deoptimizedPaths = [];\n    this.entitiesToBeDeoptimized = new Set();\n    this.thisDeoptimizationList = [];\n    this.thisDeoptimizations = new DiscriminatedPathTracker();\n  }\n  addEntityToBeDeoptimized(entity) {\n    for (const path of this.deoptimizedPaths) {\n      entity.deoptimizePath(path);\n    }\n    for (const {\n      interaction,\n      path\n    } of this.thisDeoptimizationList) {\n      entity.deoptimizeThisOnInteractionAtPath(interaction, path, SHARED_RECURSION_TRACKER);\n    }\n    this.entitiesToBeDeoptimized.add(entity);\n  }\n  deoptimizePath(path) {\n    if (path.length === 0 || this.deoptimizationTracker.trackEntityAtPathAndGetIfTracked(path, this)) {\n      return;\n    }\n    this.deoptimizedPaths.push(path);\n    for (const entity of this.entitiesToBeDeoptimized) {\n      entity.deoptimizePath(path);\n    }\n  }\n  deoptimizeThisOnInteractionAtPath(interaction, path) {\n    const thisDeoptimization = {\n      interaction,\n      path\n    };\n    if (!this.thisDeoptimizations.trackEntityAtPathAndGetIfTracked(path, interaction.type, interaction.thisArg)) {\n      for (const entity of this.entitiesToBeDeoptimized) {\n        entity.deoptimizeThisOnInteractionAtPath(interaction, path, SHARED_RECURSION_TRACKER);\n      }\n      this.thisDeoptimizationList.push(thisDeoptimization);\n    }\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    const replacedVariableInit = context.replacedVariableInits.get(this);\n    if (replacedVariableInit) {\n      return replacedVariableInit.hasEffectsOnInteractionAtPath(path, interaction, context) ||\n      // If the surrounding function is included, all mutations of \"this\" must\n      // be counted as side effects, which is what this second line does.\n      !context.ignore.this && super.hasEffectsOnInteractionAtPath(path, interaction, context);\n    }\n    return UNKNOWN_EXPRESSION.hasEffectsOnInteractionAtPath(path, interaction, context);\n  }\n}\nclass FunctionScope extends ReturnValueScope {\n  constructor(parent, context) {\n    super(parent, context);\n    this.variables.set('arguments', this.argumentsVariable = new ArgumentsVariable(context));\n    this.variables.set('this', this.thisVariable = new ThisVariable(context));\n  }\n  findLexicalBoundary() {\n    return this;\n  }\n  includeCallArguments(context, parameters) {\n    super.includeCallArguments(context, parameters);\n    if (this.argumentsVariable.included) {\n      for (const argument of parameters) {\n        if (!argument.included) {\n          argument.include(context, false);\n        }\n      }\n    }\n  }\n}\nclass FunctionNode extends FunctionBase {\n  constructor() {\n    super(...arguments);\n    this.objectEntity = null;\n  }\n  createScope(parentScope) {\n    this.scope = new FunctionScope(parentScope, this.context);\n    this.constructedEntity = new ObjectEntity(Object.create(null), OBJECT_PROTOTYPE);\n    // This makes sure that all deoptimizations of \"this\" are applied to the\n    // constructed entity.\n    this.scope.thisVariable.addEntityToBeDeoptimized(this.constructedEntity);\n  }\n  deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n    super.deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n    if (interaction.type === INTERACTION_CALLED && path.length === 0) {\n      this.scope.thisVariable.addEntityToBeDeoptimized(interaction.thisArg);\n    }\n  }\n  hasEffects(context) {\n    if (!this.deoptimized) this.applyDeoptimizations();\n    return !!this.id?.hasEffects(context);\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    if (super.hasEffectsOnInteractionAtPath(path, interaction, context)) return true;\n    if (interaction.type === INTERACTION_CALLED) {\n      const thisInit = context.replacedVariableInits.get(this.scope.thisVariable);\n      context.replacedVariableInits.set(this.scope.thisVariable, interaction.withNew ? this.constructedEntity : UNKNOWN_EXPRESSION);\n      const {\n        brokenFlow,\n        ignore,\n        replacedVariableInits\n      } = context;\n      context.ignore = {\n        breaks: false,\n        continues: false,\n        labels: new Set(),\n        returnYield: true,\n        this: interaction.withNew\n      };\n      if (this.body.hasEffects(context)) return true;\n      context.brokenFlow = brokenFlow;\n      if (thisInit) {\n        replacedVariableInits.set(this.scope.thisVariable, thisInit);\n      } else {\n        replacedVariableInits.delete(this.scope.thisVariable);\n      }\n      context.ignore = ignore;\n    }\n    return false;\n  }\n  include(context, includeChildrenRecursively) {\n    super.include(context, includeChildrenRecursively);\n    this.id?.include();\n    const hasArguments = this.scope.argumentsVariable.included;\n    for (const parameter of this.params) {\n      if (!(parameter instanceof Identifier) || hasArguments) {\n        parameter.include(context, includeChildrenRecursively);\n      }\n    }\n  }\n  initialise() {\n    super.initialise();\n    this.id?.declare('function', this);\n  }\n  getObjectEntity() {\n    if (this.objectEntity !== null) {\n      return this.objectEntity;\n    }\n    return this.objectEntity = new ObjectEntity([{\n      key: 'prototype',\n      kind: 'init',\n      property: new ObjectEntity([], OBJECT_PROTOTYPE)\n    }], OBJECT_PROTOTYPE);\n  }\n}\nclass AwaitExpression extends NodeBase {\n  hasEffects() {\n    if (!this.deoptimized) this.applyDeoptimizations();\n    return true;\n  }\n  include(context, includeChildrenRecursively) {\n    if (!this.deoptimized) this.applyDeoptimizations();\n    if (!this.included) {\n      this.included = true;\n      checkTopLevelAwait: if (!this.context.usesTopLevelAwait) {\n        let parent = this.parent;\n        do {\n          if (parent instanceof FunctionNode || parent instanceof ArrowFunctionExpression) break checkTopLevelAwait;\n        } while (parent = parent.parent);\n        this.context.usesTopLevelAwait = true;\n      }\n    }\n    this.argument.include(context, includeChildrenRecursively);\n  }\n}\nconst binaryOperators = {\n  '!=': (left, right) => left != right,\n  '!==': (left, right) => left !== right,\n  '%': (left, right) => left % right,\n  '&': (left, right) => left & right,\n  '*': (left, right) => left * right,\n  // At the moment, \"**\" will be transpiled to Math.pow\n  '**': (left, right) => left ** right,\n  '+': (left, right) => left + right,\n  '-': (left, right) => left - right,\n  '/': (left, right) => left / right,\n  '<': (left, right) => left < right,\n  '<<': (left, right) => left << right,\n  '<=': (left, right) => left <= right,\n  '==': (left, right) => left == right,\n  '===': (left, right) => left === right,\n  '>': (left, right) => left > right,\n  '>=': (left, right) => left >= right,\n  '>>': (left, right) => left >> right,\n  '>>>': (left, right) => left >>> right,\n  '^': (left, right) => left ^ right,\n  '|': (left, right) => left | right\n  // We use the fallback for cases where we return something unknown\n  // in: () => UnknownValue,\n  // instanceof: () => UnknownValue,\n};\n\nclass BinaryExpression extends NodeBase {\n  deoptimizeCache() {}\n  getLiteralValueAtPath(path, recursionTracker, origin) {\n    if (path.length > 0) return UnknownValue;\n    const leftValue = this.left.getLiteralValueAtPath(EMPTY_PATH, recursionTracker, origin);\n    if (typeof leftValue === 'symbol') return UnknownValue;\n    const rightValue = this.right.getLiteralValueAtPath(EMPTY_PATH, recursionTracker, origin);\n    if (typeof rightValue === 'symbol') return UnknownValue;\n    const operatorFunction = binaryOperators[this.operator];\n    if (!operatorFunction) return UnknownValue;\n    return operatorFunction(leftValue, rightValue);\n  }\n  hasEffects(context) {\n    // support some implicit type coercion runtime errors\n    if (this.operator === '+' && this.parent instanceof ExpressionStatement && this.left.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, this) === '') {\n      return true;\n    }\n    return super.hasEffects(context);\n  }\n  hasEffectsOnInteractionAtPath(path, _ref21) {\n    let {\n      type\n    } = _ref21;\n    return type !== INTERACTION_ACCESSED || path.length > 1;\n  }\n  render(code, options) {\n    let {\n      renderedSurroundingElement\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : BLANK;\n    this.left.render(code, options, {\n      renderedSurroundingElement\n    });\n    this.right.render(code, options);\n  }\n}\nclass BreakStatement extends NodeBase {\n  hasEffects(context) {\n    if (this.label) {\n      if (!context.ignore.labels.has(this.label.name)) return true;\n      context.includedLabels.add(this.label.name);\n      context.brokenFlow = BROKEN_FLOW_ERROR_RETURN_LABEL;\n    } else {\n      if (!context.ignore.breaks) return true;\n      context.brokenFlow = BROKEN_FLOW_BREAK_CONTINUE;\n    }\n    return false;\n  }\n  include(context) {\n    this.included = true;\n    if (this.label) {\n      this.label.include();\n      context.includedLabels.add(this.label.name);\n    }\n    context.brokenFlow = this.label ? BROKEN_FLOW_ERROR_RETURN_LABEL : BROKEN_FLOW_BREAK_CONTINUE;\n  }\n}\nfunction renderCallArguments(code, options, node) {\n  if (node.arguments.length > 0) {\n    if (node.arguments[node.arguments.length - 1].included) {\n      for (const argument of node.arguments) {\n        argument.render(code, options);\n      }\n    } else {\n      let lastIncludedIndex = node.arguments.length - 2;\n      while (lastIncludedIndex >= 0 && !node.arguments[lastIncludedIndex].included) {\n        lastIncludedIndex--;\n      }\n      if (lastIncludedIndex >= 0) {\n        for (let index = 0; index <= lastIncludedIndex; index++) {\n          node.arguments[index].render(code, options);\n        }\n        code.remove(findFirstOccurrenceOutsideComment(code.original, ',', node.arguments[lastIncludedIndex].end), node.end - 1);\n      } else {\n        code.remove(findFirstOccurrenceOutsideComment(code.original, '(', node.callee.end) + 1, node.end - 1);\n      }\n    }\n  }\n}\nclass Literal extends NodeBase {\n  deoptimizeThisOnInteractionAtPath() {}\n  getLiteralValueAtPath(path) {\n    if (path.length > 0 ||\n    // unknown literals can also be null but do not start with an \"n\"\n    this.value === null && this.context.code.charCodeAt(this.start) !== 110 || typeof this.value === 'bigint' ||\n    // to support shims for regular expressions\n    this.context.code.charCodeAt(this.start) === 47) {\n      return UnknownValue;\n    }\n    return this.value;\n  }\n  getReturnExpressionWhenCalledAtPath(path) {\n    if (path.length !== 1) return UNKNOWN_RETURN_EXPRESSION;\n    return getMemberReturnExpressionWhenCalled(this.members, path[0]);\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    switch (interaction.type) {\n      case INTERACTION_ACCESSED:\n        {\n          return path.length > (this.value === null ? 0 : 1);\n        }\n      case INTERACTION_ASSIGNED:\n        {\n          return true;\n        }\n      case INTERACTION_CALLED:\n        {\n          if (this.included && this.value instanceof RegExp && (this.value.global || this.value.sticky)) {\n            return true;\n          }\n          return path.length !== 1 || hasMemberEffectWhenCalled(this.members, path[0], interaction, context);\n        }\n    }\n  }\n  initialise() {\n    this.members = getLiteralMembersForValue(this.value);\n  }\n  parseNode(esTreeNode) {\n    this.value = esTreeNode.value;\n    this.regex = esTreeNode.regex;\n    super.parseNode(esTreeNode);\n  }\n  render(code) {\n    if (typeof this.value === 'string') {\n      code.indentExclusionRanges.push([this.start + 1, this.end - 1]);\n    }\n  }\n}\n\n// To avoid infinite recursions\nconst MAX_PATH_DEPTH = 7;\nfunction getResolvablePropertyKey(memberExpression) {\n  return memberExpression.computed ? getResolvableComputedPropertyKey(memberExpression.property) : memberExpression.property.name;\n}\nfunction getResolvableComputedPropertyKey(propertyKey) {\n  if (propertyKey instanceof Literal) {\n    return String(propertyKey.value);\n  }\n  return null;\n}\nfunction getPathIfNotComputed(memberExpression) {\n  const nextPathKey = memberExpression.propertyKey;\n  const object = memberExpression.object;\n  if (typeof nextPathKey === 'string') {\n    if (object instanceof Identifier) {\n      return [{\n        key: object.name,\n        pos: object.start\n      }, {\n        key: nextPathKey,\n        pos: memberExpression.property.start\n      }];\n    }\n    if (object instanceof MemberExpression) {\n      const parentPath = getPathIfNotComputed(object);\n      return parentPath && [...parentPath, {\n        key: nextPathKey,\n        pos: memberExpression.property.start\n      }];\n    }\n  }\n  return null;\n}\nfunction getStringFromPath(path) {\n  let pathString = path[0].key;\n  for (let index = 1; index < path.length; index++) {\n    pathString += '.' + path[index].key;\n  }\n  return pathString;\n}\nclass MemberExpression extends NodeBase {\n  constructor() {\n    super(...arguments);\n    this.variable = null;\n    this.assignmentDeoptimized = false;\n    this.bound = false;\n    this.expressionsToBeDeoptimized = [];\n    this.isUndefined = false;\n  }\n  bind() {\n    this.bound = true;\n    const path = getPathIfNotComputed(this);\n    const baseVariable = path && this.scope.findVariable(path[0].key);\n    if (baseVariable?.isNamespace) {\n      const resolvedVariable = resolveNamespaceVariables(baseVariable, path.slice(1), this.context);\n      if (!resolvedVariable) {\n        super.bind();\n      } else if (resolvedVariable === 'undefined') {\n        this.isUndefined = true;\n      } else {\n        this.variable = resolvedVariable;\n        this.scope.addNamespaceMemberAccess(getStringFromPath(path), resolvedVariable);\n      }\n    } else {\n      super.bind();\n    }\n  }\n  deoptimizeCache() {\n    const expressionsToBeDeoptimized = this.expressionsToBeDeoptimized;\n    this.expressionsToBeDeoptimized = [];\n    this.propertyKey = UnknownKey;\n    this.object.deoptimizePath(UNKNOWN_PATH);\n    for (const expression of expressionsToBeDeoptimized) {\n      expression.deoptimizeCache();\n    }\n  }\n  deoptimizePath(path) {\n    if (path.length === 0) this.disallowNamespaceReassignment();\n    if (this.variable) {\n      this.variable.deoptimizePath(path);\n    } else if (!this.isUndefined && path.length < MAX_PATH_DEPTH) {\n      const propertyKey = this.getPropertyKey();\n      this.object.deoptimizePath([propertyKey === UnknownKey ? UnknownNonAccessorKey : propertyKey, ...path]);\n    }\n  }\n  deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n    if (this.variable) {\n      this.variable.deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n    } else if (!this.isUndefined) {\n      if (path.length < MAX_PATH_DEPTH) {\n        this.object.deoptimizeThisOnInteractionAtPath(interaction, [this.getPropertyKey(), ...path], recursionTracker);\n      } else {\n        interaction.thisArg.deoptimizePath(UNKNOWN_PATH);\n      }\n    }\n  }\n  getLiteralValueAtPath(path, recursionTracker, origin) {\n    if (this.variable) {\n      return this.variable.getLiteralValueAtPath(path, recursionTracker, origin);\n    }\n    if (this.isUndefined) {\n      return undefined;\n    }\n    this.expressionsToBeDeoptimized.push(origin);\n    if (path.length < MAX_PATH_DEPTH) {\n      return this.object.getLiteralValueAtPath([this.getPropertyKey(), ...path], recursionTracker, origin);\n    }\n    return UnknownValue;\n  }\n  getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n    if (this.variable) {\n      return this.variable.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\n    }\n    if (this.isUndefined) {\n      return [UNDEFINED_EXPRESSION, false];\n    }\n    this.expressionsToBeDeoptimized.push(origin);\n    if (path.length < MAX_PATH_DEPTH) {\n      return this.object.getReturnExpressionWhenCalledAtPath([this.getPropertyKey(), ...path], interaction, recursionTracker, origin);\n    }\n    return UNKNOWN_RETURN_EXPRESSION;\n  }\n  hasEffects(context) {\n    if (!this.deoptimized) this.applyDeoptimizations();\n    return this.property.hasEffects(context) || this.object.hasEffects(context) || this.hasAccessEffect(context);\n  }\n  hasEffectsAsAssignmentTarget(context, checkAccess) {\n    if (checkAccess && !this.deoptimized) this.applyDeoptimizations();\n    if (!this.assignmentDeoptimized) this.applyAssignmentDeoptimization();\n    return this.property.hasEffects(context) || this.object.hasEffects(context) || checkAccess && this.hasAccessEffect(context) || this.hasEffectsOnInteractionAtPath(EMPTY_PATH, this.assignmentInteraction, context);\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    if (this.variable) {\n      return this.variable.hasEffectsOnInteractionAtPath(path, interaction, context);\n    }\n    if (this.isUndefined) {\n      return true;\n    }\n    if (path.length < MAX_PATH_DEPTH) {\n      return this.object.hasEffectsOnInteractionAtPath([this.getPropertyKey(), ...path], interaction, context);\n    }\n    return true;\n  }\n  include(context, includeChildrenRecursively) {\n    if (!this.deoptimized) this.applyDeoptimizations();\n    this.includeProperties(context, includeChildrenRecursively);\n  }\n  includeAsAssignmentTarget(context, includeChildrenRecursively, deoptimizeAccess) {\n    if (!this.assignmentDeoptimized) this.applyAssignmentDeoptimization();\n    if (deoptimizeAccess) {\n      this.include(context, includeChildrenRecursively);\n    } else {\n      this.includeProperties(context, includeChildrenRecursively);\n    }\n  }\n  includeCallArguments(context, parameters) {\n    if (this.variable) {\n      this.variable.includeCallArguments(context, parameters);\n    } else {\n      super.includeCallArguments(context, parameters);\n    }\n  }\n  initialise() {\n    this.propertyKey = getResolvablePropertyKey(this);\n    this.accessInteraction = {\n      thisArg: this.object,\n      type: INTERACTION_ACCESSED\n    };\n  }\n  isSkippedAsOptional(origin) {\n    return !this.variable && !this.isUndefined && (this.object.isSkippedAsOptional?.(origin) || this.optional && this.object.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, origin) == null);\n  }\n  render(code, options) {\n    let {\n      renderedParentType,\n      isCalleeOfRenderedParent,\n      renderedSurroundingElement\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : BLANK;\n    if (this.variable || this.isUndefined) {\n      const {\n        snippets: {\n          getPropertyAccess\n        }\n      } = options;\n      let replacement = this.variable ? this.variable.getName(getPropertyAccess) : 'undefined';\n      if (renderedParentType && isCalleeOfRenderedParent) replacement = '0, ' + replacement;\n      code.overwrite(this.start, this.end, replacement, {\n        contentOnly: true,\n        storeName: true\n      });\n    } else {\n      if (renderedParentType && isCalleeOfRenderedParent) {\n        code.appendRight(this.start, '0, ');\n      }\n      this.object.render(code, options, {\n        renderedSurroundingElement\n      });\n      this.property.render(code, options);\n    }\n  }\n  setAssignedValue(value) {\n    this.assignmentInteraction = {\n      args: [value],\n      thisArg: this.object,\n      type: INTERACTION_ASSIGNED\n    };\n  }\n  applyDeoptimizations() {\n    this.deoptimized = true;\n    const {\n      propertyReadSideEffects\n    } = this.context.options.treeshake;\n    if (\n    // Namespaces are not bound and should not be deoptimized\n    this.bound && propertyReadSideEffects && !(this.variable || this.isUndefined)) {\n      const propertyKey = this.getPropertyKey();\n      this.object.deoptimizeThisOnInteractionAtPath(this.accessInteraction, [propertyKey], SHARED_RECURSION_TRACKER);\n      this.context.requestTreeshakingPass();\n    }\n  }\n  applyAssignmentDeoptimization() {\n    this.assignmentDeoptimized = true;\n    const {\n      propertyReadSideEffects\n    } = this.context.options.treeshake;\n    if (\n    // Namespaces are not bound and should not be deoptimized\n    this.bound && propertyReadSideEffects && !(this.variable || this.isUndefined)) {\n      this.object.deoptimizeThisOnInteractionAtPath(this.assignmentInteraction, [this.getPropertyKey()], SHARED_RECURSION_TRACKER);\n      this.context.requestTreeshakingPass();\n    }\n  }\n  disallowNamespaceReassignment() {\n    if (this.object instanceof Identifier) {\n      const variable = this.scope.findVariable(this.object.name);\n      if (variable.isNamespace) {\n        if (this.variable) {\n          this.context.includeVariableInModule(this.variable);\n        }\n        this.context.warn(errorIllegalImportReassignment(this.object.name, this.context.module.id), this.start);\n      }\n    }\n  }\n  getPropertyKey() {\n    if (this.propertyKey === null) {\n      this.propertyKey = UnknownKey;\n      const value = this.property.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, this);\n      return this.propertyKey = value === SymbolToStringTag ? value : typeof value === 'symbol' ? UnknownKey : String(value);\n    }\n    return this.propertyKey;\n  }\n  hasAccessEffect(context) {\n    const {\n      propertyReadSideEffects\n    } = this.context.options.treeshake;\n    return !(this.variable || this.isUndefined) && propertyReadSideEffects && (propertyReadSideEffects === 'always' || this.object.hasEffectsOnInteractionAtPath([this.getPropertyKey()], this.accessInteraction, context));\n  }\n  includeProperties(context, includeChildrenRecursively) {\n    if (!this.included) {\n      this.included = true;\n      if (this.variable) {\n        this.context.includeVariableInModule(this.variable);\n      }\n    }\n    this.object.include(context, includeChildrenRecursively);\n    this.property.include(context, includeChildrenRecursively);\n  }\n}\nfunction resolveNamespaceVariables(baseVariable, path, astContext) {\n  if (path.length === 0) return baseVariable;\n  if (!baseVariable.isNamespace || baseVariable instanceof ExternalVariable) return null;\n  const exportName = path[0].key;\n  const variable = baseVariable.context.traceExport(exportName);\n  if (!variable) {\n    if (path.length === 1) {\n      const fileName = baseVariable.context.fileName;\n      astContext.warn(errorMissingExport(exportName, astContext.module.id, fileName), path[0].pos);\n      return 'undefined';\n    }\n    return null;\n  }\n  return resolveNamespaceVariables(variable, path.slice(1), astContext);\n}\nclass CallExpressionBase extends NodeBase {\n  constructor() {\n    super(...arguments);\n    this.returnExpression = null;\n    this.deoptimizableDependentExpressions = [];\n    this.expressionsToBeDeoptimized = new Set();\n  }\n  deoptimizeCache() {\n    if (this.returnExpression?.[0] !== UNKNOWN_EXPRESSION) {\n      this.returnExpression = UNKNOWN_RETURN_EXPRESSION;\n      for (const expression of this.deoptimizableDependentExpressions) {\n        expression.deoptimizeCache();\n      }\n      for (const expression of this.expressionsToBeDeoptimized) {\n        expression.deoptimizePath(UNKNOWN_PATH);\n      }\n    }\n  }\n  deoptimizePath(path) {\n    if (path.length === 0 || this.context.deoptimizationTracker.trackEntityAtPathAndGetIfTracked(path, this)) {\n      return;\n    }\n    const [returnExpression] = this.getReturnExpression();\n    if (returnExpression !== UNKNOWN_EXPRESSION) {\n      returnExpression.deoptimizePath(path);\n    }\n  }\n  deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n    const [returnExpression, isPure] = this.getReturnExpression(recursionTracker);\n    if (isPure) return;\n    if (returnExpression === UNKNOWN_EXPRESSION) {\n      interaction.thisArg.deoptimizePath(UNKNOWN_PATH);\n    } else {\n      recursionTracker.withTrackedEntityAtPath(path, returnExpression, () => {\n        this.expressionsToBeDeoptimized.add(interaction.thisArg);\n        returnExpression.deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n      }, null);\n    }\n  }\n  getLiteralValueAtPath(path, recursionTracker, origin) {\n    const [returnExpression] = this.getReturnExpression(recursionTracker);\n    if (returnExpression === UNKNOWN_EXPRESSION) {\n      return UnknownValue;\n    }\n    return recursionTracker.withTrackedEntityAtPath(path, returnExpression, () => {\n      this.deoptimizableDependentExpressions.push(origin);\n      return returnExpression.getLiteralValueAtPath(path, recursionTracker, origin);\n    }, UnknownValue);\n  }\n  getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n    const returnExpression = this.getReturnExpression(recursionTracker);\n    if (returnExpression[0] === UNKNOWN_EXPRESSION) {\n      return returnExpression;\n    }\n    return recursionTracker.withTrackedEntityAtPath(path, returnExpression, () => {\n      this.deoptimizableDependentExpressions.push(origin);\n      const [expression, isPure] = returnExpression[0].getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\n      return [expression, isPure || returnExpression[1]];\n    }, UNKNOWN_RETURN_EXPRESSION);\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    const {\n      type\n    } = interaction;\n    if (type === INTERACTION_CALLED) {\n      const {\n        args,\n        withNew\n      } = interaction;\n      if ((withNew ? context.instantiated : context.called).trackEntityAtPathAndGetIfTracked(path, args, this)) {\n        return false;\n      }\n    } else if ((type === INTERACTION_ASSIGNED ? context.assigned : context.accessed).trackEntityAtPathAndGetIfTracked(path, this)) {\n      return false;\n    }\n    const [returnExpression, isPure] = this.getReturnExpression();\n    return (type === INTERACTION_ASSIGNED || !isPure) && returnExpression.hasEffectsOnInteractionAtPath(path, interaction, context);\n  }\n}\nclass CallExpression extends CallExpressionBase {\n  bind() {\n    super.bind();\n    if (this.callee instanceof Identifier) {\n      const variable = this.scope.findVariable(this.callee.name);\n      if (variable.isNamespace) {\n        this.context.warn(errorCannotCallNamespace(this.callee.name), this.start);\n      }\n      if (this.callee.name === 'eval') {\n        this.context.warn(errorEval(this.context.module.id), this.start);\n      }\n    }\n    this.interaction = {\n      args: this.arguments,\n      thisArg: this.callee instanceof MemberExpression && !this.callee.variable ? this.callee.object : null,\n      type: INTERACTION_CALLED,\n      withNew: false\n    };\n  }\n  hasEffects(context) {\n    try {\n      for (const argument of this.arguments) {\n        if (argument.hasEffects(context)) return true;\n      }\n      if (this.context.options.treeshake.annotations && this.annotations) return false;\n      return this.callee.hasEffects(context) || this.callee.hasEffectsOnInteractionAtPath(EMPTY_PATH, this.interaction, context);\n    } finally {\n      if (!this.deoptimized) this.applyDeoptimizations();\n    }\n  }\n  include(context, includeChildrenRecursively) {\n    if (!this.deoptimized) this.applyDeoptimizations();\n    if (includeChildrenRecursively) {\n      super.include(context, includeChildrenRecursively);\n      if (includeChildrenRecursively === INCLUDE_PARAMETERS && this.callee instanceof Identifier && this.callee.variable) {\n        this.callee.variable.markCalledFromTryStatement();\n      }\n    } else {\n      this.included = true;\n      this.callee.include(context, false);\n    }\n    this.callee.includeCallArguments(context, this.arguments);\n  }\n  isSkippedAsOptional(origin) {\n    return this.callee.isSkippedAsOptional?.(origin) || this.optional && this.callee.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, origin) == null;\n  }\n  render(code, options) {\n    let {\n      renderedSurroundingElement\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : BLANK;\n    this.callee.render(code, options, {\n      isCalleeOfRenderedParent: true,\n      renderedSurroundingElement\n    });\n    renderCallArguments(code, options, this);\n  }\n  applyDeoptimizations() {\n    this.deoptimized = true;\n    if (this.interaction.thisArg) {\n      this.callee.deoptimizeThisOnInteractionAtPath(this.interaction, EMPTY_PATH, SHARED_RECURSION_TRACKER);\n    }\n    for (const argument of this.arguments) {\n      // This will make sure all properties of parameters behave as \"unknown\"\n      argument.deoptimizePath(UNKNOWN_PATH);\n    }\n    this.context.requestTreeshakingPass();\n  }\n  getReturnExpression() {\n    let recursionTracker = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SHARED_RECURSION_TRACKER;\n    if (this.returnExpression === null) {\n      this.returnExpression = UNKNOWN_RETURN_EXPRESSION;\n      return this.returnExpression = this.callee.getReturnExpressionWhenCalledAtPath(EMPTY_PATH, this.interaction, recursionTracker, this);\n    }\n    return this.returnExpression;\n  }\n}\nclass CatchScope extends ParameterScope {\n  addDeclaration(identifier, context, init, isHoisted) {\n    const existingParameter = this.variables.get(identifier.name);\n    if (existingParameter) {\n      // While we still create a hoisted declaration, the initializer goes to\n      // the parameter. Note that technically, the declaration now belongs to\n      // two variables, which is not correct but should not cause issues.\n      this.parent.addDeclaration(identifier, context, UNDEFINED_EXPRESSION, isHoisted);\n      existingParameter.addDeclaration(identifier, init);\n      return existingParameter;\n    }\n    return this.parent.addDeclaration(identifier, context, init, isHoisted);\n  }\n}\nclass CatchClause extends NodeBase {\n  createScope(parentScope) {\n    this.scope = new CatchScope(parentScope, this.context);\n  }\n  parseNode(esTreeNode) {\n    // Parameters need to be declared first as the logic is that initializers\n    // of hoisted body variables are associated with parameters of the same\n    // name instead of the variable\n    const {\n      param\n    } = esTreeNode;\n    if (param) {\n      this.param = new (this.context.getNodeConstructor(param.type))(param, this, this.scope);\n      this.param.declare('parameter', UNKNOWN_EXPRESSION);\n    }\n    super.parseNode(esTreeNode);\n  }\n}\nclass ChainExpression extends NodeBase {\n  // deoptimizations are not relevant as we are not caching values\n  deoptimizeCache() {}\n  getLiteralValueAtPath(path, recursionTracker, origin) {\n    if (this.expression.isSkippedAsOptional(origin)) return undefined;\n    return this.expression.getLiteralValueAtPath(path, recursionTracker, origin);\n  }\n  hasEffects(context) {\n    if (this.expression.isSkippedAsOptional(this)) return false;\n    return this.expression.hasEffects(context);\n  }\n}\nclass ClassBodyScope extends ChildScope {\n  constructor(parent, classNode, context) {\n    super(parent);\n    this.variables.set('this', this.thisVariable = new LocalVariable('this', null, classNode, context));\n    this.instanceScope = new ChildScope(this);\n    this.instanceScope.variables.set('this', new ThisVariable(context));\n  }\n  findLexicalBoundary() {\n    return this;\n  }\n}\nclass ClassBody extends NodeBase {\n  createScope(parentScope) {\n    this.scope = new ClassBodyScope(parentScope, this.parent, this.context);\n  }\n  include(context, includeChildrenRecursively) {\n    this.included = true;\n    this.context.includeVariableInModule(this.scope.thisVariable);\n    for (const definition of this.body) {\n      definition.include(context, includeChildrenRecursively);\n    }\n  }\n  parseNode(esTreeNode) {\n    const body = this.body = [];\n    for (const definition of esTreeNode.body) {\n      body.push(new (this.context.getNodeConstructor(definition.type))(definition, this, definition.static ? this.scope : this.scope.instanceScope));\n    }\n    super.parseNode(esTreeNode);\n  }\n  applyDeoptimizations() {}\n}\nclass MethodBase extends NodeBase {\n  constructor() {\n    super(...arguments);\n    this.accessedValue = null;\n  }\n  // As getter properties directly receive their values from fixed function\n  // expressions, there is no known situation where a getter is deoptimized.\n  deoptimizeCache() {}\n  deoptimizePath(path) {\n    this.getAccessedValue()[0].deoptimizePath(path);\n  }\n  deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n    if (interaction.type === INTERACTION_ACCESSED && this.kind === 'get' && path.length === 0) {\n      return this.value.deoptimizeThisOnInteractionAtPath({\n        args: NO_ARGS,\n        thisArg: interaction.thisArg,\n        type: INTERACTION_CALLED,\n        withNew: false\n      }, EMPTY_PATH, recursionTracker);\n    }\n    if (interaction.type === INTERACTION_ASSIGNED && this.kind === 'set' && path.length === 0) {\n      return this.value.deoptimizeThisOnInteractionAtPath({\n        args: interaction.args,\n        thisArg: interaction.thisArg,\n        type: INTERACTION_CALLED,\n        withNew: false\n      }, EMPTY_PATH, recursionTracker);\n    }\n    this.getAccessedValue()[0].deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n  }\n  getLiteralValueAtPath(path, recursionTracker, origin) {\n    return this.getAccessedValue()[0].getLiteralValueAtPath(path, recursionTracker, origin);\n  }\n  getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n    return this.getAccessedValue()[0].getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\n  }\n  hasEffects(context) {\n    return this.key.hasEffects(context);\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    if (this.kind === 'get' && interaction.type === INTERACTION_ACCESSED && path.length === 0) {\n      return this.value.hasEffectsOnInteractionAtPath(EMPTY_PATH, {\n        args: NO_ARGS,\n        thisArg: interaction.thisArg,\n        type: INTERACTION_CALLED,\n        withNew: false\n      }, context);\n    }\n    // setters are only called for empty paths\n    if (this.kind === 'set' && interaction.type === INTERACTION_ASSIGNED) {\n      return this.value.hasEffectsOnInteractionAtPath(EMPTY_PATH, {\n        args: interaction.args,\n        thisArg: interaction.thisArg,\n        type: INTERACTION_CALLED,\n        withNew: false\n      }, context);\n    }\n    return this.getAccessedValue()[0].hasEffectsOnInteractionAtPath(path, interaction, context);\n  }\n  applyDeoptimizations() {}\n  getAccessedValue() {\n    if (this.accessedValue === null) {\n      if (this.kind === 'get') {\n        this.accessedValue = UNKNOWN_RETURN_EXPRESSION;\n        return this.accessedValue = this.value.getReturnExpressionWhenCalledAtPath(EMPTY_PATH, NODE_INTERACTION_UNKNOWN_CALL, SHARED_RECURSION_TRACKER, this);\n      } else {\n        return this.accessedValue = [this.value, false];\n      }\n    }\n    return this.accessedValue;\n  }\n}\nclass MethodDefinition extends MethodBase {\n  applyDeoptimizations() {}\n}\nclass ObjectMember extends ExpressionEntity {\n  constructor(object, key) {\n    super();\n    this.object = object;\n    this.key = key;\n  }\n  deoptimizePath(path) {\n    this.object.deoptimizePath([this.key, ...path]);\n  }\n  deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n    this.object.deoptimizeThisOnInteractionAtPath(interaction, [this.key, ...path], recursionTracker);\n  }\n  getLiteralValueAtPath(path, recursionTracker, origin) {\n    return this.object.getLiteralValueAtPath([this.key, ...path], recursionTracker, origin);\n  }\n  getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n    return this.object.getReturnExpressionWhenCalledAtPath([this.key, ...path], interaction, recursionTracker, origin);\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    return this.object.hasEffectsOnInteractionAtPath([this.key, ...path], interaction, context);\n  }\n}\nclass ClassNode extends NodeBase {\n  constructor() {\n    super(...arguments);\n    this.objectEntity = null;\n  }\n  createScope(parentScope) {\n    this.scope = new ChildScope(parentScope);\n  }\n  deoptimizeCache() {\n    this.getObjectEntity().deoptimizeAllProperties();\n  }\n  deoptimizePath(path) {\n    this.getObjectEntity().deoptimizePath(path);\n  }\n  deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n    this.getObjectEntity().deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n  }\n  getLiteralValueAtPath(path, recursionTracker, origin) {\n    return this.getObjectEntity().getLiteralValueAtPath(path, recursionTracker, origin);\n  }\n  getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n    return this.getObjectEntity().getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\n  }\n  hasEffects(context) {\n    if (!this.deoptimized) this.applyDeoptimizations();\n    const initEffect = this.superClass?.hasEffects(context) || this.body.hasEffects(context);\n    this.id?.markDeclarationReached();\n    return initEffect || super.hasEffects(context);\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    return interaction.type === INTERACTION_CALLED && path.length === 0 ? !interaction.withNew || (this.classConstructor === null ? this.superClass?.hasEffectsOnInteractionAtPath(path, interaction, context) : this.classConstructor.hasEffectsOnInteractionAtPath(path, interaction, context)) || false : this.getObjectEntity().hasEffectsOnInteractionAtPath(path, interaction, context);\n  }\n  include(context, includeChildrenRecursively) {\n    if (!this.deoptimized) this.applyDeoptimizations();\n    this.included = true;\n    this.superClass?.include(context, includeChildrenRecursively);\n    this.body.include(context, includeChildrenRecursively);\n    if (this.id) {\n      this.id.markDeclarationReached();\n      this.id.include();\n    }\n  }\n  initialise() {\n    this.id?.declare('class', this);\n    for (const method of this.body.body) {\n      if (method instanceof MethodDefinition && method.kind === 'constructor') {\n        this.classConstructor = method;\n        return;\n      }\n    }\n    this.classConstructor = null;\n  }\n  applyDeoptimizations() {\n    this.deoptimized = true;\n    for (const definition of this.body.body) {\n      if (!(definition.static || definition instanceof MethodDefinition && definition.kind === 'constructor')) {\n        // Calls to methods are not tracked, ensure that the return value is deoptimized\n        definition.deoptimizePath(UNKNOWN_PATH);\n      }\n    }\n    this.context.requestTreeshakingPass();\n  }\n  getObjectEntity() {\n    if (this.objectEntity !== null) {\n      return this.objectEntity;\n    }\n    const staticProperties = [];\n    const dynamicMethods = [];\n    for (const definition of this.body.body) {\n      const properties = definition.static ? staticProperties : dynamicMethods;\n      const definitionKind = definition.kind;\n      // Note that class fields do not end up on the prototype\n      if (properties === dynamicMethods && !definitionKind) continue;\n      const kind = definitionKind === 'set' || definitionKind === 'get' ? definitionKind : 'init';\n      let key;\n      if (definition.computed) {\n        const keyValue = definition.key.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, this);\n        if (typeof keyValue === 'symbol') {\n          properties.push({\n            key: UnknownKey,\n            kind,\n            property: definition\n          });\n          continue;\n        } else {\n          key = String(keyValue);\n        }\n      } else {\n        key = definition.key instanceof Identifier ? definition.key.name : String(definition.key.value);\n      }\n      properties.push({\n        key,\n        kind,\n        property: definition\n      });\n    }\n    staticProperties.unshift({\n      key: 'prototype',\n      kind: 'init',\n      property: new ObjectEntity(dynamicMethods, this.superClass ? new ObjectMember(this.superClass, 'prototype') : OBJECT_PROTOTYPE)\n    });\n    return this.objectEntity = new ObjectEntity(staticProperties, this.superClass || OBJECT_PROTOTYPE);\n  }\n}\nclass ClassDeclaration extends ClassNode {\n  initialise() {\n    super.initialise();\n    if (this.id !== null) {\n      this.id.variable.isId = true;\n    }\n  }\n  parseNode(esTreeNode) {\n    if (esTreeNode.id !== null) {\n      this.id = new Identifier(esTreeNode.id, this, this.scope.parent);\n    }\n    super.parseNode(esTreeNode);\n  }\n  render(code, options) {\n    const {\n      exportNamesByVariable,\n      format,\n      snippets: {\n        _,\n        getPropertyAccess\n      }\n    } = options;\n    if (this.id) {\n      const {\n        variable,\n        name\n      } = this.id;\n      if (format === 'system' && exportNamesByVariable.has(variable)) {\n        code.appendLeft(this.end, `${_}${getSystemExportStatement([variable], options)};`);\n      }\n      const renderedVariable = variable.getName(getPropertyAccess);\n      if (renderedVariable !== name) {\n        this.superClass?.render(code, options);\n        this.body.render(code, {\n          ...options,\n          useOriginalName: _variable => _variable === variable\n        });\n        code.prependRight(this.start, `let ${renderedVariable}${_}=${_}`);\n        code.prependLeft(this.end, ';');\n        return;\n      }\n    }\n    super.render(code, options);\n  }\n  applyDeoptimizations() {\n    super.applyDeoptimizations();\n    const {\n      id,\n      scope\n    } = this;\n    if (id) {\n      const {\n        name,\n        variable\n      } = id;\n      for (const accessedVariable of scope.accessedOutsideVariables.values()) {\n        if (accessedVariable !== variable) {\n          accessedVariable.forbidName(name);\n        }\n      }\n    }\n  }\n}\nclass ClassExpression extends ClassNode {\n  render(code, options) {\n    let {\n      renderedSurroundingElement\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : BLANK;\n    super.render(code, options);\n    if (renderedSurroundingElement === ExpressionStatement$1) {\n      code.appendRight(this.start, '(');\n      code.prependLeft(this.end, ')');\n    }\n  }\n}\nclass MultiExpression extends ExpressionEntity {\n  constructor(expressions) {\n    super();\n    this.expressions = expressions;\n    this.included = false;\n  }\n  deoptimizePath(path) {\n    for (const expression of this.expressions) {\n      expression.deoptimizePath(path);\n    }\n  }\n  getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n    return [new MultiExpression(this.expressions.map(expression => expression.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin)[0])), false];\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    for (const expression of this.expressions) {\n      if (expression.hasEffectsOnInteractionAtPath(path, interaction, context)) return true;\n    }\n    return false;\n  }\n}\nclass ConditionalExpression extends NodeBase {\n  constructor() {\n    super(...arguments);\n    this.expressionsToBeDeoptimized = [];\n    this.isBranchResolutionAnalysed = false;\n    this.usedBranch = null;\n  }\n  deoptimizeCache() {\n    if (this.usedBranch !== null) {\n      const unusedBranch = this.usedBranch === this.consequent ? this.alternate : this.consequent;\n      this.usedBranch = null;\n      unusedBranch.deoptimizePath(UNKNOWN_PATH);\n      for (const expression of this.expressionsToBeDeoptimized) {\n        expression.deoptimizeCache();\n      }\n    }\n  }\n  deoptimizePath(path) {\n    const usedBranch = this.getUsedBranch();\n    if (usedBranch) {\n      usedBranch.deoptimizePath(path);\n    } else {\n      this.consequent.deoptimizePath(path);\n      this.alternate.deoptimizePath(path);\n    }\n  }\n  deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n    this.consequent.deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n    this.alternate.deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n  }\n  getLiteralValueAtPath(path, recursionTracker, origin) {\n    const usedBranch = this.getUsedBranch();\n    if (!usedBranch) return UnknownValue;\n    this.expressionsToBeDeoptimized.push(origin);\n    return usedBranch.getLiteralValueAtPath(path, recursionTracker, origin);\n  }\n  getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n    const usedBranch = this.getUsedBranch();\n    if (!usedBranch) return [new MultiExpression([this.consequent.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin)[0], this.alternate.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin)[0]]), false];\n    this.expressionsToBeDeoptimized.push(origin);\n    return usedBranch.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\n  }\n  hasEffects(context) {\n    if (this.test.hasEffects(context)) return true;\n    const usedBranch = this.getUsedBranch();\n    if (!usedBranch) {\n      return this.consequent.hasEffects(context) || this.alternate.hasEffects(context);\n    }\n    return usedBranch.hasEffects(context);\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    const usedBranch = this.getUsedBranch();\n    if (!usedBranch) {\n      return this.consequent.hasEffectsOnInteractionAtPath(path, interaction, context) || this.alternate.hasEffectsOnInteractionAtPath(path, interaction, context);\n    }\n    return usedBranch.hasEffectsOnInteractionAtPath(path, interaction, context);\n  }\n  include(context, includeChildrenRecursively) {\n    this.included = true;\n    const usedBranch = this.getUsedBranch();\n    if (includeChildrenRecursively || this.test.shouldBeIncluded(context) || usedBranch === null) {\n      this.test.include(context, includeChildrenRecursively);\n      this.consequent.include(context, includeChildrenRecursively);\n      this.alternate.include(context, includeChildrenRecursively);\n    } else {\n      usedBranch.include(context, includeChildrenRecursively);\n    }\n  }\n  includeCallArguments(context, parameters) {\n    const usedBranch = this.getUsedBranch();\n    if (usedBranch) {\n      usedBranch.includeCallArguments(context, parameters);\n    } else {\n      this.consequent.includeCallArguments(context, parameters);\n      this.alternate.includeCallArguments(context, parameters);\n    }\n  }\n  render(code, options) {\n    let {\n      isCalleeOfRenderedParent,\n      preventASI,\n      renderedParentType,\n      renderedSurroundingElement\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : BLANK;\n    const usedBranch = this.getUsedBranch();\n    if (this.test.included) {\n      this.test.render(code, options, {\n        renderedSurroundingElement\n      });\n      this.consequent.render(code, options);\n      this.alternate.render(code, options);\n    } else {\n      const colonPos = findFirstOccurrenceOutsideComment(code.original, ':', this.consequent.end);\n      const inclusionStart = findNonWhiteSpace(code.original, (this.consequent.included ? findFirstOccurrenceOutsideComment(code.original, '?', this.test.end) : colonPos) + 1);\n      if (preventASI) {\n        removeLineBreaks(code, inclusionStart, usedBranch.start);\n      }\n      code.remove(this.start, inclusionStart);\n      if (this.consequent.included) {\n        code.remove(colonPos, this.end);\n      }\n      removeAnnotations(this, code);\n      usedBranch.render(code, options, {\n        isCalleeOfRenderedParent,\n        preventASI: true,\n        renderedParentType: renderedParentType || this.parent.type,\n        renderedSurroundingElement: renderedSurroundingElement || this.parent.type\n      });\n    }\n  }\n  getUsedBranch() {\n    if (this.isBranchResolutionAnalysed) {\n      return this.usedBranch;\n    }\n    this.isBranchResolutionAnalysed = true;\n    const testValue = this.test.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, this);\n    return typeof testValue === 'symbol' ? null : this.usedBranch = testValue ? this.consequent : this.alternate;\n  }\n}\nclass ContinueStatement extends NodeBase {\n  hasEffects(context) {\n    if (this.label) {\n      if (!context.ignore.labels.has(this.label.name)) return true;\n      context.includedLabels.add(this.label.name);\n      context.brokenFlow = BROKEN_FLOW_ERROR_RETURN_LABEL;\n    } else {\n      if (!context.ignore.continues) return true;\n      context.brokenFlow = BROKEN_FLOW_BREAK_CONTINUE;\n    }\n    return false;\n  }\n  include(context) {\n    this.included = true;\n    if (this.label) {\n      this.label.include();\n      context.includedLabels.add(this.label.name);\n    }\n    context.brokenFlow = this.label ? BROKEN_FLOW_ERROR_RETURN_LABEL : BROKEN_FLOW_BREAK_CONTINUE;\n  }\n}\nclass DoWhileStatement extends NodeBase {\n  hasEffects(context) {\n    if (this.test.hasEffects(context)) return true;\n    const {\n      brokenFlow,\n      ignore\n    } = context;\n    const {\n      breaks,\n      continues\n    } = ignore;\n    ignore.breaks = true;\n    ignore.continues = true;\n    if (this.body.hasEffects(context)) return true;\n    ignore.breaks = breaks;\n    ignore.continues = continues;\n    context.brokenFlow = brokenFlow;\n    return false;\n  }\n  include(context, includeChildrenRecursively) {\n    this.included = true;\n    this.test.include(context, includeChildrenRecursively);\n    const {\n      brokenFlow\n    } = context;\n    this.body.include(context, includeChildrenRecursively, {\n      asSingleStatement: true\n    });\n    context.brokenFlow = brokenFlow;\n  }\n}\nclass EmptyStatement extends NodeBase {\n  hasEffects() {\n    return false;\n  }\n}\nclass ExportAllDeclaration extends NodeBase {\n  hasEffects() {\n    return false;\n  }\n  initialise() {\n    this.context.addExport(this);\n  }\n  render(code, _options, nodeRenderOptions) {\n    code.remove(nodeRenderOptions.start, nodeRenderOptions.end);\n  }\n  applyDeoptimizations() {}\n}\nExportAllDeclaration.prototype.needsBoundaries = true;\nclass FunctionDeclaration extends FunctionNode {\n  initialise() {\n    super.initialise();\n    if (this.id !== null) {\n      this.id.variable.isId = true;\n    }\n  }\n  parseNode(esTreeNode) {\n    if (esTreeNode.id !== null) {\n      this.id = new Identifier(esTreeNode.id, this, this.scope.parent);\n    }\n    super.parseNode(esTreeNode);\n  }\n}\n\n// The header ends at the first non-white-space after \"default\"\nfunction getDeclarationStart(code, start) {\n  return findNonWhiteSpace(code, findFirstOccurrenceOutsideComment(code, 'default', start) + 7);\n}\nfunction getIdInsertPosition(code, declarationKeyword, endMarker, start) {\n  const declarationEnd = findFirstOccurrenceOutsideComment(code, declarationKeyword, start) + declarationKeyword.length;\n  code = code.slice(declarationEnd, findFirstOccurrenceOutsideComment(code, endMarker, declarationEnd));\n  const generatorStarPos = findFirstOccurrenceOutsideComment(code, '*');\n  if (generatorStarPos === -1) {\n    return declarationEnd;\n  }\n  return declarationEnd + generatorStarPos + 1;\n}\nclass ExportDefaultDeclaration extends NodeBase {\n  include(context, includeChildrenRecursively) {\n    super.include(context, includeChildrenRecursively);\n    if (includeChildrenRecursively) {\n      this.context.includeVariableInModule(this.variable);\n    }\n  }\n  initialise() {\n    const declaration = this.declaration;\n    this.declarationName = declaration.id && declaration.id.name || this.declaration.name;\n    this.variable = this.scope.addExportDefaultDeclaration(this.declarationName || this.context.getModuleName(), this, this.context);\n    this.context.addExport(this);\n  }\n  render(code, options, nodeRenderOptions) {\n    const {\n      start,\n      end\n    } = nodeRenderOptions;\n    const declarationStart = getDeclarationStart(code.original, this.start);\n    if (this.declaration instanceof FunctionDeclaration) {\n      this.renderNamedDeclaration(code, declarationStart, 'function', '(', this.declaration.id === null, options);\n    } else if (this.declaration instanceof ClassDeclaration) {\n      this.renderNamedDeclaration(code, declarationStart, 'class', '{', this.declaration.id === null, options);\n    } else if (this.variable.getOriginalVariable() !== this.variable) {\n      // Remove altogether to prevent re-declaring the same variable\n      treeshakeNode(this, code, start, end);\n      return;\n    } else if (this.variable.included) {\n      this.renderVariableDeclaration(code, declarationStart, options);\n    } else {\n      code.remove(this.start, declarationStart);\n      this.declaration.render(code, options, {\n        renderedSurroundingElement: ExpressionStatement$1\n      });\n      if (code.original[this.end - 1] !== ';') {\n        code.appendLeft(this.end, ';');\n      }\n      return;\n    }\n    this.declaration.render(code, options);\n  }\n  applyDeoptimizations() {}\n  renderNamedDeclaration(code, declarationStart, declarationKeyword, endMarker, needsId, options) {\n    const {\n      exportNamesByVariable,\n      format,\n      snippets: {\n        getPropertyAccess\n      }\n    } = options;\n    const name = this.variable.getName(getPropertyAccess);\n    // Remove `export default`\n    code.remove(this.start, declarationStart);\n    if (needsId) {\n      code.appendLeft(getIdInsertPosition(code.original, declarationKeyword, endMarker, declarationStart), ` ${name}`);\n    }\n    if (format === 'system' && this.declaration instanceof ClassDeclaration && exportNamesByVariable.has(this.variable)) {\n      code.appendLeft(this.end, ` ${getSystemExportStatement([this.variable], options)};`);\n    }\n  }\n  renderVariableDeclaration(code, declarationStart, _ref22) {\n    let {\n      format,\n      exportNamesByVariable,\n      snippets: {\n        cnst,\n        getPropertyAccess\n      }\n    } = _ref22;\n    const hasTrailingSemicolon = code.original.charCodeAt(this.end - 1) === 59; /*\";\"*/\n    const systemExportNames = format === 'system' && exportNamesByVariable.get(this.variable);\n    if (systemExportNames) {\n      code.overwrite(this.start, declarationStart, `${cnst} ${this.variable.getName(getPropertyAccess)} = exports('${systemExportNames[0]}', `);\n      code.appendRight(hasTrailingSemicolon ? this.end - 1 : this.end, ')' + (hasTrailingSemicolon ? '' : ';'));\n    } else {\n      code.overwrite(this.start, declarationStart, `${cnst} ${this.variable.getName(getPropertyAccess)} = `);\n      if (!hasTrailingSemicolon) {\n        code.appendLeft(this.end, ';');\n      }\n    }\n  }\n}\nExportDefaultDeclaration.prototype.needsBoundaries = true;\nclass ExportNamedDeclaration extends NodeBase {\n  bind() {\n    // Do not bind specifiers\n    this.declaration?.bind();\n  }\n  hasEffects(context) {\n    return !!this.declaration?.hasEffects(context);\n  }\n  initialise() {\n    this.context.addExport(this);\n  }\n  render(code, options, nodeRenderOptions) {\n    const {\n      start,\n      end\n    } = nodeRenderOptions;\n    if (this.declaration === null) {\n      code.remove(start, end);\n    } else {\n      code.remove(this.start, this.declaration.start);\n      this.declaration.render(code, options, {\n        end,\n        start\n      });\n    }\n  }\n  applyDeoptimizations() {}\n}\nExportNamedDeclaration.prototype.needsBoundaries = true;\nclass ExportSpecifier extends NodeBase {\n  applyDeoptimizations() {}\n}\nclass ForInStatement extends NodeBase {\n  createScope(parentScope) {\n    this.scope = new BlockScope(parentScope);\n  }\n  hasEffects(context) {\n    const {\n      body,\n      deoptimized,\n      left,\n      right\n    } = this;\n    if (!deoptimized) this.applyDeoptimizations();\n    if (left.hasEffectsAsAssignmentTarget(context, false) || right.hasEffects(context)) return true;\n    const {\n      brokenFlow,\n      ignore\n    } = context;\n    const {\n      breaks,\n      continues\n    } = ignore;\n    ignore.breaks = true;\n    ignore.continues = true;\n    if (body.hasEffects(context)) return true;\n    ignore.breaks = breaks;\n    ignore.continues = continues;\n    context.brokenFlow = brokenFlow;\n    return false;\n  }\n  include(context, includeChildrenRecursively) {\n    const {\n      body,\n      deoptimized,\n      left,\n      right\n    } = this;\n    if (!deoptimized) this.applyDeoptimizations();\n    this.included = true;\n    left.includeAsAssignmentTarget(context, includeChildrenRecursively || true, false);\n    right.include(context, includeChildrenRecursively);\n    const {\n      brokenFlow\n    } = context;\n    body.include(context, includeChildrenRecursively, {\n      asSingleStatement: true\n    });\n    context.brokenFlow = brokenFlow;\n  }\n  initialise() {\n    this.left.setAssignedValue(UNKNOWN_EXPRESSION);\n  }\n  render(code, options) {\n    this.left.render(code, options, NO_SEMICOLON);\n    this.right.render(code, options, NO_SEMICOLON);\n    // handle no space between \"in\" and the right side\n    if (code.original.charCodeAt(this.right.start - 1) === 110 /* n */) {\n      code.prependLeft(this.right.start, ' ');\n    }\n    this.body.render(code, options);\n  }\n  applyDeoptimizations() {\n    this.deoptimized = true;\n    this.left.deoptimizePath(EMPTY_PATH);\n    this.context.requestTreeshakingPass();\n  }\n}\nclass ForOfStatement extends NodeBase {\n  createScope(parentScope) {\n    this.scope = new BlockScope(parentScope);\n  }\n  hasEffects() {\n    if (!this.deoptimized) this.applyDeoptimizations();\n    // Placeholder until proper Symbol.Iterator support\n    return true;\n  }\n  include(context, includeChildrenRecursively) {\n    const {\n      body,\n      deoptimized,\n      left,\n      right\n    } = this;\n    if (!deoptimized) this.applyDeoptimizations();\n    this.included = true;\n    left.includeAsAssignmentTarget(context, includeChildrenRecursively || true, false);\n    right.include(context, includeChildrenRecursively);\n    const {\n      brokenFlow\n    } = context;\n    body.include(context, includeChildrenRecursively, {\n      asSingleStatement: true\n    });\n    context.brokenFlow = brokenFlow;\n  }\n  initialise() {\n    this.left.setAssignedValue(UNKNOWN_EXPRESSION);\n  }\n  render(code, options) {\n    this.left.render(code, options, NO_SEMICOLON);\n    this.right.render(code, options, NO_SEMICOLON);\n    // handle no space between \"of\" and the right side\n    if (code.original.charCodeAt(this.right.start - 1) === 102 /* f */) {\n      code.prependLeft(this.right.start, ' ');\n    }\n    this.body.render(code, options);\n  }\n  applyDeoptimizations() {\n    this.deoptimized = true;\n    this.left.deoptimizePath(EMPTY_PATH);\n    this.context.requestTreeshakingPass();\n  }\n}\nclass ForStatement extends NodeBase {\n  createScope(parentScope) {\n    this.scope = new BlockScope(parentScope);\n  }\n  hasEffects(context) {\n    if (this.init?.hasEffects(context) || this.test?.hasEffects(context) || this.update?.hasEffects(context)) return true;\n    const {\n      brokenFlow,\n      ignore\n    } = context;\n    const {\n      breaks,\n      continues\n    } = ignore;\n    ignore.breaks = true;\n    ignore.continues = true;\n    if (this.body.hasEffects(context)) return true;\n    ignore.breaks = breaks;\n    ignore.continues = continues;\n    context.brokenFlow = brokenFlow;\n    return false;\n  }\n  include(context, includeChildrenRecursively) {\n    this.included = true;\n    this.init?.include(context, includeChildrenRecursively, {\n      asSingleStatement: true\n    });\n    this.test?.include(context, includeChildrenRecursively);\n    const {\n      brokenFlow\n    } = context;\n    this.update?.include(context, includeChildrenRecursively);\n    this.body.include(context, includeChildrenRecursively, {\n      asSingleStatement: true\n    });\n    context.brokenFlow = brokenFlow;\n  }\n  render(code, options) {\n    this.init?.render(code, options, NO_SEMICOLON);\n    this.test?.render(code, options, NO_SEMICOLON);\n    this.update?.render(code, options, NO_SEMICOLON);\n    this.body.render(code, options);\n  }\n}\nclass FunctionExpression extends FunctionNode {\n  render(code, options) {\n    let {\n      renderedSurroundingElement\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : BLANK;\n    super.render(code, options);\n    if (renderedSurroundingElement === ExpressionStatement$1) {\n      code.appendRight(this.start, '(');\n      code.prependLeft(this.end, ')');\n    }\n  }\n}\nclass TrackingScope extends BlockScope {\n  constructor() {\n    super(...arguments);\n    this.hoistedDeclarations = [];\n  }\n  addDeclaration(identifier, context, init, isHoisted) {\n    this.hoistedDeclarations.push(identifier);\n    return super.addDeclaration(identifier, context, init, isHoisted);\n  }\n}\nconst unset = Symbol('unset');\nclass IfStatement extends NodeBase {\n  constructor() {\n    super(...arguments);\n    this.testValue = unset;\n  }\n  deoptimizeCache() {\n    this.testValue = UnknownValue;\n  }\n  hasEffects(context) {\n    if (this.test.hasEffects(context)) {\n      return true;\n    }\n    const testValue = this.getTestValue();\n    if (typeof testValue === 'symbol') {\n      const {\n        brokenFlow\n      } = context;\n      if (this.consequent.hasEffects(context)) return true;\n      // eslint-disable-next-line unicorn/consistent-destructuring\n      const consequentBrokenFlow = context.brokenFlow;\n      context.brokenFlow = brokenFlow;\n      if (this.alternate === null) return false;\n      if (this.alternate.hasEffects(context)) return true;\n      context.brokenFlow =\n      // eslint-disable-next-line unicorn/consistent-destructuring\n      context.brokenFlow < consequentBrokenFlow ? context.brokenFlow : consequentBrokenFlow;\n      return false;\n    }\n    return testValue ? this.consequent.hasEffects(context) : !!this.alternate?.hasEffects(context);\n  }\n  include(context, includeChildrenRecursively) {\n    this.included = true;\n    if (includeChildrenRecursively) {\n      this.includeRecursively(includeChildrenRecursively, context);\n    } else {\n      const testValue = this.getTestValue();\n      if (typeof testValue === 'symbol') {\n        this.includeUnknownTest(context);\n      } else {\n        this.includeKnownTest(context, testValue);\n      }\n    }\n  }\n  parseNode(esTreeNode) {\n    this.consequentScope = new TrackingScope(this.scope);\n    this.consequent = new (this.context.getNodeConstructor(esTreeNode.consequent.type))(esTreeNode.consequent, this, this.consequentScope);\n    if (esTreeNode.alternate) {\n      this.alternateScope = new TrackingScope(this.scope);\n      this.alternate = new (this.context.getNodeConstructor(esTreeNode.alternate.type))(esTreeNode.alternate, this, this.alternateScope);\n    }\n    super.parseNode(esTreeNode);\n  }\n  render(code, options) {\n    const {\n      snippets: {\n        getPropertyAccess\n      }\n    } = options;\n    // Note that unknown test values are always included\n    const testValue = this.getTestValue();\n    const hoistedDeclarations = [];\n    const includesIfElse = this.test.included;\n    const noTreeshake = !this.context.options.treeshake;\n    if (includesIfElse) {\n      this.test.render(code, options);\n    } else {\n      code.remove(this.start, this.consequent.start);\n    }\n    if (this.consequent.included && (noTreeshake || typeof testValue === 'symbol' || testValue)) {\n      this.consequent.render(code, options);\n    } else {\n      code.overwrite(this.consequent.start, this.consequent.end, includesIfElse ? ';' : '');\n      hoistedDeclarations.push(...this.consequentScope.hoistedDeclarations);\n    }\n    if (this.alternate) {\n      if (this.alternate.included && (noTreeshake || typeof testValue === 'symbol' || !testValue)) {\n        if (includesIfElse) {\n          if (code.original.charCodeAt(this.alternate.start - 1) === 101) {\n            code.prependLeft(this.alternate.start, ' ');\n          }\n        } else {\n          code.remove(this.consequent.end, this.alternate.start);\n        }\n        this.alternate.render(code, options);\n      } else {\n        if (includesIfElse && this.shouldKeepAlternateBranch()) {\n          code.overwrite(this.alternate.start, this.end, ';');\n        } else {\n          code.remove(this.consequent.end, this.end);\n        }\n        hoistedDeclarations.push(...this.alternateScope.hoistedDeclarations);\n      }\n    }\n    this.renderHoistedDeclarations(hoistedDeclarations, code, getPropertyAccess);\n  }\n  applyDeoptimizations() {}\n  getTestValue() {\n    if (this.testValue === unset) {\n      return this.testValue = this.test.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, this);\n    }\n    return this.testValue;\n  }\n  includeKnownTest(context, testValue) {\n    if (this.test.shouldBeIncluded(context)) {\n      this.test.include(context, false);\n    }\n    if (testValue && this.consequent.shouldBeIncluded(context)) {\n      this.consequent.include(context, false, {\n        asSingleStatement: true\n      });\n    }\n    if (!testValue && this.alternate?.shouldBeIncluded(context)) {\n      this.alternate.include(context, false, {\n        asSingleStatement: true\n      });\n    }\n  }\n  includeRecursively(includeChildrenRecursively, context) {\n    this.test.include(context, includeChildrenRecursively);\n    this.consequent.include(context, includeChildrenRecursively);\n    this.alternate?.include(context, includeChildrenRecursively);\n  }\n  includeUnknownTest(context) {\n    this.test.include(context, false);\n    const {\n      brokenFlow\n    } = context;\n    let consequentBrokenFlow = BROKEN_FLOW_NONE;\n    if (this.consequent.shouldBeIncluded(context)) {\n      this.consequent.include(context, false, {\n        asSingleStatement: true\n      });\n      // eslint-disable-next-line unicorn/consistent-destructuring\n      consequentBrokenFlow = context.brokenFlow;\n      context.brokenFlow = brokenFlow;\n    }\n    if (this.alternate?.shouldBeIncluded(context)) {\n      this.alternate.include(context, false, {\n        asSingleStatement: true\n      });\n      context.brokenFlow =\n      // eslint-disable-next-line unicorn/consistent-destructuring\n      context.brokenFlow < consequentBrokenFlow ? context.brokenFlow : consequentBrokenFlow;\n    }\n  }\n  renderHoistedDeclarations(hoistedDeclarations, code, getPropertyAccess) {\n    const hoistedVariables = [...new Set(hoistedDeclarations.map(identifier => {\n      const variable = identifier.variable;\n      return variable.included ? variable.getName(getPropertyAccess) : '';\n    }))].filter(Boolean).join(', ');\n    if (hoistedVariables) {\n      const parentType = this.parent.type;\n      const needsBraces = parentType !== Program$1 && parentType !== BlockStatement$1;\n      code.prependRight(this.start, `${needsBraces ? '{ ' : ''}var ${hoistedVariables}; `);\n      if (needsBraces) {\n        code.appendLeft(this.end, ` }`);\n      }\n    }\n  }\n  shouldKeepAlternateBranch() {\n    let currentParent = this.parent;\n    do {\n      if (currentParent instanceof IfStatement && currentParent.alternate) {\n        return true;\n      }\n      if (currentParent instanceof BlockStatement) {\n        return false;\n      }\n      currentParent = currentParent.parent;\n    } while (currentParent);\n    return false;\n  }\n}\nclass ImportAttribute extends NodeBase {}\nclass ImportDeclaration extends NodeBase {\n  // Do not bind specifiers or assertions\n  bind() {}\n  hasEffects() {\n    return false;\n  }\n  initialise() {\n    this.context.addImport(this);\n  }\n  render(code, _options, nodeRenderOptions) {\n    code.remove(nodeRenderOptions.start, nodeRenderOptions.end);\n  }\n  applyDeoptimizations() {}\n}\nImportDeclaration.prototype.needsBoundaries = true;\nclass ImportDefaultSpecifier extends NodeBase {\n  applyDeoptimizations() {}\n}\nconst INTEROP_DEFAULT_VARIABLE = '_interopDefault';\nconst INTEROP_DEFAULT_COMPAT_VARIABLE = '_interopDefaultCompat';\nconst INTEROP_NAMESPACE_VARIABLE = '_interopNamespace';\nconst INTEROP_NAMESPACE_COMPAT_VARIABLE = '_interopNamespaceCompat';\nconst INTEROP_NAMESPACE_DEFAULT_VARIABLE = '_interopNamespaceDefault';\nconst INTEROP_NAMESPACE_DEFAULT_ONLY_VARIABLE = '_interopNamespaceDefaultOnly';\nconst MERGE_NAMESPACES_VARIABLE = '_mergeNamespaces';\nconst defaultInteropHelpersByInteropType = {\n  auto: INTEROP_DEFAULT_VARIABLE,\n  compat: INTEROP_DEFAULT_COMPAT_VARIABLE,\n  default: null,\n  defaultOnly: null,\n  esModule: null\n};\nconst isDefaultAProperty = (interopType, externalLiveBindings) => interopType === 'esModule' || externalLiveBindings && (interopType === 'auto' || interopType === 'compat');\nconst namespaceInteropHelpersByInteropType = {\n  auto: INTEROP_NAMESPACE_VARIABLE,\n  compat: INTEROP_NAMESPACE_COMPAT_VARIABLE,\n  default: INTEROP_NAMESPACE_DEFAULT_VARIABLE,\n  defaultOnly: INTEROP_NAMESPACE_DEFAULT_ONLY_VARIABLE,\n  esModule: null\n};\nconst canDefaultBeTakenFromNamespace = (interopType, externalLiveBindings) => interopType !== 'esModule' && isDefaultAProperty(interopType, externalLiveBindings);\nconst getHelpersBlock = (additionalHelpers, accessedGlobals, indent, snippets, liveBindings, freeze, namespaceToStringTag) => {\n  const usedHelpers = new Set(additionalHelpers);\n  for (const variable of HELPER_NAMES) {\n    if (accessedGlobals.has(variable)) {\n      usedHelpers.add(variable);\n    }\n  }\n  return HELPER_NAMES.map(variable => usedHelpers.has(variable) ? HELPER_GENERATORS[variable](indent, snippets, liveBindings, freeze, namespaceToStringTag, usedHelpers) : '').join('');\n};\nconst HELPER_GENERATORS = {\n  [INTEROP_DEFAULT_COMPAT_VARIABLE](_t, snippets, liveBindings) {\n    const {\n      _,\n      getDirectReturnFunction,\n      n\n    } = snippets;\n    const [left, right] = getDirectReturnFunction(['e'], {\n      functionReturn: true,\n      lineBreakIndent: null,\n      name: INTEROP_DEFAULT_COMPAT_VARIABLE\n    });\n    return `${left}${getIsCompatNamespace(snippets)}${_}?${_}` + `${liveBindings ? getDefaultLiveBinding(snippets) : getDefaultStatic(snippets)}${right}${n}${n}`;\n  },\n  [INTEROP_DEFAULT_VARIABLE](_t, snippets, liveBindings) {\n    const {\n      _,\n      getDirectReturnFunction,\n      n\n    } = snippets;\n    const [left, right] = getDirectReturnFunction(['e'], {\n      functionReturn: true,\n      lineBreakIndent: null,\n      name: INTEROP_DEFAULT_VARIABLE\n    });\n    return `${left}e${_}&&${_}e.__esModule${_}?${_}` + `${liveBindings ? getDefaultLiveBinding(snippets) : getDefaultStatic(snippets)}${right}${n}${n}`;\n  },\n  [INTEROP_NAMESPACE_COMPAT_VARIABLE](t, snippets, liveBindings, freeze, namespaceToStringTag, usedHelpers) {\n    const {\n      _,\n      getDirectReturnFunction,\n      n\n    } = snippets;\n    if (usedHelpers.has(INTEROP_NAMESPACE_DEFAULT_VARIABLE)) {\n      const [left, right] = getDirectReturnFunction(['e'], {\n        functionReturn: true,\n        lineBreakIndent: null,\n        name: INTEROP_NAMESPACE_COMPAT_VARIABLE\n      });\n      return `${left}${getIsCompatNamespace(snippets)}${_}?${_}e${_}:${_}${INTEROP_NAMESPACE_DEFAULT_VARIABLE}(e)${right}${n}${n}`;\n    }\n    return `function ${INTEROP_NAMESPACE_COMPAT_VARIABLE}(e)${_}{${n}` + `${t}if${_}(${getIsCompatNamespace(snippets)})${_}return e;${n}` + createNamespaceObject(t, t, snippets, liveBindings, freeze, namespaceToStringTag) + `}${n}${n}`;\n  },\n  [INTEROP_NAMESPACE_DEFAULT_ONLY_VARIABLE](_t, snippets, _liveBindings, freeze, namespaceToStringTag) {\n    const {\n      getDirectReturnFunction,\n      getObject,\n      n\n    } = snippets;\n    const [left, right] = getDirectReturnFunction(['e'], {\n      functionReturn: true,\n      lineBreakIndent: null,\n      name: INTEROP_NAMESPACE_DEFAULT_ONLY_VARIABLE\n    });\n    return `${left}${getFrozen(freeze, getWithToStringTag(namespaceToStringTag, getObject([['__proto__', 'null'], ['default', 'e']], {\n      lineBreakIndent: null\n    }), snippets))}${right}${n}${n}`;\n  },\n  [INTEROP_NAMESPACE_DEFAULT_VARIABLE](t, snippets, liveBindings, freeze, namespaceToStringTag) {\n    const {\n      _,\n      n\n    } = snippets;\n    return `function ${INTEROP_NAMESPACE_DEFAULT_VARIABLE}(e)${_}{${n}` + createNamespaceObject(t, t, snippets, liveBindings, freeze, namespaceToStringTag) + `}${n}${n}`;\n  },\n  [INTEROP_NAMESPACE_VARIABLE](t, snippets, liveBindings, freeze, namespaceToStringTag, usedHelpers) {\n    const {\n      _,\n      getDirectReturnFunction,\n      n\n    } = snippets;\n    if (usedHelpers.has(INTEROP_NAMESPACE_DEFAULT_VARIABLE)) {\n      const [left, right] = getDirectReturnFunction(['e'], {\n        functionReturn: true,\n        lineBreakIndent: null,\n        name: INTEROP_NAMESPACE_VARIABLE\n      });\n      return `${left}e${_}&&${_}e.__esModule${_}?${_}e${_}:${_}${INTEROP_NAMESPACE_DEFAULT_VARIABLE}(e)${right}${n}${n}`;\n    }\n    return `function ${INTEROP_NAMESPACE_VARIABLE}(e)${_}{${n}` + `${t}if${_}(e${_}&&${_}e.__esModule)${_}return e;${n}` + createNamespaceObject(t, t, snippets, liveBindings, freeze, namespaceToStringTag) + `}${n}${n}`;\n  },\n  [MERGE_NAMESPACES_VARIABLE](t, snippets, liveBindings, freeze, namespaceToStringTag) {\n    const {\n      _,\n      cnst,\n      n\n    } = snippets;\n    const useForEach = cnst === 'var' && liveBindings;\n    return `function ${MERGE_NAMESPACES_VARIABLE}(n, m)${_}{${n}` + `${t}${loopOverNamespaces(`{${n}` + `${t}${t}${t}if${_}(k${_}!==${_}'default'${_}&&${_}!(k in n))${_}{${n}` + (liveBindings ? useForEach ? copyOwnPropertyLiveBinding : copyPropertyLiveBinding : copyPropertyStatic)(t, t + t + t + t, snippets) + `${t}${t}${t}}${n}` + `${t}${t}}`, useForEach, t, snippets)}${n}` + `${t}return ${getFrozen(freeze, getWithToStringTag(namespaceToStringTag, 'n', snippets))};${n}` + `}${n}${n}`;\n  }\n};\nconst getDefaultLiveBinding = _ref23 => {\n  let {\n    _,\n    getObject\n  } = _ref23;\n  return `e${_}:${_}${getObject([['default', 'e']], {\n    lineBreakIndent: null\n  })}`;\n};\nconst getDefaultStatic = _ref24 => {\n  let {\n    _,\n    getPropertyAccess\n  } = _ref24;\n  return `e${getPropertyAccess('default')}${_}:${_}e`;\n};\nconst getIsCompatNamespace = _ref25 => {\n  let {\n    _\n  } = _ref25;\n  return `e${_}&&${_}typeof e${_}===${_}'object'${_}&&${_}'default'${_}in e`;\n};\nconst createNamespaceObject = (t, index, snippets, liveBindings, freeze, namespaceToStringTag) => {\n  const {\n    _,\n    cnst,\n    getObject,\n    getPropertyAccess,\n    n,\n    s\n  } = snippets;\n  const copyProperty = `{${n}` + (liveBindings ? copyNonDefaultOwnPropertyLiveBinding : copyPropertyStatic)(t, index + t + t, snippets) + `${index}${t}}`;\n  return `${index}${cnst} n${_}=${_}Object.create(null${namespaceToStringTag ? `,${_}{${_}[Symbol.toStringTag]:${_}${getToStringTagValue(getObject)}${_}}` : ''});${n}` + `${index}if${_}(e)${_}{${n}` + `${index}${t}${loopOverKeys(copyProperty, !liveBindings, snippets)}${n}` + `${index}}${n}` + `${index}n${getPropertyAccess('default')}${_}=${_}e;${n}` + `${index}return ${getFrozen(freeze, 'n')}${s}${n}`;\n};\nconst loopOverKeys = (body, allowVariableLoopVariable, _ref26) => {\n  let {\n    _,\n    cnst,\n    getFunctionIntro,\n    s\n  } = _ref26;\n  return cnst !== 'var' || allowVariableLoopVariable ? `for${_}(${cnst} k in e)${_}${body}` : `Object.keys(e).forEach(${getFunctionIntro(['k'], {\n    isAsync: false,\n    name: null\n  })}${body})${s}`;\n};\nconst loopOverNamespaces = (body, useForEach, t, _ref27) => {\n  let {\n    _,\n    cnst,\n    getDirectReturnFunction,\n    getFunctionIntro,\n    n\n  } = _ref27;\n  if (useForEach) {\n    const [left, right] = getDirectReturnFunction(['e'], {\n      functionReturn: false,\n      lineBreakIndent: {\n        base: t,\n        t\n      },\n      name: null\n    });\n    return `m.forEach(${left}` + `e${_}&&${_}typeof e${_}!==${_}'string'${_}&&${_}!Array.isArray(e)${_}&&${_}Object.keys(e).forEach(${getFunctionIntro(['k'], {\n      isAsync: false,\n      name: null\n    })}${body})${right});`;\n  }\n  return `for${_}(var i${_}=${_}0;${_}i${_}<${_}m.length;${_}i++)${_}{${n}` + `${t}${t}${cnst} e${_}=${_}m[i];${n}` + `${t}${t}if${_}(typeof e${_}!==${_}'string'${_}&&${_}!Array.isArray(e))${_}{${_}for${_}(${cnst} k in e)${_}${body}${_}}${n}${t}}`;\n};\nconst copyNonDefaultOwnPropertyLiveBinding = (t, index, snippets) => {\n  const {\n    _,\n    n\n  } = snippets;\n  return `${index}if${_}(k${_}!==${_}'default')${_}{${n}` + copyOwnPropertyLiveBinding(t, index + t, snippets) + `${index}}${n}`;\n};\nconst copyOwnPropertyLiveBinding = (t, index, _ref28) => {\n  let {\n    _,\n    cnst,\n    getDirectReturnFunction,\n    n\n  } = _ref28;\n  const [left, right] = getDirectReturnFunction([], {\n    functionReturn: true,\n    lineBreakIndent: null,\n    name: null\n  });\n  return `${index}${cnst} d${_}=${_}Object.getOwnPropertyDescriptor(e,${_}k);${n}` + `${index}Object.defineProperty(n,${_}k,${_}d.get${_}?${_}d${_}:${_}{${n}` + `${index}${t}enumerable:${_}true,${n}` + `${index}${t}get:${_}${left}e[k]${right}${n}` + `${index}});${n}`;\n};\nconst copyPropertyLiveBinding = (t, index, _ref29) => {\n  let {\n    _,\n    cnst,\n    getDirectReturnFunction,\n    n\n  } = _ref29;\n  const [left, right] = getDirectReturnFunction([], {\n    functionReturn: true,\n    lineBreakIndent: null,\n    name: null\n  });\n  return `${index}${cnst} d${_}=${_}Object.getOwnPropertyDescriptor(e,${_}k);${n}` + `${index}if${_}(d)${_}{${n}` + `${index}${t}Object.defineProperty(n,${_}k,${_}d.get${_}?${_}d${_}:${_}{${n}` + `${index}${t}${t}enumerable:${_}true,${n}` + `${index}${t}${t}get:${_}${left}e[k]${right}${n}` + `${index}${t}});${n}` + `${index}}${n}`;\n};\nconst copyPropertyStatic = (_t, index, _ref30) => {\n  let {\n    _,\n    n\n  } = _ref30;\n  return `${index}n[k]${_}=${_}e[k];${n}`;\n};\nconst getFrozen = (freeze, fragment) => freeze ? `Object.freeze(${fragment})` : fragment;\nconst getWithToStringTag = (namespaceToStringTag, fragment, _ref31) => {\n  let {\n    _,\n    getObject\n  } = _ref31;\n  return namespaceToStringTag ? `Object.defineProperty(${fragment},${_}Symbol.toStringTag,${_}${getToStringTagValue(getObject)})` : fragment;\n};\nconst HELPER_NAMES = Object.keys(HELPER_GENERATORS);\nfunction getToStringTagValue(getObject) {\n  return getObject([['value', \"'Module'\"]], {\n    lineBreakIndent: null\n  });\n}\n\n// TODO once ImportExpression follows official ESTree specs with \"null\" as\n//  default, keys.ts should be updated\nclass ImportExpression extends NodeBase {\n  constructor() {\n    super(...arguments);\n    this.inlineNamespace = null;\n    this.assertions = null;\n    this.mechanism = null;\n    this.namespaceExportName = undefined;\n    this.resolution = null;\n    this.resolutionString = null;\n  }\n  // Do not bind assertions\n  bind() {\n    this.source.bind();\n  }\n  hasEffects() {\n    return true;\n  }\n  include(context, includeChildrenRecursively) {\n    if (!this.included) {\n      this.included = true;\n      this.context.includeDynamicImport(this);\n      this.scope.addAccessedDynamicImport(this);\n    }\n    this.source.include(context, includeChildrenRecursively);\n  }\n  initialise() {\n    this.context.addDynamicImport(this);\n  }\n  parseNode(esTreeNode) {\n    // Keep the source AST to be used by renderDynamicImport\n    super.parseNode(esTreeNode, ['source']);\n  }\n  render(code, options) {\n    const {\n      snippets: {\n        _,\n        getDirectReturnFunction,\n        getObject,\n        getPropertyAccess\n      }\n    } = options;\n    if (this.inlineNamespace) {\n      const [left, right] = getDirectReturnFunction([], {\n        functionReturn: true,\n        lineBreakIndent: null,\n        name: null\n      });\n      code.overwrite(this.start, this.end, `Promise.resolve().then(${left}${this.inlineNamespace.getName(getPropertyAccess)}${right})`);\n      return;\n    }\n    if (this.mechanism) {\n      code.overwrite(this.start, findFirstOccurrenceOutsideComment(code.original, '(', this.start + 6) + 1, this.mechanism.left);\n      code.overwrite(this.end - 1, this.end, this.mechanism.right);\n    }\n    if (this.resolutionString) {\n      code.overwrite(this.source.start, this.source.end, this.resolutionString);\n      if (this.namespaceExportName) {\n        const [left, right] = getDirectReturnFunction(['n'], {\n          functionReturn: true,\n          lineBreakIndent: null,\n          name: null\n        });\n        code.prependLeft(this.end, `.then(${left}n.${this.namespaceExportName}${right})`);\n      }\n    } else {\n      this.source.render(code, options);\n    }\n    if (this.assertions !== true) {\n      if (this.arguments) {\n        code.overwrite(this.source.end, this.end - 1, '', {\n          contentOnly: true\n        });\n      }\n      if (this.assertions) {\n        code.appendLeft(this.end - 1, `,${_}${getObject([['assert', this.assertions]], {\n          lineBreakIndent: null\n        })}`);\n      }\n    }\n  }\n  setExternalResolution(exportMode, resolution, options, snippets, pluginDriver, accessedGlobalsByScope, resolutionString, namespaceExportName, assertions) {\n    const {\n      format\n    } = options;\n    this.inlineNamespace = null;\n    this.resolution = resolution;\n    this.resolutionString = resolutionString;\n    this.namespaceExportName = namespaceExportName;\n    this.assertions = assertions;\n    const accessedGlobals = [...(accessedImportGlobals[format] || [])];\n    let helper;\n    ({\n      helper,\n      mechanism: this.mechanism\n    } = this.getDynamicImportMechanismAndHelper(resolution, exportMode, options, snippets, pluginDriver));\n    if (helper) {\n      accessedGlobals.push(helper);\n    }\n    if (accessedGlobals.length > 0) {\n      this.scope.addAccessedGlobals(accessedGlobals, accessedGlobalsByScope);\n    }\n  }\n  setInternalResolution(inlineNamespace) {\n    this.inlineNamespace = inlineNamespace;\n  }\n  applyDeoptimizations() {}\n  getDynamicImportMechanismAndHelper(resolution, exportMode, _ref32, _ref33, pluginDriver) {\n    let {\n      compact,\n      dynamicImportFunction,\n      dynamicImportInCjs,\n      format,\n      generatedCode: {\n        arrowFunctions\n      },\n      interop\n    } = _ref32;\n    let {\n      _,\n      getDirectReturnFunction,\n      getDirectReturnIifeLeft\n    } = _ref33;\n    const mechanism = pluginDriver.hookFirstSync('renderDynamicImport', [{\n      customResolution: typeof this.resolution === 'string' ? this.resolution : null,\n      format,\n      moduleId: this.context.module.id,\n      targetModuleId: this.resolution && typeof this.resolution !== 'string' ? this.resolution.id : null\n    }]);\n    if (mechanism) {\n      return {\n        helper: null,\n        mechanism\n      };\n    }\n    const hasDynamicTarget = !this.resolution || typeof this.resolution === 'string';\n    switch (format) {\n      case 'cjs':\n        {\n          if (dynamicImportInCjs && (!resolution || typeof resolution === 'string' || resolution instanceof ExternalModule)) {\n            return {\n              helper: null,\n              mechanism: null\n            };\n          }\n          const helper = getInteropHelper(resolution, exportMode, interop);\n          let left = `require(`;\n          let right = `)`;\n          if (helper) {\n            left = `/*#__PURE__*/${helper}(${left}`;\n            right += ')';\n          }\n          const [functionLeft, functionRight] = getDirectReturnFunction([], {\n            functionReturn: true,\n            lineBreakIndent: null,\n            name: null\n          });\n          left = `Promise.resolve().then(${functionLeft}${left}`;\n          right += `${functionRight})`;\n          if (!arrowFunctions && hasDynamicTarget) {\n            left = getDirectReturnIifeLeft(['t'], `${left}t${right}`, {\n              needsArrowReturnParens: false,\n              needsWrappedFunction: true\n            });\n            right = ')';\n          }\n          return {\n            helper,\n            mechanism: {\n              left,\n              right\n            }\n          };\n        }\n      case 'amd':\n        {\n          const resolve = compact ? 'c' : 'resolve';\n          const reject = compact ? 'e' : 'reject';\n          const helper = getInteropHelper(resolution, exportMode, interop);\n          const [resolveLeft, resolveRight] = getDirectReturnFunction(['m'], {\n            functionReturn: false,\n            lineBreakIndent: null,\n            name: null\n          });\n          const resolveNamespace = helper ? `${resolveLeft}${resolve}(/*#__PURE__*/${helper}(m))${resolveRight}` : resolve;\n          const [handlerLeft, handlerRight] = getDirectReturnFunction([resolve, reject], {\n            functionReturn: false,\n            lineBreakIndent: null,\n            name: null\n          });\n          let left = `new Promise(${handlerLeft}require([`;\n          let right = `],${_}${resolveNamespace},${_}${reject})${handlerRight})`;\n          if (!arrowFunctions && hasDynamicTarget) {\n            left = getDirectReturnIifeLeft(['t'], `${left}t${right}`, {\n              needsArrowReturnParens: false,\n              needsWrappedFunction: true\n            });\n            right = ')';\n          }\n          return {\n            helper,\n            mechanism: {\n              left,\n              right\n            }\n          };\n        }\n      case 'system':\n        {\n          return {\n            helper: null,\n            mechanism: {\n              left: 'module.import(',\n              right: ')'\n            }\n          };\n        }\n      case 'es':\n        {\n          if (dynamicImportFunction) {\n            return {\n              helper: null,\n              mechanism: {\n                left: `${dynamicImportFunction}(`,\n                right: ')'\n              }\n            };\n          }\n        }\n    }\n    return {\n      helper: null,\n      mechanism: null\n    };\n  }\n}\nfunction getInteropHelper(resolution, exportMode, interop) {\n  return exportMode === 'external' ? namespaceInteropHelpersByInteropType[interop(resolution instanceof ExternalModule ? resolution.id : null)] : exportMode === 'default' ? INTEROP_NAMESPACE_DEFAULT_ONLY_VARIABLE : null;\n}\nconst accessedImportGlobals = {\n  amd: ['require'],\n  cjs: ['require'],\n  system: ['module']\n};\nclass ImportNamespaceSpecifier extends NodeBase {\n  applyDeoptimizations() {}\n}\nclass ImportSpecifier extends NodeBase {\n  applyDeoptimizations() {}\n}\nclass LabeledStatement extends NodeBase {\n  hasEffects(context) {\n    const brokenFlow = context.brokenFlow;\n    context.ignore.labels.add(this.label.name);\n    if (this.body.hasEffects(context)) return true;\n    context.ignore.labels.delete(this.label.name);\n    if (context.includedLabels.has(this.label.name)) {\n      context.includedLabels.delete(this.label.name);\n      context.brokenFlow = brokenFlow;\n    }\n    return false;\n  }\n  include(context, includeChildrenRecursively) {\n    this.included = true;\n    const brokenFlow = context.brokenFlow;\n    this.body.include(context, includeChildrenRecursively);\n    if (includeChildrenRecursively || context.includedLabels.has(this.label.name)) {\n      this.label.include();\n      context.includedLabels.delete(this.label.name);\n      context.brokenFlow = brokenFlow;\n    }\n  }\n  render(code, options) {\n    if (this.label.included) {\n      this.label.render(code, options);\n    } else {\n      code.remove(this.start, findNonWhiteSpace(code.original, findFirstOccurrenceOutsideComment(code.original, ':', this.label.end) + 1));\n    }\n    this.body.render(code, options);\n  }\n}\nclass LogicalExpression extends NodeBase {\n  constructor() {\n    super(...arguments);\n    // We collect deoptimization information if usedBranch !== null\n    this.expressionsToBeDeoptimized = [];\n    this.isBranchResolutionAnalysed = false;\n    this.usedBranch = null;\n  }\n  deoptimizeCache() {\n    if (this.usedBranch) {\n      const unusedBranch = this.usedBranch === this.left ? this.right : this.left;\n      this.usedBranch = null;\n      unusedBranch.deoptimizePath(UNKNOWN_PATH);\n      for (const expression of this.expressionsToBeDeoptimized) {\n        expression.deoptimizeCache();\n      }\n      // Request another pass because we need to ensure \"include\" runs again if\n      // it is rendered\n      this.context.requestTreeshakingPass();\n    }\n  }\n  deoptimizePath(path) {\n    const usedBranch = this.getUsedBranch();\n    if (usedBranch) {\n      usedBranch.deoptimizePath(path);\n    } else {\n      this.left.deoptimizePath(path);\n      this.right.deoptimizePath(path);\n    }\n  }\n  deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n    this.left.deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n    this.right.deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n  }\n  getLiteralValueAtPath(path, recursionTracker, origin) {\n    const usedBranch = this.getUsedBranch();\n    if (!usedBranch) return UnknownValue;\n    this.expressionsToBeDeoptimized.push(origin);\n    return usedBranch.getLiteralValueAtPath(path, recursionTracker, origin);\n  }\n  getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n    const usedBranch = this.getUsedBranch();\n    if (!usedBranch) return [new MultiExpression([this.left.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin)[0], this.right.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin)[0]]), false];\n    this.expressionsToBeDeoptimized.push(origin);\n    return usedBranch.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\n  }\n  hasEffects(context) {\n    if (this.left.hasEffects(context)) {\n      return true;\n    }\n    if (this.getUsedBranch() !== this.left) {\n      return this.right.hasEffects(context);\n    }\n    return false;\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    const usedBranch = this.getUsedBranch();\n    if (!usedBranch) {\n      return this.left.hasEffectsOnInteractionAtPath(path, interaction, context) || this.right.hasEffectsOnInteractionAtPath(path, interaction, context);\n    }\n    return usedBranch.hasEffectsOnInteractionAtPath(path, interaction, context);\n  }\n  include(context, includeChildrenRecursively) {\n    this.included = true;\n    const usedBranch = this.getUsedBranch();\n    if (includeChildrenRecursively || usedBranch === this.right && this.left.shouldBeIncluded(context) || !usedBranch) {\n      this.left.include(context, includeChildrenRecursively);\n      this.right.include(context, includeChildrenRecursively);\n    } else {\n      usedBranch.include(context, includeChildrenRecursively);\n    }\n  }\n  render(code, options) {\n    let {\n      isCalleeOfRenderedParent,\n      preventASI,\n      renderedParentType,\n      renderedSurroundingElement\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : BLANK;\n    if (!this.left.included || !this.right.included) {\n      const operatorPos = findFirstOccurrenceOutsideComment(code.original, this.operator, this.left.end);\n      if (this.right.included) {\n        const removePos = findNonWhiteSpace(code.original, operatorPos + 2);\n        code.remove(this.start, removePos);\n        if (preventASI) {\n          removeLineBreaks(code, removePos, this.right.start);\n        }\n      } else {\n        code.remove(operatorPos, this.end);\n      }\n      removeAnnotations(this, code);\n      this.getUsedBranch().render(code, options, {\n        isCalleeOfRenderedParent,\n        preventASI,\n        renderedParentType: renderedParentType || this.parent.type,\n        renderedSurroundingElement: renderedSurroundingElement || this.parent.type\n      });\n    } else {\n      this.left.render(code, options, {\n        preventASI,\n        renderedSurroundingElement\n      });\n      this.right.render(code, options);\n    }\n  }\n  getUsedBranch() {\n    if (!this.isBranchResolutionAnalysed) {\n      this.isBranchResolutionAnalysed = true;\n      const leftValue = this.left.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, this);\n      if (typeof leftValue === 'symbol') {\n        return null;\n      } else {\n        this.usedBranch = this.operator === '||' && leftValue || this.operator === '&&' && !leftValue || this.operator === '??' && leftValue != null ? this.left : this.right;\n      }\n    }\n    return this.usedBranch;\n  }\n}\nconst FILE_PREFIX = 'ROLLUP_FILE_URL_';\nconst IMPORT = 'import';\nclass MetaProperty extends NodeBase {\n  constructor() {\n    super(...arguments);\n    this.metaProperty = null;\n    this.preliminaryChunkId = null;\n    this.referenceId = null;\n  }\n  getReferencedFileName(outputPluginDriver) {\n    const {\n      meta: {\n        name\n      },\n      metaProperty\n    } = this;\n    if (name === IMPORT && metaProperty?.startsWith(FILE_PREFIX)) {\n      return outputPluginDriver.getFileName(metaProperty.slice(FILE_PREFIX.length));\n    }\n    return null;\n  }\n  hasEffects() {\n    return false;\n  }\n  hasEffectsOnInteractionAtPath(path, _ref34) {\n    let {\n      type\n    } = _ref34;\n    return path.length > 1 || type !== INTERACTION_ACCESSED;\n  }\n  include() {\n    if (!this.included) {\n      this.included = true;\n      if (this.meta.name === IMPORT) {\n        this.context.addImportMeta(this);\n        const parent = this.parent;\n        const metaProperty = this.metaProperty = parent instanceof MemberExpression && typeof parent.propertyKey === 'string' ? parent.propertyKey : null;\n        if (metaProperty?.startsWith(FILE_PREFIX)) {\n          this.referenceId = metaProperty.slice(FILE_PREFIX.length);\n        }\n      }\n    }\n  }\n  render(code, _ref35) {\n    let {\n      format,\n      pluginDriver,\n      snippets\n    } = _ref35;\n    const {\n      context: {\n        module: {\n          id: moduleId\n        }\n      },\n      meta: {\n        name\n      },\n      metaProperty,\n      parent,\n      preliminaryChunkId,\n      referenceId,\n      start,\n      end\n    } = this;\n    if (name !== IMPORT) return;\n    const chunkId = preliminaryChunkId;\n    if (referenceId) {\n      const fileName = pluginDriver.getFileName(referenceId);\n      const relativePath = normalize(relative$1(dirname(chunkId), fileName));\n      const replacement = pluginDriver.hookFirstSync('resolveFileUrl', [{\n        chunkId,\n        fileName,\n        format,\n        moduleId,\n        referenceId,\n        relativePath\n      }]) || relativeUrlMechanisms[format](relativePath);\n      code.overwrite(parent.start, parent.end, replacement, {\n        contentOnly: true\n      });\n      return;\n    }\n    const replacement = pluginDriver.hookFirstSync('resolveImportMeta', [metaProperty, {\n      chunkId,\n      format,\n      moduleId\n    }]) || importMetaMechanisms[format]?.(metaProperty, {\n      chunkId,\n      snippets\n    });\n    if (typeof replacement === 'string') {\n      if (parent instanceof MemberExpression) {\n        code.overwrite(parent.start, parent.end, replacement, {\n          contentOnly: true\n        });\n      } else {\n        code.overwrite(start, end, replacement, {\n          contentOnly: true\n        });\n      }\n    }\n  }\n  setResolution(format, accessedGlobalsByScope, preliminaryChunkId) {\n    this.preliminaryChunkId = preliminaryChunkId;\n    const accessedGlobals = (this.metaProperty?.startsWith(FILE_PREFIX) ? accessedFileUrlGlobals : accessedMetaUrlGlobals)[format];\n    if (accessedGlobals.length > 0) {\n      this.scope.addAccessedGlobals(accessedGlobals, accessedGlobalsByScope);\n    }\n  }\n}\nconst accessedMetaUrlGlobals = {\n  amd: ['document', 'module', 'URL'],\n  cjs: ['document', 'require', 'URL'],\n  es: [],\n  iife: ['document', 'URL'],\n  system: ['module'],\n  umd: ['document', 'require', 'URL']\n};\nconst accessedFileUrlGlobals = {\n  amd: ['document', 'require', 'URL'],\n  cjs: ['document', 'require', 'URL'],\n  es: [],\n  iife: ['document', 'URL'],\n  system: ['module', 'URL'],\n  umd: ['document', 'require', 'URL']\n};\nconst getResolveUrl = function (path) {\n  let URL = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'URL';\n  return `new ${URL}(${path}).href`;\n};\nconst getRelativeUrlFromDocument = function (relativePath) {\n  let umd = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return getResolveUrl(`'${escapeId(relativePath)}', ${umd ? `typeof document === 'undefined' ? location.href : ` : ''}document.currentScript && document.currentScript.src || document.baseURI`);\n};\nconst getGenericImportMetaMechanism = getUrl => (property, _ref36) => {\n  let {\n    chunkId\n  } = _ref36;\n  const urlMechanism = getUrl(chunkId);\n  return property === null ? `({ url: ${urlMechanism} })` : property === 'url' ? urlMechanism : 'undefined';\n};\nconst getFileUrlFromFullPath = path => `require('u' + 'rl').pathToFileURL(${path}).href`;\nconst getFileUrlFromRelativePath = path => getFileUrlFromFullPath(`__dirname + '/${path}'`);\nconst getUrlFromDocument = function (chunkId) {\n  let umd = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return `${umd ? `typeof document === 'undefined' ? location.href : ` : ''}(document.currentScript && document.currentScript.src || new URL('${escapeId(chunkId)}', document.baseURI).href)`;\n};\nconst relativeUrlMechanisms = {\n  amd: relativePath => {\n    if (relativePath[0] !== '.') relativePath = './' + relativePath;\n    return getResolveUrl(`require.toUrl('${relativePath}'), document.baseURI`);\n  },\n  cjs: relativePath => `(typeof document === 'undefined' ? ${getFileUrlFromRelativePath(relativePath)} : ${getRelativeUrlFromDocument(relativePath)})`,\n  es: relativePath => getResolveUrl(`'${relativePath}', import.meta.url`),\n  iife: relativePath => getRelativeUrlFromDocument(relativePath),\n  system: relativePath => getResolveUrl(`'${relativePath}', module.meta.url`),\n  umd: relativePath => `(typeof document === 'undefined' && typeof location === 'undefined' ? ${getFileUrlFromRelativePath(relativePath)} : ${getRelativeUrlFromDocument(relativePath, true)})`\n};\nconst importMetaMechanisms = {\n  amd: getGenericImportMetaMechanism(() => getResolveUrl(`module.uri, document.baseURI`)),\n  cjs: getGenericImportMetaMechanism(chunkId => `(typeof document === 'undefined' ? ${getFileUrlFromFullPath('__filename')} : ${getUrlFromDocument(chunkId)})`),\n  iife: getGenericImportMetaMechanism(chunkId => getUrlFromDocument(chunkId)),\n  system: (property, _ref37) => {\n    let {\n      snippets: {\n        getPropertyAccess\n      }\n    } = _ref37;\n    return property === null ? `module.meta` : `module.meta${getPropertyAccess(property)}`;\n  },\n  umd: getGenericImportMetaMechanism(chunkId => `(typeof document === 'undefined' && typeof location === 'undefined' ? ${getFileUrlFromFullPath('__filename')} : ${getUrlFromDocument(chunkId, true)})`)\n};\nclass NewExpression extends NodeBase {\n  hasEffects(context) {\n    try {\n      for (const argument of this.arguments) {\n        if (argument.hasEffects(context)) return true;\n      }\n      if (this.context.options.treeshake.annotations && this.annotations) {\n        return false;\n      }\n      return this.callee.hasEffects(context) || this.callee.hasEffectsOnInteractionAtPath(EMPTY_PATH, this.interaction, context);\n    } finally {\n      if (!this.deoptimized) this.applyDeoptimizations();\n    }\n  }\n  hasEffectsOnInteractionAtPath(path, _ref38) {\n    let {\n      type\n    } = _ref38;\n    return path.length > 0 || type !== INTERACTION_ACCESSED;\n  }\n  include(context, includeChildrenRecursively) {\n    if (!this.deoptimized) this.applyDeoptimizations();\n    if (includeChildrenRecursively) {\n      super.include(context, includeChildrenRecursively);\n    } else {\n      this.included = true;\n      this.callee.include(context, false);\n    }\n    this.callee.includeCallArguments(context, this.arguments);\n  }\n  initialise() {\n    this.interaction = {\n      args: this.arguments,\n      thisArg: null,\n      type: INTERACTION_CALLED,\n      withNew: true\n    };\n  }\n  render(code, options) {\n    this.callee.render(code, options);\n    renderCallArguments(code, options, this);\n  }\n  applyDeoptimizations() {\n    this.deoptimized = true;\n    for (const argument of this.arguments) {\n      // This will make sure all properties of parameters behave as \"unknown\"\n      argument.deoptimizePath(UNKNOWN_PATH);\n    }\n    this.context.requestTreeshakingPass();\n  }\n}\nclass ObjectExpression extends NodeBase {\n  constructor() {\n    super(...arguments);\n    this.objectEntity = null;\n  }\n  deoptimizeCache() {\n    this.getObjectEntity().deoptimizeAllProperties();\n  }\n  deoptimizePath(path) {\n    this.getObjectEntity().deoptimizePath(path);\n  }\n  deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n    this.getObjectEntity().deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n  }\n  getLiteralValueAtPath(path, recursionTracker, origin) {\n    return this.getObjectEntity().getLiteralValueAtPath(path, recursionTracker, origin);\n  }\n  getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n    return this.getObjectEntity().getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    return this.getObjectEntity().hasEffectsOnInteractionAtPath(path, interaction, context);\n  }\n  render(code, options) {\n    let {\n      renderedSurroundingElement\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : BLANK;\n    super.render(code, options);\n    if (renderedSurroundingElement === ExpressionStatement$1 || renderedSurroundingElement === ArrowFunctionExpression$1) {\n      code.appendRight(this.start, '(');\n      code.prependLeft(this.end, ')');\n    }\n  }\n  applyDeoptimizations() {}\n  getObjectEntity() {\n    if (this.objectEntity !== null) {\n      return this.objectEntity;\n    }\n    let prototype = OBJECT_PROTOTYPE;\n    const properties = [];\n    for (const property of this.properties) {\n      if (property instanceof SpreadElement) {\n        properties.push({\n          key: UnknownKey,\n          kind: 'init',\n          property\n        });\n        continue;\n      }\n      let key;\n      if (property.computed) {\n        const keyValue = property.key.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, this);\n        if (typeof keyValue === 'symbol') {\n          properties.push({\n            key: UnknownKey,\n            kind: property.kind,\n            property\n          });\n          continue;\n        } else {\n          key = String(keyValue);\n        }\n      } else {\n        key = property.key instanceof Identifier ? property.key.name : String(property.key.value);\n        if (key === '__proto__' && property.kind === 'init') {\n          prototype = property.value instanceof Literal && property.value.value === null ? null : property.value;\n          continue;\n        }\n      }\n      properties.push({\n        key,\n        kind: property.kind,\n        property\n      });\n    }\n    return this.objectEntity = new ObjectEntity(properties, prototype);\n  }\n}\nclass PrivateIdentifier extends NodeBase {}\nfunction getOriginalLocation(sourcemapChain, location) {\n  const filteredSourcemapChain = sourcemapChain.filter(sourcemap => !!sourcemap.mappings);\n  traceSourcemap: while (filteredSourcemapChain.length > 0) {\n    const sourcemap = filteredSourcemapChain.pop();\n    const line = sourcemap.mappings[location.line - 1];\n    if (line) {\n      const filteredLine = line.filter(segment => segment.length > 1);\n      const lastSegment = filteredLine[filteredLine.length - 1];\n      for (const segment of filteredLine) {\n        if (segment[0] >= location.column || segment === lastSegment) {\n          location = {\n            column: segment[3],\n            line: segment[2] + 1\n          };\n          continue traceSourcemap;\n        }\n      }\n    }\n    throw new Error(\"Can't resolve original location of error.\");\n  }\n  return location;\n}\nclass Program extends NodeBase {\n  constructor() {\n    super(...arguments);\n    this.hasCachedEffect = null;\n    this.hasLoggedEffect = false;\n  }\n  hasCachedEffects() {\n    return this.hasCachedEffect === null ? this.hasCachedEffect = this.hasEffects(createHasEffectsContext()) : this.hasCachedEffect;\n  }\n  hasEffects(context) {\n    for (const node of this.body) {\n      if (node.hasEffects(context)) {\n        if (this.context.options.experimentalLogSideEffects && !this.hasLoggedEffect) {\n          this.hasLoggedEffect = true;\n          const {\n            code,\n            module\n          } = this.context;\n          const {\n            line,\n            column\n          } = locate(code, node.start, {\n            offsetLine: 1\n          });\n          console.log(`First side effect in ${relativeId(module.id)} is at (${line}:${column})\\n${getCodeFrame(code, line, column)}`);\n          try {\n            const {\n              column: originalColumn,\n              line: originalLine\n            } = getOriginalLocation(module.sourcemapChain, {\n              column,\n              line\n            });\n            if (originalLine !== line) {\n              console.log(`Original location is at (${originalLine}:${originalColumn})\\n${getCodeFrame(module.originalCode, originalLine, originalColumn)}\\n`);\n            }\n          } catch {\n            /* ignored */\n          }\n          console.log();\n        }\n        return this.hasCachedEffect = true;\n      }\n    }\n    return false;\n  }\n  include(context, includeChildrenRecursively) {\n    this.included = true;\n    for (const node of this.body) {\n      if (includeChildrenRecursively || node.shouldBeIncluded(context)) {\n        node.include(context, includeChildrenRecursively);\n      }\n    }\n  }\n  render(code, options) {\n    let start = this.start;\n    if (code.original.startsWith('#!')) {\n      start = Math.min(code.original.indexOf('\\n') + 1, this.end);\n      code.remove(0, start);\n    }\n    if (this.body.length > 0) {\n      renderStatementList(this.body, code, start, this.end, options);\n    } else {\n      super.render(code, options);\n    }\n  }\n  applyDeoptimizations() {}\n}\nclass Property extends MethodBase {\n  constructor() {\n    super(...arguments);\n    this.declarationInit = null;\n  }\n  declare(kind, init) {\n    this.declarationInit = init;\n    return this.value.declare(kind, UNKNOWN_EXPRESSION);\n  }\n  hasEffects(context) {\n    if (!this.deoptimized) this.applyDeoptimizations();\n    const propertyReadSideEffects = this.context.options.treeshake.propertyReadSideEffects;\n    return this.parent.type === 'ObjectPattern' && propertyReadSideEffects === 'always' || this.key.hasEffects(context) || this.value.hasEffects(context);\n  }\n  markDeclarationReached() {\n    this.value.markDeclarationReached();\n  }\n  render(code, options) {\n    if (!this.shorthand) {\n      this.key.render(code, options);\n    }\n    this.value.render(code, options, {\n      isShorthandProperty: this.shorthand\n    });\n  }\n  applyDeoptimizations() {\n    this.deoptimized = true;\n    if (this.declarationInit !== null) {\n      this.declarationInit.deoptimizePath([UnknownKey, UnknownKey]);\n      this.context.requestTreeshakingPass();\n    }\n  }\n}\nclass PropertyDefinition extends NodeBase {\n  deoptimizePath(path) {\n    this.value?.deoptimizePath(path);\n  }\n  deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n    this.value?.deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n  }\n  getLiteralValueAtPath(path, recursionTracker, origin) {\n    return this.value ? this.value.getLiteralValueAtPath(path, recursionTracker, origin) : UnknownValue;\n  }\n  getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n    return this.value ? this.value.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) : UNKNOWN_RETURN_EXPRESSION;\n  }\n  hasEffects(context) {\n    return this.key.hasEffects(context) || this.static && !!this.value?.hasEffects(context);\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    return !this.value || this.value.hasEffectsOnInteractionAtPath(path, interaction, context);\n  }\n  applyDeoptimizations() {}\n}\nclass ReturnStatement extends NodeBase {\n  hasEffects(context) {\n    if (!context.ignore.returnYield || this.argument?.hasEffects(context)) return true;\n    context.brokenFlow = BROKEN_FLOW_ERROR_RETURN_LABEL;\n    return false;\n  }\n  include(context, includeChildrenRecursively) {\n    this.included = true;\n    this.argument?.include(context, includeChildrenRecursively);\n    context.brokenFlow = BROKEN_FLOW_ERROR_RETURN_LABEL;\n  }\n  initialise() {\n    this.scope.addReturnExpression(this.argument || UNKNOWN_EXPRESSION);\n  }\n  render(code, options) {\n    if (this.argument) {\n      this.argument.render(code, options, {\n        preventASI: true\n      });\n      if (this.argument.start === this.start + 6 /* 'return'.length */) {\n        code.prependLeft(this.start + 6, ' ');\n      }\n    }\n  }\n}\nclass SequenceExpression extends NodeBase {\n  deoptimizePath(path) {\n    this.expressions[this.expressions.length - 1].deoptimizePath(path);\n  }\n  deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n    this.expressions[this.expressions.length - 1].deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n  }\n  getLiteralValueAtPath(path, recursionTracker, origin) {\n    return this.expressions[this.expressions.length - 1].getLiteralValueAtPath(path, recursionTracker, origin);\n  }\n  hasEffects(context) {\n    for (const expression of this.expressions) {\n      if (expression.hasEffects(context)) return true;\n    }\n    return false;\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    return this.expressions[this.expressions.length - 1].hasEffectsOnInteractionAtPath(path, interaction, context);\n  }\n  include(context, includeChildrenRecursively) {\n    this.included = true;\n    const lastExpression = this.expressions[this.expressions.length - 1];\n    for (const expression of this.expressions) {\n      if (includeChildrenRecursively || expression === lastExpression && !(this.parent instanceof ExpressionStatement) || expression.shouldBeIncluded(context)) expression.include(context, includeChildrenRecursively);\n    }\n  }\n  render(code, options) {\n    let {\n      renderedParentType,\n      isCalleeOfRenderedParent,\n      preventASI\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : BLANK;\n    let includedNodes = 0;\n    let lastSeparatorPos = null;\n    const lastNode = this.expressions[this.expressions.length - 1];\n    for (const {\n      node,\n      separator,\n      start,\n      end\n    } of getCommaSeparatedNodesWithBoundaries(this.expressions, code, this.start, this.end)) {\n      if (!node.included) {\n        treeshakeNode(node, code, start, end);\n        continue;\n      }\n      includedNodes++;\n      lastSeparatorPos = separator;\n      if (includedNodes === 1 && preventASI) {\n        removeLineBreaks(code, start, node.start);\n      }\n      if (includedNodes === 1) {\n        const parentType = renderedParentType || this.parent.type;\n        node.render(code, options, {\n          isCalleeOfRenderedParent: isCalleeOfRenderedParent && node === lastNode,\n          renderedParentType: parentType,\n          renderedSurroundingElement: parentType\n        });\n      } else {\n        node.render(code, options);\n      }\n    }\n    if (lastSeparatorPos) {\n      code.remove(lastSeparatorPos, this.end);\n    }\n  }\n}\nclass StaticBlock extends NodeBase {\n  createScope(parentScope) {\n    this.scope = new BlockScope(parentScope);\n  }\n  hasEffects(context) {\n    for (const node of this.body) {\n      if (node.hasEffects(context)) return true;\n    }\n    return false;\n  }\n  include(context, includeChildrenRecursively) {\n    this.included = true;\n    for (const node of this.body) {\n      if (includeChildrenRecursively || node.shouldBeIncluded(context)) node.include(context, includeChildrenRecursively);\n    }\n  }\n  render(code, options) {\n    if (this.body.length > 0) {\n      renderStatementList(this.body, code, this.start + 1, this.end - 1, options);\n    } else {\n      super.render(code, options);\n    }\n  }\n}\nclass Super extends NodeBase {\n  bind() {\n    this.variable = this.scope.findVariable('this');\n  }\n  deoptimizePath(path) {\n    this.variable.deoptimizePath(path);\n  }\n  deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n    this.variable.deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n  }\n  include() {\n    if (!this.included) {\n      this.included = true;\n      this.context.includeVariableInModule(this.variable);\n    }\n  }\n}\nclass SwitchCase extends NodeBase {\n  hasEffects(context) {\n    if (this.test?.hasEffects(context)) return true;\n    for (const node of this.consequent) {\n      if (context.brokenFlow) break;\n      if (node.hasEffects(context)) return true;\n    }\n    return false;\n  }\n  include(context, includeChildrenRecursively) {\n    this.included = true;\n    this.test?.include(context, includeChildrenRecursively);\n    for (const node of this.consequent) {\n      if (includeChildrenRecursively || node.shouldBeIncluded(context)) node.include(context, includeChildrenRecursively);\n    }\n  }\n  render(code, options, nodeRenderOptions) {\n    if (this.consequent.length > 0) {\n      this.test && this.test.render(code, options);\n      const testEnd = this.test ? this.test.end : findFirstOccurrenceOutsideComment(code.original, 'default', this.start) + 7;\n      const consequentStart = findFirstOccurrenceOutsideComment(code.original, ':', testEnd) + 1;\n      renderStatementList(this.consequent, code, consequentStart, nodeRenderOptions.end, options);\n    } else {\n      super.render(code, options);\n    }\n  }\n}\nSwitchCase.prototype.needsBoundaries = true;\nclass SwitchStatement extends NodeBase {\n  createScope(parentScope) {\n    this.scope = new BlockScope(parentScope);\n  }\n  hasEffects(context) {\n    if (this.discriminant.hasEffects(context)) return true;\n    const {\n      brokenFlow,\n      ignore\n    } = context;\n    const {\n      breaks\n    } = ignore;\n    let minBrokenFlow = Infinity;\n    ignore.breaks = true;\n    for (const switchCase of this.cases) {\n      if (switchCase.hasEffects(context)) return true;\n      // eslint-disable-next-line unicorn/consistent-destructuring\n      minBrokenFlow = context.brokenFlow < minBrokenFlow ? context.brokenFlow : minBrokenFlow;\n      context.brokenFlow = brokenFlow;\n    }\n    if (this.defaultCase !== null && !(minBrokenFlow === BROKEN_FLOW_BREAK_CONTINUE)) {\n      context.brokenFlow = minBrokenFlow;\n    }\n    ignore.breaks = breaks;\n    return false;\n  }\n  include(context, includeChildrenRecursively) {\n    this.included = true;\n    this.discriminant.include(context, includeChildrenRecursively);\n    const {\n      brokenFlow\n    } = context;\n    let minBrokenFlow = Infinity;\n    let isCaseIncluded = includeChildrenRecursively || this.defaultCase !== null && this.defaultCase < this.cases.length - 1;\n    for (let caseIndex = this.cases.length - 1; caseIndex >= 0; caseIndex--) {\n      const switchCase = this.cases[caseIndex];\n      if (switchCase.included) {\n        isCaseIncluded = true;\n      }\n      if (!isCaseIncluded) {\n        const hasEffectsContext = createHasEffectsContext();\n        hasEffectsContext.ignore.breaks = true;\n        isCaseIncluded = switchCase.hasEffects(hasEffectsContext);\n      }\n      if (isCaseIncluded) {\n        switchCase.include(context, includeChildrenRecursively);\n        // eslint-disable-next-line unicorn/consistent-destructuring\n        minBrokenFlow = minBrokenFlow < context.brokenFlow ? minBrokenFlow : context.brokenFlow;\n        context.brokenFlow = brokenFlow;\n      } else {\n        minBrokenFlow = brokenFlow;\n      }\n    }\n    if (isCaseIncluded && this.defaultCase !== null && !(minBrokenFlow === BROKEN_FLOW_BREAK_CONTINUE)) {\n      context.brokenFlow = minBrokenFlow;\n    }\n  }\n  initialise() {\n    for (let caseIndex = 0; caseIndex < this.cases.length; caseIndex++) {\n      if (this.cases[caseIndex].test === null) {\n        this.defaultCase = caseIndex;\n        return;\n      }\n    }\n    this.defaultCase = null;\n  }\n  render(code, options) {\n    this.discriminant.render(code, options);\n    if (this.cases.length > 0) {\n      renderStatementList(this.cases, code, this.cases[0].start, this.end - 1, options);\n    }\n  }\n}\nclass TaggedTemplateExpression extends CallExpressionBase {\n  bind() {\n    super.bind();\n    if (this.tag.type === Identifier$1) {\n      const name = this.tag.name;\n      const variable = this.scope.findVariable(name);\n      if (variable.isNamespace) {\n        this.context.warn(errorCannotCallNamespace(name), this.start);\n      }\n    }\n  }\n  hasEffects(context) {\n    try {\n      for (const argument of this.quasi.expressions) {\n        if (argument.hasEffects(context)) return true;\n      }\n      return this.tag.hasEffects(context) || this.tag.hasEffectsOnInteractionAtPath(EMPTY_PATH, this.interaction, context);\n    } finally {\n      if (!this.deoptimized) this.applyDeoptimizations();\n    }\n  }\n  include(context, includeChildrenRecursively) {\n    if (!this.deoptimized) this.applyDeoptimizations();\n    if (includeChildrenRecursively) {\n      super.include(context, includeChildrenRecursively);\n    } else {\n      this.included = true;\n      this.tag.include(context, includeChildrenRecursively);\n      this.quasi.include(context, includeChildrenRecursively);\n    }\n    this.tag.includeCallArguments(context, this.interaction.args);\n    const [returnExpression] = this.getReturnExpression();\n    if (!returnExpression.included) {\n      returnExpression.include(context, false);\n    }\n  }\n  initialise() {\n    this.interaction = {\n      args: [UNKNOWN_EXPRESSION, ...this.quasi.expressions],\n      thisArg: this.tag instanceof MemberExpression && !this.tag.variable ? this.tag.object : null,\n      type: INTERACTION_CALLED,\n      withNew: false\n    };\n  }\n  render(code, options) {\n    this.tag.render(code, options, {\n      isCalleeOfRenderedParent: true\n    });\n    this.quasi.render(code, options);\n  }\n  applyDeoptimizations() {\n    this.deoptimized = true;\n    if (this.interaction.thisArg) {\n      this.tag.deoptimizeThisOnInteractionAtPath(this.interaction, EMPTY_PATH, SHARED_RECURSION_TRACKER);\n    }\n    for (const argument of this.quasi.expressions) {\n      // This will make sure all properties of parameters behave as \"unknown\"\n      argument.deoptimizePath(UNKNOWN_PATH);\n    }\n    this.context.requestTreeshakingPass();\n  }\n  getReturnExpression() {\n    let recursionTracker = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SHARED_RECURSION_TRACKER;\n    if (this.returnExpression === null) {\n      this.returnExpression = UNKNOWN_RETURN_EXPRESSION;\n      return this.returnExpression = this.tag.getReturnExpressionWhenCalledAtPath(EMPTY_PATH, this.interaction, recursionTracker, this);\n    }\n    return this.returnExpression;\n  }\n}\nclass TemplateElement extends NodeBase {\n  // Do not try to bind value\n  bind() {}\n  hasEffects() {\n    return false;\n  }\n  include() {\n    this.included = true;\n  }\n  parseNode(esTreeNode) {\n    this.value = esTreeNode.value;\n    super.parseNode(esTreeNode);\n  }\n  render() {}\n}\nclass TemplateLiteral extends NodeBase {\n  deoptimizeThisOnInteractionAtPath() {}\n  getLiteralValueAtPath(path) {\n    if (path.length > 0 || this.quasis.length !== 1) {\n      return UnknownValue;\n    }\n    return this.quasis[0].value.cooked;\n  }\n  getReturnExpressionWhenCalledAtPath(path) {\n    if (path.length !== 1) {\n      return UNKNOWN_RETURN_EXPRESSION;\n    }\n    return getMemberReturnExpressionWhenCalled(literalStringMembers, path[0]);\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    if (interaction.type === INTERACTION_ACCESSED) {\n      return path.length > 1;\n    }\n    if (interaction.type === INTERACTION_CALLED && path.length === 1) {\n      return hasMemberEffectWhenCalled(literalStringMembers, path[0], interaction, context);\n    }\n    return true;\n  }\n  render(code, options) {\n    code.indentExclusionRanges.push([this.start, this.end]);\n    super.render(code, options);\n  }\n}\nclass UndefinedVariable extends Variable {\n  constructor() {\n    super('undefined');\n  }\n  getLiteralValueAtPath() {\n    return undefined;\n  }\n}\nclass ExportDefaultVariable extends LocalVariable {\n  constructor(name, exportDefaultDeclaration, context) {\n    super(name, exportDefaultDeclaration, exportDefaultDeclaration.declaration, context);\n    this.hasId = false;\n    this.originalId = null;\n    this.originalVariable = null;\n    const declaration = exportDefaultDeclaration.declaration;\n    if ((declaration instanceof FunctionDeclaration || declaration instanceof ClassDeclaration) && declaration.id) {\n      this.hasId = true;\n      this.originalId = declaration.id;\n    } else if (declaration instanceof Identifier) {\n      this.originalId = declaration;\n    }\n  }\n  addReference(identifier) {\n    if (!this.hasId) {\n      this.name = identifier.name;\n    }\n  }\n  forbidName(name) {\n    const original = this.getOriginalVariable();\n    if (original === this) {\n      super.forbidName(name);\n    } else {\n      original.forbidName(name);\n    }\n  }\n  getAssignedVariableName() {\n    return this.originalId && this.originalId.name || null;\n  }\n  getBaseVariableName() {\n    const original = this.getOriginalVariable();\n    return original === this ? super.getBaseVariableName() : original.getBaseVariableName();\n  }\n  getDirectOriginalVariable() {\n    return this.originalId && (this.hasId || !(this.originalId.isPossibleTDZ() || this.originalId.variable.isReassigned || this.originalId.variable instanceof UndefinedVariable ||\n    // this avoids a circular dependency\n    'syntheticNamespace' in this.originalId.variable)) ? this.originalId.variable : null;\n  }\n  getName(getPropertyAccess) {\n    const original = this.getOriginalVariable();\n    return original === this ? super.getName(getPropertyAccess) : original.getName(getPropertyAccess);\n  }\n  getOriginalVariable() {\n    if (this.originalVariable) return this.originalVariable;\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let original = this;\n    let currentVariable;\n    const checkedVariables = new Set();\n    do {\n      checkedVariables.add(original);\n      currentVariable = original;\n      original = currentVariable.getDirectOriginalVariable();\n    } while (original instanceof ExportDefaultVariable && !checkedVariables.has(original));\n    return this.originalVariable = original || currentVariable;\n  }\n}\nclass ModuleScope extends ChildScope {\n  constructor(parent, context) {\n    super(parent);\n    this.context = context;\n    this.variables.set('this', new LocalVariable('this', null, UNDEFINED_EXPRESSION, context));\n  }\n  addExportDefaultDeclaration(name, exportDefaultDeclaration, context) {\n    const variable = new ExportDefaultVariable(name, exportDefaultDeclaration, context);\n    this.variables.set('default', variable);\n    return variable;\n  }\n  addNamespaceMemberAccess() {}\n  deconflict(format, exportNamesByVariable, accessedGlobalsByScope) {\n    // all module level variables are already deconflicted when deconflicting the chunk\n    for (const scope of this.children) scope.deconflict(format, exportNamesByVariable, accessedGlobalsByScope);\n  }\n  findLexicalBoundary() {\n    return this;\n  }\n  findVariable(name) {\n    const knownVariable = this.variables.get(name) || this.accessedOutsideVariables.get(name);\n    if (knownVariable) {\n      return knownVariable;\n    }\n    const variable = this.context.traceVariable(name) || this.parent.findVariable(name);\n    if (variable instanceof GlobalVariable) {\n      this.accessedOutsideVariables.set(name, variable);\n    }\n    return variable;\n  }\n}\nclass ThisExpression extends NodeBase {\n  bind() {\n    this.variable = this.scope.findVariable('this');\n  }\n  deoptimizePath(path) {\n    this.variable.deoptimizePath(path);\n  }\n  deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n    // We rewrite the parameter so that a ThisVariable can detect self-mutations\n    this.variable.deoptimizeThisOnInteractionAtPath(interaction.thisArg === this ? {\n      ...interaction,\n      thisArg: this.variable\n    } : interaction, path, recursionTracker);\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    if (path.length === 0) {\n      return interaction.type !== INTERACTION_ACCESSED;\n    }\n    return this.variable.hasEffectsOnInteractionAtPath(path, interaction, context);\n  }\n  include() {\n    if (!this.included) {\n      this.included = true;\n      this.context.includeVariableInModule(this.variable);\n    }\n  }\n  initialise() {\n    this.alias = this.scope.findLexicalBoundary() instanceof ModuleScope ? this.context.moduleContext : null;\n    if (this.alias === 'undefined') {\n      this.context.warn(errorThisIsUndefined(), this.start);\n    }\n  }\n  render(code) {\n    if (this.alias !== null) {\n      code.overwrite(this.start, this.end, this.alias, {\n        contentOnly: false,\n        storeName: true\n      });\n    }\n  }\n}\nclass ThrowStatement extends NodeBase {\n  hasEffects() {\n    return true;\n  }\n  include(context, includeChildrenRecursively) {\n    this.included = true;\n    this.argument.include(context, includeChildrenRecursively);\n    context.brokenFlow = BROKEN_FLOW_ERROR_RETURN_LABEL;\n  }\n  render(code, options) {\n    this.argument.render(code, options, {\n      preventASI: true\n    });\n    if (this.argument.start === this.start + 5 /* 'throw'.length */) {\n      code.prependLeft(this.start + 5, ' ');\n    }\n  }\n}\nclass TryStatement extends NodeBase {\n  constructor() {\n    super(...arguments);\n    this.directlyIncluded = false;\n    this.includedLabelsAfterBlock = null;\n  }\n  hasEffects(context) {\n    return (this.context.options.treeshake.tryCatchDeoptimization ? this.block.body.length > 0 : this.block.hasEffects(context)) || !!this.finalizer?.hasEffects(context);\n  }\n  include(context, includeChildrenRecursively) {\n    const tryCatchDeoptimization = this.context.options.treeshake?.tryCatchDeoptimization;\n    const {\n      brokenFlow,\n      includedLabels\n    } = context;\n    if (!this.directlyIncluded || !tryCatchDeoptimization) {\n      this.included = true;\n      this.directlyIncluded = true;\n      this.block.include(context, tryCatchDeoptimization ? INCLUDE_PARAMETERS : includeChildrenRecursively);\n      if (includedLabels.size > 0) {\n        this.includedLabelsAfterBlock = [...includedLabels];\n      }\n      context.brokenFlow = brokenFlow;\n    } else if (this.includedLabelsAfterBlock) {\n      for (const label of this.includedLabelsAfterBlock) {\n        includedLabels.add(label);\n      }\n    }\n    if (this.handler !== null) {\n      this.handler.include(context, includeChildrenRecursively);\n      context.brokenFlow = brokenFlow;\n    }\n    this.finalizer?.include(context, includeChildrenRecursively);\n  }\n}\nconst unaryOperators = {\n  '!': value => !value,\n  '+': value => +value,\n  '-': value => -value,\n  delete: () => UnknownValue,\n  typeof: value => typeof value,\n  void: () => undefined,\n  '~': value => ~value\n};\nclass UnaryExpression extends NodeBase {\n  getLiteralValueAtPath(path, recursionTracker, origin) {\n    if (path.length > 0) return UnknownValue;\n    const argumentValue = this.argument.getLiteralValueAtPath(EMPTY_PATH, recursionTracker, origin);\n    if (typeof argumentValue === 'symbol') return UnknownValue;\n    return unaryOperators[this.operator](argumentValue);\n  }\n  hasEffects(context) {\n    if (!this.deoptimized) this.applyDeoptimizations();\n    if (this.operator === 'typeof' && this.argument instanceof Identifier) return false;\n    return this.argument.hasEffects(context) || this.operator === 'delete' && this.argument.hasEffectsOnInteractionAtPath(EMPTY_PATH, NODE_INTERACTION_UNKNOWN_ASSIGNMENT, context);\n  }\n  hasEffectsOnInteractionAtPath(path, _ref39) {\n    let {\n      type\n    } = _ref39;\n    return type !== INTERACTION_ACCESSED || path.length > (this.operator === 'void' ? 0 : 1);\n  }\n  applyDeoptimizations() {\n    this.deoptimized = true;\n    if (this.operator === 'delete') {\n      this.argument.deoptimizePath(EMPTY_PATH);\n      this.context.requestTreeshakingPass();\n    }\n  }\n}\nclass UnknownNode extends NodeBase {\n  hasEffects() {\n    return true;\n  }\n  include(context) {\n    super.include(context, true);\n  }\n}\nclass UpdateExpression extends NodeBase {\n  hasEffects(context) {\n    if (!this.deoptimized) this.applyDeoptimizations();\n    return this.argument.hasEffectsAsAssignmentTarget(context, true);\n  }\n  hasEffectsOnInteractionAtPath(path, _ref40) {\n    let {\n      type\n    } = _ref40;\n    return path.length > 1 || type !== INTERACTION_ACCESSED;\n  }\n  include(context, includeChildrenRecursively) {\n    if (!this.deoptimized) this.applyDeoptimizations();\n    this.included = true;\n    this.argument.includeAsAssignmentTarget(context, includeChildrenRecursively, true);\n  }\n  initialise() {\n    this.argument.setAssignedValue(UNKNOWN_EXPRESSION);\n  }\n  render(code, options) {\n    const {\n      exportNamesByVariable,\n      format,\n      snippets: {\n        _\n      }\n    } = options;\n    this.argument.render(code, options);\n    if (format === 'system') {\n      const variable = this.argument.variable;\n      const exportNames = exportNamesByVariable.get(variable);\n      if (exportNames) {\n        if (this.prefix) {\n          if (exportNames.length === 1) {\n            renderSystemExportExpression(variable, this.start, this.end, code, options);\n          } else {\n            renderSystemExportSequenceAfterExpression(variable, this.start, this.end, this.parent.type !== ExpressionStatement$1, code, options);\n          }\n        } else {\n          const operator = this.operator[0];\n          renderSystemExportSequenceBeforeExpression(variable, this.start, this.end, this.parent.type !== ExpressionStatement$1, code, options, `${_}${operator}${_}1`);\n        }\n      }\n    }\n  }\n  applyDeoptimizations() {\n    this.deoptimized = true;\n    this.argument.deoptimizePath(EMPTY_PATH);\n    if (this.argument instanceof Identifier) {\n      const variable = this.scope.findVariable(this.argument.name);\n      variable.isReassigned = true;\n    }\n    this.context.requestTreeshakingPass();\n  }\n}\nfunction isReassignedExportsMember(variable, exportNamesByVariable) {\n  return variable.renderBaseName !== null && exportNamesByVariable.has(variable) && variable.isReassigned;\n}\nfunction areAllDeclarationsIncludedAndNotExported(declarations, exportNamesByVariable) {\n  for (const declarator of declarations) {\n    if (!declarator.id.included) return false;\n    if (declarator.id.type === Identifier$1) {\n      if (exportNamesByVariable.has(declarator.id.variable)) return false;\n    } else {\n      const exportedVariables = [];\n      declarator.id.addExportedVariables(exportedVariables, exportNamesByVariable);\n      if (exportedVariables.length > 0) return false;\n    }\n  }\n  return true;\n}\nclass VariableDeclaration extends NodeBase {\n  deoptimizePath() {\n    for (const declarator of this.declarations) {\n      declarator.deoptimizePath(EMPTY_PATH);\n    }\n  }\n  hasEffectsOnInteractionAtPath() {\n    return false;\n  }\n  include(context, includeChildrenRecursively) {\n    let {\n      asSingleStatement\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : BLANK;\n    this.included = true;\n    for (const declarator of this.declarations) {\n      if (includeChildrenRecursively || declarator.shouldBeIncluded(context)) declarator.include(context, includeChildrenRecursively);\n      const {\n        id,\n        init\n      } = declarator;\n      if (asSingleStatement) {\n        id.include(context, includeChildrenRecursively);\n      }\n      if (init && id.included && !init.included && (id instanceof ObjectPattern || id instanceof ArrayPattern)) {\n        init.include(context, includeChildrenRecursively);\n      }\n    }\n  }\n  initialise() {\n    for (const declarator of this.declarations) {\n      declarator.declareDeclarator(this.kind);\n    }\n  }\n  render(code, options) {\n    let nodeRenderOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : BLANK;\n    if (areAllDeclarationsIncludedAndNotExported(this.declarations, options.exportNamesByVariable)) {\n      for (const declarator of this.declarations) {\n        declarator.render(code, options);\n      }\n      if (!nodeRenderOptions.isNoStatement && code.original.charCodeAt(this.end - 1) !== 59 /*\";\"*/) {\n        code.appendLeft(this.end, ';');\n      }\n    } else {\n      this.renderReplacedDeclarations(code, options);\n    }\n  }\n  applyDeoptimizations() {}\n  renderDeclarationEnd(code, separatorString, lastSeparatorPos, actualContentEnd, renderedContentEnd, systemPatternExports, options) {\n    if (code.original.charCodeAt(this.end - 1) === 59 /*\";\"*/) {\n      code.remove(this.end - 1, this.end);\n    }\n    separatorString += ';';\n    if (lastSeparatorPos === null) {\n      code.appendLeft(renderedContentEnd, separatorString);\n    } else {\n      if (code.original.charCodeAt(actualContentEnd - 1) === 10 /*\"\\n\"*/ && (code.original.charCodeAt(this.end) === 10 /*\"\\n\"*/ || code.original.charCodeAt(this.end) === 13) /*\"\\r\"*/) {\n        actualContentEnd--;\n        if (code.original.charCodeAt(actualContentEnd) === 13 /*\"\\r\"*/) {\n          actualContentEnd--;\n        }\n      }\n      if (actualContentEnd === lastSeparatorPos + 1) {\n        code.overwrite(lastSeparatorPos, renderedContentEnd, separatorString);\n      } else {\n        code.overwrite(lastSeparatorPos, lastSeparatorPos + 1, separatorString);\n        code.remove(actualContentEnd, renderedContentEnd);\n      }\n    }\n    if (systemPatternExports.length > 0) {\n      code.appendLeft(renderedContentEnd, ` ${getSystemExportStatement(systemPatternExports, options)};`);\n    }\n  }\n  renderReplacedDeclarations(code, options) {\n    const separatedNodes = getCommaSeparatedNodesWithBoundaries(this.declarations, code, this.start + this.kind.length, this.end - (code.original.charCodeAt(this.end - 1) === 59 /*\";\"*/ ? 1 : 0));\n    let actualContentEnd, renderedContentEnd;\n    renderedContentEnd = findNonWhiteSpace(code.original, this.start + this.kind.length);\n    let lastSeparatorPos = renderedContentEnd - 1;\n    code.remove(this.start, lastSeparatorPos);\n    let isInDeclaration = false;\n    let hasRenderedContent = false;\n    let separatorString = '',\n      leadingString,\n      nextSeparatorString;\n    const aggregatedSystemExports = [];\n    const singleSystemExport = gatherSystemExportsAndGetSingleExport(separatedNodes, options, aggregatedSystemExports);\n    for (const {\n      node,\n      start,\n      separator,\n      contentEnd,\n      end\n    } of separatedNodes) {\n      if (!node.included) {\n        code.remove(start, end);\n        continue;\n      }\n      node.render(code, options);\n      leadingString = '';\n      nextSeparatorString = '';\n      if (!node.id.included || node.id instanceof Identifier && isReassignedExportsMember(node.id.variable, options.exportNamesByVariable)) {\n        if (hasRenderedContent) {\n          separatorString += ';';\n        }\n        isInDeclaration = false;\n      } else {\n        if (singleSystemExport && singleSystemExport === node.id.variable) {\n          const operatorPos = findFirstOccurrenceOutsideComment(code.original, '=', node.id.end);\n          renderSystemExportExpression(singleSystemExport, findNonWhiteSpace(code.original, operatorPos + 1), separator === null ? contentEnd : separator, code, options);\n        }\n        if (isInDeclaration) {\n          separatorString += ',';\n        } else {\n          if (hasRenderedContent) {\n            separatorString += ';';\n          }\n          leadingString += `${this.kind} `;\n          isInDeclaration = true;\n        }\n      }\n      if (renderedContentEnd === lastSeparatorPos + 1) {\n        code.overwrite(lastSeparatorPos, renderedContentEnd, separatorString + leadingString);\n      } else {\n        code.overwrite(lastSeparatorPos, lastSeparatorPos + 1, separatorString);\n        code.appendLeft(renderedContentEnd, leadingString);\n      }\n      actualContentEnd = contentEnd;\n      renderedContentEnd = end;\n      hasRenderedContent = true;\n      lastSeparatorPos = separator;\n      separatorString = nextSeparatorString;\n    }\n    this.renderDeclarationEnd(code, separatorString, lastSeparatorPos, actualContentEnd, renderedContentEnd, aggregatedSystemExports, options);\n  }\n}\nfunction gatherSystemExportsAndGetSingleExport(separatedNodes, options, aggregatedSystemExports) {\n  let singleSystemExport = null;\n  if (options.format === 'system') {\n    for (const {\n      node\n    } of separatedNodes) {\n      if (node.id instanceof Identifier && node.init && aggregatedSystemExports.length === 0 && options.exportNamesByVariable.get(node.id.variable)?.length === 1) {\n        singleSystemExport = node.id.variable;\n        aggregatedSystemExports.push(singleSystemExport);\n      } else {\n        node.id.addExportedVariables(aggregatedSystemExports, options.exportNamesByVariable);\n      }\n    }\n    if (aggregatedSystemExports.length > 1) {\n      singleSystemExport = null;\n    } else if (singleSystemExport) {\n      aggregatedSystemExports.length = 0;\n    }\n  }\n  return singleSystemExport;\n}\nclass VariableDeclarator extends NodeBase {\n  declareDeclarator(kind) {\n    this.id.declare(kind, this.init || UNDEFINED_EXPRESSION);\n  }\n  deoptimizePath(path) {\n    this.id.deoptimizePath(path);\n  }\n  hasEffects(context) {\n    if (!this.deoptimized) this.applyDeoptimizations();\n    const initEffect = this.init?.hasEffects(context);\n    this.id.markDeclarationReached();\n    return initEffect || this.id.hasEffects(context);\n  }\n  include(context, includeChildrenRecursively) {\n    const {\n      deoptimized,\n      id,\n      init\n    } = this;\n    if (!deoptimized) this.applyDeoptimizations();\n    this.included = true;\n    init?.include(context, includeChildrenRecursively);\n    id.markDeclarationReached();\n    if (includeChildrenRecursively || id.shouldBeIncluded(context)) {\n      id.include(context, includeChildrenRecursively);\n    }\n  }\n  render(code, options) {\n    const {\n      exportNamesByVariable,\n      snippets: {\n        _,\n        getPropertyAccess\n      }\n    } = options;\n    const {\n      end,\n      id,\n      init,\n      start\n    } = this;\n    const renderId = id.included;\n    if (renderId) {\n      id.render(code, options);\n    } else {\n      const operatorPos = findFirstOccurrenceOutsideComment(code.original, '=', id.end);\n      code.remove(start, findNonWhiteSpace(code.original, operatorPos + 1));\n    }\n    if (init) {\n      if (id instanceof Identifier && init instanceof ClassExpression && !init.id) {\n        const renderedVariable = id.variable.getName(getPropertyAccess);\n        if (renderedVariable !== id.name) {\n          code.appendLeft(init.start + 5, ` ${id.name}`);\n        }\n      }\n      init.render(code, options, renderId ? BLANK : {\n        renderedSurroundingElement: ExpressionStatement$1\n      });\n    } else if (id instanceof Identifier && isReassignedExportsMember(id.variable, exportNamesByVariable)) {\n      code.appendLeft(end, `${_}=${_}void 0`);\n    }\n  }\n  applyDeoptimizations() {\n    this.deoptimized = true;\n    const {\n      id,\n      init\n    } = this;\n    if (init && id instanceof Identifier && init instanceof ClassExpression && !init.id) {\n      const {\n        name,\n        variable\n      } = id;\n      for (const accessedVariable of init.scope.accessedOutsideVariables.values()) {\n        if (accessedVariable !== variable) {\n          accessedVariable.forbidName(name);\n        }\n      }\n    }\n  }\n}\nclass WhileStatement extends NodeBase {\n  hasEffects(context) {\n    if (this.test.hasEffects(context)) return true;\n    const {\n      brokenFlow,\n      ignore\n    } = context;\n    const {\n      breaks,\n      continues\n    } = ignore;\n    ignore.breaks = true;\n    ignore.continues = true;\n    if (this.body.hasEffects(context)) return true;\n    ignore.breaks = breaks;\n    ignore.continues = continues;\n    context.brokenFlow = brokenFlow;\n    return false;\n  }\n  include(context, includeChildrenRecursively) {\n    this.included = true;\n    this.test.include(context, includeChildrenRecursively);\n    const {\n      brokenFlow\n    } = context;\n    this.body.include(context, includeChildrenRecursively, {\n      asSingleStatement: true\n    });\n    context.brokenFlow = brokenFlow;\n  }\n}\nclass YieldExpression extends NodeBase {\n  hasEffects(context) {\n    if (!this.deoptimized) this.applyDeoptimizations();\n    return !(context.ignore.returnYield && !this.argument?.hasEffects(context));\n  }\n  render(code, options) {\n    if (this.argument) {\n      this.argument.render(code, options, {\n        preventASI: true\n      });\n      if (this.argument.start === this.start + 5 /* 'yield'.length */) {\n        code.prependLeft(this.start + 5, ' ');\n      }\n    }\n  }\n}\nconst nodeConstructors = {\n  ArrayExpression,\n  ArrayPattern,\n  ArrowFunctionExpression,\n  AssignmentExpression,\n  AssignmentPattern,\n  AwaitExpression,\n  BinaryExpression,\n  BlockStatement,\n  BreakStatement,\n  CallExpression,\n  CatchClause,\n  ChainExpression,\n  ClassBody,\n  ClassDeclaration,\n  ClassExpression,\n  ConditionalExpression,\n  ContinueStatement,\n  DoWhileStatement,\n  EmptyStatement,\n  ExportAllDeclaration,\n  ExportDefaultDeclaration,\n  ExportNamedDeclaration,\n  ExportSpecifier,\n  ExpressionStatement,\n  ForInStatement,\n  ForOfStatement,\n  ForStatement,\n  FunctionDeclaration,\n  FunctionExpression,\n  Identifier,\n  IfStatement,\n  ImportAttribute,\n  ImportDeclaration,\n  ImportDefaultSpecifier,\n  ImportExpression,\n  ImportNamespaceSpecifier,\n  ImportSpecifier,\n  LabeledStatement,\n  Literal,\n  LogicalExpression,\n  MemberExpression,\n  MetaProperty,\n  MethodDefinition,\n  NewExpression,\n  ObjectExpression,\n  ObjectPattern,\n  PrivateIdentifier,\n  Program,\n  Property,\n  PropertyDefinition,\n  RestElement,\n  ReturnStatement,\n  SequenceExpression,\n  SpreadElement,\n  StaticBlock,\n  Super,\n  SwitchCase,\n  SwitchStatement,\n  TaggedTemplateExpression,\n  TemplateElement,\n  TemplateLiteral,\n  ThisExpression,\n  ThrowStatement,\n  TryStatement,\n  UnaryExpression,\n  UnknownNode,\n  UpdateExpression,\n  VariableDeclaration,\n  VariableDeclarator,\n  WhileStatement,\n  YieldExpression\n};\nconst MISSING_EXPORT_SHIM_VARIABLE = '_missingExportShim';\nclass ExportShimVariable extends Variable {\n  constructor(module) {\n    super(MISSING_EXPORT_SHIM_VARIABLE);\n    this.module = module;\n  }\n  include() {\n    super.include();\n    this.module.needsExportShim = true;\n  }\n}\nclass NamespaceVariable extends Variable {\n  constructor(context) {\n    super(context.getModuleName());\n    this.memberVariables = null;\n    this.mergedNamespaces = [];\n    this.referencedEarly = false;\n    this.references = [];\n    this.context = context;\n    this.module = context.module;\n  }\n  addReference(identifier) {\n    this.references.push(identifier);\n    this.name = identifier.name;\n  }\n  deoptimizePath(path) {\n    if (path.length > 1) {\n      const key = path[0];\n      if (typeof key === 'string') {\n        this.getMemberVariables()[key]?.deoptimizePath(path.slice(1));\n      }\n    }\n  }\n  deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n    if (path.length > 1 || path.length === 1 && interaction.type === INTERACTION_CALLED) {\n      const key = path[0];\n      if (typeof key === 'string') {\n        this.getMemberVariables()[key]?.deoptimizeThisOnInteractionAtPath(interaction, path.slice(1), recursionTracker);\n      } else {\n        interaction.thisArg.deoptimizePath(UNKNOWN_PATH);\n      }\n    }\n  }\n  getLiteralValueAtPath(path) {\n    if (path[0] === SymbolToStringTag) {\n      return 'Module';\n    }\n    return UnknownValue;\n  }\n  getMemberVariables() {\n    if (this.memberVariables) {\n      return this.memberVariables;\n    }\n    const memberVariables = Object.create(null);\n    const sortedExports = [...this.context.getExports(), ...this.context.getReexports()].sort();\n    for (const name of sortedExports) {\n      if (name[0] !== '*' && name !== this.module.info.syntheticNamedExports) {\n        const exportedVariable = this.context.traceExport(name);\n        if (exportedVariable) {\n          memberVariables[name] = exportedVariable;\n        }\n      }\n    }\n    return this.memberVariables = memberVariables;\n  }\n  hasEffectsOnInteractionAtPath(path, interaction, context) {\n    const {\n      type\n    } = interaction;\n    if (path.length === 0) {\n      // This can only be a call anyway\n      return true;\n    }\n    if (path.length === 1 && type !== INTERACTION_CALLED) {\n      return type === INTERACTION_ASSIGNED;\n    }\n    const key = path[0];\n    if (typeof key !== 'string') {\n      return true;\n    }\n    const memberVariable = this.getMemberVariables()[key];\n    return !memberVariable || memberVariable.hasEffectsOnInteractionAtPath(path.slice(1), interaction, context);\n  }\n  include() {\n    this.included = true;\n    this.context.includeAllExports();\n  }\n  prepare(accessedGlobalsByScope) {\n    if (this.mergedNamespaces.length > 0) {\n      this.module.scope.addAccessedGlobals([MERGE_NAMESPACES_VARIABLE], accessedGlobalsByScope);\n    }\n  }\n  renderBlock(options) {\n    const {\n      exportNamesByVariable,\n      format,\n      freeze,\n      indent: t,\n      namespaceToStringTag,\n      snippets: {\n        _,\n        cnst,\n        getObject,\n        getPropertyAccess,\n        n,\n        s\n      }\n    } = options;\n    const memberVariables = this.getMemberVariables();\n    const members = Object.entries(memberVariables).map(_ref41 => {\n      let [name, original] = _ref41;\n      if (this.referencedEarly || original.isReassigned) {\n        return [null, `get ${name}${_}()${_}{${_}return ${original.getName(getPropertyAccess)}${s}${_}}`];\n      }\n      return [name, original.getName(getPropertyAccess)];\n    });\n    members.unshift([null, `__proto__:${_}null`]);\n    let output = getObject(members, {\n      lineBreakIndent: {\n        base: '',\n        t\n      }\n    });\n    if (this.mergedNamespaces.length > 0) {\n      const assignmentArguments = this.mergedNamespaces.map(variable => variable.getName(getPropertyAccess));\n      output = `/*#__PURE__*/${MERGE_NAMESPACES_VARIABLE}(${output},${_}[${assignmentArguments.join(`,${_}`)}])`;\n    } else {\n      // The helper to merge namespaces will also take care of freezing and toStringTag\n      if (namespaceToStringTag) {\n        output = `/*#__PURE__*/Object.defineProperty(${output},${_}Symbol.toStringTag,${_}${getToStringTagValue(getObject)})`;\n      }\n      if (freeze) {\n        output = `/*#__PURE__*/Object.freeze(${output})`;\n      }\n    }\n    const name = this.getName(getPropertyAccess);\n    output = `${cnst} ${name}${_}=${_}${output};`;\n    if (format === 'system' && exportNamesByVariable.has(this)) {\n      output += `${n}${getSystemExportStatement([this], options)};`;\n    }\n    return output;\n  }\n  renderFirst() {\n    return this.referencedEarly;\n  }\n  setMergedNamespaces(mergedNamespaces) {\n    this.mergedNamespaces = mergedNamespaces;\n    const moduleExecIndex = this.context.getModuleExecIndex();\n    for (const identifier of this.references) {\n      if (identifier.context.getModuleExecIndex() <= moduleExecIndex) {\n        this.referencedEarly = true;\n        break;\n      }\n    }\n  }\n}\nNamespaceVariable.prototype.isNamespace = true;\nclass SyntheticNamedExportVariable extends Variable {\n  constructor(context, name, syntheticNamespace) {\n    super(name);\n    this.baseVariable = null;\n    this.context = context;\n    this.module = context.module;\n    this.syntheticNamespace = syntheticNamespace;\n  }\n  getBaseVariable() {\n    if (this.baseVariable) return this.baseVariable;\n    let baseVariable = this.syntheticNamespace;\n    while (baseVariable instanceof ExportDefaultVariable || baseVariable instanceof SyntheticNamedExportVariable) {\n      if (baseVariable instanceof ExportDefaultVariable) {\n        const original = baseVariable.getOriginalVariable();\n        if (original === baseVariable) break;\n        baseVariable = original;\n      }\n      if (baseVariable instanceof SyntheticNamedExportVariable) {\n        baseVariable = baseVariable.syntheticNamespace;\n      }\n    }\n    return this.baseVariable = baseVariable;\n  }\n  getBaseVariableName() {\n    return this.syntheticNamespace.getBaseVariableName();\n  }\n  getName(getPropertyAccess) {\n    return `${this.syntheticNamespace.getName(getPropertyAccess)}${getPropertyAccess(this.name)}`;\n  }\n  include() {\n    this.included = true;\n    this.context.includeVariableInModule(this.syntheticNamespace);\n  }\n  setRenderNames(baseName, name) {\n    super.setRenderNames(baseName, name);\n  }\n}\nvar BuildPhase;\n(function (BuildPhase) {\n  BuildPhase[BuildPhase[\"LOAD_AND_PARSE\"] = 0] = \"LOAD_AND_PARSE\";\n  BuildPhase[BuildPhase[\"ANALYSE\"] = 1] = \"ANALYSE\";\n  BuildPhase[BuildPhase[\"GENERATE\"] = 2] = \"GENERATE\";\n})(BuildPhase || (BuildPhase = {}));\nfunction getId(m) {\n  return m.id;\n}\nfunction getAssertionsFromImportExpression(node) {\n  const assertProperty = node.arguments?.[0]?.properties.find(property => getPropertyKey(property) === 'assert')?.value;\n  if (!assertProperty) {\n    return EMPTY_OBJECT;\n  }\n  const assertFields = assertProperty.properties.map(property => {\n    const key = getPropertyKey(property);\n    if (typeof key === 'string' && typeof property.value.value === 'string') {\n      return [key, property.value.value];\n    }\n    return null;\n  }).filter(property => !!property);\n  if (assertFields.length > 0) {\n    return Object.fromEntries(assertFields);\n  }\n  return EMPTY_OBJECT;\n}\nconst getPropertyKey = property => {\n  const key = property.key;\n  return key && (key.name || key.value);\n};\nfunction getAssertionsFromImportExportDeclaration(assertions) {\n  return assertions?.length ? Object.fromEntries(assertions.map(assertion => [getPropertyKey(assertion), assertion.value.value])) : EMPTY_OBJECT;\n}\nfunction doAssertionsDiffer(assertionA, assertionB) {\n  const keysA = Object.keys(assertionA);\n  return keysA.length !== Object.keys(assertionB).length || keysA.some(key => assertionA[key] !== assertionB[key]);\n}\nconst NOOP = () => {};\nlet timers = new Map();\nfunction getPersistedLabel(label, level) {\n  switch (level) {\n    case 1:\n      {\n        return `# ${label}`;\n      }\n    case 2:\n      {\n        return `## ${label}`;\n      }\n    case 3:\n      {\n        return label;\n      }\n    default:\n      {\n        return `${'  '.repeat(level - 4)}- ${label}`;\n      }\n  }\n}\nfunction timeStartImpl(label) {\n  let level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n  label = getPersistedLabel(label, level);\n  const startMemory = process$1.memoryUsage().heapUsed;\n  const startTime = performance.now();\n  const timer = timers.get(label);\n  if (timer === undefined) {\n    timers.set(label, {\n      memory: 0,\n      startMemory,\n      startTime,\n      time: 0,\n      totalMemory: 0\n    });\n  } else {\n    timer.startMemory = startMemory;\n    timer.startTime = startTime;\n  }\n}\nfunction timeEndImpl(label) {\n  let level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n  label = getPersistedLabel(label, level);\n  const timer = timers.get(label);\n  if (timer !== undefined) {\n    const currentMemory = process$1.memoryUsage().heapUsed;\n    timer.memory += currentMemory - timer.startMemory;\n    timer.time += performance.now() - timer.startTime;\n    timer.totalMemory = Math.max(timer.totalMemory, currentMemory);\n  }\n}\nfunction getTimings() {\n  const newTimings = {};\n  for (const [label, {\n    memory,\n    time,\n    totalMemory\n  }] of timers) {\n    newTimings[label] = [time, memory, totalMemory];\n  }\n  return newTimings;\n}\nlet timeStart = NOOP;\nlet timeEnd = NOOP;\nconst TIMED_PLUGIN_HOOKS = ['augmentChunkHash', 'buildEnd', 'buildStart', 'generateBundle', 'load', 'moduleParsed', 'options', 'outputOptions', 'renderChunk', 'renderDynamicImport', 'renderStart', 'resolveDynamicImport', 'resolveFileUrl', 'resolveId', 'resolveImportMeta', 'shouldTransformCachedModule', 'transform', 'writeBundle'];\nfunction getPluginWithTimers(plugin, index) {\n  for (const hook of TIMED_PLUGIN_HOOKS) {\n    if (hook in plugin) {\n      let timerLabel = `plugin ${index}`;\n      if (plugin.name) {\n        timerLabel += ` (${plugin.name})`;\n      }\n      timerLabel += ` - ${hook}`;\n      const handler = function () {\n        timeStart(timerLabel, 4);\n        for (var _len = arguments.length, parameters = new Array(_len), _key = 0; _key < _len; _key++) {\n          parameters[_key] = arguments[_key];\n        }\n        const result = hookFunction.apply(this, parameters);\n        timeEnd(timerLabel, 4);\n        return result;\n      };\n      let hookFunction;\n      if (typeof plugin[hook].handler === 'function') {\n        hookFunction = plugin[hook].handler;\n        plugin[hook].handler = handler;\n      } else {\n        hookFunction = plugin[hook];\n        plugin[hook] = handler;\n      }\n    }\n  }\n  return plugin;\n}\nfunction initialiseTimers(inputOptions) {\n  if (inputOptions.perf) {\n    timers = new Map();\n    timeStart = timeStartImpl;\n    timeEnd = timeEndImpl;\n    inputOptions.plugins = inputOptions.plugins.map(getPluginWithTimers);\n  } else {\n    timeStart = NOOP;\n    timeEnd = NOOP;\n  }\n}\nfunction markModuleAndImpureDependenciesAsExecuted(baseModule) {\n  baseModule.isExecuted = true;\n  const modules = [baseModule];\n  const visitedModules = new Set();\n  for (const module of modules) {\n    for (const dependency of [...module.dependencies, ...module.implicitlyLoadedBefore]) {\n      if (!(dependency instanceof ExternalModule) && !dependency.isExecuted && (dependency.info.moduleSideEffects || module.implicitlyLoadedBefore.has(dependency)) && !visitedModules.has(dependency.id)) {\n        dependency.isExecuted = true;\n        visitedModules.add(dependency.id);\n        modules.push(dependency);\n      }\n    }\n  }\n}\nconst MISSING_EXPORT_SHIM_DESCRIPTION = {\n  identifier: null,\n  localName: MISSING_EXPORT_SHIM_VARIABLE\n};\nfunction getVariableForExportNameRecursive(target, name, importerForSideEffects, isExportAllSearch) {\n  let searchedNamesAndModules = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : new Map();\n  const searchedModules = searchedNamesAndModules.get(name);\n  if (searchedModules) {\n    if (searchedModules.has(target)) {\n      return isExportAllSearch ? [null] : error(errorCircularReexport(name, target.id));\n    }\n    searchedModules.add(target);\n  } else {\n    searchedNamesAndModules.set(name, new Set([target]));\n  }\n  return target.getVariableForExportName(name, {\n    importerForSideEffects,\n    isExportAllSearch,\n    searchedNamesAndModules\n  });\n}\nfunction getAndExtendSideEffectModules(variable, module) {\n  const sideEffectModules = getOrCreate(module.sideEffectDependenciesByVariable, variable, getNewSet);\n  let currentVariable = variable;\n  const referencedVariables = new Set([currentVariable]);\n  while (true) {\n    const importingModule = currentVariable.module;\n    currentVariable = currentVariable instanceof ExportDefaultVariable ? currentVariable.getDirectOriginalVariable() : currentVariable instanceof SyntheticNamedExportVariable ? currentVariable.syntheticNamespace : null;\n    if (!currentVariable || referencedVariables.has(currentVariable)) {\n      break;\n    }\n    referencedVariables.add(currentVariable);\n    sideEffectModules.add(importingModule);\n    const originalSideEffects = importingModule.sideEffectDependenciesByVariable.get(currentVariable);\n    if (originalSideEffects) {\n      for (const module of originalSideEffects) {\n        sideEffectModules.add(module);\n      }\n    }\n  }\n  return sideEffectModules;\n}\nclass Module {\n  constructor(graph, id, options, isEntry, moduleSideEffects, syntheticNamedExports, meta, assertions) {\n    this.graph = graph;\n    this.id = id;\n    this.options = options;\n    this.alternativeReexportModules = new Map();\n    this.chunkFileNames = new Set();\n    this.chunkNames = [];\n    this.cycles = new Set();\n    this.dependencies = new Set();\n    this.dynamicDependencies = new Set();\n    this.dynamicImporters = [];\n    this.dynamicImports = [];\n    this.execIndex = Infinity;\n    this.implicitlyLoadedAfter = new Set();\n    this.implicitlyLoadedBefore = new Set();\n    this.importDescriptions = new Map();\n    this.importMetas = [];\n    this.importedFromNotTreeshaken = false;\n    this.importers = [];\n    this.includedDynamicImporters = [];\n    this.includedImports = new Set();\n    this.isExecuted = false;\n    this.isUserDefinedEntryPoint = false;\n    this.needsExportShim = false;\n    this.sideEffectDependenciesByVariable = new Map();\n    this.sourcesWithAssertions = new Map();\n    this.allExportNames = null;\n    this.ast = null;\n    this.exportAllModules = [];\n    this.exportAllSources = new Set();\n    this.exportNamesByVariable = null;\n    this.exportShimVariable = new ExportShimVariable(this);\n    this.exports = new Map();\n    this.namespaceReexportsByName = new Map();\n    this.reexportDescriptions = new Map();\n    this.relevantDependencies = null;\n    this.syntheticExports = new Map();\n    this.syntheticNamespace = null;\n    this.transformDependencies = [];\n    this.transitiveReexports = null;\n    this.excludeFromSourcemap = /\\0/.test(id);\n    this.context = options.moduleContext(id);\n    this.preserveSignature = this.options.preserveEntrySignatures;\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const module = this;\n    const {\n      dynamicImports,\n      dynamicImporters,\n      exportAllSources,\n      exports,\n      implicitlyLoadedAfter,\n      implicitlyLoadedBefore,\n      importers,\n      reexportDescriptions,\n      sourcesWithAssertions\n    } = this;\n    this.info = {\n      assertions,\n      ast: null,\n      code: null,\n      get dynamicallyImportedIdResolutions() {\n        return dynamicImports.map(_ref42 => {\n          let {\n            argument\n          } = _ref42;\n          return typeof argument === 'string' && module.resolvedIds[argument];\n        }).filter(Boolean);\n      },\n      get dynamicallyImportedIds() {\n        // We cannot use this.dynamicDependencies because this is needed before\n        // dynamicDependencies are populated\n        return dynamicImports.map(_ref43 => {\n          let {\n            id\n          } = _ref43;\n          return id;\n        }).filter(id => id != null);\n      },\n      get dynamicImporters() {\n        return dynamicImporters.sort();\n      },\n      get exportedBindings() {\n        const exportBindings = {\n          '.': [...exports.keys()]\n        };\n        for (const [name, {\n          source\n        }] of reexportDescriptions) {\n          (exportBindings[source] ?? (exportBindings[source] = [])).push(name);\n        }\n        for (const source of exportAllSources) {\n          (exportBindings[source] ?? (exportBindings[source] = [])).push('*');\n        }\n        return exportBindings;\n      },\n      get exports() {\n        return [...exports.keys(), ...reexportDescriptions.keys(), ...[...exportAllSources].map(() => '*')];\n      },\n      get hasDefaultExport() {\n        // This information is only valid after parsing\n        if (!module.ast) {\n          return null;\n        }\n        return module.exports.has('default') || reexportDescriptions.has('default');\n      },\n      get hasModuleSideEffects() {\n        warnDeprecation('Accessing ModuleInfo.hasModuleSideEffects from plugins is deprecated. Please use ModuleInfo.moduleSideEffects instead.', URL_THIS_GETMODULEINFO, true, options);\n        return this.moduleSideEffects;\n      },\n      id,\n      get implicitlyLoadedAfterOneOf() {\n        // eslint-disable-next-line unicorn/prefer-spread\n        return Array.from(implicitlyLoadedAfter, getId).sort();\n      },\n      get implicitlyLoadedBefore() {\n        // eslint-disable-next-line unicorn/prefer-spread\n        return Array.from(implicitlyLoadedBefore, getId).sort();\n      },\n      get importedIdResolutions() {\n        // eslint-disable-next-line unicorn/prefer-spread\n        return Array.from(sourcesWithAssertions.keys(), source => module.resolvedIds[source]).filter(Boolean);\n      },\n      get importedIds() {\n        // We cannot use this.dependencies because this is needed before\n        // dependencies are populated\n        // eslint-disable-next-line unicorn/prefer-spread\n        return Array.from(sourcesWithAssertions.keys(), source => module.resolvedIds[source]?.id).filter(Boolean);\n      },\n      get importers() {\n        return importers.sort();\n      },\n      isEntry,\n      isExternal: false,\n      get isIncluded() {\n        if (graph.phase !== BuildPhase.GENERATE) {\n          return null;\n        }\n        return module.isIncluded();\n      },\n      meta: {\n        ...meta\n      },\n      moduleSideEffects,\n      syntheticNamedExports\n    };\n    // Hide the deprecated key so that it only warns when accessed explicitly\n    // eslint-disable-next-line unicorn/consistent-destructuring\n    Object.defineProperty(this.info, 'hasModuleSideEffects', {\n      enumerable: false\n    });\n  }\n  basename() {\n    const base = basename(this.id);\n    const extension = extname(this.id);\n    return makeLegal(extension ? base.slice(0, -extension.length) : base);\n  }\n  bindReferences() {\n    this.ast.bind();\n  }\n  error(properties, pos) {\n    this.addLocationToLogProps(properties, pos);\n    return error(properties);\n  }\n  getAllExportNames() {\n    if (this.allExportNames) {\n      return this.allExportNames;\n    }\n    this.allExportNames = new Set([...this.exports.keys(), ...this.reexportDescriptions.keys()]);\n    for (const module of this.exportAllModules) {\n      if (module instanceof ExternalModule) {\n        this.allExportNames.add(`*${module.id}`);\n        continue;\n      }\n      for (const name of module.getAllExportNames()) {\n        if (name !== 'default') this.allExportNames.add(name);\n      }\n    }\n    // We do not count the synthetic namespace as a regular export to hide it\n    // from entry signatures and namespace objects\n    if (typeof this.info.syntheticNamedExports === 'string') {\n      this.allExportNames.delete(this.info.syntheticNamedExports);\n    }\n    return this.allExportNames;\n  }\n  getDependenciesToBeIncluded() {\n    if (this.relevantDependencies) return this.relevantDependencies;\n    this.relevantDependencies = new Set();\n    const necessaryDependencies = new Set();\n    const alwaysCheckedDependencies = new Set();\n    const dependencyVariables = new Set(this.includedImports);\n    if (this.info.isEntry || this.includedDynamicImporters.length > 0 || this.namespace.included || this.implicitlyLoadedAfter.size > 0) {\n      for (const exportName of [...this.getReexports(), ...this.getExports()]) {\n        const [exportedVariable] = this.getVariableForExportName(exportName);\n        if (exportedVariable) {\n          dependencyVariables.add(exportedVariable);\n        }\n      }\n    }\n    for (let variable of dependencyVariables) {\n      const sideEffectDependencies = this.sideEffectDependenciesByVariable.get(variable);\n      if (sideEffectDependencies) {\n        for (const module of sideEffectDependencies) {\n          alwaysCheckedDependencies.add(module);\n        }\n      }\n      if (variable instanceof SyntheticNamedExportVariable) {\n        variable = variable.getBaseVariable();\n      } else if (variable instanceof ExportDefaultVariable) {\n        variable = variable.getOriginalVariable();\n      }\n      necessaryDependencies.add(variable.module);\n    }\n    if (!this.options.treeshake || this.info.moduleSideEffects === 'no-treeshake') {\n      for (const dependency of this.dependencies) {\n        this.relevantDependencies.add(dependency);\n      }\n    } else {\n      this.addRelevantSideEffectDependencies(this.relevantDependencies, necessaryDependencies, alwaysCheckedDependencies);\n    }\n    for (const dependency of necessaryDependencies) {\n      this.relevantDependencies.add(dependency);\n    }\n    return this.relevantDependencies;\n  }\n  getExportNamesByVariable() {\n    if (this.exportNamesByVariable) {\n      return this.exportNamesByVariable;\n    }\n    const exportNamesByVariable = new Map();\n    for (const exportName of this.getAllExportNames()) {\n      let [tracedVariable] = this.getVariableForExportName(exportName);\n      if (tracedVariable instanceof ExportDefaultVariable) {\n        tracedVariable = tracedVariable.getOriginalVariable();\n      }\n      if (!tracedVariable || !(tracedVariable.included || tracedVariable instanceof ExternalVariable)) {\n        continue;\n      }\n      const existingExportNames = exportNamesByVariable.get(tracedVariable);\n      if (existingExportNames) {\n        existingExportNames.push(exportName);\n      } else {\n        exportNamesByVariable.set(tracedVariable, [exportName]);\n      }\n    }\n    return this.exportNamesByVariable = exportNamesByVariable;\n  }\n  getExports() {\n    return [...this.exports.keys()];\n  }\n  getReexports() {\n    if (this.transitiveReexports) {\n      return this.transitiveReexports;\n    }\n    // to avoid infinite recursion when using circular `export * from X`\n    this.transitiveReexports = [];\n    const reexports = new Set(this.reexportDescriptions.keys());\n    for (const module of this.exportAllModules) {\n      if (module instanceof ExternalModule) {\n        reexports.add(`*${module.id}`);\n      } else {\n        for (const name of [...module.getReexports(), ...module.getExports()]) {\n          if (name !== 'default') reexports.add(name);\n        }\n      }\n    }\n    return this.transitiveReexports = [...reexports];\n  }\n  getRenderedExports() {\n    // only direct exports are counted here, not reexports at all\n    const renderedExports = [];\n    const removedExports = [];\n    for (const exportName of this.exports.keys()) {\n      const [variable] = this.getVariableForExportName(exportName);\n      (variable && variable.included ? renderedExports : removedExports).push(exportName);\n    }\n    return {\n      removedExports,\n      renderedExports\n    };\n  }\n  getSyntheticNamespace() {\n    if (this.syntheticNamespace === null) {\n      this.syntheticNamespace = undefined;\n      [this.syntheticNamespace] = this.getVariableForExportName(typeof this.info.syntheticNamedExports === 'string' ? this.info.syntheticNamedExports : 'default', {\n        onlyExplicit: true\n      });\n    }\n    if (!this.syntheticNamespace) {\n      return error(errorSyntheticNamedExportsNeedNamespaceExport(this.id, this.info.syntheticNamedExports));\n    }\n    return this.syntheticNamespace;\n  }\n  getVariableForExportName(name) {\n    let {\n      importerForSideEffects,\n      isExportAllSearch,\n      onlyExplicit,\n      searchedNamesAndModules\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : EMPTY_OBJECT;\n    if (name[0] === '*') {\n      if (name.length === 1) {\n        // export * from './other'\n        return [this.namespace];\n      }\n      // export * from 'external'\n      const module = this.graph.modulesById.get(name.slice(1));\n      return module.getVariableForExportName('*');\n    }\n    // export { foo } from './other'\n    const reexportDeclaration = this.reexportDescriptions.get(name);\n    if (reexportDeclaration) {\n      const [variable] = getVariableForExportNameRecursive(reexportDeclaration.module, reexportDeclaration.localName, importerForSideEffects, false, searchedNamesAndModules);\n      if (!variable) {\n        return this.error(errorMissingExport(reexportDeclaration.localName, this.id, reexportDeclaration.module.id), reexportDeclaration.start);\n      }\n      if (importerForSideEffects) {\n        setAlternativeExporterIfCyclic(variable, importerForSideEffects, this);\n        if (this.info.moduleSideEffects) {\n          getOrCreate(importerForSideEffects.sideEffectDependenciesByVariable, variable, getNewSet).add(this);\n        }\n      }\n      return [variable];\n    }\n    const exportDeclaration = this.exports.get(name);\n    if (exportDeclaration) {\n      if (exportDeclaration === MISSING_EXPORT_SHIM_DESCRIPTION) {\n        return [this.exportShimVariable];\n      }\n      const name = exportDeclaration.localName;\n      const variable = this.traceVariable(name, {\n        importerForSideEffects,\n        searchedNamesAndModules\n      });\n      if (importerForSideEffects) {\n        setAlternativeExporterIfCyclic(variable, importerForSideEffects, this);\n        getOrCreate(importerForSideEffects.sideEffectDependenciesByVariable, variable, getNewSet).add(this);\n      }\n      return [variable];\n    }\n    if (onlyExplicit) {\n      return [null];\n    }\n    if (name !== 'default') {\n      const foundNamespaceReexport = this.namespaceReexportsByName.get(name) ?? this.getVariableFromNamespaceReexports(name, importerForSideEffects, searchedNamesAndModules);\n      this.namespaceReexportsByName.set(name, foundNamespaceReexport);\n      if (foundNamespaceReexport[0]) {\n        return foundNamespaceReexport;\n      }\n    }\n    if (this.info.syntheticNamedExports) {\n      return [getOrCreate(this.syntheticExports, name, () => new SyntheticNamedExportVariable(this.astContext, name, this.getSyntheticNamespace()))];\n    }\n    // we don't want to create shims when we are just\n    // probing export * modules for exports\n    if (!isExportAllSearch && this.options.shimMissingExports) {\n      this.shimMissingExport(name);\n      return [this.exportShimVariable];\n    }\n    return [null];\n  }\n  hasEffects() {\n    return this.info.moduleSideEffects === 'no-treeshake' || this.ast.hasCachedEffects();\n  }\n  include() {\n    const context = createInclusionContext();\n    if (this.ast.shouldBeIncluded(context)) this.ast.include(context, false);\n  }\n  includeAllExports(includeNamespaceMembers) {\n    if (!this.isExecuted) {\n      markModuleAndImpureDependenciesAsExecuted(this);\n      this.graph.needsTreeshakingPass = true;\n    }\n    for (const exportName of this.exports.keys()) {\n      if (includeNamespaceMembers || exportName !== this.info.syntheticNamedExports) {\n        const variable = this.getVariableForExportName(exportName)[0];\n        variable.deoptimizePath(UNKNOWN_PATH);\n        if (!variable.included) {\n          this.includeVariable(variable);\n        }\n      }\n    }\n    for (const name of this.getReexports()) {\n      const [variable] = this.getVariableForExportName(name);\n      if (variable) {\n        variable.deoptimizePath(UNKNOWN_PATH);\n        if (!variable.included) {\n          this.includeVariable(variable);\n        }\n        if (variable instanceof ExternalVariable) {\n          variable.module.reexported = true;\n        }\n      }\n    }\n    if (includeNamespaceMembers) {\n      this.namespace.setMergedNamespaces(this.includeAndGetAdditionalMergedNamespaces());\n    }\n  }\n  includeAllInBundle() {\n    this.ast.include(createInclusionContext(), true);\n    this.includeAllExports(false);\n  }\n  isIncluded() {\n    // Modules where this.ast is missing have been loaded via this.load and are\n    // not yet fully processed, hence they cannot be included.\n    return this.ast && (this.ast.included || this.namespace.included || this.importedFromNotTreeshaken);\n  }\n  linkImports() {\n    this.addModulesToImportDescriptions(this.importDescriptions);\n    this.addModulesToImportDescriptions(this.reexportDescriptions);\n    const externalExportAllModules = [];\n    for (const source of this.exportAllSources) {\n      const module = this.graph.modulesById.get(this.resolvedIds[source].id);\n      if (module instanceof ExternalModule) {\n        externalExportAllModules.push(module);\n        continue;\n      }\n      this.exportAllModules.push(module);\n    }\n    this.exportAllModules.push(...externalExportAllModules);\n  }\n  render(options) {\n    const source = this.magicString.clone();\n    this.ast.render(source, options);\n    source.trim();\n    const {\n      usesTopLevelAwait\n    } = this.astContext;\n    if (usesTopLevelAwait && options.format !== 'es' && options.format !== 'system') {\n      return error(errorInvalidFormatForTopLevelAwait(this.id, options.format));\n    }\n    return {\n      source,\n      usesTopLevelAwait\n    };\n  }\n  setSource(_ref44) {\n    let {\n      ast,\n      code,\n      customTransformCache,\n      originalCode,\n      originalSourcemap,\n      resolvedIds,\n      sourcemapChain,\n      transformDependencies,\n      transformFiles,\n      ...moduleOptions\n    } = _ref44;\n    timeStart('generate ast', 3);\n    this.info.code = code;\n    this.originalCode = originalCode;\n    this.originalSourcemap = originalSourcemap;\n    this.sourcemapChain = sourcemapChain;\n    if (transformFiles) {\n      this.transformFiles = transformFiles;\n    }\n    this.transformDependencies = transformDependencies;\n    this.customTransformCache = customTransformCache;\n    this.updateOptions(moduleOptions);\n    const moduleAst = ast ?? this.tryParse();\n    timeEnd('generate ast', 3);\n    timeStart('analyze ast', 3);\n    this.resolvedIds = resolvedIds ?? Object.create(null);\n    // By default, `id` is the file name. Custom resolvers and loaders\n    // can change that, but it makes sense to use it for the source file name\n    const fileName = this.id;\n    this.magicString = new MagicString(code, {\n      filename: this.excludeFromSourcemap ? null : fileName,\n      indentExclusionRanges: []\n    });\n    this.astContext = {\n      addDynamicImport: this.addDynamicImport.bind(this),\n      addExport: this.addExport.bind(this),\n      addImport: this.addImport.bind(this),\n      addImportMeta: this.addImportMeta.bind(this),\n      code,\n      deoptimizationTracker: this.graph.deoptimizationTracker,\n      error: this.error.bind(this),\n      fileName,\n      getExports: this.getExports.bind(this),\n      getModuleExecIndex: () => this.execIndex,\n      getModuleName: this.basename.bind(this),\n      getNodeConstructor: name => nodeConstructors[name] || nodeConstructors.UnknownNode,\n      getReexports: this.getReexports.bind(this),\n      importDescriptions: this.importDescriptions,\n      includeAllExports: () => this.includeAllExports(true),\n      includeDynamicImport: this.includeDynamicImport.bind(this),\n      includeVariableInModule: this.includeVariableInModule.bind(this),\n      magicString: this.magicString,\n      manualPureFunctions: this.graph.pureFunctions,\n      module: this,\n      moduleContext: this.context,\n      options: this.options,\n      requestTreeshakingPass: () => this.graph.needsTreeshakingPass = true,\n      traceExport: name => this.getVariableForExportName(name)[0],\n      traceVariable: this.traceVariable.bind(this),\n      usesTopLevelAwait: false,\n      warn: this.warn.bind(this)\n    };\n    this.scope = new ModuleScope(this.graph.scope, this.astContext);\n    this.namespace = new NamespaceVariable(this.astContext);\n    this.ast = new Program(moduleAst, {\n      context: this.astContext,\n      type: 'Module'\n    }, this.scope);\n    // Assign AST directly if has existing one as there's no way to drop it from memory.\n    // If cache is enabled, also assign directly as otherwise it takes more CPU and memory to re-compute.\n    if (ast || this.options.cache !== false) {\n      this.info.ast = moduleAst;\n    } else {\n      // Make lazy and apply LRU cache to not hog the memory\n      Object.defineProperty(this.info, 'ast', {\n        get: () => {\n          if (this.graph.astLru.has(fileName)) {\n            return this.graph.astLru.get(fileName);\n          } else {\n            const parsedAst = this.tryParse();\n            this.graph.astLru.set(fileName, parsedAst);\n            return parsedAst;\n          }\n        }\n      });\n    }\n    timeEnd('analyze ast', 3);\n  }\n  toJSON() {\n    return {\n      assertions: this.info.assertions,\n      ast: this.info.ast,\n      code: this.info.code,\n      customTransformCache: this.customTransformCache,\n      // eslint-disable-next-line unicorn/prefer-spread\n      dependencies: Array.from(this.dependencies, getId),\n      id: this.id,\n      meta: this.info.meta,\n      moduleSideEffects: this.info.moduleSideEffects,\n      originalCode: this.originalCode,\n      originalSourcemap: this.originalSourcemap,\n      resolvedIds: this.resolvedIds,\n      sourcemapChain: this.sourcemapChain,\n      syntheticNamedExports: this.info.syntheticNamedExports,\n      transformDependencies: this.transformDependencies,\n      transformFiles: this.transformFiles\n    };\n  }\n  traceVariable(name) {\n    let {\n      importerForSideEffects,\n      isExportAllSearch,\n      searchedNamesAndModules\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : EMPTY_OBJECT;\n    const localVariable = this.scope.variables.get(name);\n    if (localVariable) {\n      return localVariable;\n    }\n    const importDescription = this.importDescriptions.get(name);\n    if (importDescription) {\n      const otherModule = importDescription.module;\n      if (otherModule instanceof Module && importDescription.name === '*') {\n        return otherModule.namespace;\n      }\n      const [declaration] = getVariableForExportNameRecursive(otherModule, importDescription.name, importerForSideEffects || this, isExportAllSearch, searchedNamesAndModules);\n      if (!declaration) {\n        return this.error(errorMissingExport(importDescription.name, this.id, otherModule.id), importDescription.start);\n      }\n      return declaration;\n    }\n    return null;\n  }\n  updateOptions(_ref45) {\n    let {\n      meta,\n      moduleSideEffects,\n      syntheticNamedExports\n    } = _ref45;\n    if (moduleSideEffects != null) {\n      this.info.moduleSideEffects = moduleSideEffects;\n    }\n    if (syntheticNamedExports != null) {\n      this.info.syntheticNamedExports = syntheticNamedExports;\n    }\n    if (meta != null) {\n      Object.assign(this.info.meta, meta);\n    }\n  }\n  warn(properties, pos) {\n    this.addLocationToLogProps(properties, pos);\n    this.options.onwarn(properties);\n  }\n  addDynamicImport(node) {\n    let argument = node.source;\n    if (argument instanceof TemplateLiteral) {\n      if (argument.quasis.length === 1 && argument.quasis[0].value.cooked) {\n        argument = argument.quasis[0].value.cooked;\n      }\n    } else if (argument instanceof Literal && typeof argument.value === 'string') {\n      argument = argument.value;\n    }\n    this.dynamicImports.push({\n      argument,\n      id: null,\n      node,\n      resolution: null\n    });\n  }\n  addExport(node) {\n    if (node instanceof ExportDefaultDeclaration) {\n      // export default foo;\n      this.exports.set('default', {\n        identifier: node.variable.getAssignedVariableName(),\n        localName: 'default'\n      });\n    } else if (node instanceof ExportAllDeclaration) {\n      const source = node.source.value;\n      this.addSource(source, node);\n      if (node.exported) {\n        // export * as name from './other'\n        const name = node.exported.name;\n        this.reexportDescriptions.set(name, {\n          localName: '*',\n          module: null,\n          source,\n          start: node.start\n        });\n      } else {\n        // export * from './other'\n        this.exportAllSources.add(source);\n      }\n    } else if (node.source instanceof Literal) {\n      // export { name } from './other'\n      const source = node.source.value;\n      this.addSource(source, node);\n      for (const {\n        exported,\n        local,\n        start\n      } of node.specifiers) {\n        const name = exported instanceof Literal ? exported.value : exported.name;\n        this.reexportDescriptions.set(name, {\n          localName: local instanceof Literal ? local.value : local.name,\n          module: null,\n          source,\n          start\n        });\n      }\n    } else if (node.declaration) {\n      const declaration = node.declaration;\n      if (declaration instanceof VariableDeclaration) {\n        // export var { foo, bar } = ...\n        // export var foo = 1, bar = 2;\n        for (const declarator of declaration.declarations) {\n          for (const localName of extractAssignedNames(declarator.id)) {\n            this.exports.set(localName, {\n              identifier: null,\n              localName\n            });\n          }\n        }\n      } else {\n        // export function foo () {}\n        const localName = declaration.id.name;\n        this.exports.set(localName, {\n          identifier: null,\n          localName\n        });\n      }\n    } else {\n      // export { foo, bar, baz }\n      for (const {\n        local,\n        exported\n      } of node.specifiers) {\n        // except for reexports, local must be an Identifier\n        const localName = local.name;\n        const exportedName = exported instanceof Identifier ? exported.name : exported.value;\n        this.exports.set(exportedName, {\n          identifier: null,\n          localName\n        });\n      }\n    }\n  }\n  addImport(node) {\n    const source = node.source.value;\n    this.addSource(source, node);\n    for (const specifier of node.specifiers) {\n      const name = specifier instanceof ImportDefaultSpecifier ? 'default' : specifier instanceof ImportNamespaceSpecifier ? '*' : specifier.imported instanceof Identifier ? specifier.imported.name : specifier.imported.value;\n      this.importDescriptions.set(specifier.local.name, {\n        module: null,\n        name,\n        source,\n        start: specifier.start\n      });\n    }\n  }\n  addImportMeta(node) {\n    this.importMetas.push(node);\n  }\n  addLocationToLogProps(properties, pos) {\n    properties.id = this.id;\n    properties.pos = pos;\n    let code = this.info.code;\n    const location = locate(code, pos, {\n      offsetLine: 1\n    });\n    if (location) {\n      let {\n        column,\n        line\n      } = location;\n      try {\n        ({\n          column,\n          line\n        } = getOriginalLocation(this.sourcemapChain, {\n          column,\n          line\n        }));\n        code = this.originalCode;\n      } catch (error_) {\n        this.options.onwarn(errorInvalidSourcemapForError(error_, this.id, column, line, pos));\n      }\n      augmentCodeLocation(properties, {\n        column,\n        line\n      }, code, this.id);\n    }\n  }\n  addModulesToImportDescriptions(importDescription) {\n    for (const specifier of importDescription.values()) {\n      const {\n        id\n      } = this.resolvedIds[specifier.source];\n      specifier.module = this.graph.modulesById.get(id);\n    }\n  }\n  addRelevantSideEffectDependencies(relevantDependencies, necessaryDependencies, alwaysCheckedDependencies) {\n    const handledDependencies = new Set();\n    const addSideEffectDependencies = possibleDependencies => {\n      for (const dependency of possibleDependencies) {\n        if (handledDependencies.has(dependency)) {\n          continue;\n        }\n        handledDependencies.add(dependency);\n        if (necessaryDependencies.has(dependency)) {\n          relevantDependencies.add(dependency);\n          continue;\n        }\n        if (!(dependency.info.moduleSideEffects || alwaysCheckedDependencies.has(dependency))) {\n          continue;\n        }\n        if (dependency instanceof ExternalModule || dependency.hasEffects()) {\n          relevantDependencies.add(dependency);\n          continue;\n        }\n        addSideEffectDependencies(dependency.dependencies);\n      }\n    };\n    addSideEffectDependencies(this.dependencies);\n    addSideEffectDependencies(alwaysCheckedDependencies);\n  }\n  addSource(source, declaration) {\n    const parsedAssertions = getAssertionsFromImportExportDeclaration(declaration.assertions);\n    const existingAssertions = this.sourcesWithAssertions.get(source);\n    if (existingAssertions) {\n      if (doAssertionsDiffer(existingAssertions, parsedAssertions)) {\n        this.warn(errorInconsistentImportAssertions(existingAssertions, parsedAssertions, source, this.id), declaration.start);\n      }\n    } else {\n      this.sourcesWithAssertions.set(source, parsedAssertions);\n    }\n  }\n  getVariableFromNamespaceReexports(name, importerForSideEffects, searchedNamesAndModules) {\n    let foundSyntheticDeclaration = null;\n    const foundInternalDeclarations = new Map();\n    const foundExternalDeclarations = new Set();\n    for (const module of this.exportAllModules) {\n      // Synthetic namespaces should not hide \"regular\" exports of the same name\n      if (module.info.syntheticNamedExports === name) {\n        continue;\n      }\n      const [variable, indirectExternal] = getVariableForExportNameRecursive(module, name, importerForSideEffects, true,\n      // We are creating a copy to handle the case where the same binding is\n      // imported through different namespace reexports gracefully\n      copyNameToModulesMap(searchedNamesAndModules));\n      if (module instanceof ExternalModule || indirectExternal) {\n        foundExternalDeclarations.add(variable);\n      } else if (variable instanceof SyntheticNamedExportVariable) {\n        if (!foundSyntheticDeclaration) {\n          foundSyntheticDeclaration = variable;\n        }\n      } else if (variable) {\n        foundInternalDeclarations.set(variable, module);\n      }\n    }\n    if (foundInternalDeclarations.size > 0) {\n      const foundDeclarationList = [...foundInternalDeclarations];\n      const usedDeclaration = foundDeclarationList[0][0];\n      if (foundDeclarationList.length === 1) {\n        return [usedDeclaration];\n      }\n      this.options.onwarn(errorNamespaceConflict(name, this.id, foundDeclarationList.map(_ref46 => {\n        let [, module] = _ref46;\n        return module.id;\n      })));\n      // TODO we are pretending it was not found while it should behave like \"undefined\"\n      return [null];\n    }\n    if (foundExternalDeclarations.size > 0) {\n      const foundDeclarationList = [...foundExternalDeclarations];\n      const usedDeclaration = foundDeclarationList[0];\n      if (foundDeclarationList.length > 1) {\n        this.options.onwarn(errorAmbiguousExternalNamespaces(name, this.id, usedDeclaration.module.id, foundDeclarationList.map(declaration => declaration.module.id)));\n      }\n      return [usedDeclaration, true];\n    }\n    if (foundSyntheticDeclaration) {\n      return [foundSyntheticDeclaration];\n    }\n    return [null];\n  }\n  includeAndGetAdditionalMergedNamespaces() {\n    const externalNamespaces = new Set();\n    const syntheticNamespaces = new Set();\n    for (const module of [this, ...this.exportAllModules]) {\n      if (module instanceof ExternalModule) {\n        const [externalVariable] = module.getVariableForExportName('*');\n        externalVariable.include();\n        this.includedImports.add(externalVariable);\n        externalNamespaces.add(externalVariable);\n      } else if (module.info.syntheticNamedExports) {\n        const syntheticNamespace = module.getSyntheticNamespace();\n        syntheticNamespace.include();\n        this.includedImports.add(syntheticNamespace);\n        syntheticNamespaces.add(syntheticNamespace);\n      }\n    }\n    return [...syntheticNamespaces, ...externalNamespaces];\n  }\n  includeDynamicImport(node) {\n    const resolution = this.dynamicImports.find(dynamicImport => dynamicImport.node === node).resolution;\n    if (resolution instanceof Module) {\n      resolution.includedDynamicImporters.push(this);\n      resolution.includeAllExports(true);\n    }\n  }\n  includeVariable(variable) {\n    if (!variable.included) {\n      variable.include();\n      this.graph.needsTreeshakingPass = true;\n      const variableModule = variable.module;\n      if (variableModule instanceof Module) {\n        if (!variableModule.isExecuted) {\n          markModuleAndImpureDependenciesAsExecuted(variableModule);\n        }\n        if (variableModule !== this) {\n          const sideEffectModules = getAndExtendSideEffectModules(variable, this);\n          for (const module of sideEffectModules) {\n            if (!module.isExecuted) {\n              markModuleAndImpureDependenciesAsExecuted(module);\n            }\n          }\n        }\n      }\n    }\n  }\n  includeVariableInModule(variable) {\n    this.includeVariable(variable);\n    const variableModule = variable.module;\n    if (variableModule && variableModule !== this) {\n      this.includedImports.add(variable);\n    }\n  }\n  shimMissingExport(name) {\n    this.options.onwarn(errorShimmedExport(this.id, name));\n    this.exports.set(name, MISSING_EXPORT_SHIM_DESCRIPTION);\n  }\n  tryParse() {\n    try {\n      return this.graph.contextParse(this.info.code);\n    } catch (error_) {\n      return this.error(errorParseError(error_, this.id), error_.pos);\n    }\n  }\n}\n// if there is a cyclic import in the reexport chain, we should not\n// import from the original module but from the cyclic module to not\n// mess up execution order.\nfunction setAlternativeExporterIfCyclic(variable, importer, reexporter) {\n  if (variable.module instanceof Module && variable.module !== reexporter) {\n    const exporterCycles = variable.module.cycles;\n    if (exporterCycles.size > 0) {\n      const importerCycles = reexporter.cycles;\n      for (const cycleSymbol of importerCycles) {\n        if (exporterCycles.has(cycleSymbol)) {\n          importer.alternativeReexportModules.set(variable, reexporter);\n          break;\n        }\n      }\n    }\n  }\n}\nconst copyNameToModulesMap = searchedNamesAndModules => searchedNamesAndModules &&\n// eslint-disable-next-line unicorn/prefer-spread\nnew Map(Array.from(searchedNamesAndModules, _ref47 => {\n  let [name, modules] = _ref47;\n  return [name, new Set(modules)];\n}));\nfunction removeJsExtension(name) {\n  return name.endsWith('.js') ? name.slice(0, -3) : name;\n}\nfunction getCompleteAmdId(options, chunkId) {\n  if (options.autoId) {\n    return `${options.basePath ? options.basePath + '/' : ''}${removeJsExtension(chunkId)}`;\n  }\n  return options.id ?? '';\n}\nfunction getExportBlock$1(exports, dependencies, namedExportsMode, interop, snippets, t, externalLiveBindings) {\n  let mechanism = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 'return ';\n  const {\n    _,\n    getDirectReturnFunction,\n    getFunctionIntro,\n    getPropertyAccess,\n    n,\n    s\n  } = snippets;\n  if (!namedExportsMode) {\n    return `${n}${n}${mechanism}${getSingleDefaultExport(exports, dependencies, interop, externalLiveBindings, getPropertyAccess)};`;\n  }\n  let exportBlock = '';\n  for (const {\n    defaultVariableName,\n    importPath,\n    isChunk,\n    name,\n    namedExportsMode: depNamedExportsMode,\n    namespaceVariableName,\n    reexports\n  } of dependencies) {\n    if (reexports && namedExportsMode) {\n      for (const specifier of reexports) {\n        if (specifier.reexported !== '*') {\n          const importName = getReexportedImportName(name, specifier.imported, depNamedExportsMode, isChunk, defaultVariableName, namespaceVariableName, interop, importPath, externalLiveBindings, getPropertyAccess);\n          if (exportBlock) exportBlock += n;\n          if (specifier.imported !== '*' && specifier.needsLiveBinding) {\n            const [left, right] = getDirectReturnFunction([], {\n              functionReturn: true,\n              lineBreakIndent: null,\n              name: null\n            });\n            exportBlock += `Object.defineProperty(exports,${_}'${specifier.reexported}',${_}{${n}` + `${t}enumerable:${_}true,${n}` + `${t}get:${_}${left}${importName}${right}${n}});`;\n          } else {\n            exportBlock += `exports${getPropertyAccess(specifier.reexported)}${_}=${_}${importName};`;\n          }\n        }\n      }\n    }\n  }\n  for (const {\n    exported,\n    local\n  } of exports) {\n    const lhs = `exports${getPropertyAccess(exported)}`;\n    const rhs = local;\n    if (lhs !== rhs) {\n      if (exportBlock) exportBlock += n;\n      exportBlock += `${lhs}${_}=${_}${rhs};`;\n    }\n  }\n  for (const {\n    name,\n    reexports\n  } of dependencies) {\n    if (reexports && namedExportsMode) {\n      for (const specifier of reexports) {\n        if (specifier.reexported === '*') {\n          if (exportBlock) exportBlock += n;\n          const copyPropertyIfNecessary = `{${n}${t}if${_}(k${_}!==${_}'default'${_}&&${_}!exports.hasOwnProperty(k))${_}${getDefineProperty(name, specifier.needsLiveBinding, t, snippets)}${s}${n}}`;\n          exportBlock += `Object.keys(${name}).forEach(${getFunctionIntro(['k'], {\n            isAsync: false,\n            name: null\n          })}${copyPropertyIfNecessary});`;\n        }\n      }\n    }\n  }\n  if (exportBlock) {\n    return `${n}${n}${exportBlock}`;\n  }\n  return '';\n}\nfunction getSingleDefaultExport(exports, dependencies, interop, externalLiveBindings, getPropertyAccess) {\n  if (exports.length > 0) {\n    return exports[0].local;\n  } else {\n    for (const {\n      defaultVariableName,\n      importPath,\n      isChunk,\n      name,\n      namedExportsMode: depNamedExportsMode,\n      namespaceVariableName,\n      reexports\n    } of dependencies) {\n      if (reexports) {\n        return getReexportedImportName(name, reexports[0].imported, depNamedExportsMode, isChunk, defaultVariableName, namespaceVariableName, interop, importPath, externalLiveBindings, getPropertyAccess);\n      }\n    }\n  }\n}\nfunction getReexportedImportName(moduleVariableName, imported, depNamedExportsMode, isChunk, defaultVariableName, namespaceVariableName, interop, moduleId, externalLiveBindings, getPropertyAccess) {\n  if (imported === 'default') {\n    if (!isChunk) {\n      const moduleInterop = interop(moduleId);\n      const variableName = defaultInteropHelpersByInteropType[moduleInterop] ? defaultVariableName : moduleVariableName;\n      return isDefaultAProperty(moduleInterop, externalLiveBindings) ? `${variableName}${getPropertyAccess('default')}` : variableName;\n    }\n    return depNamedExportsMode ? `${moduleVariableName}${getPropertyAccess('default')}` : moduleVariableName;\n  }\n  if (imported === '*') {\n    return (isChunk ? !depNamedExportsMode : namespaceInteropHelpersByInteropType[interop(moduleId)]) ? namespaceVariableName : moduleVariableName;\n  }\n  return `${moduleVariableName}${getPropertyAccess(imported)}`;\n}\nfunction getEsModuleValue(getObject) {\n  return getObject([['value', 'true']], {\n    lineBreakIndent: null\n  });\n}\nfunction getNamespaceMarkers(hasNamedExports, addEsModule, addNamespaceToStringTag, _ref48) {\n  let {\n    _,\n    getObject\n  } = _ref48;\n  if (hasNamedExports) {\n    if (addEsModule) {\n      if (addNamespaceToStringTag) {\n        return `Object.defineProperties(exports,${_}${getObject([['__esModule', getEsModuleValue(getObject)], [null, `[Symbol.toStringTag]:${_}${getToStringTagValue(getObject)}`]], {\n          lineBreakIndent: null\n        })});`;\n      }\n      return `Object.defineProperty(exports,${_}'__esModule',${_}${getEsModuleValue(getObject)});`;\n    }\n    if (addNamespaceToStringTag) {\n      return `Object.defineProperty(exports,${_}Symbol.toStringTag,${_}${getToStringTagValue(getObject)});`;\n    }\n  }\n  return '';\n}\nconst getDefineProperty = (name, needsLiveBinding, t, _ref49) => {\n  let {\n    _,\n    getDirectReturnFunction,\n    n\n  } = _ref49;\n  if (needsLiveBinding) {\n    const [left, right] = getDirectReturnFunction([], {\n      functionReturn: true,\n      lineBreakIndent: null,\n      name: null\n    });\n    return `Object.defineProperty(exports,${_}k,${_}{${n}` + `${t}${t}enumerable:${_}true,${n}` + `${t}${t}get:${_}${left}${name}[k]${right}${n}${t}})`;\n  }\n  return `exports[k]${_}=${_}${name}[k]`;\n};\nfunction getInteropBlock(dependencies, interop, externalLiveBindings, freeze, namespaceToStringTag, accessedGlobals, indent, snippets) {\n  const {\n    _,\n    cnst,\n    n\n  } = snippets;\n  const neededInteropHelpers = new Set();\n  const interopStatements = [];\n  const addInteropStatement = (helperVariableName, helper, dependencyVariableName) => {\n    neededInteropHelpers.add(helper);\n    interopStatements.push(`${cnst} ${helperVariableName}${_}=${_}/*#__PURE__*/${helper}(${dependencyVariableName});`);\n  };\n  for (const {\n    defaultVariableName,\n    imports,\n    importPath,\n    isChunk,\n    name,\n    namedExportsMode,\n    namespaceVariableName,\n    reexports\n  } of dependencies) {\n    if (isChunk) {\n      for (const {\n        imported,\n        reexported\n      } of [...(imports || []), ...(reexports || [])]) {\n        if (imported === '*' && reexported !== '*') {\n          if (!namedExportsMode) {\n            addInteropStatement(namespaceVariableName, INTEROP_NAMESPACE_DEFAULT_ONLY_VARIABLE, name);\n          }\n          break;\n        }\n      }\n    } else {\n      const moduleInterop = interop(importPath);\n      let hasDefault = false;\n      let hasNamespace = false;\n      for (const {\n        imported,\n        reexported\n      } of [...(imports || []), ...(reexports || [])]) {\n        let helper;\n        let variableName;\n        if (imported === 'default') {\n          if (!hasDefault) {\n            hasDefault = true;\n            if (defaultVariableName !== namespaceVariableName) {\n              variableName = defaultVariableName;\n              helper = defaultInteropHelpersByInteropType[moduleInterop];\n            }\n          }\n        } else if (imported === '*' && reexported !== '*' && !hasNamespace) {\n          hasNamespace = true;\n          helper = namespaceInteropHelpersByInteropType[moduleInterop];\n          variableName = namespaceVariableName;\n        }\n        if (helper) {\n          addInteropStatement(variableName, helper, name);\n        }\n      }\n    }\n  }\n  return `${getHelpersBlock(neededInteropHelpers, accessedGlobals, indent, snippets, externalLiveBindings, freeze, namespaceToStringTag)}${interopStatements.length > 0 ? `${interopStatements.join(n)}${n}${n}` : ''}`;\n}\nfunction addJsExtension(name) {\n  return name.endsWith('.js') ? name : name + '.js';\n}\n\n// AMD resolution will only respect the AMD baseUrl if the .js extension is omitted.\n// The assumption is that this makes sense for all relative ids:\n// https://requirejs.org/docs/api.html#jsfiles\nfunction updateExtensionForRelativeAmdId(id, forceJsExtensionForImports) {\n  if (id[0] !== '.') {\n    return id;\n  }\n  return forceJsExtensionForImports ? addJsExtension(id) : removeJsExtension(id);\n}\nvar _staticExports = {};\nvar _static = {\n  get exports() {\n    return _staticExports;\n  },\n  set exports(v) {\n    _staticExports = v;\n  }\n};\nconst require$$0 = [\"assert\", \"async_hooks\", \"buffer\", \"child_process\", \"cluster\", \"console\", \"constants\", \"crypto\", \"dgram\", \"diagnostics_channel\", \"dns\", \"domain\", \"events\", \"fs\", \"http\", \"http2\", \"https\", \"inspector\", \"module\", \"net\", \"os\", \"path\", \"perf_hooks\", \"process\", \"punycode\", \"querystring\", \"readline\", \"repl\", \"stream\", \"string_decoder\", \"timers\", \"tls\", \"trace_events\", \"tty\", \"url\", \"util\", \"v8\", \"vm\", \"wasi\", \"worker_threads\", \"zlib\"];\n(function (module) {\n  module.exports = require$$0;\n})(_static);\nconst builtinModules = /*@__PURE__*/getDefaultExportFromCjs(_staticExports);\nconst nodeBuiltins = new Set([...builtinModules,\n// TODO\n// remove once builtin-modules includes PR: https://github.com/sindresorhus/builtin-modules/pull/17\n'assert/strict', 'dns/promises', 'fs/promises', 'path/posix', 'path/win32', 'readline/promises', 'stream/consumers', 'stream/promises', 'stream/web', 'timers/promises', 'util/types']);\nfunction warnOnBuiltins(warn, dependencies) {\n  const externalBuiltins = dependencies.map(_ref50 => {\n    let {\n      importPath\n    } = _ref50;\n    return importPath;\n  }).filter(importPath => nodeBuiltins.has(importPath) || importPath.startsWith('node:'));\n  if (externalBuiltins.length === 0) return;\n  warn(errorMissingNodeBuiltins(externalBuiltins));\n}\nfunction amd(magicString, _ref51, _ref52) {\n  let {\n    accessedGlobals,\n    dependencies,\n    exports,\n    hasDefaultExport,\n    hasExports,\n    id,\n    indent: t,\n    intro,\n    isEntryFacade,\n    isModuleFacade,\n    namedExportsMode,\n    outro,\n    snippets,\n    onwarn\n  } = _ref51;\n  let {\n    amd,\n    esModule,\n    externalLiveBindings,\n    freeze,\n    interop,\n    namespaceToStringTag,\n    strict\n  } = _ref52;\n  warnOnBuiltins(onwarn, dependencies);\n  const deps = dependencies.map(m => `'${updateExtensionForRelativeAmdId(m.importPath, amd.forceJsExtensionForImports)}'`);\n  const parameters = dependencies.map(m => m.name);\n  const {\n    n,\n    getNonArrowFunctionIntro,\n    _\n  } = snippets;\n  if (namedExportsMode && hasExports) {\n    parameters.unshift(`exports`);\n    deps.unshift(`'exports'`);\n  }\n  if (accessedGlobals.has('require')) {\n    parameters.unshift('require');\n    deps.unshift(`'require'`);\n  }\n  if (accessedGlobals.has('module')) {\n    parameters.unshift('module');\n    deps.unshift(`'module'`);\n  }\n  const completeAmdId = getCompleteAmdId(amd, id);\n  const defineParameters = (completeAmdId ? `'${completeAmdId}',${_}` : ``) + (deps.length > 0 ? `[${deps.join(`,${_}`)}],${_}` : ``);\n  const useStrict = strict ? `${_}'use strict';` : '';\n  magicString.prepend(`${intro}${getInteropBlock(dependencies, interop, externalLiveBindings, freeze, namespaceToStringTag, accessedGlobals, t, snippets)}`);\n  const exportBlock = getExportBlock$1(exports, dependencies, namedExportsMode, interop, snippets, t, externalLiveBindings);\n  let namespaceMarkers = getNamespaceMarkers(namedExportsMode && hasExports, isEntryFacade && (esModule === true || esModule === 'if-default-prop' && hasDefaultExport), isModuleFacade && namespaceToStringTag, snippets);\n  if (namespaceMarkers) {\n    namespaceMarkers = n + n + namespaceMarkers;\n  }\n  magicString.append(`${exportBlock}${namespaceMarkers}${outro}`).indent(t)\n  // factory function should be wrapped by parentheses to avoid lazy parsing,\n  // cf. https://v8.dev/blog/preparser#pife\n  .prepend(`${amd.define}(${defineParameters}(${getNonArrowFunctionIntro(parameters, {\n    isAsync: false,\n    name: null\n  })}{${useStrict}${n}${n}`).append(`${n}${n}}));`);\n}\nfunction cjs(magicString, _ref53, _ref54) {\n  let {\n    accessedGlobals,\n    dependencies,\n    exports,\n    hasDefaultExport,\n    hasExports,\n    indent: t,\n    intro,\n    isEntryFacade,\n    isModuleFacade,\n    namedExportsMode,\n    outro,\n    snippets\n  } = _ref53;\n  let {\n    compact,\n    esModule,\n    externalLiveBindings,\n    freeze,\n    interop,\n    namespaceToStringTag,\n    strict\n  } = _ref54;\n  const {\n    _,\n    n\n  } = snippets;\n  const useStrict = strict ? `'use strict';${n}${n}` : '';\n  let namespaceMarkers = getNamespaceMarkers(namedExportsMode && hasExports, isEntryFacade && (esModule === true || esModule === 'if-default-prop' && hasDefaultExport), isModuleFacade && namespaceToStringTag, snippets);\n  if (namespaceMarkers) {\n    namespaceMarkers += n + n;\n  }\n  const importBlock = getImportBlock$1(dependencies, snippets, compact);\n  const interopBlock = getInteropBlock(dependencies, interop, externalLiveBindings, freeze, namespaceToStringTag, accessedGlobals, t, snippets);\n  magicString.prepend(`${useStrict}${intro}${namespaceMarkers}${importBlock}${interopBlock}`);\n  const exportBlock = getExportBlock$1(exports, dependencies, namedExportsMode, interop, snippets, t, externalLiveBindings, `module.exports${_}=${_}`);\n  magicString.append(`${exportBlock}${outro}`);\n}\nfunction getImportBlock$1(dependencies, _ref55, compact) {\n  let {\n    _,\n    cnst,\n    n\n  } = _ref55;\n  let importBlock = '';\n  let definingVariable = false;\n  for (const {\n    importPath,\n    name,\n    reexports,\n    imports\n  } of dependencies) {\n    if (!reexports && !imports) {\n      if (importBlock) {\n        importBlock += compact && !definingVariable ? ',' : `;${n}`;\n      }\n      definingVariable = false;\n      importBlock += `require('${importPath}')`;\n    } else {\n      importBlock += compact && definingVariable ? ',' : `${importBlock ? `;${n}` : ''}${cnst} `;\n      definingVariable = true;\n      importBlock += `${name}${_}=${_}require('${importPath}')`;\n    }\n  }\n  if (importBlock) {\n    return `${importBlock};${n}${n}`;\n  }\n  return '';\n}\nfunction es(magicString, _ref56, _ref57) {\n  let {\n    accessedGlobals,\n    indent: t,\n    intro,\n    outro,\n    dependencies,\n    exports,\n    snippets\n  } = _ref56;\n  let {\n    externalLiveBindings,\n    freeze,\n    namespaceToStringTag\n  } = _ref57;\n  const {\n    n\n  } = snippets;\n  const importBlock = getImportBlock(dependencies, snippets);\n  if (importBlock.length > 0) intro += importBlock.join(n) + n + n;\n  intro += getHelpersBlock(null, accessedGlobals, t, snippets, externalLiveBindings, freeze, namespaceToStringTag);\n  if (intro) magicString.prepend(intro);\n  const exportBlock = getExportBlock(exports, snippets);\n  if (exportBlock.length > 0) magicString.append(n + n + exportBlock.join(n).trim());\n  if (outro) magicString.append(outro);\n  magicString.trim();\n}\nfunction getImportBlock(dependencies, _ref58) {\n  let {\n    _\n  } = _ref58;\n  const importBlock = [];\n  for (const {\n    importPath,\n    reexports,\n    imports,\n    name,\n    assertions\n  } of dependencies) {\n    const assertion = assertions ? `${_}assert${_}${assertions}` : '';\n    const pathWithAssertion = `'${importPath}'${assertion};`;\n    if (!reexports && !imports) {\n      importBlock.push(`import${_}${pathWithAssertion}`);\n      continue;\n    }\n    if (imports) {\n      let defaultImport = null;\n      let starImport = null;\n      const importedNames = [];\n      for (const specifier of imports) {\n        if (specifier.imported === 'default') {\n          defaultImport = specifier;\n        } else if (specifier.imported === '*') {\n          starImport = specifier;\n        } else {\n          importedNames.push(specifier);\n        }\n      }\n      if (starImport) {\n        importBlock.push(`import${_}*${_}as ${starImport.local} from${_}${pathWithAssertion}`);\n      }\n      if (defaultImport && importedNames.length === 0) {\n        importBlock.push(`import ${defaultImport.local} from${_}${pathWithAssertion}`);\n      } else if (importedNames.length > 0) {\n        importBlock.push(`import ${defaultImport ? `${defaultImport.local},${_}` : ''}{${_}${importedNames.map(specifier => specifier.imported === specifier.local ? specifier.imported : `${specifier.imported} as ${specifier.local}`).join(`,${_}`)}${_}}${_}from${_}${pathWithAssertion}`);\n      }\n    }\n    if (reexports) {\n      let starExport = null;\n      const namespaceReexports = [];\n      const namedReexports = [];\n      for (const specifier of reexports) {\n        if (specifier.reexported === '*') {\n          starExport = specifier;\n        } else if (specifier.imported === '*') {\n          namespaceReexports.push(specifier);\n        } else {\n          namedReexports.push(specifier);\n        }\n      }\n      if (starExport) {\n        importBlock.push(`export${_}*${_}from${_}${pathWithAssertion}`);\n      }\n      if (namespaceReexports.length > 0) {\n        if (!imports || !imports.some(specifier => specifier.imported === '*' && specifier.local === name)) {\n          importBlock.push(`import${_}*${_}as ${name} from${_}${pathWithAssertion}`);\n        }\n        for (const specifier of namespaceReexports) {\n          importBlock.push(`export${_}{${_}${name === specifier.reexported ? name : `${name} as ${specifier.reexported}`} };`);\n        }\n      }\n      if (namedReexports.length > 0) {\n        importBlock.push(`export${_}{${_}${namedReexports.map(specifier => specifier.imported === specifier.reexported ? specifier.imported : `${specifier.imported} as ${specifier.reexported}`).join(`,${_}`)}${_}}${_}from${_}${pathWithAssertion}`);\n      }\n    }\n  }\n  return importBlock;\n}\nfunction getExportBlock(exports, _ref59) {\n  let {\n    _,\n    cnst\n  } = _ref59;\n  const exportBlock = [];\n  const exportDeclaration = [];\n  for (const specifier of exports) {\n    if (specifier.expression) {\n      exportBlock.push(`${cnst} ${specifier.local}${_}=${_}${specifier.expression};`);\n    }\n    exportDeclaration.push(specifier.exported === specifier.local ? specifier.local : `${specifier.local} as ${specifier.exported}`);\n  }\n  if (exportDeclaration.length > 0) {\n    exportBlock.push(`export${_}{${_}${exportDeclaration.join(`,${_}`)}${_}};`);\n  }\n  return exportBlock;\n}\nconst keypath = (keypath, getPropertyAccess) => keypath.split('.').map(getPropertyAccess).join('');\nfunction setupNamespace(name, root, globals, _ref60, compact) {\n  let {\n    _,\n    getPropertyAccess,\n    s\n  } = _ref60;\n  const parts = name.split('.');\n  parts[0] = (typeof globals === 'function' ? globals(parts[0]) : globals[parts[0]]) || parts[0];\n  parts.pop();\n  let propertyPath = root;\n  return parts.map(part => {\n    propertyPath += getPropertyAccess(part);\n    return `${propertyPath}${_}=${_}${propertyPath}${_}||${_}{}${s}`;\n  }).join(compact ? ',' : '\\n') + (compact && parts.length > 0 ? ';' : '\\n');\n}\nfunction assignToDeepVariable(deepName, root, globals, assignment, _ref61) {\n  let {\n    _,\n    getPropertyAccess\n  } = _ref61;\n  const parts = deepName.split('.');\n  parts[0] = (typeof globals === 'function' ? globals(parts[0]) : globals[parts[0]]) || parts[0];\n  const last = parts.pop();\n  let propertyPath = root;\n  let deepAssignment = [...parts.map(part => {\n    propertyPath += getPropertyAccess(part);\n    return `${propertyPath}${_}=${_}${propertyPath}${_}||${_}{}`;\n  }), `${propertyPath}${getPropertyAccess(last)}`].join(`,${_}`) + `${_}=${_}${assignment}`;\n  if (parts.length > 0) {\n    deepAssignment = `(${deepAssignment})`;\n  }\n  return deepAssignment;\n}\nfunction trimEmptyImports(dependencies) {\n  let index = dependencies.length;\n  while (index--) {\n    const {\n      imports,\n      reexports\n    } = dependencies[index];\n    if (imports || reexports) {\n      return dependencies.slice(0, index + 1);\n    }\n  }\n  return [];\n}\nfunction iife(magicString, _ref62, _ref63) {\n  let {\n    accessedGlobals,\n    dependencies,\n    exports,\n    hasDefaultExport,\n    hasExports,\n    indent: t,\n    intro,\n    namedExportsMode,\n    outro,\n    snippets,\n    onwarn\n  } = _ref62;\n  let {\n    compact,\n    esModule,\n    extend,\n    freeze,\n    externalLiveBindings,\n    globals,\n    interop,\n    name,\n    namespaceToStringTag,\n    strict\n  } = _ref63;\n  const {\n    _,\n    getNonArrowFunctionIntro,\n    getPropertyAccess,\n    n\n  } = snippets;\n  const isNamespaced = name && name.includes('.');\n  const useVariableAssignment = !extend && !isNamespaced;\n  if (name && useVariableAssignment && !isLegal(name)) {\n    return error(errorIllegalIdentifierAsName(name));\n  }\n  warnOnBuiltins(onwarn, dependencies);\n  const external = trimEmptyImports(dependencies);\n  const deps = external.map(dep => dep.globalName || 'null');\n  const parameters = external.map(m => m.name);\n  if (hasExports && !name) {\n    onwarn(errorMissingNameOptionForIifeExport());\n  }\n  if (namedExportsMode && hasExports) {\n    if (extend) {\n      deps.unshift(`this${keypath(name, getPropertyAccess)}${_}=${_}this${keypath(name, getPropertyAccess)}${_}||${_}{}`);\n      parameters.unshift('exports');\n    } else {\n      deps.unshift('{}');\n      parameters.unshift('exports');\n    }\n  }\n  const useStrict = strict ? `${t}'use strict';${n}` : '';\n  const interopBlock = getInteropBlock(dependencies, interop, externalLiveBindings, freeze, namespaceToStringTag, accessedGlobals, t, snippets);\n  magicString.prepend(`${intro}${interopBlock}`);\n  let wrapperIntro = `(${getNonArrowFunctionIntro(parameters, {\n    isAsync: false,\n    name: null\n  })}{${n}${useStrict}${n}`;\n  if (hasExports) {\n    if (name && !(extend && namedExportsMode)) {\n      wrapperIntro = (useVariableAssignment ? `var ${name}` : `this${keypath(name, getPropertyAccess)}`) + `${_}=${_}${wrapperIntro}`;\n    }\n    if (isNamespaced) {\n      wrapperIntro = setupNamespace(name, 'this', globals, snippets, compact) + wrapperIntro;\n    }\n  }\n  let wrapperOutro = `${n}${n}})(${deps.join(`,${_}`)});`;\n  if (hasExports && !extend && namedExportsMode) {\n    wrapperOutro = `${n}${n}${t}return exports;${wrapperOutro}`;\n  }\n  const exportBlock = getExportBlock$1(exports, dependencies, namedExportsMode, interop, snippets, t, externalLiveBindings);\n  let namespaceMarkers = getNamespaceMarkers(namedExportsMode && hasExports, esModule === true || esModule === 'if-default-prop' && hasDefaultExport, namespaceToStringTag, snippets);\n  if (namespaceMarkers) {\n    namespaceMarkers = n + n + namespaceMarkers;\n  }\n  magicString.append(`${exportBlock}${namespaceMarkers}${outro}`).indent(t).prepend(wrapperIntro).append(wrapperOutro);\n}\nfunction system(magicString, _ref64, _ref65) {\n  let {\n    accessedGlobals,\n    dependencies,\n    exports,\n    hasExports,\n    indent: t,\n    intro,\n    snippets,\n    outro,\n    usesTopLevelAwait\n  } = _ref64;\n  let {\n    externalLiveBindings,\n    freeze,\n    name,\n    namespaceToStringTag,\n    strict,\n    systemNullSetters\n  } = _ref65;\n  const {\n    _,\n    getFunctionIntro,\n    getNonArrowFunctionIntro,\n    n,\n    s\n  } = snippets;\n  const {\n    importBindings,\n    setters,\n    starExcludes\n  } = analyzeDependencies(dependencies, exports, t, snippets);\n  const registeredName = name ? `'${name}',${_}` : '';\n  const wrapperParameters = accessedGlobals.has('module') ? ['exports', 'module'] : hasExports ? ['exports'] : [];\n  // factory function should be wrapped by parentheses to avoid lazy parsing,\n  // cf. https://v8.dev/blog/preparser#pife\n  let wrapperStart = `System.register(${registeredName}[` + dependencies.map(_ref66 => {\n    let {\n      importPath\n    } = _ref66;\n    return `'${importPath}'`;\n  }).join(`,${_}`) + `],${_}(${getNonArrowFunctionIntro(wrapperParameters, {\n    isAsync: false,\n    name: null\n  })}{${n}${t}${strict ? \"'use strict';\" : ''}` + getStarExcludesBlock(starExcludes, t, snippets) + getImportBindingsBlock(importBindings, t, snippets) + `${n}${t}return${_}{${setters.length > 0 ? `${n}${t}${t}setters:${_}[${setters.map(setter => setter ? `${getFunctionIntro(['module'], {\n    isAsync: false,\n    name: null\n  })}{${n}${t}${t}${t}${setter}${n}${t}${t}}` : systemNullSetters ? `null` : `${getFunctionIntro([], {\n    isAsync: false,\n    name: null\n  })}{}`).join(`,${_}`)}],` : ''}${n}`;\n  wrapperStart += `${t}${t}execute:${_}(${getNonArrowFunctionIntro([], {\n    isAsync: usesTopLevelAwait,\n    name: null\n  })}{${n}${n}`;\n  const wrapperEnd = `${t}${t}})${n}${t}}${s}${n}}));`;\n  magicString.prepend(intro + getHelpersBlock(null, accessedGlobals, t, snippets, externalLiveBindings, freeze, namespaceToStringTag) + getHoistedExportsBlock(exports, t, snippets)).append(`${outro}${n}${n}` + getSyntheticExportsBlock(exports, t, snippets) + getMissingExportsBlock(exports, t, snippets)).indent(`${t}${t}${t}`).append(wrapperEnd).prepend(wrapperStart);\n}\nfunction analyzeDependencies(dependencies, exports, t, _ref67) {\n  let {\n    _,\n    cnst,\n    getObject,\n    getPropertyAccess,\n    n\n  } = _ref67;\n  const importBindings = [];\n  const setters = [];\n  let starExcludes = null;\n  for (const {\n    imports,\n    reexports\n  } of dependencies) {\n    const setter = [];\n    if (imports) {\n      for (const specifier of imports) {\n        importBindings.push(specifier.local);\n        if (specifier.imported === '*') {\n          setter.push(`${specifier.local}${_}=${_}module;`);\n        } else {\n          setter.push(`${specifier.local}${_}=${_}module${getPropertyAccess(specifier.imported)};`);\n        }\n      }\n    }\n    if (reexports) {\n      const reexportedNames = [];\n      let hasStarReexport = false;\n      for (const {\n        imported,\n        reexported\n      } of reexports) {\n        if (reexported === '*') {\n          hasStarReexport = true;\n        } else {\n          reexportedNames.push([reexported, imported === '*' ? 'module' : `module${getPropertyAccess(imported)}`]);\n        }\n      }\n      if (reexportedNames.length > 1 || hasStarReexport) {\n        const exportMapping = getObject(reexportedNames, {\n          lineBreakIndent: null\n        });\n        if (hasStarReexport) {\n          if (!starExcludes) {\n            starExcludes = getStarExcludes({\n              dependencies,\n              exports\n            });\n          }\n          setter.push(`${cnst} setter${_}=${_}${exportMapping};`, `for${_}(${cnst} name in module)${_}{`, `${t}if${_}(!_starExcludes[name])${_}setter[name]${_}=${_}module[name];`, '}', 'exports(setter);');\n        } else {\n          setter.push(`exports(${exportMapping});`);\n        }\n      } else {\n        const [key, value] = reexportedNames[0];\n        setter.push(`exports('${key}',${_}${value});`);\n      }\n    }\n    setters.push(setter.join(`${n}${t}${t}${t}`));\n  }\n  return {\n    importBindings,\n    setters,\n    starExcludes\n  };\n}\nconst getStarExcludes = _ref68 => {\n  let {\n    dependencies,\n    exports\n  } = _ref68;\n  const starExcludes = new Set(exports.map(expt => expt.exported));\n  starExcludes.add('default');\n  for (const {\n    reexports\n  } of dependencies) {\n    if (reexports) {\n      for (const reexport of reexports) {\n        if (reexport.reexported !== '*') starExcludes.add(reexport.reexported);\n      }\n    }\n  }\n  return starExcludes;\n};\nconst getStarExcludesBlock = (starExcludes, t, _ref69) => {\n  let {\n    _,\n    cnst,\n    getObject,\n    n\n  } = _ref69;\n  return starExcludes ? `${n}${t}${cnst} _starExcludes${_}=${_}${getObject([...starExcludes].map(property => [property, '1']), {\n    lineBreakIndent: {\n      base: t,\n      t\n    }\n  })};` : '';\n};\nconst getImportBindingsBlock = (importBindings, t, _ref70) => {\n  let {\n    _,\n    n\n  } = _ref70;\n  return importBindings.length > 0 ? `${n}${t}var ${importBindings.join(`,${_}`)};` : '';\n};\nconst getHoistedExportsBlock = (exports, t, snippets) => getExportsBlock(exports.filter(expt => expt.hoisted).map(expt => ({\n  name: expt.exported,\n  value: expt.local\n})), t, snippets);\nfunction getExportsBlock(exports, t, _ref71) {\n  let {\n    _,\n    n\n  } = _ref71;\n  if (exports.length === 0) {\n    return '';\n  }\n  if (exports.length === 1) {\n    return `exports('${exports[0].name}',${_}${exports[0].value});${n}${n}`;\n  }\n  return `exports({${n}` + exports.map(_ref72 => {\n    let {\n      name,\n      value\n    } = _ref72;\n    return `${t}${name}:${_}${value}`;\n  }).join(`,${n}`) + `${n}});${n}${n}`;\n}\nconst getSyntheticExportsBlock = (exports, t, snippets) => getExportsBlock(exports.filter(expt => expt.expression).map(expt => ({\n  name: expt.exported,\n  value: expt.local\n})), t, snippets);\nconst getMissingExportsBlock = (exports, t, snippets) => getExportsBlock(exports.filter(expt => expt.local === MISSING_EXPORT_SHIM_VARIABLE).map(expt => ({\n  name: expt.exported,\n  value: MISSING_EXPORT_SHIM_VARIABLE\n})), t, snippets);\nfunction globalProperty(name, globalVariable, getPropertyAccess) {\n  if (!name) return 'null';\n  return `${globalVariable}${keypath(name, getPropertyAccess)}`;\n}\nfunction safeAccess(name, globalVariable, _ref73) {\n  let {\n    _,\n    getPropertyAccess\n  } = _ref73;\n  let propertyPath = globalVariable;\n  return name.split('.').map(part => propertyPath += getPropertyAccess(part)).join(`${_}&&${_}`);\n}\nfunction umd(magicString, _ref74, _ref75) {\n  let {\n    accessedGlobals,\n    dependencies,\n    exports,\n    hasDefaultExport,\n    hasExports,\n    id,\n    indent: t,\n    intro,\n    namedExportsMode,\n    outro,\n    snippets,\n    onwarn\n  } = _ref74;\n  let {\n    amd,\n    compact,\n    esModule,\n    extend,\n    externalLiveBindings,\n    freeze,\n    interop,\n    name,\n    namespaceToStringTag,\n    globals,\n    noConflict,\n    strict\n  } = _ref75;\n  const {\n    _,\n    cnst,\n    getFunctionIntro,\n    getNonArrowFunctionIntro,\n    getPropertyAccess,\n    n,\n    s\n  } = snippets;\n  const factoryVariable = compact ? 'f' : 'factory';\n  const globalVariable = compact ? 'g' : 'global';\n  if (hasExports && !name) {\n    return error(errorMissingNameOptionForUmdExport());\n  }\n  warnOnBuiltins(onwarn, dependencies);\n  const amdDeps = dependencies.map(m => `'${updateExtensionForRelativeAmdId(m.importPath, amd.forceJsExtensionForImports)}'`);\n  const cjsDeps = dependencies.map(m => `require('${m.importPath}')`);\n  const trimmedImports = trimEmptyImports(dependencies);\n  const globalDeps = trimmedImports.map(module => globalProperty(module.globalName, globalVariable, getPropertyAccess));\n  const factoryParameters = trimmedImports.map(m => m.name);\n  if (namedExportsMode && (hasExports || noConflict)) {\n    amdDeps.unshift(`'exports'`);\n    cjsDeps.unshift(`exports`);\n    globalDeps.unshift(assignToDeepVariable(name, globalVariable, globals, `${extend ? `${globalProperty(name, globalVariable, getPropertyAccess)}${_}||${_}` : ''}{}`, snippets));\n    factoryParameters.unshift('exports');\n  }\n  const completeAmdId = getCompleteAmdId(amd, id);\n  const amdParameters = (completeAmdId ? `'${completeAmdId}',${_}` : ``) + (amdDeps.length > 0 ? `[${amdDeps.join(`,${_}`)}],${_}` : ``);\n  const define = amd.define;\n  const cjsExport = !namedExportsMode && hasExports ? `module.exports${_}=${_}` : ``;\n  const useStrict = strict ? `${_}'use strict';${n}` : ``;\n  let iifeExport;\n  if (noConflict) {\n    const noConflictExportsVariable = compact ? 'e' : 'exports';\n    let factory;\n    if (!namedExportsMode && hasExports) {\n      factory = `${cnst} ${noConflictExportsVariable}${_}=${_}${assignToDeepVariable(name, globalVariable, globals, `${factoryVariable}(${globalDeps.join(`,${_}`)})`, snippets)};`;\n    } else {\n      const module = globalDeps.shift();\n      factory = `${cnst} ${noConflictExportsVariable}${_}=${_}${module};${n}` + `${t}${t}${factoryVariable}(${[noConflictExportsVariable, ...globalDeps].join(`,${_}`)});`;\n    }\n    iifeExport = `(${getFunctionIntro([], {\n      isAsync: false,\n      name: null\n    })}{${n}` + `${t}${t}${cnst} current${_}=${_}${safeAccess(name, globalVariable, snippets)};${n}` + `${t}${t}${factory}${n}` + `${t}${t}${noConflictExportsVariable}.noConflict${_}=${_}${getFunctionIntro([], {\n      isAsync: false,\n      name: null\n    })}{${_}` + `${globalProperty(name, globalVariable, getPropertyAccess)}${_}=${_}current;${_}return ${noConflictExportsVariable}${s}${_}};${n}` + `${t}})()`;\n  } else {\n    iifeExport = `${factoryVariable}(${globalDeps.join(`,${_}`)})`;\n    if (!namedExportsMode && hasExports) {\n      iifeExport = assignToDeepVariable(name, globalVariable, globals, iifeExport, snippets);\n    }\n  }\n  const iifeNeedsGlobal = hasExports || noConflict && namedExportsMode || globalDeps.length > 0;\n  const wrapperParameters = [factoryVariable];\n  if (iifeNeedsGlobal) {\n    wrapperParameters.unshift(globalVariable);\n  }\n  const globalArgument = iifeNeedsGlobal ? `this,${_}` : '';\n  const iifeStart = iifeNeedsGlobal ? `(${globalVariable}${_}=${_}typeof globalThis${_}!==${_}'undefined'${_}?${_}globalThis${_}:${_}${globalVariable}${_}||${_}self,${_}` : '';\n  const iifeEnd = iifeNeedsGlobal ? ')' : '';\n  const cjsIntro = iifeNeedsGlobal ? `${t}typeof exports${_}===${_}'object'${_}&&${_}typeof module${_}!==${_}'undefined'${_}?` + `${_}${cjsExport}${factoryVariable}(${cjsDeps.join(`,${_}`)})${_}:${n}` : '';\n  const wrapperIntro = `(${getNonArrowFunctionIntro(wrapperParameters, {\n    isAsync: false,\n    name: null\n  })}{${n}` + cjsIntro + `${t}typeof ${define}${_}===${_}'function'${_}&&${_}${define}.amd${_}?${_}${define}(${amdParameters}${factoryVariable})${_}:${n}` + `${t}${iifeStart}${iifeExport}${iifeEnd};${n}` +\n  // factory function should be wrapped by parentheses to avoid lazy parsing,\n  // cf. https://v8.dev/blog/preparser#pife\n  `})(${globalArgument}(${getNonArrowFunctionIntro(factoryParameters, {\n    isAsync: false,\n    name: null\n  })}{${useStrict}${n}`;\n  const wrapperOutro = n + n + '}));';\n  magicString.prepend(`${intro}${getInteropBlock(dependencies, interop, externalLiveBindings, freeze, namespaceToStringTag, accessedGlobals, t, snippets)}`);\n  const exportBlock = getExportBlock$1(exports, dependencies, namedExportsMode, interop, snippets, t, externalLiveBindings);\n  let namespaceMarkers = getNamespaceMarkers(namedExportsMode && hasExports, esModule === true || esModule === 'if-default-prop' && hasDefaultExport, namespaceToStringTag, snippets);\n  if (namespaceMarkers) {\n    namespaceMarkers = n + n + namespaceMarkers;\n  }\n  magicString.append(`${exportBlock}${namespaceMarkers}${outro}`).trim().indent(t).append(wrapperOutro).prepend(wrapperIntro);\n}\nconst finalisers = {\n  amd,\n  cjs,\n  es,\n  iife,\n  system,\n  umd\n};\nconst concatSeparator = (out, next) => next ? `${out}\\n${next}` : out;\nconst concatDblSeparator = (out, next) => next ? `${out}\\n\\n${next}` : out;\nasync function createAddons(options, outputPluginDriver, chunk) {\n  try {\n    let [banner, footer, intro, outro] = await Promise.all([outputPluginDriver.hookReduceValue('banner', options.banner(chunk), [chunk], concatSeparator), outputPluginDriver.hookReduceValue('footer', options.footer(chunk), [chunk], concatSeparator), outputPluginDriver.hookReduceValue('intro', options.intro(chunk), [chunk], concatDblSeparator), outputPluginDriver.hookReduceValue('outro', options.outro(chunk), [chunk], concatDblSeparator)]);\n    if (intro) intro += '\\n\\n';\n    if (outro) outro = `\\n\\n${outro}`;\n    if (banner) banner += '\\n';\n    if (footer) footer = '\\n' + footer;\n    return {\n      banner,\n      footer,\n      intro,\n      outro\n    };\n  } catch (error_) {\n    return error(errorAddonNotGenerated(error_.message, error_.hook, error_.plugin));\n  }\n}\nconst DECONFLICT_IMPORTED_VARIABLES_BY_FORMAT = {\n  amd: deconflictImportsOther,\n  cjs: deconflictImportsOther,\n  es: deconflictImportsEsmOrSystem,\n  iife: deconflictImportsOther,\n  system: deconflictImportsEsmOrSystem,\n  umd: deconflictImportsOther\n};\nfunction deconflictChunk(modules, dependenciesToBeDeconflicted, imports, usedNames, format, interop, preserveModules, externalLiveBindings, chunkByModule, externalChunkByModule, syntheticExports, exportNamesByVariable, accessedGlobalsByScope, includedNamespaces) {\n  const reversedModules = [...modules].reverse();\n  for (const module of reversedModules) {\n    module.scope.addUsedOutsideNames(usedNames, format, exportNamesByVariable, accessedGlobalsByScope);\n  }\n  deconflictTopLevelVariables(usedNames, reversedModules, includedNamespaces);\n  DECONFLICT_IMPORTED_VARIABLES_BY_FORMAT[format](usedNames, imports, dependenciesToBeDeconflicted, interop, preserveModules, externalLiveBindings, chunkByModule, externalChunkByModule, syntheticExports);\n  for (const module of reversedModules) {\n    module.scope.deconflict(format, exportNamesByVariable, accessedGlobalsByScope);\n  }\n}\nfunction deconflictImportsEsmOrSystem(usedNames, imports, dependenciesToBeDeconflicted, _interop, preserveModules, _externalLiveBindings, chunkByModule, externalChunkByModule, syntheticExports) {\n  // This is needed for namespace reexports\n  for (const dependency of dependenciesToBeDeconflicted.dependencies) {\n    if (preserveModules || dependency instanceof ExternalChunk) {\n      dependency.variableName = getSafeName(dependency.suggestedVariableName, usedNames, null);\n    }\n  }\n  for (const variable of imports) {\n    const module = variable.module;\n    const name = variable.name;\n    if (variable.isNamespace && (preserveModules || module instanceof ExternalModule)) {\n      variable.setRenderNames(null, (module instanceof ExternalModule ? externalChunkByModule.get(module) : chunkByModule.get(module)).variableName);\n    } else if (module instanceof ExternalModule && name === 'default') {\n      variable.setRenderNames(null, getSafeName([...module.exportedVariables].some(_ref76 => {\n        let [exportedVariable, exportedName] = _ref76;\n        return exportedName === '*' && exportedVariable.included;\n      }) ? module.suggestedVariableName + '__default' : module.suggestedVariableName, usedNames, variable.forbiddenNames));\n    } else {\n      variable.setRenderNames(null, getSafeName(name, usedNames, variable.forbiddenNames));\n    }\n  }\n  for (const variable of syntheticExports) {\n    variable.setRenderNames(null, getSafeName(variable.name, usedNames, variable.forbiddenNames));\n  }\n}\nfunction deconflictImportsOther(usedNames, imports, _ref77, interop, preserveModules, externalLiveBindings, chunkByModule, externalChunkByModule) {\n  let {\n    deconflictedDefault,\n    deconflictedNamespace,\n    dependencies\n  } = _ref77;\n  for (const chunk of dependencies) {\n    chunk.variableName = getSafeName(chunk.suggestedVariableName, usedNames, null);\n  }\n  for (const chunk of deconflictedNamespace) {\n    chunk.namespaceVariableName = getSafeName(`${chunk.suggestedVariableName}__namespace`, usedNames, null);\n  }\n  for (const externalModule of deconflictedDefault) {\n    externalModule.defaultVariableName = deconflictedNamespace.has(externalModule) && canDefaultBeTakenFromNamespace(interop(externalModule.id), externalLiveBindings) ? externalModule.namespaceVariableName : getSafeName(`${externalModule.suggestedVariableName}__default`, usedNames, null);\n  }\n  for (const variable of imports) {\n    const module = variable.module;\n    if (module instanceof ExternalModule) {\n      const chunk = externalChunkByModule.get(module);\n      const name = variable.name;\n      if (name === 'default') {\n        const moduleInterop = interop(module.id);\n        const variableName = defaultInteropHelpersByInteropType[moduleInterop] ? chunk.defaultVariableName : chunk.variableName;\n        if (isDefaultAProperty(moduleInterop, externalLiveBindings)) {\n          variable.setRenderNames(variableName, 'default');\n        } else {\n          variable.setRenderNames(null, variableName);\n        }\n      } else if (name === '*') {\n        variable.setRenderNames(null, namespaceInteropHelpersByInteropType[interop(module.id)] ? chunk.namespaceVariableName : chunk.variableName);\n      } else {\n        // if the second parameter is `null`, it uses its \"name\" for the property name\n        variable.setRenderNames(chunk.variableName, null);\n      }\n    } else {\n      const chunk = chunkByModule.get(module);\n      if (preserveModules && variable.isNamespace) {\n        variable.setRenderNames(null, chunk.exportMode === 'default' ? chunk.namespaceVariableName : chunk.variableName);\n      } else if (chunk.exportMode === 'default') {\n        variable.setRenderNames(null, chunk.variableName);\n      } else {\n        variable.setRenderNames(chunk.variableName, chunk.getVariableExportName(variable));\n      }\n    }\n  }\n}\nfunction deconflictTopLevelVariables(usedNames, modules, includedNamespaces) {\n  for (const module of modules) {\n    for (const variable of module.scope.variables.values()) {\n      if (variable.included &&\n      // this will only happen for exports in some formats\n      !(variable.renderBaseName || variable instanceof ExportDefaultVariable && variable.getOriginalVariable() !== variable)) {\n        variable.setRenderNames(null, getSafeName(variable.name, usedNames, variable.forbiddenNames));\n      }\n    }\n    if (includedNamespaces.has(module)) {\n      const namespace = module.namespace;\n      namespace.setRenderNames(null, getSafeName(namespace.name, usedNames, namespace.forbiddenNames));\n    }\n  }\n}\nfunction assignExportsToMangledNames(exports, exportsByName, exportNamesByVariable) {\n  let nameIndex = 0;\n  for (const variable of exports) {\n    let [exportName] = variable.name;\n    if (exportsByName.has(exportName)) {\n      do {\n        exportName = toBase64(++nameIndex);\n        // skip past leading number identifiers\n        if (exportName.charCodeAt(0) === 49 /* '1' */) {\n          nameIndex += 9 * 64 ** (exportName.length - 1);\n          exportName = toBase64(nameIndex);\n        }\n      } while (RESERVED_NAMES$1.has(exportName) || exportsByName.has(exportName));\n    }\n    exportsByName.set(exportName, variable);\n    exportNamesByVariable.set(variable, [exportName]);\n  }\n}\nfunction assignExportsToNames(exports, exportsByName, exportNamesByVariable) {\n  for (const variable of exports) {\n    let nameIndex = 0;\n    let exportName = variable.name;\n    while (exportsByName.has(exportName)) {\n      exportName = variable.name + '$' + ++nameIndex;\n    }\n    exportsByName.set(exportName, variable);\n    exportNamesByVariable.set(variable, [exportName]);\n  }\n}\nfunction getExportMode(chunk, _ref78, facadeModuleId, warn) {\n  let {\n    exports: exportMode,\n    name,\n    format\n  } = _ref78;\n  const exportKeys = chunk.getExportNames();\n  if (exportMode === 'default') {\n    if (exportKeys.length !== 1 || exportKeys[0] !== 'default') {\n      return error(errorIncompatibleExportOptionValue('default', exportKeys, facadeModuleId));\n    }\n  } else if (exportMode === 'none' && exportKeys.length > 0) {\n    return error(errorIncompatibleExportOptionValue('none', exportKeys, facadeModuleId));\n  }\n  if (exportMode === 'auto') {\n    if (exportKeys.length === 0) {\n      exportMode = 'none';\n    } else if (exportKeys.length === 1 && exportKeys[0] === 'default') {\n      exportMode = 'default';\n    } else {\n      if (format !== 'es' && format !== 'system' && exportKeys.includes('default')) {\n        warn(errorMixedExport(facadeModuleId, name));\n      }\n      exportMode = 'named';\n    }\n  }\n  return exportMode;\n}\nfunction guessIndentString(code) {\n  const lines = code.split('\\n');\n  const tabbed = lines.filter(line => /^\\t+/.test(line));\n  const spaced = lines.filter(line => /^ {2,}/.test(line));\n  if (tabbed.length === 0 && spaced.length === 0) {\n    return null;\n  }\n  // More lines tabbed than spaced? Assume tabs, and\n  // default to tabs in the case of a tie (or nothing\n  // to go on)\n  if (tabbed.length >= spaced.length) {\n    return '\\t';\n  }\n  // Otherwise, we need to guess the multiple\n  const min = spaced.reduce((previous, current) => {\n    const numberSpaces = /^ +/.exec(current)[0].length;\n    return Math.min(numberSpaces, previous);\n  }, Infinity);\n  return ' '.repeat(min);\n}\nfunction getIndentString(modules, options) {\n  if (options.indent !== true) return options.indent;\n  for (const module of modules) {\n    const indent = guessIndentString(module.originalCode);\n    if (indent !== null) return indent;\n  }\n  return '\\t';\n}\nfunction getStaticDependencies(chunk, orderedModules, chunkByModule, externalChunkByModule) {\n  const staticDependencyBlocks = [];\n  const handledDependencies = new Set();\n  for (let modulePos = orderedModules.length - 1; modulePos >= 0; modulePos--) {\n    const module = orderedModules[modulePos];\n    if (!handledDependencies.has(module)) {\n      const staticDependencies = [];\n      addStaticDependencies(module, staticDependencies, handledDependencies, chunk, chunkByModule, externalChunkByModule);\n      staticDependencyBlocks.unshift(staticDependencies);\n    }\n  }\n  const dependencies = new Set();\n  for (const block of staticDependencyBlocks) {\n    for (const dependency of block) {\n      dependencies.add(dependency);\n    }\n  }\n  return dependencies;\n}\nfunction addStaticDependencies(module, staticDependencies, handledModules, chunk, chunkByModule, externalChunkByModule) {\n  const dependencies = module.getDependenciesToBeIncluded();\n  for (const dependency of dependencies) {\n    if (dependency instanceof ExternalModule) {\n      staticDependencies.push(externalChunkByModule.get(dependency));\n      continue;\n    }\n    const dependencyChunk = chunkByModule.get(dependency);\n    if (dependencyChunk !== chunk) {\n      staticDependencies.push(dependencyChunk);\n      continue;\n    }\n    if (!handledModules.has(dependency)) {\n      handledModules.add(dependency);\n      addStaticDependencies(dependency, staticDependencies, handledModules, chunk, chunkByModule, externalChunkByModule);\n    }\n  }\n}\n\n// Four random characters from the private use area to minimize risk of conflicts\nconst hashPlaceholderLeft = '!~{';\nconst hashPlaceholderRight = '}~';\nconst hashPlaceholderOverhead = hashPlaceholderLeft.length + hashPlaceholderRight.length;\n// This is the size of a sha256\nconst maxHashSize = 64;\nconst defaultHashSize = 8;\nconst getHashPlaceholderGenerator = () => {\n  let nextIndex = 0;\n  return function (optionName) {\n    let hashSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultHashSize;\n    if (hashSize > maxHashSize) {\n      return error(errorFailedValidation(`Hashes cannot be longer than ${maxHashSize} characters, received ${hashSize}. Check the \"${optionName}\" option.`));\n    }\n    const placeholder = `${hashPlaceholderLeft}${toBase64(++nextIndex).padStart(hashSize - hashPlaceholderOverhead, '0')}${hashPlaceholderRight}`;\n    if (placeholder.length > hashSize) {\n      return error(errorFailedValidation(`To generate hashes for this number of chunks (currently ${nextIndex}), you need a minimum hash size of ${placeholder.length}, received ${hashSize}. Check the \"${optionName}\" option.`));\n    }\n    return placeholder;\n  };\n};\nconst REPLACER_REGEX = new RegExp(`${hashPlaceholderLeft}[0-9a-zA-Z_$]{1,${maxHashSize - hashPlaceholderOverhead}}${hashPlaceholderRight}`, 'g');\nconst replacePlaceholders = (code, hashesByPlaceholder) => code.replace(REPLACER_REGEX, placeholder => hashesByPlaceholder.get(placeholder) || placeholder);\nconst replaceSinglePlaceholder = (code, placeholder, value) => code.replace(REPLACER_REGEX, match => match === placeholder ? value : match);\nconst replacePlaceholdersWithDefaultAndGetContainedPlaceholders = (code, placeholders) => {\n  const containedPlaceholders = new Set();\n  const transformedCode = code.replace(REPLACER_REGEX, placeholder => {\n    if (placeholders.has(placeholder)) {\n      containedPlaceholders.add(placeholder);\n      return `${hashPlaceholderLeft}${'0'.repeat(placeholder.length - hashPlaceholderOverhead)}${hashPlaceholderRight}`;\n    }\n    return placeholder;\n  });\n  return {\n    containedPlaceholders,\n    transformedCode\n  };\n};\nconst lowercaseBundleKeys = Symbol('bundleKeys');\nconst FILE_PLACEHOLDER = {\n  type: 'placeholder'\n};\nconst getOutputBundle = outputBundleBase => {\n  const reservedLowercaseBundleKeys = new Set();\n  return new Proxy(outputBundleBase, {\n    deleteProperty(target, key) {\n      if (typeof key === 'string') {\n        reservedLowercaseBundleKeys.delete(key.toLowerCase());\n      }\n      return Reflect.deleteProperty(target, key);\n    },\n    get(target, key) {\n      if (key === lowercaseBundleKeys) {\n        return reservedLowercaseBundleKeys;\n      }\n      return Reflect.get(target, key);\n    },\n    set(target, key, value) {\n      if (typeof key === 'string') {\n        reservedLowercaseBundleKeys.add(key.toLowerCase());\n      }\n      return Reflect.set(target, key, value);\n    }\n  });\n};\nconst removeUnreferencedAssets = outputBundle => {\n  const unreferencedAssets = new Set();\n  const bundleEntries = Object.values(outputBundle);\n  for (const asset of bundleEntries) {\n    asset.type === 'asset' && asset.needsCodeReference && unreferencedAssets.add(asset.fileName);\n  }\n  for (const chunk of bundleEntries) {\n    if (chunk.type === 'chunk') {\n      for (const referencedFile of chunk.referencedFiles) {\n        unreferencedAssets.has(referencedFile) && unreferencedAssets.delete(referencedFile);\n      }\n    }\n  }\n  for (const file of unreferencedAssets) {\n    delete outputBundle[file];\n  }\n};\nfunction renderNamePattern(pattern, patternName, replacements) {\n  if (isPathFragment(pattern)) return error(errorFailedValidation(`Invalid pattern \"${pattern}\" for \"${patternName}\", patterns can be neither absolute nor relative paths. If you want your files to be stored in a subdirectory, write its name without a leading slash like this: subdirectory/pattern.`));\n  return pattern.replace(/\\[(\\w+)(:\\d+)?]/g, (_match, type, size) => {\n    if (!replacements.hasOwnProperty(type) || size && type !== 'hash') {\n      return error(errorFailedValidation(`\"[${type}${size || ''}]\" is not a valid placeholder in the \"${patternName}\" pattern.`));\n    }\n    const replacement = replacements[type](size && Number.parseInt(size.slice(1)));\n    if (isPathFragment(replacement)) return error(errorFailedValidation(`Invalid substitution \"${replacement}\" for placeholder \"[${type}]\" in \"${patternName}\" pattern, can be neither absolute nor relative path.`));\n    return replacement;\n  });\n}\nfunction makeUnique(name, _ref79) {\n  let {\n    [lowercaseBundleKeys]: reservedLowercaseBundleKeys\n  } = _ref79;\n  if (!reservedLowercaseBundleKeys.has(name.toLowerCase())) return name;\n  const extension = extname(name);\n  name = name.slice(0, Math.max(0, name.length - extension.length));\n  let uniqueName,\n    uniqueIndex = 1;\n  while (reservedLowercaseBundleKeys.has((uniqueName = name + ++uniqueIndex + extension).toLowerCase()));\n  return uniqueName;\n}\nconst NON_ASSET_EXTENSIONS = new Set(['.js', '.jsx', '.ts', '.tsx', '.mjs', '.mts', '.cjs', '.cts']);\nfunction getGlobalName(chunk, globals, hasExports, warn) {\n  const globalName = typeof globals === 'function' ? globals(chunk.id) : globals[chunk.id];\n  if (globalName) {\n    return globalName;\n  }\n  if (hasExports) {\n    warn(errorMissingGlobalName(chunk.id, chunk.variableName));\n    return chunk.variableName;\n  }\n}\nclass Chunk {\n  constructor(orderedModules, inputOptions, outputOptions, unsetOptions, pluginDriver, modulesById, chunkByModule, externalChunkByModule, facadeChunkByModule, includedNamespaces, manualChunkAlias, getPlaceholder, bundle, inputBase, snippets) {\n    this.orderedModules = orderedModules;\n    this.inputOptions = inputOptions;\n    this.outputOptions = outputOptions;\n    this.unsetOptions = unsetOptions;\n    this.pluginDriver = pluginDriver;\n    this.modulesById = modulesById;\n    this.chunkByModule = chunkByModule;\n    this.externalChunkByModule = externalChunkByModule;\n    this.facadeChunkByModule = facadeChunkByModule;\n    this.includedNamespaces = includedNamespaces;\n    this.manualChunkAlias = manualChunkAlias;\n    this.getPlaceholder = getPlaceholder;\n    this.bundle = bundle;\n    this.inputBase = inputBase;\n    this.snippets = snippets;\n    this.entryModules = [];\n    this.exportMode = 'named';\n    this.facadeModule = null;\n    this.namespaceVariableName = '';\n    this.variableName = '';\n    this.accessedGlobalsByScope = new Map();\n    this.dependencies = new Set();\n    this.dynamicEntryModules = [];\n    this.dynamicName = null;\n    this.exportNamesByVariable = new Map();\n    this.exports = new Set();\n    this.exportsByName = new Map();\n    this.fileName = null;\n    this.implicitEntryModules = [];\n    this.implicitlyLoadedBefore = new Set();\n    this.imports = new Set();\n    this.includedDynamicImports = null;\n    this.includedReexportsByModule = new Map();\n    // This may be updated in the constructor\n    this.isEmpty = true;\n    this.name = null;\n    this.needsExportsShim = false;\n    this.preRenderedChunkInfo = null;\n    this.preliminaryFileName = null;\n    this.renderedChunkInfo = null;\n    this.renderedDependencies = null;\n    this.renderedModules = Object.create(null);\n    this.sortedExportNames = null;\n    this.strictFacade = false;\n    this.execIndex = orderedModules.length > 0 ? orderedModules[0].execIndex : Infinity;\n    const chunkModules = new Set(orderedModules);\n    for (const module of orderedModules) {\n      chunkByModule.set(module, this);\n      if (module.namespace.included) {\n        includedNamespaces.add(module);\n      }\n      if (this.isEmpty && module.isIncluded()) {\n        this.isEmpty = false;\n      }\n      if (module.info.isEntry || outputOptions.preserveModules) {\n        this.entryModules.push(module);\n      }\n      for (const importer of module.includedDynamicImporters) {\n        if (!chunkModules.has(importer)) {\n          this.dynamicEntryModules.push(module);\n          // Modules with synthetic exports need an artificial namespace for dynamic imports\n          if (module.info.syntheticNamedExports && !outputOptions.preserveModules) {\n            includedNamespaces.add(module);\n            this.exports.add(module.namespace);\n          }\n        }\n      }\n      if (module.implicitlyLoadedAfter.size > 0) {\n        this.implicitEntryModules.push(module);\n      }\n    }\n    this.suggestedVariableName = makeLegal(this.generateVariableName());\n  }\n  static generateFacade(inputOptions, outputOptions, unsetOptions, pluginDriver, modulesById, chunkByModule, externalChunkByModule, facadeChunkByModule, includedNamespaces, facadedModule, facadeName, getPlaceholder, bundle, inputBase, snippets) {\n    const chunk = new Chunk([], inputOptions, outputOptions, unsetOptions, pluginDriver, modulesById, chunkByModule, externalChunkByModule, facadeChunkByModule, includedNamespaces, null, getPlaceholder, bundle, inputBase, snippets);\n    chunk.assignFacadeName(facadeName, facadedModule);\n    if (!facadeChunkByModule.has(facadedModule)) {\n      facadeChunkByModule.set(facadedModule, chunk);\n    }\n    for (const dependency of facadedModule.getDependenciesToBeIncluded()) {\n      chunk.dependencies.add(dependency instanceof Module ? chunkByModule.get(dependency) : externalChunkByModule.get(dependency));\n    }\n    if (!chunk.dependencies.has(chunkByModule.get(facadedModule)) && facadedModule.info.moduleSideEffects && facadedModule.hasEffects()) {\n      chunk.dependencies.add(chunkByModule.get(facadedModule));\n    }\n    chunk.ensureReexportsAreAvailableForModule(facadedModule);\n    chunk.facadeModule = facadedModule;\n    chunk.strictFacade = true;\n    return chunk;\n  }\n  canModuleBeFacade(module, exposedVariables) {\n    const moduleExportNamesByVariable = module.getExportNamesByVariable();\n    for (const exposedVariable of this.exports) {\n      if (!moduleExportNamesByVariable.has(exposedVariable)) {\n        return false;\n      }\n    }\n    for (const exposedVariable of exposedVariables) {\n      if (!(moduleExportNamesByVariable.has(exposedVariable) || exposedVariable.module === module)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  finalizeChunk(code, map, hashesByPlaceholder) {\n    const renderedChunkInfo = this.getRenderedChunkInfo();\n    const finalize = code => replacePlaceholders(code, hashesByPlaceholder);\n    const fileName = this.fileName = finalize(renderedChunkInfo.fileName);\n    return {\n      ...renderedChunkInfo,\n      code,\n      dynamicImports: renderedChunkInfo.dynamicImports.map(finalize),\n      fileName,\n      implicitlyLoadedBefore: renderedChunkInfo.implicitlyLoadedBefore.map(finalize),\n      importedBindings: Object.fromEntries(Object.entries(renderedChunkInfo.importedBindings).map(_ref80 => {\n        let [fileName, bindings] = _ref80;\n        return [finalize(fileName), bindings];\n      })),\n      imports: renderedChunkInfo.imports.map(finalize),\n      map,\n      referencedFiles: renderedChunkInfo.referencedFiles.map(finalize)\n    };\n  }\n  generateExports() {\n    this.sortedExportNames = null;\n    const remainingExports = new Set(this.exports);\n    if (this.facadeModule !== null && (this.facadeModule.preserveSignature !== false || this.strictFacade)) {\n      const exportNamesByVariable = this.facadeModule.getExportNamesByVariable();\n      for (const [variable, exportNames] of exportNamesByVariable) {\n        this.exportNamesByVariable.set(variable, [...exportNames]);\n        for (const exportName of exportNames) {\n          this.exportsByName.set(exportName, variable);\n        }\n        remainingExports.delete(variable);\n      }\n    }\n    if (this.outputOptions.minifyInternalExports) {\n      assignExportsToMangledNames(remainingExports, this.exportsByName, this.exportNamesByVariable);\n    } else {\n      assignExportsToNames(remainingExports, this.exportsByName, this.exportNamesByVariable);\n    }\n    if (this.outputOptions.preserveModules || this.facadeModule && this.facadeModule.info.isEntry) this.exportMode = getExportMode(this, this.outputOptions, this.facadeModule.id, this.inputOptions.onwarn);\n  }\n  generateFacades() {\n    const facades = [];\n    const entryModules = new Set([...this.entryModules, ...this.implicitEntryModules]);\n    const exposedVariables = new Set(this.dynamicEntryModules.map(_ref81 => {\n      let {\n        namespace\n      } = _ref81;\n      return namespace;\n    }));\n    for (const module of entryModules) {\n      if (module.preserveSignature) {\n        for (const exportedVariable of module.getExportNamesByVariable().keys()) {\n          exposedVariables.add(exportedVariable);\n        }\n      }\n    }\n    for (const module of entryModules) {\n      // eslint-disable-next-line unicorn/prefer-spread\n      const requiredFacades = Array.from(new Set(module.chunkNames.filter(_ref82 => {\n        let {\n          isUserDefined\n        } = _ref82;\n        return isUserDefined;\n      }).map(_ref83 => {\n        let {\n          name\n        } = _ref83;\n        return name;\n      })),\n      // mapping must run after Set 'name' dedupe\n      name => ({\n        name\n      }));\n      if (requiredFacades.length === 0 && module.isUserDefinedEntryPoint) {\n        requiredFacades.push({});\n      }\n      // eslint-disable-next-line unicorn/prefer-spread\n      requiredFacades.push(...Array.from(module.chunkFileNames, fileName => ({\n        fileName\n      })));\n      if (requiredFacades.length === 0) {\n        requiredFacades.push({});\n      }\n      if (!this.facadeModule) {\n        const needsStrictFacade = module.preserveSignature === 'strict' || module.preserveSignature === 'exports-only' && module.getExportNamesByVariable().size > 0;\n        if (!needsStrictFacade || this.outputOptions.preserveModules || this.canModuleBeFacade(module, exposedVariables)) {\n          this.facadeModule = module;\n          this.facadeChunkByModule.set(module, this);\n          if (module.preserveSignature) {\n            this.strictFacade = needsStrictFacade;\n          }\n          this.assignFacadeName(requiredFacades.shift(), module, this.outputOptions.preserveModules);\n        }\n      }\n      for (const facadeName of requiredFacades) {\n        facades.push(Chunk.generateFacade(this.inputOptions, this.outputOptions, this.unsetOptions, this.pluginDriver, this.modulesById, this.chunkByModule, this.externalChunkByModule, this.facadeChunkByModule, this.includedNamespaces, module, facadeName, this.getPlaceholder, this.bundle, this.inputBase, this.snippets));\n      }\n    }\n    for (const module of this.dynamicEntryModules) {\n      if (module.info.syntheticNamedExports) continue;\n      if (!this.facadeModule && this.canModuleBeFacade(module, exposedVariables)) {\n        this.facadeModule = module;\n        this.facadeChunkByModule.set(module, this);\n        this.strictFacade = true;\n        this.dynamicName = getChunkNameFromModule(module);\n      } else if (this.facadeModule === module && !this.strictFacade && this.canModuleBeFacade(module, exposedVariables)) {\n        this.strictFacade = true;\n      } else if (!this.facadeChunkByModule.get(module)?.strictFacade) {\n        this.includedNamespaces.add(module);\n        this.exports.add(module.namespace);\n      }\n    }\n    if (!this.outputOptions.preserveModules) {\n      this.addNecessaryImportsForFacades();\n    }\n    return facades;\n  }\n  getChunkName() {\n    return this.name ?? (this.name = this.outputOptions.sanitizeFileName(this.getFallbackChunkName()));\n  }\n  getExportNames() {\n    return this.sortedExportNames ?? (this.sortedExportNames = [...this.exportsByName.keys()].sort());\n  }\n  getFileName() {\n    return this.fileName || this.getPreliminaryFileName().fileName;\n  }\n  getImportPath(importer) {\n    return escapeId(getImportPath(importer, this.getFileName(), this.outputOptions.format === 'amd' && !this.outputOptions.amd.forceJsExtensionForImports, true));\n  }\n  getPreliminaryFileName() {\n    if (this.preliminaryFileName) {\n      return this.preliminaryFileName;\n    }\n    let fileName;\n    let hashPlaceholder = null;\n    const {\n      chunkFileNames,\n      entryFileNames,\n      file,\n      format,\n      preserveModules\n    } = this.outputOptions;\n    if (file) {\n      fileName = basename(file);\n    } else if (this.fileName === null) {\n      const [pattern, patternName] = preserveModules || this.facadeModule?.isUserDefinedEntryPoint ? [entryFileNames, 'output.entryFileNames'] : [chunkFileNames, 'output.chunkFileNames'];\n      fileName = renderNamePattern(typeof pattern === 'function' ? pattern(this.getPreRenderedChunkInfo()) : pattern, patternName, {\n        format: () => format,\n        hash: size => hashPlaceholder || (hashPlaceholder = this.getPlaceholder(patternName, size)),\n        name: () => this.getChunkName()\n      });\n      if (!hashPlaceholder) {\n        fileName = makeUnique(fileName, this.bundle);\n      }\n    } else {\n      fileName = this.fileName;\n    }\n    if (!hashPlaceholder) {\n      this.bundle[fileName] = FILE_PLACEHOLDER;\n    }\n    // Caching is essential to not conflict with the file name reservation above\n    return this.preliminaryFileName = {\n      fileName,\n      hashPlaceholder\n    };\n  }\n  getRenderedChunkInfo() {\n    if (this.renderedChunkInfo) {\n      return this.renderedChunkInfo;\n    }\n    return this.renderedChunkInfo = {\n      ...this.getPreRenderedChunkInfo(),\n      dynamicImports: this.getDynamicDependencies().map(resolveFileName),\n      fileName: this.getFileName(),\n      // eslint-disable-next-line unicorn/prefer-spread\n      implicitlyLoadedBefore: Array.from(this.implicitlyLoadedBefore, resolveFileName),\n      importedBindings: getImportedBindingsPerDependency(this.getRenderedDependencies(), resolveFileName),\n      // eslint-disable-next-line unicorn/prefer-spread\n      imports: Array.from(this.dependencies, resolveFileName),\n      modules: this.renderedModules,\n      referencedFiles: this.getReferencedFiles()\n    };\n  }\n  getVariableExportName(variable) {\n    if (this.outputOptions.preserveModules && variable instanceof NamespaceVariable) {\n      return '*';\n    }\n    return this.exportNamesByVariable.get(variable)[0];\n  }\n  link() {\n    this.dependencies = getStaticDependencies(this, this.orderedModules, this.chunkByModule, this.externalChunkByModule);\n    for (const module of this.orderedModules) {\n      this.addImplicitlyLoadedBeforeFromModule(module);\n      this.setUpChunkImportsAndExportsForModule(module);\n    }\n  }\n  async render() {\n    const {\n      dependencies,\n      exportMode,\n      facadeModule,\n      inputOptions: {\n        onwarn\n      },\n      outputOptions,\n      pluginDriver,\n      snippets\n    } = this;\n    const {\n      format,\n      hoistTransitiveImports,\n      preserveModules\n    } = outputOptions;\n    // for static and dynamic entry points, add transitive dependencies to this\n    // chunk's dependencies to avoid loading latency\n    if (hoistTransitiveImports && !preserveModules && facadeModule !== null) {\n      for (const dep of dependencies) {\n        if (dep instanceof Chunk) this.inlineChunkDependencies(dep);\n      }\n    }\n    const preliminaryFileName = this.getPreliminaryFileName();\n    const {\n      accessedGlobals,\n      indent,\n      magicString,\n      renderedSource,\n      usedModules,\n      usesTopLevelAwait\n    } = this.renderModules(preliminaryFileName.fileName);\n    const renderedDependencies = [...this.getRenderedDependencies().values()];\n    const renderedExports = exportMode === 'none' ? [] : this.getChunkExportDeclarations(format);\n    let hasExports = renderedExports.length > 0;\n    let hasDefaultExport = false;\n    for (const renderedDependence of renderedDependencies) {\n      const {\n        reexports\n      } = renderedDependence;\n      if (reexports?.length) {\n        hasExports = true;\n        if (!hasDefaultExport && reexports.some(reexport => reexport.reexported === 'default')) {\n          hasDefaultExport = true;\n        }\n        if (format === 'es') {\n          renderedDependence.reexports = reexports.filter(\n          // eslint-disable-next-line unicorn/prefer-array-some\n          _ref84 => {\n            let {\n              reexported\n            } = _ref84;\n            return !renderedExports.find(_ref85 => {\n              let {\n                exported\n              } = _ref85;\n              return exported === reexported;\n            });\n          });\n        }\n      }\n    }\n    if (!hasDefaultExport) {\n      for (const {\n        exported\n      } of renderedExports) {\n        if (exported === 'default') {\n          hasDefaultExport = true;\n          break;\n        }\n      }\n    }\n    const {\n      intro,\n      outro,\n      banner,\n      footer\n    } = await createAddons(outputOptions, pluginDriver, this.getRenderedChunkInfo());\n    finalisers[format](renderedSource, {\n      accessedGlobals,\n      dependencies: renderedDependencies,\n      exports: renderedExports,\n      hasDefaultExport,\n      hasExports,\n      id: preliminaryFileName.fileName,\n      indent,\n      intro,\n      isEntryFacade: preserveModules || facadeModule !== null && facadeModule.info.isEntry,\n      isModuleFacade: facadeModule !== null,\n      namedExportsMode: exportMode !== 'default',\n      onwarn,\n      outro,\n      snippets,\n      usesTopLevelAwait\n    }, outputOptions);\n    if (banner) magicString.prepend(banner);\n    if (footer) magicString.append(footer);\n    return {\n      chunk: this,\n      magicString,\n      preliminaryFileName,\n      usedModules\n    };\n  }\n  addImplicitlyLoadedBeforeFromModule(baseModule) {\n    const {\n      chunkByModule,\n      implicitlyLoadedBefore\n    } = this;\n    for (const module of baseModule.implicitlyLoadedBefore) {\n      const chunk = chunkByModule.get(module);\n      if (chunk && chunk !== this) {\n        implicitlyLoadedBefore.add(chunk);\n      }\n    }\n  }\n  addNecessaryImportsForFacades() {\n    for (const [module, variables] of this.includedReexportsByModule) {\n      if (this.includedNamespaces.has(module)) {\n        for (const variable of variables) {\n          this.imports.add(variable);\n        }\n      }\n    }\n  }\n  assignFacadeName(_ref86, facadedModule, preservePath) {\n    let {\n      fileName,\n      name\n    } = _ref86;\n    if (fileName) {\n      this.fileName = fileName;\n    } else {\n      this.name = this.outputOptions.sanitizeFileName(name || (preservePath ? this.getPreserveModulesChunkNameFromModule(facadedModule) : getChunkNameFromModule(facadedModule)));\n    }\n  }\n  checkCircularDependencyImport(variable, importingModule) {\n    const variableModule = variable.module;\n    if (variableModule instanceof Module) {\n      const exportChunk = this.chunkByModule.get(variableModule);\n      let alternativeReexportModule;\n      do {\n        alternativeReexportModule = importingModule.alternativeReexportModules.get(variable);\n        if (alternativeReexportModule) {\n          const exportingChunk = this.chunkByModule.get(alternativeReexportModule);\n          if (exportingChunk !== exportChunk) {\n            this.inputOptions.onwarn(errorCyclicCrossChunkReexport(\n            // Namespaces do not have an export name\n            variableModule.getExportNamesByVariable().get(variable)?.[0] || '*', variableModule.id, alternativeReexportModule.id, importingModule.id, this.outputOptions.preserveModules));\n          }\n          importingModule = alternativeReexportModule;\n        }\n      } while (alternativeReexportModule);\n    }\n  }\n  ensureReexportsAreAvailableForModule(module) {\n    const includedReexports = [];\n    const map = module.getExportNamesByVariable();\n    for (const exportedVariable of map.keys()) {\n      const isSynthetic = exportedVariable instanceof SyntheticNamedExportVariable;\n      const importedVariable = isSynthetic ? exportedVariable.getBaseVariable() : exportedVariable;\n      this.checkCircularDependencyImport(importedVariable, module);\n      // When preserving modules, we do not create namespace objects but directly\n      // use the actual namespaces, which would be broken by this logic.\n      if (!(importedVariable instanceof NamespaceVariable && this.outputOptions.preserveModules)) {\n        const exportingModule = importedVariable.module;\n        if (exportingModule instanceof Module) {\n          const chunk = this.chunkByModule.get(exportingModule);\n          if (chunk && chunk !== this) {\n            chunk.exports.add(importedVariable);\n            includedReexports.push(importedVariable);\n            if (isSynthetic) {\n              this.imports.add(importedVariable);\n            }\n          }\n        }\n      }\n    }\n    if (includedReexports.length > 0) {\n      this.includedReexportsByModule.set(module, includedReexports);\n    }\n  }\n  generateVariableName() {\n    if (this.manualChunkAlias) {\n      return this.manualChunkAlias;\n    }\n    const moduleForNaming = this.entryModules[0] || this.implicitEntryModules[0] || this.dynamicEntryModules[0] || this.orderedModules[this.orderedModules.length - 1];\n    if (moduleForNaming) {\n      return getChunkNameFromModule(moduleForNaming);\n    }\n    return 'chunk';\n  }\n  getChunkExportDeclarations(format) {\n    const exports = [];\n    for (const exportName of this.getExportNames()) {\n      if (exportName[0] === '*') continue;\n      const variable = this.exportsByName.get(exportName);\n      if (!(variable instanceof SyntheticNamedExportVariable)) {\n        const module = variable.module;\n        if (module) {\n          const chunk = this.chunkByModule.get(module);\n          if (chunk !== this) {\n            if (!chunk || format !== 'es') {\n              continue;\n            }\n            const chunkDep = this.renderedDependencies.get(chunk);\n            if (!chunkDep) {\n              continue;\n            }\n            const {\n              imports,\n              reexports\n            } = chunkDep;\n            const importedByReexported = reexports?.find(_ref87 => {\n              let {\n                reexported\n              } = _ref87;\n              return reexported === exportName;\n            });\n            const isImported = imports?.find(_ref88 => {\n              let {\n                imported\n              } = _ref88;\n              return imported === importedByReexported?.imported;\n            });\n            if (!isImported) {\n              continue;\n            }\n          }\n        }\n      }\n      let expression = null;\n      let hoisted = false;\n      let local = variable.getName(this.snippets.getPropertyAccess);\n      if (variable instanceof LocalVariable) {\n        for (const declaration of variable.declarations) {\n          if (declaration.parent instanceof FunctionDeclaration || declaration instanceof ExportDefaultDeclaration && declaration.declaration instanceof FunctionDeclaration) {\n            hoisted = true;\n            break;\n          }\n        }\n      } else if (variable instanceof SyntheticNamedExportVariable) {\n        expression = local;\n        if (format === 'es') {\n          local = variable.renderName;\n        }\n      }\n      exports.push({\n        exported: exportName,\n        expression,\n        hoisted,\n        local\n      });\n    }\n    return exports;\n  }\n  getDependenciesToBeDeconflicted(addNonNamespacesAndInteropHelpers, addDependenciesWithoutBindings, interop) {\n    const dependencies = new Set();\n    const deconflictedDefault = new Set();\n    const deconflictedNamespace = new Set();\n    for (const variable of [...this.exportNamesByVariable.keys(), ...this.imports]) {\n      if (addNonNamespacesAndInteropHelpers || variable.isNamespace) {\n        const module = variable.module;\n        if (module instanceof ExternalModule) {\n          const chunk = this.externalChunkByModule.get(module);\n          dependencies.add(chunk);\n          if (addNonNamespacesAndInteropHelpers) {\n            if (variable.name === 'default') {\n              if (defaultInteropHelpersByInteropType[interop(module.id)]) {\n                deconflictedDefault.add(chunk);\n              }\n            } else if (variable.name === '*' && namespaceInteropHelpersByInteropType[interop(module.id)]) {\n              deconflictedNamespace.add(chunk);\n            }\n          }\n        } else {\n          const chunk = this.chunkByModule.get(module);\n          if (chunk !== this) {\n            dependencies.add(chunk);\n            if (addNonNamespacesAndInteropHelpers && chunk.exportMode === 'default' && variable.isNamespace) {\n              deconflictedNamespace.add(chunk);\n            }\n          }\n        }\n      }\n    }\n    if (addDependenciesWithoutBindings) {\n      for (const dependency of this.dependencies) {\n        dependencies.add(dependency);\n      }\n    }\n    return {\n      deconflictedDefault,\n      deconflictedNamespace,\n      dependencies\n    };\n  }\n  getDynamicDependencies() {\n    return this.getIncludedDynamicImports().map(resolvedDynamicImport => resolvedDynamicImport.facadeChunk || resolvedDynamicImport.chunk || resolvedDynamicImport.externalChunk || resolvedDynamicImport.resolution).filter(resolution => resolution !== this && (resolution instanceof Chunk || resolution instanceof ExternalChunk));\n  }\n  getDynamicImportStringAndAssertions(resolution, fileName) {\n    if (resolution instanceof ExternalModule) {\n      const chunk = this.externalChunkByModule.get(resolution);\n      return [`'${chunk.getImportPath(fileName)}'`, chunk.getImportAssertions(this.snippets)];\n    }\n    return [resolution || '', this.outputOptions.format === 'es' && this.outputOptions.externalImportAssertions || null];\n  }\n  getFallbackChunkName() {\n    if (this.manualChunkAlias) {\n      return this.manualChunkAlias;\n    }\n    if (this.dynamicName) {\n      return this.dynamicName;\n    }\n    if (this.fileName) {\n      return getAliasName(this.fileName);\n    }\n    return getAliasName(this.orderedModules[this.orderedModules.length - 1].id);\n  }\n  getImportSpecifiers() {\n    const {\n      interop\n    } = this.outputOptions;\n    const importsByDependency = new Map();\n    for (const variable of this.imports) {\n      const module = variable.module;\n      let dependency;\n      let imported;\n      if (module instanceof ExternalModule) {\n        dependency = this.externalChunkByModule.get(module);\n        imported = variable.name;\n        if (imported !== 'default' && imported !== '*' && interop(module.id) === 'defaultOnly') {\n          return error(errorUnexpectedNamedImport(module.id, imported, false));\n        }\n      } else {\n        dependency = this.chunkByModule.get(module);\n        imported = dependency.getVariableExportName(variable);\n      }\n      getOrCreate(importsByDependency, dependency, getNewArray).push({\n        imported,\n        local: variable.getName(this.snippets.getPropertyAccess)\n      });\n    }\n    return importsByDependency;\n  }\n  getIncludedDynamicImports() {\n    if (this.includedDynamicImports) {\n      return this.includedDynamicImports;\n    }\n    const includedDynamicImports = [];\n    for (const module of this.orderedModules) {\n      for (const {\n        node,\n        resolution\n      } of module.dynamicImports) {\n        if (!node.included) {\n          continue;\n        }\n        includedDynamicImports.push(resolution instanceof Module ? {\n          chunk: this.chunkByModule.get(resolution),\n          externalChunk: null,\n          facadeChunk: this.facadeChunkByModule.get(resolution),\n          node,\n          resolution\n        } : resolution instanceof ExternalModule ? {\n          chunk: null,\n          externalChunk: this.externalChunkByModule.get(resolution),\n          facadeChunk: null,\n          node,\n          resolution\n        } : {\n          chunk: null,\n          externalChunk: null,\n          facadeChunk: null,\n          node,\n          resolution\n        });\n      }\n    }\n    return this.includedDynamicImports = includedDynamicImports;\n  }\n  getPreRenderedChunkInfo() {\n    if (this.preRenderedChunkInfo) {\n      return this.preRenderedChunkInfo;\n    }\n    const {\n      dynamicEntryModules,\n      facadeModule,\n      implicitEntryModules,\n      orderedModules\n    } = this;\n    return this.preRenderedChunkInfo = {\n      exports: this.getExportNames(),\n      facadeModuleId: facadeModule && facadeModule.id,\n      isDynamicEntry: dynamicEntryModules.length > 0,\n      isEntry: !!facadeModule?.info.isEntry,\n      isImplicitEntry: implicitEntryModules.length > 0,\n      moduleIds: orderedModules.map(_ref89 => {\n        let {\n          id\n        } = _ref89;\n        return id;\n      }),\n      name: this.getChunkName(),\n      type: 'chunk'\n    };\n  }\n  getPreserveModulesChunkNameFromModule(module) {\n    const predefinedChunkName = getPredefinedChunkNameFromModule(module);\n    if (predefinedChunkName) return predefinedChunkName;\n    const {\n      preserveModulesRoot,\n      sanitizeFileName\n    } = this.outputOptions;\n    const sanitizedId = sanitizeFileName(normalize(module.id.split(QUERY_HASH_REGEX, 1)[0]));\n    const extensionName = extname(sanitizedId);\n    const idWithoutExtension = NON_ASSET_EXTENSIONS.has(extensionName) ? sanitizedId.slice(0, -extensionName.length) : sanitizedId;\n    if (isAbsolute(idWithoutExtension)) {\n      return preserveModulesRoot && resolve(idWithoutExtension).startsWith(preserveModulesRoot) ? idWithoutExtension.slice(preserveModulesRoot.length).replace(/^[/\\\\]/, '') : relative(this.inputBase, idWithoutExtension);\n    } else {\n      return `_virtual/${basename(idWithoutExtension)}`;\n    }\n  }\n  getReexportSpecifiers() {\n    const {\n      externalLiveBindings,\n      interop\n    } = this.outputOptions;\n    const reexportSpecifiers = new Map();\n    for (let exportName of this.getExportNames()) {\n      let dependency;\n      let imported;\n      let needsLiveBinding = false;\n      if (exportName[0] === '*') {\n        const id = exportName.slice(1);\n        if (interop(id) === 'defaultOnly') {\n          this.inputOptions.onwarn(errorUnexpectedNamespaceReexport(id));\n        }\n        needsLiveBinding = externalLiveBindings;\n        dependency = this.externalChunkByModule.get(this.modulesById.get(id));\n        imported = exportName = '*';\n      } else {\n        const variable = this.exportsByName.get(exportName);\n        if (variable instanceof SyntheticNamedExportVariable) continue;\n        const module = variable.module;\n        if (module instanceof Module) {\n          dependency = this.chunkByModule.get(module);\n          if (dependency === this) continue;\n          imported = dependency.getVariableExportName(variable);\n          needsLiveBinding = variable.isReassigned;\n        } else {\n          dependency = this.externalChunkByModule.get(module);\n          imported = variable.name;\n          if (imported !== 'default' && imported !== '*' && interop(module.id) === 'defaultOnly') {\n            return error(errorUnexpectedNamedImport(module.id, imported, true));\n          }\n          needsLiveBinding = externalLiveBindings && (imported !== 'default' || isDefaultAProperty(interop(module.id), true));\n        }\n      }\n      getOrCreate(reexportSpecifiers, dependency, getNewArray).push({\n        imported,\n        needsLiveBinding,\n        reexported: exportName\n      });\n    }\n    return reexportSpecifiers;\n  }\n  getReferencedFiles() {\n    const referencedFiles = new Set();\n    for (const module of this.orderedModules) {\n      for (const meta of module.importMetas) {\n        const fileName = meta.getReferencedFileName(this.pluginDriver);\n        if (fileName) {\n          referencedFiles.add(fileName);\n        }\n      }\n    }\n    return [...referencedFiles];\n  }\n  getRenderedDependencies() {\n    if (this.renderedDependencies) {\n      return this.renderedDependencies;\n    }\n    const importSpecifiers = this.getImportSpecifiers();\n    const reexportSpecifiers = this.getReexportSpecifiers();\n    const renderedDependencies = new Map();\n    const fileName = this.getFileName();\n    for (const dep of this.dependencies) {\n      const imports = importSpecifiers.get(dep) || null;\n      const reexports = reexportSpecifiers.get(dep) || null;\n      const namedExportsMode = dep instanceof ExternalChunk || dep.exportMode !== 'default';\n      const importPath = dep.getImportPath(fileName);\n      renderedDependencies.set(dep, {\n        assertions: dep instanceof ExternalChunk ? dep.getImportAssertions(this.snippets) : null,\n        defaultVariableName: dep.defaultVariableName,\n        globalName: dep instanceof ExternalChunk && (this.outputOptions.format === 'umd' || this.outputOptions.format === 'iife') && getGlobalName(dep, this.outputOptions.globals, (imports || reexports) !== null, this.inputOptions.onwarn),\n        importPath,\n        imports,\n        isChunk: dep instanceof Chunk,\n        name: dep.variableName,\n        namedExportsMode,\n        namespaceVariableName: dep.namespaceVariableName,\n        reexports\n      });\n    }\n    return this.renderedDependencies = renderedDependencies;\n  }\n  inlineChunkDependencies(chunk) {\n    for (const dep of chunk.dependencies) {\n      if (this.dependencies.has(dep)) continue;\n      this.dependencies.add(dep);\n      if (dep instanceof Chunk) {\n        this.inlineChunkDependencies(dep);\n      }\n    }\n  }\n  // This method changes properties on the AST before rendering and must not be async\n  renderModules(fileName) {\n    const {\n      accessedGlobalsByScope,\n      dependencies,\n      exportNamesByVariable,\n      includedNamespaces,\n      inputOptions: {\n        onwarn\n      },\n      isEmpty,\n      orderedModules,\n      outputOptions,\n      pluginDriver,\n      renderedModules,\n      snippets\n    } = this;\n    const {\n      compact,\n      dynamicImportFunction,\n      format,\n      freeze,\n      namespaceToStringTag,\n      preserveModules\n    } = outputOptions;\n    const {\n      _,\n      cnst,\n      n\n    } = snippets;\n    this.setDynamicImportResolutions(fileName);\n    this.setImportMetaResolutions(fileName);\n    this.setIdentifierRenderResolutions();\n    const magicString = new Bundle$1({\n      separator: `${n}${n}`\n    });\n    const indent = getIndentString(orderedModules, outputOptions);\n    const usedModules = [];\n    let hoistedSource = '';\n    const accessedGlobals = new Set();\n    const renderedModuleSources = new Map();\n    const renderOptions = {\n      dynamicImportFunction,\n      exportNamesByVariable,\n      format,\n      freeze,\n      indent,\n      namespaceToStringTag,\n      pluginDriver,\n      snippets,\n      useOriginalName: null\n    };\n    let usesTopLevelAwait = false;\n    for (const module of orderedModules) {\n      let renderedLength = 0;\n      let source;\n      if (module.isIncluded() || includedNamespaces.has(module)) {\n        const rendered = module.render(renderOptions);\n        ({\n          source\n        } = rendered);\n        usesTopLevelAwait || (usesTopLevelAwait = rendered.usesTopLevelAwait);\n        renderedLength = source.length();\n        if (renderedLength) {\n          if (compact && source.lastLine().includes('//')) source.append('\\n');\n          renderedModuleSources.set(module, source);\n          magicString.addSource(source);\n          usedModules.push(module);\n        }\n        const namespace = module.namespace;\n        if (includedNamespaces.has(module) && !preserveModules) {\n          const rendered = namespace.renderBlock(renderOptions);\n          if (namespace.renderFirst()) hoistedSource += n + rendered;else magicString.addSource(new MagicString(rendered));\n        }\n        const accessedGlobalVariables = accessedGlobalsByScope.get(module.scope);\n        if (accessedGlobalVariables) {\n          for (const name of accessedGlobalVariables) {\n            accessedGlobals.add(name);\n          }\n        }\n      }\n      const {\n        renderedExports,\n        removedExports\n      } = module.getRenderedExports();\n      renderedModules[module.id] = {\n        get code() {\n          return source?.toString() ?? null;\n        },\n        originalLength: module.originalCode.length,\n        removedExports,\n        renderedExports,\n        renderedLength\n      };\n    }\n    if (hoistedSource) magicString.prepend(hoistedSource + n + n);\n    // eslint-disable-next-line unicorn/consistent-destructuring\n    if (this.needsExportsShim) {\n      magicString.prepend(`${n}${cnst} ${MISSING_EXPORT_SHIM_VARIABLE}${_}=${_}void 0;${n}${n}`);\n    }\n    const renderedSource = compact ? magicString : magicString.trim();\n    if (isEmpty && this.getExportNames().length === 0 && dependencies.size === 0) {\n      onwarn(errorEmptyChunk(this.getChunkName()));\n    }\n    return {\n      accessedGlobals,\n      indent,\n      magicString,\n      renderedSource,\n      usedModules,\n      usesTopLevelAwait\n    };\n  }\n  setDynamicImportResolutions(fileName) {\n    const {\n      accessedGlobalsByScope,\n      outputOptions,\n      pluginDriver,\n      snippets\n    } = this;\n    for (const resolvedDynamicImport of this.getIncludedDynamicImports()) {\n      if (resolvedDynamicImport.chunk) {\n        const {\n          chunk,\n          facadeChunk,\n          node,\n          resolution\n        } = resolvedDynamicImport;\n        if (chunk === this) {\n          node.setInternalResolution(resolution.namespace);\n        } else {\n          node.setExternalResolution((facadeChunk || chunk).exportMode, resolution, outputOptions, snippets, pluginDriver, accessedGlobalsByScope, `'${(facadeChunk || chunk).getImportPath(fileName)}'`, !facadeChunk?.strictFacade && chunk.exportNamesByVariable.get(resolution.namespace)[0], null);\n        }\n      } else {\n        const {\n          node,\n          resolution\n        } = resolvedDynamicImport;\n        const [resolutionString, assertions] = this.getDynamicImportStringAndAssertions(resolution, fileName);\n        node.setExternalResolution('external', resolution, outputOptions, snippets, pluginDriver, accessedGlobalsByScope, resolutionString, false, assertions);\n      }\n    }\n  }\n  setIdentifierRenderResolutions() {\n    const {\n      format,\n      interop,\n      namespaceToStringTag,\n      preserveModules,\n      externalLiveBindings\n    } = this.outputOptions;\n    const syntheticExports = new Set();\n    for (const exportName of this.getExportNames()) {\n      const exportVariable = this.exportsByName.get(exportName);\n      if (format !== 'es' && format !== 'system' && exportVariable.isReassigned && !exportVariable.isId) {\n        exportVariable.setRenderNames('exports', exportName);\n      } else if (exportVariable instanceof SyntheticNamedExportVariable) {\n        syntheticExports.add(exportVariable);\n      } else {\n        exportVariable.setRenderNames(null, null);\n      }\n    }\n    for (const module of this.orderedModules) {\n      if (module.needsExportShim) {\n        this.needsExportsShim = true;\n        break;\n      }\n    }\n    const usedNames = new Set(['Object', 'Promise']);\n    if (this.needsExportsShim) {\n      usedNames.add(MISSING_EXPORT_SHIM_VARIABLE);\n    }\n    if (namespaceToStringTag) {\n      usedNames.add('Symbol');\n    }\n    switch (format) {\n      case 'system':\n        {\n          usedNames.add('module').add('exports');\n          break;\n        }\n      case 'es':\n        {\n          break;\n        }\n      case 'cjs':\n        {\n          usedNames.add('module').add('require').add('__filename').add('__dirname');\n        }\n      // fallthrough\n      default:\n        {\n          usedNames.add('exports');\n          for (const helper of HELPER_NAMES) {\n            usedNames.add(helper);\n          }\n        }\n    }\n    deconflictChunk(this.orderedModules, this.getDependenciesToBeDeconflicted(format !== 'es' && format !== 'system', format === 'amd' || format === 'umd' || format === 'iife', interop), this.imports, usedNames, format, interop, preserveModules, externalLiveBindings, this.chunkByModule, this.externalChunkByModule, syntheticExports, this.exportNamesByVariable, this.accessedGlobalsByScope, this.includedNamespaces);\n  }\n  setImportMetaResolutions(fileName) {\n    const {\n      accessedGlobalsByScope,\n      includedNamespaces,\n      orderedModules,\n      outputOptions: {\n        format,\n        preserveModules\n      }\n    } = this;\n    for (const module of orderedModules) {\n      for (const importMeta of module.importMetas) {\n        importMeta.setResolution(format, accessedGlobalsByScope, fileName);\n      }\n      if (includedNamespaces.has(module) && !preserveModules) {\n        module.namespace.prepare(accessedGlobalsByScope);\n      }\n    }\n  }\n  setUpChunkImportsAndExportsForModule(module) {\n    const moduleImports = new Set(module.includedImports);\n    // when we are not preserving modules, we need to make all namespace variables available for\n    // rendering the namespace object\n    if (!this.outputOptions.preserveModules && this.includedNamespaces.has(module)) {\n      const memberVariables = module.namespace.getMemberVariables();\n      for (const variable of Object.values(memberVariables)) {\n        moduleImports.add(variable);\n      }\n    }\n    for (let variable of moduleImports) {\n      if (variable instanceof ExportDefaultVariable) {\n        variable = variable.getOriginalVariable();\n      }\n      if (variable instanceof SyntheticNamedExportVariable) {\n        variable = variable.getBaseVariable();\n      }\n      const chunk = this.chunkByModule.get(variable.module);\n      if (chunk !== this) {\n        this.imports.add(variable);\n        if (variable.module instanceof Module) {\n          this.checkCircularDependencyImport(variable, module);\n          // When preserving modules, we do not create namespace objects but directly\n          // use the actual namespaces, which would be broken by this logic.\n          if (!(variable instanceof NamespaceVariable && this.outputOptions.preserveModules)) {\n            chunk.exports.add(variable);\n          }\n        }\n      }\n    }\n    if (this.includedNamespaces.has(module) || module.info.isEntry && module.preserveSignature !== false || module.includedDynamicImporters.some(importer => this.chunkByModule.get(importer) !== this)) {\n      this.ensureReexportsAreAvailableForModule(module);\n    }\n    for (const {\n      node,\n      resolution\n    } of module.dynamicImports) {\n      if (node.included && resolution instanceof Module && this.chunkByModule.get(resolution) === this && !this.includedNamespaces.has(resolution)) {\n        this.includedNamespaces.add(resolution);\n        this.ensureReexportsAreAvailableForModule(resolution);\n      }\n    }\n  }\n}\nfunction getChunkNameFromModule(module) {\n  return getPredefinedChunkNameFromModule(module) ?? getAliasName(module.id);\n}\nfunction getPredefinedChunkNameFromModule(module) {\n  return module.chunkNames.find(_ref90 => {\n    let {\n      isUserDefined\n    } = _ref90;\n    return isUserDefined;\n  })?.name ?? module.chunkNames[0]?.name;\n}\nfunction getImportedBindingsPerDependency(renderedDependencies, resolveFileName) {\n  const importedBindingsPerDependency = {};\n  for (const [dependency, declaration] of renderedDependencies) {\n    const specifiers = new Set();\n    if (declaration.imports) {\n      for (const {\n        imported\n      } of declaration.imports) {\n        specifiers.add(imported);\n      }\n    }\n    if (declaration.reexports) {\n      for (const {\n        imported\n      } of declaration.reexports) {\n        specifiers.add(imported);\n      }\n    }\n    importedBindingsPerDependency[resolveFileName(dependency)] = [...specifiers];\n  }\n  return importedBindingsPerDependency;\n}\nconst QUERY_HASH_REGEX = /[#?]/;\nconst resolveFileName = dependency => dependency.getFileName();\n\n/**\n * Concatenate a number of iterables to a new iterable without fully evaluating\n * their iterators. Useful when e.g. working with large sets or lists and when\n * there is a chance that the iterators will not be fully exhausted.\n */\nfunction* concatLazy(iterables) {\n  for (const iterable of iterables) {\n    yield* iterable;\n  }\n}\n\n/**\n * At its core, the algorithm first starts from each static or dynamic entry\n * point and then assigns that entry point to all modules than can be reached\n * via static imports. We call this the *dependent entry points* of that\n * module.\n *\n * Then we group all modules with the same dependent entry points into chunks\n * as those modules will always be loaded together.\n *\n * One non-trivial optimization we can apply is that dynamic entries are\n * different from static entries in so far as when a dynamic import occurs,\n * some\n * modules are already in memory. If some of these modules are also\n * dependencies\n * of the dynamic entry, then it does not make sense to create a separate chunk\n * for them. Instead, the dynamic import target can load them from the\n * importing\n * chunk.\n *\n * With regard to chunking, if B is implicitly loaded after A, then this can be\n * handled the same way as if there was a dynamic import A => B.\n *\n * Example:\n * Assume A -> B (A imports B), A => C (A dynamically imports C) and C -> B.\n * Then the initial algorithm would assign A into the A chunk, C into the C\n * chunk and B into the AC chunk, i.e. the chunk with the dependent entry\n * points\n * A and C.\n * However we know that C can only be loaded from A, so A and its dependency B\n * must already be in memory when C is loaded. So it is enough to create only\n * two chunks A containing [AB] and C containing [C].\n *\n * So we do not assign the dynamic entry C as dependent entry point to modules\n * that are already loaded.\n *\n * In a more complex example, let us assume that we have entry points X and Y.\n * Further, let us assume\n * X -> A, X -> B, X -> C,\n * Y -> A, Y -> B,\n * A => D,\n * D -> B, D -> C\n * So without dynamic import optimization, the dependent entry points are\n * A: XY, B: DXY, C: DX, D: D, X: X, Y: Y,\n * so we would for now create six chunks.\n *\n * Now D is loaded only after A is loaded. But A is loaded if either X is\n * loaded\n * or Y is loaded. So the modules that are already in memory when D is loaded\n * are the intersection of all modules that X depends on with all modules that\n * Y\n * depends on, which in this case are the modules A and B.\n * We could also say they are all modules that have both X and Y as dependent\n * entry points.\n *\n * So we can remove D as dependent entry point from A and B, which means they\n * both now have only XY as dependent entry points and can be merged into the\n * same chunk.\n *\n * Now let us extend this to the most general case where we have several\n * dynamic\n * importers for one dynamic entry point.\n *\n * In the most general form, it works like this:\n * For each dynamic entry point, we have a number of dynamic importers, which\n * are the modules importing it. Using the previous ideas, we can determine\n * the modules already in memory for each dynamic importer by looking for all\n * modules that have all the dependent entry points of the dynamic importer as\n * dependent entry points.\n * So the modules that are guaranteed to be in memory when the dynamic entry\n * point is loaded are the intersection of the modules already in memory for\n * each dynamic importer.\n *\n * Assuming that A => D and B => D and A has dependent entry points XY and B\n * has\n * dependent entry points YZ, then the modules guaranteed to be in memory are\n * all modules that have at least XYZ as dependent entry points.\n * We call XYZ the *dynamically dependent entry points* of D.\n *\n * Now there is one last case to consider: If one of the dynamically dependent\n * entries is itself a dynamic entry, then any module is in memory that either\n * is a dependency of that dynamic entry or again has the dynamic dependent\n * entries of that dynamic entry as dependent entry points.\n *\n * A naive algorithm for this proved to be costly as it contained an O(n^3)\n * complexity with regard to dynamic entries that blew up for very large\n * projects.\n *\n * If we have an efficient way to do Set operations, an alternative approach\n * would be to instead collect already loaded modules per dynamic entry. And as\n * all chunks from the initial grouping would behave the same, we can instead\n * collect already loaded chunks for a performance improvement.\n *\n * To do that efficiently, need\n * - a Map of dynamic imports per dynamic entry, which contains all dynamic\n *   imports that can be triggered by a dynamic entry\n * - a Map of static dependencies per entry\n * - a Map of already loaded chunks per entry that we initially populate with\n *   empty Sets for static entries and Sets containing all entries for dynamic\n *   entries\n *\n * For efficient operations, we assign each entry a numerical index and\n * represent Sets of Chunks as BigInt values where each chunk corresponds to a\n * bit index. Then thw last two maps can be represented as arrays of BigInt\n * values.\n *\n * Then we iterate through each dynamic entry. We set the already loaded modules\n * to the intersection of the previously already loaded modules with the union\n * of the already loaded modules of that chunk with its static dependencies.\n *\n * If the already loaded modules changed, then we use the Map of dynamic imports\n * per dynamic entry to marks all dynamic entry dependencies as \"dirty\" and put\n * them back into the iteration. As an additional optimization, we note for\n * each dynamic entry which dynamic dependent entries have changed and only\n * intersect those entries again on subsequent interations.\n *\n * Then we remove the dynamic entries from the list of dependent entries for\n * those chunks that are already loaded for that dynamic entry and create\n * another round of chunks.\n */\nfunction getChunkAssignments(entries, manualChunkAliasByEntry, minChunkSize) {\n  const {\n    chunkDefinitions,\n    modulesInManualChunks\n  } = getChunkDefinitionsFromManualChunks(manualChunkAliasByEntry);\n  const {\n    allEntries,\n    dependentEntriesByModule,\n    dynamicallyDependentEntriesByDynamicEntry,\n    dynamicImportsByEntry\n  } = analyzeModuleGraph(entries);\n  // Each chunk is identified by its position in this array\n  const initialChunks = Object.values(getChunksBySignature(getModulesWithDependentEntries(dependentEntriesByModule, modulesInManualChunks)));\n  // This mutates initialChunks but also clears\n  // dynamicallyDependentEntriesByDynamicEntry as side effect\n  removeUnnecessaryDependentEntries(initialChunks, dynamicallyDependentEntriesByDynamicEntry, dynamicImportsByEntry, allEntries);\n  chunkDefinitions.push(...createChunks(allEntries, getChunksBySignature(initialChunks), minChunkSize));\n  return chunkDefinitions;\n}\nfunction getChunkDefinitionsFromManualChunks(manualChunkAliasByEntry) {\n  const chunkDefinitions = [];\n  const modulesInManualChunks = new Set(manualChunkAliasByEntry.keys());\n  const manualChunkModulesByAlias = Object.create(null);\n  for (const [entry, alias] of manualChunkAliasByEntry) {\n    addStaticDependenciesToManualChunk(entry, manualChunkModulesByAlias[alias] || (manualChunkModulesByAlias[alias] = []), modulesInManualChunks);\n  }\n  for (const [alias, modules] of Object.entries(manualChunkModulesByAlias)) {\n    chunkDefinitions.push({\n      alias,\n      modules\n    });\n  }\n  return {\n    chunkDefinitions,\n    modulesInManualChunks\n  };\n}\nfunction addStaticDependenciesToManualChunk(entry, manualChunkModules, modulesInManualChunks) {\n  const modulesToHandle = new Set([entry]);\n  for (const module of modulesToHandle) {\n    modulesInManualChunks.add(module);\n    manualChunkModules.push(module);\n    for (const dependency of module.dependencies) {\n      if (!(dependency instanceof ExternalModule || modulesInManualChunks.has(dependency))) {\n        modulesToHandle.add(dependency);\n      }\n    }\n  }\n}\nfunction analyzeModuleGraph(entries) {\n  const dynamicEntryModules = new Set();\n  const dependentEntriesByModule = new Map();\n  const dynamicImportModulesByEntry = [];\n  const allEntriesSet = new Set(entries);\n  let entryIndex = 0;\n  for (const currentEntry of allEntriesSet) {\n    const dynamicImportsForCurrentEntry = new Set();\n    dynamicImportModulesByEntry.push(dynamicImportsForCurrentEntry);\n    const modulesToHandle = new Set([currentEntry]);\n    for (const module of modulesToHandle) {\n      getOrCreate(dependentEntriesByModule, module, getNewSet).add(entryIndex);\n      for (const dependency of module.getDependenciesToBeIncluded()) {\n        if (!(dependency instanceof ExternalModule)) {\n          modulesToHandle.add(dependency);\n        }\n      }\n      for (const {\n        resolution\n      } of module.dynamicImports) {\n        if (resolution instanceof Module && resolution.includedDynamicImporters.length > 0 && !allEntriesSet.has(resolution)) {\n          dynamicEntryModules.add(resolution);\n          allEntriesSet.add(resolution);\n          dynamicImportsForCurrentEntry.add(resolution);\n        }\n      }\n      for (const dependency of module.implicitlyLoadedBefore) {\n        if (!allEntriesSet.has(dependency)) {\n          dynamicEntryModules.add(dependency);\n          allEntriesSet.add(dependency);\n        }\n      }\n    }\n    entryIndex++;\n  }\n  const allEntries = [...allEntriesSet];\n  const {\n    dynamicEntries,\n    dynamicImportsByEntry\n  } = getDynamicEntries(allEntries, dynamicEntryModules, dynamicImportModulesByEntry);\n  return {\n    allEntries,\n    dependentEntriesByModule,\n    dynamicallyDependentEntriesByDynamicEntry: getDynamicallyDependentEntriesByDynamicEntry(dependentEntriesByModule, dynamicEntries, allEntries),\n    dynamicImportsByEntry\n  };\n}\nfunction getDynamicEntries(allEntries, dynamicEntryModules, dynamicImportModulesByEntry) {\n  const entryIndexByModule = new Map();\n  const dynamicEntries = new Set();\n  for (const [entryIndex, entry] of allEntries.entries()) {\n    entryIndexByModule.set(entry, entryIndex);\n    if (dynamicEntryModules.has(entry)) {\n      dynamicEntries.add(entryIndex);\n    }\n  }\n  const dynamicImportsByEntry = [];\n  for (const dynamicImportModules of dynamicImportModulesByEntry) {\n    const dynamicImports = new Set();\n    for (const dynamicEntry of dynamicImportModules) {\n      dynamicImports.add(entryIndexByModule.get(dynamicEntry));\n    }\n    dynamicImportsByEntry.push(dynamicImports);\n  }\n  return {\n    dynamicEntries,\n    dynamicImportsByEntry\n  };\n}\nfunction getDynamicallyDependentEntriesByDynamicEntry(dependentEntriesByModule, dynamicEntries, allEntries) {\n  const dynamicallyDependentEntriesByDynamicEntry = new Map();\n  for (const dynamicEntryIndex of dynamicEntries) {\n    const dynamicallyDependentEntries = getOrCreate(dynamicallyDependentEntriesByDynamicEntry, dynamicEntryIndex, getNewSet);\n    const dynamicEntry = allEntries[dynamicEntryIndex];\n    for (const importer of concatLazy([dynamicEntry.includedDynamicImporters, dynamicEntry.implicitlyLoadedAfter])) {\n      for (const entry of dependentEntriesByModule.get(importer)) {\n        dynamicallyDependentEntries.add(entry);\n      }\n    }\n  }\n  return dynamicallyDependentEntriesByDynamicEntry;\n}\nfunction getChunksBySignature(modulesWithDependentEntries) {\n  var _a;\n  const chunkModules = Object.create(null);\n  for (const {\n    dependentEntries,\n    modules\n  } of modulesWithDependentEntries) {\n    let chunkSignature = 0n;\n    for (const entryIndex of dependentEntries) {\n      chunkSignature |= 1n << BigInt(entryIndex);\n    }\n    (chunkModules[_a = String(chunkSignature)] || (chunkModules[_a] = {\n      dependentEntries: new Set(dependentEntries),\n      modules: []\n    })).modules.push(...modules);\n  }\n  return chunkModules;\n}\nfunction* getModulesWithDependentEntries(dependentEntriesByModule, modulesInManualChunks) {\n  for (const [module, dependentEntries] of dependentEntriesByModule) {\n    if (!modulesInManualChunks.has(module)) {\n      yield {\n        dependentEntries,\n        modules: [module]\n      };\n    }\n  }\n}\n/**\n * This removes all unnecessary dynamic entries from the dependenEntries in its\n * first argument. It will also consume its second argument, so if\n * dynamicallyDependentEntriesByDynamicEntry is ever needed after this, we\n * should make a copy.\n */\nfunction removeUnnecessaryDependentEntries(chunks, dynamicallyDependentEntriesByDynamicEntry, dynamicImportsByEntry, allEntries) {\n  // The indices correspond to the indices in allEntries. The chunks correspond\n  // to bits in the bigint values where chunk 0 is the lowest bit.\n  const staticDependenciesPerEntry = allEntries.map(() => 0n);\n  const alreadyLoadedChunksPerEntry = allEntries.map((_entry, entryIndex) => dynamicallyDependentEntriesByDynamicEntry.has(entryIndex) ? -1n : 0n);\n  // This toggles the bits for each chunk that is a dependency of an entry\n  let chunkMask = 1n;\n  for (const {\n    dependentEntries\n  } of chunks) {\n    for (const entryIndex of dependentEntries) {\n      staticDependenciesPerEntry[entryIndex] |= chunkMask;\n    }\n    chunkMask <<= 1n;\n  }\n  // Warning: This will consume dynamicallyDependentEntriesByDynamicEntry.\n  // If we no longer want this, we should make a copy here.\n  const updatedDynamicallyDependentEntriesByDynamicEntry = dynamicallyDependentEntriesByDynamicEntry;\n  for (const [dynamicEntryIndex, updatedDynamicallyDependentEntries] of updatedDynamicallyDependentEntriesByDynamicEntry) {\n    updatedDynamicallyDependentEntriesByDynamicEntry.delete(dynamicEntryIndex);\n    const previousLoadedModules = alreadyLoadedChunksPerEntry[dynamicEntryIndex];\n    let newLoadedModules = previousLoadedModules;\n    for (const entryIndex of updatedDynamicallyDependentEntries) {\n      newLoadedModules &= staticDependenciesPerEntry[entryIndex] | alreadyLoadedChunksPerEntry[entryIndex];\n    }\n    if (newLoadedModules !== previousLoadedModules) {\n      alreadyLoadedChunksPerEntry[dynamicEntryIndex] = newLoadedModules;\n      for (const dynamicImport of dynamicImportsByEntry[dynamicEntryIndex]) {\n        getOrCreate(updatedDynamicallyDependentEntriesByDynamicEntry, dynamicImport, getNewSet).add(dynamicEntryIndex);\n      }\n    }\n  }\n  // Remove entries from dependent entries if a chunk is already loaded without\n  // that entry.\n  chunkMask = 1n;\n  for (const {\n    dependentEntries\n  } of chunks) {\n    for (const entryIndex of dependentEntries) {\n      if ((alreadyLoadedChunksPerEntry[entryIndex] & chunkMask) === chunkMask) {\n        dependentEntries.delete(entryIndex);\n      }\n    }\n    chunkMask <<= 1n;\n  }\n}\nfunction createChunks(allEntries, chunkModulesBySignature, minChunkSize) {\n  return minChunkSize === 0 ? Object.values(chunkModulesBySignature).map(_ref91 => {\n    let {\n      modules\n    } = _ref91;\n    return {\n      alias: null,\n      modules\n    };\n  }) : getOptimizedChunks(chunkModulesBySignature, allEntries.length, minChunkSize).map(_ref92 => {\n    let {\n      modules\n    } = _ref92;\n    return {\n      alias: null,\n      modules\n    };\n  });\n}\n/**\n * This function tries to get rid of small chunks by merging them with other\n * chunks.\n *\n * We can only merge chunks safely if after the merge, loading any entry point\n * in any allowed order will not trigger side effects that should not have been\n * triggered. While side effects are usually things like global function calls,\n * global variable mutations or potentially thrown errors, details do not\n * matter here, and we just discern chunks without side effects (pure chunks)\n * from other chunks.\n *\n * As a first step, we assign each pre-generated chunk with side effects a\n * label. I.e. we have side effect \"A\" if the non-pure chunk \"A\" is loaded.\n *\n * Now to determine the side effects of loading a chunk, one also has to take\n * the side effects of its dependencies into account. So if A depends on B\n * (A -> B) and both have side effects, loading A triggers effects AB.\n *\n * Now from the previous step we know that each chunk is uniquely determine by\n * the entry points that depend on it and cause it to load, which we will call\n * its dependent entry points.\n *\n * E.g. if X -> A and Y -> A, then the dependent entry points of A are XY.\n * Starting from that idea, we can determine a set of chunks—and thus a set\n * of side effects—that must have been triggered if a certain chunk has been\n * loaded. Basically, it is the intersection of all chunks loaded by the\n * dependent entry points of a given chunk. We call the corresponding side\n * effects the correlated side effects of that chunk.\n *\n * Example:\n * X -> ABC, Y -> ADE, A-> F, B -> D\n * Then taking dependencies into account, X -> ABCDF, Y -> ADEF\n * The intersection is ADF. So we know that when A is loaded, D and F must also\n * be in memory even though neither D nor A is a dependency of the other.\n * If all have side effects, we call ADF the correlated side effects of A. The\n * correlated side effects need to remain constant when merging chunks.\n *\n * In contrast, we have the dependency side effects of A, which represents\n * the side effects we trigger if we directly load A. In this example, the\n * dependency side effects are AF.\n * For entry chunks, dependency and correlated side effects are the same.\n *\n * With these concepts, merging chunks is allowed if the correlated side effects\n * of each entry do not change. Thus, we are allowed to merge two chunks if\n * a) the dependency side effects of each chunk are a subset of the correlated\n *    side effects of the other chunk, so no additional side effects are\n *    triggered for any entry, or\n * b) The signature of chunk A is a subset of the signature of chunk B while the\n *    dependency side effects of A are a subset of the correlated side effects\n *    of B. Because in that scenario, whenever A is loaded, B is loaded as well.\n *    But there are cases when B is loaded where A is not loaded. So if we merge\n *    the chunks, all dependency side effects of A will be added to the\n *    correlated side effects of B, and as the latter is not allowed to change,\n *    the former need to be a subset of the latter.\n *\n * Another consideration when merging small chunks into other chunks is to avoid\n * that too much additional code is loaded. This is achieved when the dependent\n * entries of the small chunk are a subset of the dependent entries of the other\n * chunk. Because then when the small chunk is loaded, the other chunk was\n * loaded/in memory anyway, so at most when the other chunk is loaded, the\n * additional size of the small chunk is loaded unnecessarily.\n *\n * So the algorithm performs merges in two passes:\n * 1. First we try to merge small chunks A only into other chunks B if the\n *    dependent entries of A are a subset of the dependent entries of B and the\n *    dependency side effects of A are a subset of the correlated side effects\n *    of B.\n * 2. Only then for all remaining small chunks, we look for arbitrary merges\n *    following the above rules (a) and (b), starting with the smallest chunks\n *    to look for possible merge targets.\n */\n// TODO instead of picking the \"closest\" chunk, we could actually use a\n//  technique similar to what we do for side effects to compare the size of the\n//  static dependencies that are not part of the correlated dependencies\nfunction getOptimizedChunks(chunkModulesBySignature, numberOfEntries, minChunkSize) {\n  timeStart('optimize chunks', 3);\n  const chunkPartition = getPartitionedChunks(chunkModulesBySignature, numberOfEntries, minChunkSize);\n  console.log('Before eliminating small chunks, there were\\n', Object.keys(chunkModulesBySignature).length, 'chunks, of which\\n', chunkPartition.small.size, 'were below minChunkSize.');\n  if (chunkPartition.small.size > 0) {\n    mergeChunks(chunkPartition, minChunkSize);\n  }\n  console.log('After merging chunks,\\n', chunkPartition.small.size + chunkPartition.big.size, 'chunks remain, of which\\n', chunkPartition.small.size, 'are below minChunkSize.');\n  timeEnd('optimize chunks', 3);\n  return [...chunkPartition.small, ...chunkPartition.big];\n}\nfunction getPartitionedChunks(chunkModulesBySignature, numberOfEntries, minChunkSize) {\n  const smallChunks = [];\n  const bigChunks = [];\n  const chunkByModule = new Map();\n  const sideEffectsByEntry = [];\n  for (let index = 0; index < numberOfEntries; index++) {\n    sideEffectsByEntry.push(new Set());\n  }\n  for (const [signature, {\n    dependentEntries,\n    modules\n  }] of Object.entries(chunkModulesBySignature)) {\n    const chunkDescription = {\n      correlatedSideEffects: new Set(),\n      dependencies: new Set(),\n      dependentChunks: new Set(),\n      dependentEntries,\n      modules,\n      pure: true,\n      sideEffects: new Set(),\n      size: 0\n    };\n    let size = 0;\n    let pure = true;\n    for (const module of modules) {\n      chunkByModule.set(module, chunkDescription);\n      pure && (pure = !module.hasEffects());\n      // Unfortunately, we cannot take tree-shaking into account here because\n      // rendering did not happen yet\n      size += module.originalCode.length;\n    }\n    chunkDescription.pure = pure;\n    chunkDescription.size = size;\n    if (!pure) {\n      for (const entryIndex of dependentEntries) {\n        sideEffectsByEntry[entryIndex].add(signature);\n      }\n      // In the beginning, each chunk is only its own side effect. After\n      // merging, additional side effects can accumulate.\n      chunkDescription.sideEffects.add(signature);\n    }\n    (size < minChunkSize ? smallChunks : bigChunks).push(chunkDescription);\n  }\n  sortChunksAndAddDependenciesAndEffects([bigChunks, smallChunks], chunkByModule, sideEffectsByEntry);\n  return {\n    big: new Set(bigChunks),\n    small: new Set(smallChunks)\n  };\n}\nfunction sortChunksAndAddDependenciesAndEffects(chunkLists, chunkByModule, sideEffectsByEntry) {\n  for (const chunks of chunkLists) {\n    chunks.sort(compareChunkSize);\n    for (const chunk of chunks) {\n      const {\n        dependencies,\n        modules,\n        correlatedSideEffects,\n        dependentEntries\n      } = chunk;\n      for (const module of modules) {\n        for (const dependency of module.getDependenciesToBeIncluded()) {\n          const dependencyChunk = chunkByModule.get(dependency);\n          if (dependencyChunk && dependencyChunk !== chunk) {\n            dependencies.add(dependencyChunk);\n            dependencyChunk.dependentChunks.add(chunk);\n          }\n        }\n      }\n      let firstEntry = true;\n      // Correlated side effects is the intersection of all entry side effects\n      for (const entryIndex of dependentEntries) {\n        const entryEffects = sideEffectsByEntry[entryIndex];\n        if (firstEntry) {\n          for (const sideEffect of entryEffects) {\n            correlatedSideEffects.add(sideEffect);\n          }\n          firstEntry = false;\n        } else {\n          for (const sideEffect of correlatedSideEffects) {\n            if (!entryEffects.has(sideEffect)) {\n              correlatedSideEffects.delete(sideEffect);\n            }\n          }\n        }\n      }\n    }\n  }\n}\nfunction compareChunkSize(_ref93, _ref94) {\n  let {\n    size: sizeA\n  } = _ref93;\n  let {\n    size: sizeB\n  } = _ref94;\n  return sizeA - sizeB;\n}\nfunction mergeChunks(chunkPartition, minChunkSize) {\n  for (const allowArbitraryMerges of [false, true]) {\n    for (const mergedChunk of chunkPartition.small) {\n      let closestChunk = null;\n      let closestChunkDistance = Infinity;\n      const {\n        modules,\n        pure,\n        size\n      } = mergedChunk;\n      for (const targetChunk of concatLazy([chunkPartition.small, chunkPartition.big])) {\n        if (mergedChunk === targetChunk) continue;\n        // If both chunks are small, we also allow for unrelated merges during\n        // the first pass\n        const onlySubsetMerge = !allowArbitraryMerges && targetChunk.size >= minChunkSize;\n        const distance = getChunkEntryDistance(mergedChunk, targetChunk, onlySubsetMerge);\n        if (distance < closestChunkDistance && isValidMerge(mergedChunk, targetChunk, onlySubsetMerge)) {\n          closestChunk = targetChunk;\n          closestChunkDistance = distance;\n        }\n      }\n      if (closestChunk) {\n        chunkPartition.small.delete(mergedChunk);\n        getChunksInPartition(closestChunk, minChunkSize, chunkPartition).delete(closestChunk);\n        closestChunk.modules.push(...modules);\n        closestChunk.size += size;\n        closestChunk.pure && (closestChunk.pure = pure);\n        const {\n          correlatedSideEffects,\n          dependencies,\n          dependentChunks,\n          dependentEntries,\n          sideEffects\n        } = closestChunk;\n        for (const sideEffect of correlatedSideEffects) {\n          if (!mergedChunk.correlatedSideEffects.has(sideEffect)) {\n            correlatedSideEffects.delete(sideEffect);\n          }\n        }\n        for (const entry of mergedChunk.dependentEntries) {\n          dependentEntries.add(entry);\n        }\n        for (const sideEffect of mergedChunk.sideEffects) {\n          sideEffects.add(sideEffect);\n        }\n        for (const dependency of mergedChunk.dependencies) {\n          dependencies.add(dependency);\n          dependency.dependentChunks.delete(mergedChunk);\n          dependency.dependentChunks.add(closestChunk);\n        }\n        for (const dependentChunk of mergedChunk.dependentChunks) {\n          dependentChunks.add(dependentChunk);\n          dependentChunk.dependencies.delete(mergedChunk);\n          dependentChunk.dependencies.add(closestChunk);\n        }\n        dependencies.delete(closestChunk);\n        dependentChunks.delete(closestChunk);\n        getChunksInPartition(closestChunk, minChunkSize, chunkPartition).add(closestChunk);\n      }\n    }\n  }\n}\n// Merging will not produce cycles if none of the direct non-merged dependencies\n// of a chunk have the other chunk as a transitive dependency\nfunction isValidMerge(mergedChunk, targetChunk, onlySubsetMerge) {\n  return !(hasTransitiveDependencyOrNonCorrelatedSideEffect(mergedChunk, targetChunk, true) || hasTransitiveDependencyOrNonCorrelatedSideEffect(targetChunk, mergedChunk, !onlySubsetMerge));\n}\nfunction hasTransitiveDependencyOrNonCorrelatedSideEffect(dependentChunk, dependencyChunk, checkSideEffects) {\n  const {\n    correlatedSideEffects\n  } = dependencyChunk;\n  if (checkSideEffects) {\n    for (const sideEffect of dependentChunk.sideEffects) {\n      if (!correlatedSideEffects.has(sideEffect)) {\n        return true;\n      }\n    }\n  }\n  const chunksToCheck = new Set(dependentChunk.dependencies);\n  for (const {\n    dependencies,\n    sideEffects\n  } of chunksToCheck) {\n    for (const dependency of dependencies) {\n      if (dependency === dependencyChunk) {\n        return true;\n      }\n      chunksToCheck.add(dependency);\n    }\n    if (checkSideEffects) {\n      for (const sideEffect of sideEffects) {\n        if (!correlatedSideEffects.has(sideEffect)) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n}\nfunction getChunksInPartition(chunk, minChunkSize, chunkPartition) {\n  return chunk.size < minChunkSize ? chunkPartition.small : chunkPartition.big;\n}\nfunction getChunkEntryDistance(_ref95, _ref96, enforceSubest) {\n  let {\n    dependentEntries: sourceEntries\n  } = _ref95;\n  let {\n    dependentEntries: targetEntries\n  } = _ref96;\n  let distance = 0;\n  for (const entryIndex of targetEntries) {\n    if (!sourceEntries.has(entryIndex)) {\n      distance++;\n    }\n  }\n  for (const entryIndex of sourceEntries) {\n    if (!targetEntries.has(entryIndex)) {\n      if (enforceSubest) {\n        return Infinity;\n      }\n      distance++;\n    }\n  }\n  return distance;\n}\n\n// ported from https://github.com/substack/node-commondir\nfunction commondir(files) {\n  if (files.length === 0) return '/';\n  if (files.length === 1) return dirname(files[0]);\n  const commonSegments = files.slice(1).reduce((commonSegments, file) => {\n    const pathSegements = file.split(/\\/+|\\\\+/);\n    let index;\n    for (index = 0; commonSegments[index] === pathSegements[index] && index < Math.min(commonSegments.length, pathSegements.length); index++);\n    return commonSegments.slice(0, index);\n  }, files[0].split(/\\/+|\\\\+/));\n  // Windows correctly handles paths with forward-slashes\n  return commonSegments.length > 1 ? commonSegments.join('/') : '/';\n}\nconst compareExecIndex = (unitA, unitB) => unitA.execIndex > unitB.execIndex ? 1 : -1;\nfunction sortByExecutionOrder(units) {\n  units.sort(compareExecIndex);\n}\nfunction analyseModuleExecution(entryModules) {\n  let nextExecIndex = 0;\n  const cyclePaths = [];\n  const analysedModules = new Set();\n  const dynamicImports = new Set();\n  const parents = new Map();\n  const orderedModules = [];\n  const analyseModule = module => {\n    if (module instanceof Module) {\n      for (const dependency of module.dependencies) {\n        if (parents.has(dependency)) {\n          if (!analysedModules.has(dependency)) {\n            cyclePaths.push(getCyclePath(dependency, module, parents));\n          }\n          continue;\n        }\n        parents.set(dependency, module);\n        analyseModule(dependency);\n      }\n      for (const dependency of module.implicitlyLoadedBefore) {\n        dynamicImports.add(dependency);\n      }\n      for (const {\n        resolution\n      } of module.dynamicImports) {\n        if (resolution instanceof Module) {\n          dynamicImports.add(resolution);\n        }\n      }\n      orderedModules.push(module);\n    }\n    module.execIndex = nextExecIndex++;\n    analysedModules.add(module);\n  };\n  for (const currentEntry of entryModules) {\n    if (!parents.has(currentEntry)) {\n      parents.set(currentEntry, null);\n      analyseModule(currentEntry);\n    }\n  }\n  for (const currentEntry of dynamicImports) {\n    if (!parents.has(currentEntry)) {\n      parents.set(currentEntry, null);\n      analyseModule(currentEntry);\n    }\n  }\n  return {\n    cyclePaths,\n    orderedModules\n  };\n}\nfunction getCyclePath(module, parent, parents) {\n  const cycleSymbol = Symbol(module.id);\n  const path = [module.id];\n  let nextModule = parent;\n  module.cycles.add(cycleSymbol);\n  while (nextModule !== module) {\n    nextModule.cycles.add(cycleSymbol);\n    path.push(nextModule.id);\n    nextModule = parents.get(nextModule);\n  }\n  path.push(path[0]);\n  path.reverse();\n  return path;\n}\nfunction getGenerateCodeSnippets(_ref97) {\n  let {\n    compact,\n    generatedCode: {\n      arrowFunctions,\n      constBindings,\n      objectShorthand,\n      reservedNamesAsProps\n    }\n  } = _ref97;\n  const {\n    _,\n    n,\n    s\n  } = compact ? {\n    _: '',\n    n: '',\n    s: ''\n  } : {\n    _: ' ',\n    n: '\\n',\n    s: ';'\n  };\n  const cnst = constBindings ? 'const' : 'var';\n  const getNonArrowFunctionIntro = (parameters, _ref98) => {\n    let {\n      isAsync,\n      name\n    } = _ref98;\n    return `${isAsync ? `async ` : ''}function${name ? ` ${name}` : ''}${_}(${parameters.join(`,${_}`)})${_}`;\n  };\n  const getFunctionIntro = arrowFunctions ? (parameters, _ref99) => {\n    let {\n      isAsync,\n      name\n    } = _ref99;\n    const singleParameter = parameters.length === 1;\n    const asyncString = isAsync ? `async${singleParameter ? ' ' : _}` : '';\n    return `${name ? `${cnst} ${name}${_}=${_}` : ''}${asyncString}${singleParameter ? parameters[0] : `(${parameters.join(`,${_}`)})`}${_}=>${_}`;\n  } : getNonArrowFunctionIntro;\n  const getDirectReturnFunction = (parameters, _ref100) => {\n    let {\n      functionReturn,\n      lineBreakIndent,\n      name\n    } = _ref100;\n    return [`${getFunctionIntro(parameters, {\n      isAsync: false,\n      name\n    })}${arrowFunctions ? lineBreakIndent ? `${n}${lineBreakIndent.base}${lineBreakIndent.t}` : '' : `{${lineBreakIndent ? `${n}${lineBreakIndent.base}${lineBreakIndent.t}` : _}${functionReturn ? 'return ' : ''}`}`, arrowFunctions ? `${name ? ';' : ''}${lineBreakIndent ? `${n}${lineBreakIndent.base}` : ''}` : `${s}${lineBreakIndent ? `${n}${lineBreakIndent.base}` : _}}`];\n  };\n  const isValidPropertyName = reservedNamesAsProps ? name => validPropertyName.test(name) : name => !RESERVED_NAMES$1.has(name) && validPropertyName.test(name);\n  return {\n    _,\n    cnst,\n    getDirectReturnFunction,\n    getDirectReturnIifeLeft: (parameters, returned, _ref101) => {\n      let {\n        needsArrowReturnParens,\n        needsWrappedFunction\n      } = _ref101;\n      const [left, right] = getDirectReturnFunction(parameters, {\n        functionReturn: true,\n        lineBreakIndent: null,\n        name: null\n      });\n      return `${wrapIfNeeded(`${left}${wrapIfNeeded(returned, arrowFunctions && needsArrowReturnParens)}${right}`, arrowFunctions || needsWrappedFunction)}(`;\n    },\n    getFunctionIntro,\n    getNonArrowFunctionIntro,\n    getObject(fields, _ref102) {\n      let {\n        lineBreakIndent\n      } = _ref102;\n      const prefix = lineBreakIndent ? `${n}${lineBreakIndent.base}${lineBreakIndent.t}` : _;\n      return `{${fields.map(_ref103 => {\n        let [key, value] = _ref103;\n        if (key === null) return `${prefix}${value}`;\n        const needsQuotes = !isValidPropertyName(key);\n        return key === value && objectShorthand && !needsQuotes ? prefix + key : `${prefix}${needsQuotes ? `'${key}'` : key}:${_}${value}`;\n      }).join(`,`)}${fields.length === 0 ? '' : lineBreakIndent ? `${n}${lineBreakIndent.base}` : _}}`;\n    },\n    getPropertyAccess: name => isValidPropertyName(name) ? `.${name}` : `[${JSON.stringify(name)}]`,\n    n,\n    s\n  };\n}\nconst wrapIfNeeded = (code, needsParens) => needsParens ? `(${code})` : code;\nconst validPropertyName = /^(?!\\d)[\\w$]+$/;\nclass Source {\n  constructor(filename, content) {\n    this.isOriginal = true;\n    this.filename = filename;\n    this.content = content;\n  }\n  traceSegment(line, column, name) {\n    return {\n      column,\n      line,\n      name,\n      source: this\n    };\n  }\n}\nclass Link {\n  constructor(map, sources) {\n    this.sources = sources;\n    this.names = map.names;\n    this.mappings = map.mappings;\n  }\n  traceMappings() {\n    const sources = [];\n    const sourceIndexMap = new Map();\n    const sourcesContent = [];\n    const names = [];\n    const nameIndexMap = new Map();\n    const mappings = [];\n    for (const line of this.mappings) {\n      const tracedLine = [];\n      for (const segment of line) {\n        if (segment.length === 1) continue;\n        const source = this.sources[segment[1]];\n        if (!source) continue;\n        const traced = source.traceSegment(segment[2], segment[3], segment.length === 5 ? this.names[segment[4]] : '');\n        if (traced) {\n          const {\n            column,\n            line,\n            name,\n            source: {\n              content,\n              filename\n            }\n          } = traced;\n          let sourceIndex = sourceIndexMap.get(filename);\n          if (sourceIndex === undefined) {\n            sourceIndex = sources.length;\n            sources.push(filename);\n            sourceIndexMap.set(filename, sourceIndex);\n            sourcesContent[sourceIndex] = content;\n          } else if (sourcesContent[sourceIndex] == null) {\n            sourcesContent[sourceIndex] = content;\n          } else if (content != null && sourcesContent[sourceIndex] !== content) {\n            return error(errorConflictingSourcemapSources(filename));\n          }\n          const tracedSegment = [segment[0], sourceIndex, line, column];\n          if (name) {\n            let nameIndex = nameIndexMap.get(name);\n            if (nameIndex === undefined) {\n              nameIndex = names.length;\n              names.push(name);\n              nameIndexMap.set(name, nameIndex);\n            }\n            tracedSegment[4] = nameIndex;\n          }\n          tracedLine.push(tracedSegment);\n        }\n      }\n      mappings.push(tracedLine);\n    }\n    return {\n      mappings,\n      names,\n      sources,\n      sourcesContent\n    };\n  }\n  traceSegment(line, column, name) {\n    const segments = this.mappings[line];\n    if (!segments) return null;\n    // binary search through segments for the given column\n    let searchStart = 0;\n    let searchEnd = segments.length - 1;\n    while (searchStart <= searchEnd) {\n      const m = searchStart + searchEnd >> 1;\n      const segment = segments[m];\n      // If a sourcemap does not have sufficient resolution to contain a\n      // necessary mapping, e.g. because it only contains line information, we\n      // use the best approximation we could find\n      if (segment[0] === column || searchStart === searchEnd) {\n        if (segment.length == 1) return null;\n        const source = this.sources[segment[1]];\n        if (!source) return null;\n        return source.traceSegment(segment[2], segment[3], segment.length === 5 ? this.names[segment[4]] : name);\n      }\n      if (segment[0] > column) {\n        searchEnd = m - 1;\n      } else {\n        searchStart = m + 1;\n      }\n    }\n    return null;\n  }\n}\nfunction getLinkMap(warn) {\n  return function linkMap(source, map) {\n    if (map.mappings) {\n      return new Link(map, [source]);\n    }\n    warn(errorSourcemapBroken(map.plugin));\n    return new Link({\n      mappings: [],\n      names: []\n    }, [source]);\n  };\n}\nfunction getCollapsedSourcemap(id, originalCode, originalSourcemap, sourcemapChain, linkMap) {\n  let source;\n  if (originalSourcemap) {\n    const sources = originalSourcemap.sources;\n    const sourcesContent = originalSourcemap.sourcesContent || [];\n    const directory = dirname(id) || '.';\n    const sourceRoot = originalSourcemap.sourceRoot || '.';\n    const baseSources = sources.map((source, index) => new Source(resolve(directory, sourceRoot, source), sourcesContent[index]));\n    source = new Link(originalSourcemap, baseSources);\n  } else {\n    source = new Source(id, originalCode);\n  }\n  return sourcemapChain.reduce(linkMap, source);\n}\nfunction collapseSourcemaps(file, map, modules, bundleSourcemapChain, excludeContent, warn) {\n  const linkMap = getLinkMap(warn);\n  const moduleSources = modules.filter(module => !module.excludeFromSourcemap).map(module => getCollapsedSourcemap(module.id, module.originalCode, module.originalSourcemap, module.sourcemapChain, linkMap));\n  const link = new Link(map, moduleSources);\n  const source = bundleSourcemapChain.reduce(linkMap, link);\n  let {\n    sources,\n    sourcesContent,\n    names,\n    mappings\n  } = source.traceMappings();\n  if (file) {\n    const directory = dirname(file);\n    sources = sources.map(source => relative$1(directory, source));\n    file = basename(file);\n  }\n  sourcesContent = excludeContent ? null : sourcesContent;\n  return new SourceMap({\n    file,\n    mappings,\n    names,\n    sources,\n    sourcesContent\n  });\n}\nfunction collapseSourcemap(id, originalCode, originalSourcemap, sourcemapChain, warn) {\n  if (sourcemapChain.length === 0) {\n    return originalSourcemap;\n  }\n  const source = getCollapsedSourcemap(id, originalCode, originalSourcemap, sourcemapChain, getLinkMap(warn));\n  const map = source.traceMappings();\n  return {\n    version: 3,\n    ...map\n  };\n}\nconst createHash = () => createHash$1('sha256');\nfunction decodedSourcemap(map) {\n  if (!map) return null;\n  if (typeof map === 'string') {\n    map = JSON.parse(map);\n  }\n  if (map.mappings === '') {\n    return {\n      mappings: [],\n      names: [],\n      sources: [],\n      version: 3\n    };\n  }\n  const mappings = typeof map.mappings === 'string' ? decode(map.mappings) : map.mappings;\n  return {\n    ...map,\n    mappings\n  };\n}\nasync function renderChunks(chunks, bundle, pluginDriver, outputOptions, onwarn) {\n  timeStart('render chunks', 2);\n  reserveEntryChunksInBundle(chunks);\n  const renderedChunks = await Promise.all(chunks.map(chunk => chunk.render()));\n  timeEnd('render chunks', 2);\n  timeStart('transform chunks', 2);\n  const chunkGraph = getChunkGraph(chunks);\n  const {\n    nonHashedChunksWithPlaceholders,\n    renderedChunksByPlaceholder,\n    hashDependenciesByPlaceholder\n  } = await transformChunksAndGenerateContentHashes(renderedChunks, chunkGraph, outputOptions, pluginDriver, onwarn);\n  const hashesByPlaceholder = generateFinalHashes(renderedChunksByPlaceholder, hashDependenciesByPlaceholder, bundle);\n  addChunksToBundle(renderedChunksByPlaceholder, hashesByPlaceholder, bundle, nonHashedChunksWithPlaceholders, pluginDriver, outputOptions);\n  timeEnd('transform chunks', 2);\n}\nfunction reserveEntryChunksInBundle(chunks) {\n  for (const chunk of chunks) {\n    if (chunk.facadeModule && chunk.facadeModule.isUserDefinedEntryPoint) {\n      // reserves name in bundle as side effect if it does not contain a hash\n      chunk.getPreliminaryFileName();\n    }\n  }\n}\nfunction getChunkGraph(chunks) {\n  return Object.fromEntries(chunks.map(chunk => {\n    const renderedChunkInfo = chunk.getRenderedChunkInfo();\n    return [renderedChunkInfo.fileName, renderedChunkInfo];\n  }));\n}\nasync function transformChunk(magicString, fileName, usedModules, chunkGraph, options, outputPluginDriver, onwarn) {\n  let map = null;\n  const sourcemapChain = [];\n  let code = await outputPluginDriver.hookReduceArg0('renderChunk', [magicString.toString(), chunkGraph[fileName], options, {\n    chunks: chunkGraph\n  }], (code, result, plugin) => {\n    if (result == null) return code;\n    if (typeof result === 'string') result = {\n      code: result,\n      map: undefined\n    };\n    // strict null check allows 'null' maps to not be pushed to the chain, while 'undefined' gets the missing map warning\n    if (result.map !== null) {\n      const map = decodedSourcemap(result.map);\n      sourcemapChain.push(map || {\n        missing: true,\n        plugin: plugin.name\n      });\n    }\n    return result.code;\n  });\n  const {\n    compact,\n    dir,\n    file,\n    sourcemap,\n    sourcemapExcludeSources,\n    sourcemapFile,\n    sourcemapPathTransform,\n    sourcemapIgnoreList\n  } = options;\n  if (!compact && code[code.length - 1] !== '\\n') code += '\\n';\n  if (sourcemap) {\n    timeStart('sourcemaps', 3);\n    let resultingFile;\n    if (file) resultingFile = resolve(sourcemapFile || file);else if (dir) resultingFile = resolve(dir, fileName);else resultingFile = resolve(fileName);\n    const decodedMap = magicString.generateDecodedMap({});\n    map = collapseSourcemaps(resultingFile, decodedMap, usedModules, sourcemapChain, sourcemapExcludeSources, onwarn);\n    for (let sourcesIndex = 0; sourcesIndex < map.sources.length; ++sourcesIndex) {\n      let sourcePath = map.sources[sourcesIndex];\n      const sourcemapPath = `${resultingFile}.map`;\n      const ignoreList = sourcemapIgnoreList(sourcePath, sourcemapPath);\n      if (typeof ignoreList !== 'boolean') {\n        error(errorFailedValidation('sourcemapIgnoreList function must return a boolean.'));\n      }\n      if (ignoreList) {\n        if (map.x_google_ignoreList === undefined) {\n          map.x_google_ignoreList = [];\n        }\n        if (!map.x_google_ignoreList.includes(sourcesIndex)) {\n          map.x_google_ignoreList.push(sourcesIndex);\n        }\n      }\n      if (sourcemapPathTransform) {\n        sourcePath = sourcemapPathTransform(sourcePath, sourcemapPath);\n        if (typeof sourcePath !== 'string') {\n          error(errorFailedValidation(`sourcemapPathTransform function must return a string.`));\n        }\n      }\n      map.sources[sourcesIndex] = normalize(sourcePath);\n    }\n    timeEnd('sourcemaps', 3);\n  }\n  return {\n    code,\n    map\n  };\n}\nasync function transformChunksAndGenerateContentHashes(renderedChunks, chunkGraph, outputOptions, pluginDriver, onwarn) {\n  const nonHashedChunksWithPlaceholders = [];\n  const renderedChunksByPlaceholder = new Map();\n  const hashDependenciesByPlaceholder = new Map();\n  const placeholders = new Set();\n  for (const {\n    preliminaryFileName: {\n      hashPlaceholder\n    }\n  } of renderedChunks) {\n    if (hashPlaceholder) placeholders.add(hashPlaceholder);\n  }\n  await Promise.all(renderedChunks.map(async _ref104 => {\n    let {\n      chunk,\n      preliminaryFileName: {\n        fileName,\n        hashPlaceholder\n      },\n      magicString,\n      usedModules\n    } = _ref104;\n    const transformedChunk = {\n      chunk,\n      fileName,\n      ...(await transformChunk(magicString, fileName, usedModules, chunkGraph, outputOptions, pluginDriver, onwarn))\n    };\n    const {\n      code\n    } = transformedChunk;\n    if (hashPlaceholder) {\n      // To create a reproducible content-only hash, all placeholders are\n      // replaced with the same value before hashing\n      const {\n        containedPlaceholders,\n        transformedCode\n      } = replacePlaceholdersWithDefaultAndGetContainedPlaceholders(code, placeholders);\n      const hash = createHash().update(transformedCode);\n      const hashAugmentation = pluginDriver.hookReduceValueSync('augmentChunkHash', '', [chunk.getRenderedChunkInfo()], (augmentation, pluginHash) => {\n        if (pluginHash) {\n          augmentation += pluginHash;\n        }\n        return augmentation;\n      });\n      if (hashAugmentation) {\n        hash.update(hashAugmentation);\n      }\n      renderedChunksByPlaceholder.set(hashPlaceholder, transformedChunk);\n      hashDependenciesByPlaceholder.set(hashPlaceholder, {\n        containedPlaceholders,\n        contentHash: hash.digest('hex')\n      });\n    } else {\n      nonHashedChunksWithPlaceholders.push(transformedChunk);\n    }\n  }));\n  return {\n    hashDependenciesByPlaceholder,\n    nonHashedChunksWithPlaceholders,\n    renderedChunksByPlaceholder\n  };\n}\nfunction generateFinalHashes(renderedChunksByPlaceholder, hashDependenciesByPlaceholder, bundle) {\n  const hashesByPlaceholder = new Map();\n  for (const [placeholder, {\n    fileName\n  }] of renderedChunksByPlaceholder) {\n    let hash = createHash();\n    const hashDependencyPlaceholders = new Set([placeholder]);\n    for (const dependencyPlaceholder of hashDependencyPlaceholders) {\n      const {\n        containedPlaceholders,\n        contentHash\n      } = hashDependenciesByPlaceholder.get(dependencyPlaceholder);\n      hash.update(contentHash);\n      for (const containedPlaceholder of containedPlaceholders) {\n        // When looping over a map, setting an entry only causes a new iteration if the key is new\n        hashDependencyPlaceholders.add(containedPlaceholder);\n      }\n    }\n    let finalFileName;\n    let finalHash;\n    do {\n      // In case of a hash collision, create a hash of the hash\n      if (finalHash) {\n        hash = createHash().update(finalHash);\n      }\n      finalHash = hash.digest('hex').slice(0, placeholder.length);\n      finalFileName = replaceSinglePlaceholder(fileName, placeholder, finalHash);\n    } while (bundle[lowercaseBundleKeys].has(finalFileName.toLowerCase()));\n    bundle[finalFileName] = FILE_PLACEHOLDER;\n    hashesByPlaceholder.set(placeholder, finalHash);\n  }\n  return hashesByPlaceholder;\n}\nfunction addChunksToBundle(renderedChunksByPlaceholder, hashesByPlaceholder, bundle, nonHashedChunksWithPlaceholders, pluginDriver, options) {\n  for (const {\n    chunk,\n    code,\n    fileName,\n    map\n  } of renderedChunksByPlaceholder.values()) {\n    let updatedCode = replacePlaceholders(code, hashesByPlaceholder);\n    const finalFileName = replacePlaceholders(fileName, hashesByPlaceholder);\n    if (map) {\n      map.file = replacePlaceholders(map.file, hashesByPlaceholder);\n      updatedCode += emitSourceMapAndGetComment(finalFileName, map, pluginDriver, options);\n    }\n    bundle[finalFileName] = chunk.finalizeChunk(updatedCode, map, hashesByPlaceholder);\n  }\n  for (const {\n    chunk,\n    code,\n    fileName,\n    map\n  } of nonHashedChunksWithPlaceholders) {\n    let updatedCode = hashesByPlaceholder.size > 0 ? replacePlaceholders(code, hashesByPlaceholder) : code;\n    if (map) {\n      updatedCode += emitSourceMapAndGetComment(fileName, map, pluginDriver, options);\n    }\n    bundle[fileName] = chunk.finalizeChunk(updatedCode, map, hashesByPlaceholder);\n  }\n}\nfunction emitSourceMapAndGetComment(fileName, map, pluginDriver, _ref105) {\n  let {\n    sourcemap,\n    sourcemapBaseUrl\n  } = _ref105;\n  let url;\n  if (sourcemap === 'inline') {\n    url = map.toUrl();\n  } else {\n    const sourcemapFileName = `${basename(fileName)}.map`;\n    url = sourcemapBaseUrl ? new URL(sourcemapFileName, sourcemapBaseUrl).toString() : sourcemapFileName;\n    pluginDriver.emitFile({\n      fileName: `${fileName}.map`,\n      source: map.toString(),\n      type: 'asset'\n    });\n  }\n  return sourcemap === 'hidden' ? '' : `//# ${SOURCEMAPPING_URL}=${url}\\n`;\n}\nclass Bundle {\n  constructor(outputOptions, unsetOptions, inputOptions, pluginDriver, graph) {\n    this.outputOptions = outputOptions;\n    this.unsetOptions = unsetOptions;\n    this.inputOptions = inputOptions;\n    this.pluginDriver = pluginDriver;\n    this.graph = graph;\n    this.facadeChunkByModule = new Map();\n    this.includedNamespaces = new Set();\n  }\n  async generate(isWrite) {\n    timeStart('GENERATE', 1);\n    const outputBundleBase = Object.create(null);\n    const outputBundle = getOutputBundle(outputBundleBase);\n    this.pluginDriver.setOutputBundle(outputBundle, this.outputOptions);\n    try {\n      timeStart('initialize render', 2);\n      await this.pluginDriver.hookParallel('renderStart', [this.outputOptions, this.inputOptions]);\n      timeEnd('initialize render', 2);\n      timeStart('generate chunks', 2);\n      const getHashPlaceholder = getHashPlaceholderGenerator();\n      const chunks = await this.generateChunks(outputBundle, getHashPlaceholder);\n      if (chunks.length > 1) {\n        validateOptionsForMultiChunkOutput(this.outputOptions, this.inputOptions.onwarn);\n      }\n      this.pluginDriver.setChunkInformation(this.facadeChunkByModule);\n      for (const chunk of chunks) {\n        chunk.generateExports();\n      }\n      timeEnd('generate chunks', 2);\n      await renderChunks(chunks, outputBundle, this.pluginDriver, this.outputOptions, this.inputOptions.onwarn);\n    } catch (error_) {\n      await this.pluginDriver.hookParallel('renderError', [error_]);\n      throw error_;\n    }\n    removeUnreferencedAssets(outputBundle);\n    timeStart('generate bundle', 2);\n    await this.pluginDriver.hookSeq('generateBundle', [this.outputOptions, outputBundle, isWrite]);\n    this.finaliseAssets(outputBundle);\n    timeEnd('generate bundle', 2);\n    timeEnd('GENERATE', 1);\n    return outputBundleBase;\n  }\n  async addManualChunks(manualChunks) {\n    const manualChunkAliasByEntry = new Map();\n    const chunkEntries = await Promise.all(Object.entries(manualChunks).map(async _ref106 => {\n      let [alias, files] = _ref106;\n      return {\n        alias,\n        entries: await this.graph.moduleLoader.addAdditionalModules(files)\n      };\n    }));\n    for (const {\n      alias,\n      entries\n    } of chunkEntries) {\n      for (const entry of entries) {\n        addModuleToManualChunk(alias, entry, manualChunkAliasByEntry);\n      }\n    }\n    return manualChunkAliasByEntry;\n  }\n  assignManualChunks(getManualChunk) {\n    // eslint-disable-next-line unicorn/prefer-module\n    const manualChunkAliasesWithEntry = [];\n    const manualChunksApi = {\n      getModuleIds: () => this.graph.modulesById.keys(),\n      getModuleInfo: this.graph.getModuleInfo\n    };\n    for (const module of this.graph.modulesById.values()) {\n      if (module instanceof Module) {\n        const manualChunkAlias = getManualChunk(module.id, manualChunksApi);\n        if (typeof manualChunkAlias === 'string') {\n          manualChunkAliasesWithEntry.push([manualChunkAlias, module]);\n        }\n      }\n    }\n    manualChunkAliasesWithEntry.sort((_ref107, _ref108) => {\n      let [aliasA] = _ref107;\n      let [aliasB] = _ref108;\n      return aliasA > aliasB ? 1 : aliasA < aliasB ? -1 : 0;\n    });\n    const manualChunkAliasByEntry = new Map();\n    for (const [alias, module] of manualChunkAliasesWithEntry) {\n      addModuleToManualChunk(alias, module, manualChunkAliasByEntry);\n    }\n    return manualChunkAliasByEntry;\n  }\n  finaliseAssets(bundle) {\n    if (this.outputOptions.validate) {\n      for (const file of Object.values(bundle)) {\n        if ('code' in file) {\n          try {\n            this.graph.contextParse(file.code, {\n              ecmaVersion: 'latest'\n            });\n          } catch (error_) {\n            this.inputOptions.onwarn(errorChunkInvalid(file, error_));\n          }\n        }\n      }\n    }\n    this.pluginDriver.finaliseAssets();\n  }\n  async generateChunks(bundle, getHashPlaceholder) {\n    const {\n      experimentalMinChunkSize,\n      inlineDynamicImports,\n      manualChunks,\n      preserveModules\n    } = this.outputOptions;\n    const manualChunkAliasByEntry = typeof manualChunks === 'object' ? await this.addManualChunks(manualChunks) : this.assignManualChunks(manualChunks);\n    const snippets = getGenerateCodeSnippets(this.outputOptions);\n    const includedModules = getIncludedModules(this.graph.modulesById);\n    const inputBase = commondir(getAbsoluteEntryModulePaths(includedModules, preserveModules));\n    const externalChunkByModule = getExternalChunkByModule(this.graph.modulesById, this.outputOptions, inputBase);\n    const chunks = [];\n    const chunkByModule = new Map();\n    for (const {\n      alias,\n      modules\n    } of inlineDynamicImports ? [{\n      alias: null,\n      modules: includedModules\n    }] : preserveModules ? includedModules.map(module => ({\n      alias: null,\n      modules: [module]\n    })) : getChunkAssignments(this.graph.entryModules, manualChunkAliasByEntry, experimentalMinChunkSize)) {\n      sortByExecutionOrder(modules);\n      const chunk = new Chunk(modules, this.inputOptions, this.outputOptions, this.unsetOptions, this.pluginDriver, this.graph.modulesById, chunkByModule, externalChunkByModule, this.facadeChunkByModule, this.includedNamespaces, alias, getHashPlaceholder, bundle, inputBase, snippets);\n      chunks.push(chunk);\n    }\n    for (const chunk of chunks) {\n      chunk.link();\n    }\n    const facades = [];\n    for (const chunk of chunks) {\n      facades.push(...chunk.generateFacades());\n    }\n    return [...chunks, ...facades];\n  }\n}\nfunction validateOptionsForMultiChunkOutput(outputOptions, onWarn) {\n  if (outputOptions.format === 'umd' || outputOptions.format === 'iife') return error(errorInvalidOption('output.format', URL_OUTPUT_FORMAT, 'UMD and IIFE output formats are not supported for code-splitting builds', outputOptions.format));\n  if (typeof outputOptions.file === 'string') return error(errorInvalidOption('output.file', URL_OUTPUT_DIR, 'when building multiple chunks, the \"output.dir\" option must be used, not \"output.file\". To inline dynamic imports, set the \"inlineDynamicImports\" option'));\n  if (outputOptions.sourcemapFile) return error(errorInvalidOption('output.sourcemapFile', URL_OUTPUT_SOURCEMAPFILE, '\"output.sourcemapFile\" is only supported for single-file builds'));\n  if (!outputOptions.amd.autoId && outputOptions.amd.id) onWarn(errorInvalidOption('output.amd.id', URL_OUTPUT_AMD_ID, 'this option is only properly supported for single-file builds. Use \"output.amd.autoId\" and \"output.amd.basePath\" instead'));\n}\nfunction getIncludedModules(modulesById) {\n  const includedModules = [];\n  for (const module of modulesById.values()) {\n    if (module instanceof Module && (module.isIncluded() || module.info.isEntry || module.includedDynamicImporters.length > 0)) {\n      includedModules.push(module);\n    }\n  }\n  return includedModules;\n}\nfunction getAbsoluteEntryModulePaths(includedModules, preserveModules) {\n  const absoluteEntryModulePaths = [];\n  for (const module of includedModules) {\n    if ((module.info.isEntry || preserveModules) && isAbsolute(module.id)) {\n      absoluteEntryModulePaths.push(module.id);\n    }\n  }\n  return absoluteEntryModulePaths;\n}\nfunction getExternalChunkByModule(modulesById, outputOptions, inputBase) {\n  const externalChunkByModule = new Map();\n  for (const module of modulesById.values()) {\n    if (module instanceof ExternalModule) {\n      externalChunkByModule.set(module, new ExternalChunk(module, outputOptions, inputBase));\n    }\n  }\n  return externalChunkByModule;\n}\nfunction addModuleToManualChunk(alias, module, manualChunkAliasByEntry) {\n  const existingAlias = manualChunkAliasByEntry.get(module);\n  if (typeof existingAlias === 'string' && existingAlias !== alias) {\n    return error(errorCannotAssignModuleToChunk(module.id, alias, existingAlias));\n  }\n  manualChunkAliasByEntry.set(module, alias);\n}\n\n// This file was generated. Do not modify manually!\nvar astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 357, 0, 62, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\n// This file was generated. Do not modify manually!\nvar astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1070, 4050, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 46, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 482, 44, 11, 6, 17, 0, 322, 29, 19, 43, 1269, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4152, 8, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\n\n// This file was generated. Do not modify manually!\nvar nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\n// This file was generated. Do not modify manually!\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n\n// These are a run-length and offset encoded representation of the\n\n// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n};\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\nvar keywords$1 = {\n  5: ecma5AndLessKeywords,\n  \"5module\": ecma5AndLessKeywords + \" export import\",\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n};\nvar keywordRelationalOperator = /^in(stanceof)?$/;\n\n// ## Character categories\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) {\n      return false;\n    }\n    pos += set[i + 1];\n    if (pos >= code) {\n      return true;\n    }\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) {\n    return code === 36;\n  }\n  if (code < 91) {\n    return true;\n  }\n  if (code < 97) {\n    return code === 95;\n  }\n  if (code < 123) {\n    return true;\n  }\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n  if (astral === false) {\n    return false;\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) {\n    return code === 36;\n  }\n  if (code < 58) {\n    return true;\n  }\n  if (code < 65) {\n    return false;\n  }\n  if (code < 91) {\n    return true;\n  }\n  if (code < 97) {\n    return code === 95;\n  }\n  if (code < 123) {\n    return true;\n  }\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  if (astral === false) {\n    return false;\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar TokenType = function TokenType(label, conf) {\n  if (conf === void 0) conf = {};\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\nfunction binop(name, prec) {\n  return new TokenType(name, {\n    beforeExpr: true,\n    binop: prec\n  });\n}\nvar beforeExpr = {\n    beforeExpr: true\n  },\n  startsExpr = {\n    startsExpr: true\n  };\n\n// Map keyword names to token types.\n\nvar keywords = {};\n\n// Succinct definitions of keyword token types\nfunction kw(name, options) {\n  if (options === void 0) options = {};\n  options.keyword = name;\n  return keywords[name] = new TokenType(name, options);\n}\nvar types$1 = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  privateId: new TokenType(\"privateId\", startsExpr),\n  eof: new TokenType(\"eof\"),\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {\n    beforeExpr: true,\n    startsExpr: true\n  }),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr: true,\n    startsExpr: true\n  }),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr: true,\n    startsExpr: true\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  invalidTemplate: new TokenType(\"invalidTemplate\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr: true,\n    startsExpr: true\n  }),\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {\n    beforeExpr: true,\n    isAssign: true\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr: true,\n    isAssign: true\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix: true,\n    postfix: true,\n    startsExpr: true\n  }),\n  prefix: new TokenType(\"!/~\", {\n    beforeExpr: true,\n    prefix: true,\n    startsExpr: true\n  }),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=/===/!==\", 6),\n  relational: binop(\"</>/<=/>=\", 7),\n  bitShift: binop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr: true,\n    binop: 9,\n    prefix: true,\n    startsExpr: true\n  }),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {\n    beforeExpr: true\n  }),\n  coalesce: binop(\"??\", 1),\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {\n    isLoop: true,\n    beforeExpr: true\n  }),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {\n    isLoop: true\n  }),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {\n    isLoop: true\n  }),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {\n    beforeExpr: true,\n    startsExpr: true\n  }),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\", startsExpr),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\", startsExpr),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {\n    beforeExpr: true,\n    binop: 7\n  }),\n  _instanceof: kw(\"instanceof\", {\n    beforeExpr: true,\n    binop: 7\n  }),\n  _typeof: kw(\"typeof\", {\n    beforeExpr: true,\n    prefix: true,\n    startsExpr: true\n  }),\n  _void: kw(\"void\", {\n    beforeExpr: true,\n    prefix: true,\n    startsExpr: true\n  }),\n  _delete: kw(\"delete\", {\n    beforeExpr: true,\n    prefix: true,\n    startsExpr: true\n  })\n};\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  return code === 10 || code === 13 || code === 0x2028 || code === 0x2029;\n}\nfunction nextLineBreak(code, from, end) {\n  if (end === void 0) end = code.length;\n  for (var i = from; i < end; i++) {\n    var next = code.charCodeAt(i);\n    if (isNewLine(next)) {\n      return i < end - 1 && next === 13 && code.charCodeAt(i + 1) === 10 ? i + 2 : i + 1;\n    }\n  }\n  return -1;\n}\nvar nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\nvar toString = ref.toString;\nvar hasOwn = Object.hasOwn || function (obj, propName) {\n  return hasOwnProperty.call(obj, propName);\n};\nvar isArray = Array.isArray || function (obj) {\n  return toString.call(obj) === \"[object Array]\";\n};\nfunction wordsRegexp(words) {\n  return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\");\n}\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) {\n    return String.fromCharCode(code);\n  }\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00);\n}\nvar loneSurrogate = /(?:[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/;\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  this.line = line;\n  this.column = col;\n};\nPosition.prototype.offset = function offset(n) {\n  return new Position(this.line, this.column + n);\n};\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start;\n  this.end = end;\n  if (p.sourceFile !== null) {\n    this.source = p.sourceFile;\n  }\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    var nextBreak = nextLineBreak(input, cur, offset);\n    if (nextBreak < 0) {\n      return new Position(line, offset - cur);\n    }\n    ++line;\n    cur = nextBreak;\n  }\n}\n\n// A second argument must be given to configure the parser process.\n// These options are recognized (only `ecmaVersion` is required):\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must be\n  // either 3, 5, 6 (or 2015), 7 (2016), 8 (2017), 9 (2018), 10\n  // (2019), 11 (2020), 12 (2021), 13 (2022), 14 (2023), or `\"latest\"`\n  // (the latest version the library supports). This influences\n  // support for strict mode, the set of reserved words, and support\n  // for new syntax features.\n  ecmaVersion: null,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `\"script\"` or `\"module\"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // the position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program, and an import.meta expression\n  // in a script isn't considered an error.\n  allowImportExportEverywhere: false,\n  // By default, await identifiers are allowed to appear at the top-level scope only if ecmaVersion >= 2022.\n  // When enabled, await identifiers are allowed to appear at the top-level scope,\n  // but they are still not allowed in non-async functions.\n  allowAwaitOutsideFunction: null,\n  // When enabled, super identifiers are not constrained to\n  // appearing in methods and do not raise an error when they appear elsewhere.\n  allowSuperOutsideMethod: null,\n  // When enabled, hashbang directive in the beginning of file is\n  // allowed and treated as a line comment. Enabled by default when\n  // `ecmaVersion` >= 2023.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false\n};\n\n// Interpret and default an options object\n\nvar warnedAboutEcmaVersion = false;\nfunction getOptions(opts) {\n  var options = {};\n  for (var opt in defaultOptions) {\n    options[opt] = opts && hasOwn(opts, opt) ? opts[opt] : defaultOptions[opt];\n  }\n  if (options.ecmaVersion === \"latest\") {\n    options.ecmaVersion = 1e8;\n  } else if (options.ecmaVersion == null) {\n    if (!warnedAboutEcmaVersion && typeof console === \"object\" && console.warn) {\n      warnedAboutEcmaVersion = true;\n      console.warn(\"Since Acorn 8.0.0, options.ecmaVersion is required.\\nDefaulting to 2020, but this will stop working in the future.\");\n    }\n    options.ecmaVersion = 11;\n  } else if (options.ecmaVersion >= 2015) {\n    options.ecmaVersion -= 2009;\n  }\n  if (options.allowReserved == null) {\n    options.allowReserved = options.ecmaVersion < 5;\n  }\n  if (opts.allowHashBang == null) {\n    options.allowHashBang = options.ecmaVersion >= 14;\n  }\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken;\n    options.onToken = function (token) {\n      return tokens.push(token);\n    };\n  }\n  if (isArray(options.onComment)) {\n    options.onComment = pushComment(options, options.onComment);\n  }\n  return options;\n}\nfunction pushComment(options, array) {\n  return function (block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"Block\" : \"Line\",\n      value: text,\n      start: start,\n      end: end\n    };\n    if (options.locations) {\n      comment.loc = new SourceLocation(this, startLoc, endLoc);\n    }\n    if (options.ranges) {\n      comment.range = [start, end];\n    }\n    array.push(comment);\n  };\n}\n\n// Each scope gets a bitset that may contain these flags\nvar SCOPE_TOP = 1,\n  SCOPE_FUNCTION = 2,\n  SCOPE_ASYNC = 4,\n  SCOPE_GENERATOR = 8,\n  SCOPE_ARROW = 16,\n  SCOPE_SIMPLE_CATCH = 32,\n  SCOPE_SUPER = 64,\n  SCOPE_DIRECT_SUPER = 128,\n  SCOPE_CLASS_STATIC_BLOCK = 256,\n  SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK;\nfunction functionFlags(async, generator) {\n  return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0);\n}\n\n// Used in checkLVal* and declareName to determine the type of a binding\nvar BIND_NONE = 0,\n  // Not a binding\n  BIND_VAR = 1,\n  // Var-style binding\n  BIND_LEXICAL = 2,\n  // Let- or const-style binding\n  BIND_FUNCTION = 3,\n  // Function declaration\n  BIND_SIMPLE_CATCH = 4,\n  // Simple (identifier pattern) catch binding\n  BIND_OUTSIDE = 5; // Special case for function names as bound inside the function\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options);\n  this.sourceFile = options.sourceFile;\n  this.keywords = wordsRegexp(keywords$1[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n  var reserved = \"\";\n  if (options.allowReserved !== true) {\n    reserved = reservedWords[options.ecmaVersion >= 6 ? 6 : options.ecmaVersion === 5 ? 5 : 3];\n    if (options.sourceType === \"module\") {\n      reserved += \" await\";\n    }\n  }\n  this.reservedWords = wordsRegexp(reserved);\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n  this.reservedWordsStrict = wordsRegexp(reservedStrict);\n  this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n  this.input = String(input);\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  this.containsEsc = false;\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos;\n    this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n  } else {\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = types$1.eof;\n  // For tokens that include more information than their type, the value\n  this.value = null;\n  // Its start and end offset\n  this.start = this.end = this.pos;\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = this.curPosition();\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null;\n  this.lastTokStart = this.lastTokEnd = this.pos;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext();\n  this.exprAllowed = true;\n\n  // Figure out if it's a module code.\n  this.inModule = options.sourceType === \"module\";\n  this.strict = this.inModule || this.strictDirective(this.pos);\n\n  // Used to signify the start of a potential arrow function\n  this.potentialArrowAt = -1;\n  this.potentialArrowInForAwait = false;\n\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n  // Labels in scope.\n  this.labels = [];\n  // Thus-far undefined exports.\n  this.undefinedExports = Object.create(null);\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\") {\n    this.skipLineComment(2);\n  }\n\n  // Scope tracking for duplicate variable names (see scope.js)\n  this.scopeStack = [];\n  this.enterScope(SCOPE_TOP);\n\n  // For RegExp validation\n  this.regexpState = null;\n\n  // The stack of private names.\n  // Each element has two properties: 'declared' and 'used'.\n  // When it exited from the outermost class definition, all used private names must be declared.\n  this.privateNameStack = [];\n};\nvar prototypeAccessors = {\n  inFunction: {\n    configurable: true\n  },\n  inGenerator: {\n    configurable: true\n  },\n  inAsync: {\n    configurable: true\n  },\n  canAwait: {\n    configurable: true\n  },\n  allowSuper: {\n    configurable: true\n  },\n  allowDirectSuper: {\n    configurable: true\n  },\n  treatFunctionsAsVar: {\n    configurable: true\n  },\n  allowNewDotTarget: {\n    configurable: true\n  },\n  inClassStaticBlock: {\n    configurable: true\n  }\n};\nParser.prototype.parse = function parse() {\n  var node = this.options.program || this.startNode();\n  this.nextToken();\n  return this.parseTopLevel(node);\n};\nprototypeAccessors.inFunction.get = function () {\n  return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n};\nprototypeAccessors.inGenerator.get = function () {\n  return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 && !this.currentVarScope().inClassFieldInit;\n};\nprototypeAccessors.inAsync.get = function () {\n  return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 && !this.currentVarScope().inClassFieldInit;\n};\nprototypeAccessors.canAwait.get = function () {\n  for (var i = this.scopeStack.length - 1; i >= 0; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.inClassFieldInit || scope.flags & SCOPE_CLASS_STATIC_BLOCK) {\n      return false;\n    }\n    if (scope.flags & SCOPE_FUNCTION) {\n      return (scope.flags & SCOPE_ASYNC) > 0;\n    }\n  }\n  return this.inModule && this.options.ecmaVersion >= 13 || this.options.allowAwaitOutsideFunction;\n};\nprototypeAccessors.allowSuper.get = function () {\n  var ref = this.currentThisScope();\n  var flags = ref.flags;\n  var inClassFieldInit = ref.inClassFieldInit;\n  return (flags & SCOPE_SUPER) > 0 || inClassFieldInit || this.options.allowSuperOutsideMethod;\n};\nprototypeAccessors.allowDirectSuper.get = function () {\n  return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n};\nprototypeAccessors.treatFunctionsAsVar.get = function () {\n  return this.treatFunctionsAsVarInScope(this.currentScope());\n};\nprototypeAccessors.allowNewDotTarget.get = function () {\n  var ref = this.currentThisScope();\n  var flags = ref.flags;\n  var inClassFieldInit = ref.inClassFieldInit;\n  return (flags & (SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK)) > 0 || inClassFieldInit;\n};\nprototypeAccessors.inClassStaticBlock.get = function () {\n  return (this.currentVarScope().flags & SCOPE_CLASS_STATIC_BLOCK) > 0;\n};\nParser.extend = function extend() {\n  var plugins = [],\n    len = arguments.length;\n  while (len--) plugins[len] = arguments[len];\n  var cls = this;\n  for (var i = 0; i < plugins.length; i++) {\n    cls = plugins[i](cls);\n  }\n  return cls;\n};\nParser.parse = function parse(input, options) {\n  return new this(options, input).parse();\n};\nParser.parseExpressionAt = function parseExpressionAt(input, pos, options) {\n  var parser = new this(options, input, pos);\n  parser.nextToken();\n  return parser.parseExpression();\n};\nParser.tokenizer = function tokenizer(input, options) {\n  return new this(options, input);\n};\nObject.defineProperties(Parser.prototype, prototypeAccessors);\nvar pp$9 = Parser.prototype;\n\n// ## Parser utilities\n\nvar literal = /^(?:'((?:\\\\.|[^'\\\\])*?)'|\"((?:\\\\.|[^\"\\\\])*?)\")/;\npp$9.strictDirective = function (start) {\n  if (this.options.ecmaVersion < 5) {\n    return false;\n  }\n  for (;;) {\n    // Try to find string literal.\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this.input)[0].length;\n    var match = literal.exec(this.input.slice(start));\n    if (!match) {\n      return false;\n    }\n    if ((match[1] || match[2]) === \"use strict\") {\n      skipWhiteSpace.lastIndex = start + match[0].length;\n      var spaceAfter = skipWhiteSpace.exec(this.input),\n        end = spaceAfter.index + spaceAfter[0].length;\n      var next = this.input.charAt(end);\n      return next === \";\" || next === \"}\" || lineBreak.test(spaceAfter[0]) && !(/[(`.[+\\-/*%<>=,?^&]/.test(next) || next === \"!\" && this.input.charAt(end + 1) === \"=\");\n    }\n    start += match[0].length;\n\n    // Skip semicolon, if any.\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this.input)[0].length;\n    if (this.input[start] === \";\") {\n      start++;\n    }\n  }\n};\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp$9.eat = function (type) {\n  if (this.type === type) {\n    this.next();\n    return true;\n  } else {\n    return false;\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp$9.isContextual = function (name) {\n  return this.type === types$1.name && this.value === name && !this.containsEsc;\n};\n\n// Consumes contextual keyword if possible.\n\npp$9.eatContextual = function (name) {\n  if (!this.isContextual(name)) {\n    return false;\n  }\n  this.next();\n  return true;\n};\n\n// Asserts that following token is given contextual keyword.\n\npp$9.expectContextual = function (name) {\n  if (!this.eatContextual(name)) {\n    this.unexpected();\n  }\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp$9.canInsertSemicolon = function () {\n  return this.type === types$1.eof || this.type === types$1.braceR || lineBreak.test(this.input.slice(this.lastTokEnd, this.start));\n};\npp$9.insertSemicolon = function () {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon) {\n      this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc);\n    }\n    return true;\n  }\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp$9.semicolon = function () {\n  if (!this.eat(types$1.semi) && !this.insertSemicolon()) {\n    this.unexpected();\n  }\n};\npp$9.afterTrailingComma = function (tokType, notNext) {\n  if (this.type === tokType) {\n    if (this.options.onTrailingComma) {\n      this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc);\n    }\n    if (!notNext) {\n      this.next();\n    }\n    return true;\n  }\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp$9.expect = function (type) {\n  this.eat(type) || this.unexpected();\n};\n\n// Raise an unexpected token error.\n\npp$9.unexpected = function (pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\nvar DestructuringErrors = function DestructuringErrors() {\n  this.shorthandAssign = this.trailingComma = this.parenthesizedAssign = this.parenthesizedBind = this.doubleProto = -1;\n};\npp$9.checkPatternErrors = function (refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) {\n    return;\n  }\n  if (refDestructuringErrors.trailingComma > -1) {\n    this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\");\n  }\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n  if (parens > -1) {\n    this.raiseRecoverable(parens, isAssign ? \"Assigning to rvalue\" : \"Parenthesized pattern\");\n  }\n};\npp$9.checkExpressionErrors = function (refDestructuringErrors, andThrow) {\n  if (!refDestructuringErrors) {\n    return false;\n  }\n  var shorthandAssign = refDestructuringErrors.shorthandAssign;\n  var doubleProto = refDestructuringErrors.doubleProto;\n  if (!andThrow) {\n    return shorthandAssign >= 0 || doubleProto >= 0;\n  }\n  if (shorthandAssign >= 0) {\n    this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\");\n  }\n  if (doubleProto >= 0) {\n    this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\");\n  }\n};\npp$9.checkYieldAwaitInDefaultParams = function () {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos)) {\n    this.raise(this.yieldPos, \"Yield expression cannot be a default value\");\n  }\n  if (this.awaitPos) {\n    this.raise(this.awaitPos, \"Await expression cannot be a default value\");\n  }\n};\npp$9.isSimpleAssignTarget = function (expr) {\n  if (expr.type === \"ParenthesizedExpression\") {\n    return this.isSimpleAssignTarget(expr.expression);\n  }\n  return expr.type === \"Identifier\" || expr.type === \"MemberExpression\";\n};\nvar pp$8 = Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$8.parseTopLevel = function (node) {\n  var exports = Object.create(null);\n  if (!node.body) {\n    node.body = [];\n  }\n  while (this.type !== types$1.eof) {\n    var stmt = this.parseStatement(null, true, exports);\n    node.body.push(stmt);\n  }\n  if (this.inModule) {\n    for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1) {\n      var name = list[i];\n      this.raiseRecoverable(this.undefinedExports[name].start, \"Export '\" + name + \"' is not defined\");\n    }\n  }\n  this.adaptDirectivePrologue(node.body);\n  this.next();\n  node.sourceType = this.options.sourceType;\n  return this.finishNode(node, \"Program\");\n};\nvar loopLabel = {\n    kind: \"loop\"\n  },\n  switchLabel = {\n    kind: \"switch\"\n  };\npp$8.isLet = function (context) {\n  if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) {\n    return false;\n  }\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length,\n    nextCh = this.input.charCodeAt(next);\n  // For ambiguous cases, determine if a LexicalDeclaration (or only a\n  // Statement) is allowed here. If context is not empty then only a Statement\n  // is allowed. However, `let [` is an explicit negative lookahead for\n  // ExpressionStatement, so special-case it first.\n  if (nextCh === 91 || nextCh === 92 || nextCh > 0xd7ff && nextCh < 0xdc00) {\n    return true;\n  } // '[', '/', astral\n  if (context) {\n    return false;\n  }\n  if (nextCh === 123) {\n    return true;\n  } // '{'\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1;\n    while (isIdentifierChar(nextCh = this.input.charCodeAt(pos), true)) {\n      ++pos;\n    }\n    if (nextCh === 92 || nextCh > 0xd7ff && nextCh < 0xdc00) {\n      return true;\n    }\n    var ident = this.input.slice(next, pos);\n    if (!keywordRelationalOperator.test(ident)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\npp$8.isAsyncFunction = function () {\n  if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\")) {\n    return false;\n  }\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length,\n    after;\n  return !lineBreak.test(this.input.slice(this.pos, next)) && this.input.slice(next, next + 8) === \"function\" && (next + 8 === this.input.length || !(isIdentifierChar(after = this.input.charCodeAt(next + 8)) || after > 0xd7ff && after < 0xdc00));\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$8.parseStatement = function (context, topLevel, exports) {\n  var starttype = this.type,\n    node = this.startNode(),\n    kind;\n  if (this.isLet(context)) {\n    starttype = types$1._var;\n    kind = \"let\";\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n    case types$1._break:\n    case types$1._continue:\n      return this.parseBreakContinueStatement(node, starttype.keyword);\n    case types$1._debugger:\n      return this.parseDebuggerStatement(node);\n    case types$1._do:\n      return this.parseDoStatement(node);\n    case types$1._for:\n      return this.parseForStatement(node);\n    case types$1._function:\n      // Function as sole body of either an if statement or a labeled statement\n      // works, but not when it is part of a labeled statement that is the sole\n      // body of an if statement.\n      if (context && (this.strict || context !== \"if\" && context !== \"label\") && this.options.ecmaVersion >= 6) {\n        this.unexpected();\n      }\n      return this.parseFunctionStatement(node, false, !context);\n    case types$1._class:\n      if (context) {\n        this.unexpected();\n      }\n      return this.parseClass(node, true);\n    case types$1._if:\n      return this.parseIfStatement(node);\n    case types$1._return:\n      return this.parseReturnStatement(node);\n    case types$1._switch:\n      return this.parseSwitchStatement(node);\n    case types$1._throw:\n      return this.parseThrowStatement(node);\n    case types$1._try:\n      return this.parseTryStatement(node);\n    case types$1._const:\n    case types$1._var:\n      kind = kind || this.value;\n      if (context && kind !== \"var\") {\n        this.unexpected();\n      }\n      return this.parseVarStatement(node, kind);\n    case types$1._while:\n      return this.parseWhileStatement(node);\n    case types$1._with:\n      return this.parseWithStatement(node);\n    case types$1.braceL:\n      return this.parseBlock(true, node);\n    case types$1.semi:\n      return this.parseEmptyStatement(node);\n    case types$1._export:\n    case types$1._import:\n      if (this.options.ecmaVersion > 10 && starttype === types$1._import) {\n        skipWhiteSpace.lastIndex = this.pos;\n        var skip = skipWhiteSpace.exec(this.input);\n        var next = this.pos + skip[0].length,\n          nextCh = this.input.charCodeAt(next);\n        if (nextCh === 40 || nextCh === 46)\n          // '(' or '.'\n          {\n            return this.parseExpressionStatement(node, this.parseExpression());\n          }\n      }\n      if (!this.options.allowImportExportEverywhere) {\n        if (!topLevel) {\n          this.raise(this.start, \"'import' and 'export' may only appear at the top level\");\n        }\n        if (!this.inModule) {\n          this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\");\n        }\n      }\n      return starttype === types$1._import ? this.parseImport(node) : this.parseExport(node, exports);\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    default:\n      if (this.isAsyncFunction()) {\n        if (context) {\n          this.unexpected();\n        }\n        this.next();\n        return this.parseFunctionStatement(node, true, !context);\n      }\n      var maybeName = this.value,\n        expr = this.parseExpression();\n      if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon)) {\n        return this.parseLabeledStatement(node, maybeName, expr, context);\n      } else {\n        return this.parseExpressionStatement(node, expr);\n      }\n  }\n};\npp$8.parseBreakContinueStatement = function (node, keyword) {\n  var isBreak = keyword === \"break\";\n  this.next();\n  if (this.eat(types$1.semi) || this.insertSemicolon()) {\n    node.label = null;\n  } else if (this.type !== types$1.name) {\n    this.unexpected();\n  } else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = 0;\n  for (; i < this.labels.length; ++i) {\n    var lab = this.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) {\n        break;\n      }\n      if (node.label && isBreak) {\n        break;\n      }\n    }\n  }\n  if (i === this.labels.length) {\n    this.raise(node.start, \"Unsyntactic \" + keyword);\n  }\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n};\npp$8.parseDebuggerStatement = function (node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\");\n};\npp$8.parseDoStatement = function (node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"do\");\n  this.labels.pop();\n  this.expect(types$1._while);\n  node.test = this.parseParenExpression();\n  if (this.options.ecmaVersion >= 6) {\n    this.eat(types$1.semi);\n  } else {\n    this.semicolon();\n  }\n  return this.finishNode(node, \"DoWhileStatement\");\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$8.parseForStatement = function (node) {\n  this.next();\n  var awaitAt = this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual(\"await\") ? this.lastTokStart : -1;\n  this.labels.push(loopLabel);\n  this.enterScope(0);\n  this.expect(types$1.parenL);\n  if (this.type === types$1.semi) {\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node, null);\n  }\n  var isLet = this.isLet();\n  if (this.type === types$1._var || this.type === types$1._const || isLet) {\n    var init$1 = this.startNode(),\n      kind = isLet ? \"let\" : this.value;\n    this.next();\n    this.parseVar(init$1, true, kind);\n    this.finishNode(init$1, \"VariableDeclaration\");\n    if ((this.type === types$1._in || this.options.ecmaVersion >= 6 && this.isContextual(\"of\")) && init$1.declarations.length === 1) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types$1._in) {\n          if (awaitAt > -1) {\n            this.unexpected(awaitAt);\n          }\n        } else {\n          node.await = awaitAt > -1;\n        }\n      }\n      return this.parseForIn(node, init$1);\n    }\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node, init$1);\n  }\n  var startsWithLet = this.isContextual(\"let\"),\n    isForOf = false;\n  var refDestructuringErrors = new DestructuringErrors();\n  var init = this.parseExpression(awaitAt > -1 ? \"await\" : true, refDestructuringErrors);\n  if (this.type === types$1._in || (isForOf = this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n    if (this.options.ecmaVersion >= 9) {\n      if (this.type === types$1._in) {\n        if (awaitAt > -1) {\n          this.unexpected(awaitAt);\n        }\n      } else {\n        node.await = awaitAt > -1;\n      }\n    }\n    if (startsWithLet && isForOf) {\n      this.raise(init.start, \"The left-hand side of a for-of loop may not start with 'let'.\");\n    }\n    this.toAssignable(init, false, refDestructuringErrors);\n    this.checkLValPattern(init);\n    return this.parseForIn(node, init);\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  if (awaitAt > -1) {\n    this.unexpected(awaitAt);\n  }\n  return this.parseFor(node, init);\n};\npp$8.parseFunctionStatement = function (node, isAsync, declarationPosition) {\n  this.next();\n  return this.parseFunction(node, FUNC_STATEMENT$1 | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync);\n};\npp$8.parseIfStatement = function (node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  // allow function declarations in branches, but only in non-strict mode\n  node.consequent = this.parseStatement(\"if\");\n  node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n  return this.finishNode(node, \"IfStatement\");\n};\npp$8.parseReturnStatement = function (node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction) {\n    this.raise(this.start, \"'return' outside of function\");\n  }\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(types$1.semi) || this.insertSemicolon()) {\n    node.argument = null;\n  } else {\n    node.argument = this.parseExpression();\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ReturnStatement\");\n};\npp$8.parseSwitchStatement = function (node) {\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types$1.braceL);\n  this.labels.push(switchLabel);\n  this.enterScope(0);\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur;\n  for (var sawDefault = false; this.type !== types$1.braceR;) {\n    if (this.type === types$1._case || this.type === types$1._default) {\n      var isCase = this.type === types$1._case;\n      if (cur) {\n        this.finishNode(cur, \"SwitchCase\");\n      }\n      node.cases.push(cur = this.startNode());\n      cur.consequent = [];\n      this.next();\n      if (isCase) {\n        cur.test = this.parseExpression();\n      } else {\n        if (sawDefault) {\n          this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\");\n        }\n        sawDefault = true;\n        cur.test = null;\n      }\n      this.expect(types$1.colon);\n    } else {\n      if (!cur) {\n        this.unexpected();\n      }\n      cur.consequent.push(this.parseStatement(null));\n    }\n  }\n  this.exitScope();\n  if (cur) {\n    this.finishNode(cur, \"SwitchCase\");\n  }\n  this.next(); // Closing brace\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\");\n};\npp$8.parseThrowStatement = function (node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) {\n    this.raise(this.lastTokEnd, \"Illegal newline after throw\");\n  }\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\");\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty$1 = [];\npp$8.parseTryStatement = function (node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n  if (this.type === types$1._catch) {\n    var clause = this.startNode();\n    this.next();\n    if (this.eat(types$1.parenL)) {\n      clause.param = this.parseBindingAtom();\n      var simple = clause.param.type === \"Identifier\";\n      this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n      this.checkLValPattern(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n      this.expect(types$1.parenR);\n    } else {\n      if (this.options.ecmaVersion < 10) {\n        this.unexpected();\n      }\n      clause.param = null;\n      this.enterScope(0);\n    }\n    clause.body = this.parseBlock(false);\n    this.exitScope();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n  node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n  if (!node.handler && !node.finalizer) {\n    this.raise(node.start, \"Missing catch or finally clause\");\n  }\n  return this.finishNode(node, \"TryStatement\");\n};\npp$8.parseVarStatement = function (node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\");\n};\npp$8.parseWhileStatement = function (node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"while\");\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\");\n};\npp$8.parseWithStatement = function (node) {\n  if (this.strict) {\n    this.raise(this.start, \"'with' in strict mode\");\n  }\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(\"with\");\n  return this.finishNode(node, \"WithStatement\");\n};\npp$8.parseEmptyStatement = function (node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\");\n};\npp$8.parseLabeledStatement = function (node, maybeName, expr, context) {\n  for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1) {\n    var label = list[i$1];\n    if (label.name === maybeName) {\n      this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n    }\n  }\n  var kind = this.type.isLoop ? \"loop\" : this.type === types$1._switch ? \"switch\" : null;\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label$1 = this.labels[i];\n    if (label$1.statementStart === node.start) {\n      // Update information about previous labels on this node\n      label$1.statementStart = this.start;\n      label$1.kind = kind;\n    } else {\n      break;\n    }\n  }\n  this.labels.push({\n    name: maybeName,\n    kind: kind,\n    statementStart: this.start\n  });\n  node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\");\n};\npp$8.parseExpressionStatement = function (node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\");\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$8.parseBlock = function (createNewLexicalScope, node, exitStrict) {\n  if (createNewLexicalScope === void 0) createNewLexicalScope = true;\n  if (node === void 0) node = this.startNode();\n  node.body = [];\n  this.expect(types$1.braceL);\n  if (createNewLexicalScope) {\n    this.enterScope(0);\n  }\n  while (this.type !== types$1.braceR) {\n    var stmt = this.parseStatement(null);\n    node.body.push(stmt);\n  }\n  if (exitStrict) {\n    this.strict = false;\n  }\n  this.next();\n  if (createNewLexicalScope) {\n    this.exitScope();\n  }\n  return this.finishNode(node, \"BlockStatement\");\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$8.parseFor = function (node, init) {\n  node.init = init;\n  this.expect(types$1.semi);\n  node.test = this.type === types$1.semi ? null : this.parseExpression();\n  this.expect(types$1.semi);\n  node.update = this.type === types$1.parenR ? null : this.parseExpression();\n  this.expect(types$1.parenR);\n  node.body = this.parseStatement(\"for\");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\");\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$8.parseForIn = function (node, init) {\n  var isForIn = this.type === types$1._in;\n  this.next();\n  if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.options.ecmaVersion < 8 || this.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n    this.raise(init.start, (isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\");\n  }\n  node.left = init;\n  node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n  this.expect(types$1.parenR);\n  node.body = this.parseStatement(\"for\");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n};\n\n// Parse a list of variable declarations.\n\npp$8.parseVar = function (node, isFor, kind) {\n  node.declarations = [];\n  node.kind = kind;\n  for (;;) {\n    var decl = this.startNode();\n    this.parseVarId(decl, kind);\n    if (this.eat(types$1.eq)) {\n      decl.init = this.parseMaybeAssign(isFor);\n    } else if (kind === \"const\" && !(this.type === types$1._in || this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n      this.unexpected();\n    } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.type === types$1._in || this.isContextual(\"of\")))) {\n      this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n    if (!this.eat(types$1.comma)) {\n      break;\n    }\n  }\n  return node;\n};\npp$8.parseVarId = function (decl, kind) {\n  decl.id = this.parseBindingAtom();\n  this.checkLValPattern(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n};\nvar FUNC_STATEMENT$1 = 1,\n  FUNC_HANGING_STATEMENT = 2,\n  FUNC_NULLABLE_ID$1 = 4;\n\n// Parse a function declaration or literal (depending on the\n// `statement & FUNC_STATEMENT`).\n\n// Remove `allowExpressionBody` for 7.0.0, as it is only called with false\npp$8.parseFunction = function (node, statement, allowExpressionBody, isAsync, forInit) {\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n    if (this.type === types$1.star && statement & FUNC_HANGING_STATEMENT) {\n      this.unexpected();\n    }\n    node.generator = this.eat(types$1.star);\n  }\n  if (this.options.ecmaVersion >= 8) {\n    node.async = !!isAsync;\n  }\n  if (statement & FUNC_STATEMENT$1) {\n    node.id = statement & FUNC_NULLABLE_ID$1 && this.type !== types$1.name ? null : this.parseIdent();\n    if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n      // If it is a regular function declaration in sloppy mode, then it is\n      // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n      // mode depends on properties of the current scope (see\n      // treatFunctionsAsVar).\n      {\n        this.checkLValSimple(node.id, this.strict || node.generator || node.async ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION);\n      }\n  }\n  var oldYieldPos = this.yieldPos,\n    oldAwaitPos = this.awaitPos,\n    oldAwaitIdentPos = this.awaitIdentPos;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(node.async, node.generator));\n  if (!(statement & FUNC_STATEMENT$1)) {\n    node.id = this.type === types$1.name ? this.parseIdent() : null;\n  }\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody, false, forInit);\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, statement & FUNC_STATEMENT$1 ? \"FunctionDeclaration\" : \"FunctionExpression\");\n};\npp$8.parseFunctionParams = function (node) {\n  this.expect(types$1.parenL);\n  node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$8.parseClass = function (node, isStatement) {\n  this.next();\n\n  // ecma-262 14.6 Class Definitions\n  // A class definition is always strict mode code.\n  var oldStrict = this.strict;\n  this.strict = true;\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var privateNameMap = this.enterClassBody();\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(types$1.braceL);\n  while (this.type !== types$1.braceR) {\n    var element = this.parseClassElement(node.superClass !== null);\n    if (element) {\n      classBody.body.push(element);\n      if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n        if (hadConstructor) {\n          this.raise(element.start, \"Duplicate constructor in the same class\");\n        }\n        hadConstructor = true;\n      } else if (element.key && element.key.type === \"PrivateIdentifier\" && isPrivateNameConflicted(privateNameMap, element)) {\n        this.raiseRecoverable(element.key.start, \"Identifier '#\" + element.key.name + \"' has already been declared\");\n      }\n    }\n  }\n  this.strict = oldStrict;\n  this.next();\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  this.exitClassBody();\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n};\npp$8.parseClassElement = function (constructorAllowsSuper) {\n  if (this.eat(types$1.semi)) {\n    return null;\n  }\n  var ecmaVersion = this.options.ecmaVersion;\n  var node = this.startNode();\n  var keyName = \"\";\n  var isGenerator = false;\n  var isAsync = false;\n  var kind = \"method\";\n  var isStatic = false;\n  if (this.eatContextual(\"static\")) {\n    // Parse static init block\n    if (ecmaVersion >= 13 && this.eat(types$1.braceL)) {\n      this.parseClassStaticBlock(node);\n      return node;\n    }\n    if (this.isClassElementNameStart() || this.type === types$1.star) {\n      isStatic = true;\n    } else {\n      keyName = \"static\";\n    }\n  }\n  node.static = isStatic;\n  if (!keyName && ecmaVersion >= 8 && this.eatContextual(\"async\")) {\n    if ((this.isClassElementNameStart() || this.type === types$1.star) && !this.canInsertSemicolon()) {\n      isAsync = true;\n    } else {\n      keyName = \"async\";\n    }\n  }\n  if (!keyName && (ecmaVersion >= 9 || !isAsync) && this.eat(types$1.star)) {\n    isGenerator = true;\n  }\n  if (!keyName && !isAsync && !isGenerator) {\n    var lastValue = this.value;\n    if (this.eatContextual(\"get\") || this.eatContextual(\"set\")) {\n      if (this.isClassElementNameStart()) {\n        kind = lastValue;\n      } else {\n        keyName = lastValue;\n      }\n    }\n  }\n\n  // Parse element name\n  if (keyName) {\n    // 'async', 'get', 'set', or 'static' were not a keyword contextually.\n    // The last token is any of those. Make it the element name.\n    node.computed = false;\n    node.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc);\n    node.key.name = keyName;\n    this.finishNode(node.key, \"Identifier\");\n  } else {\n    this.parseClassElementName(node);\n  }\n\n  // Parse element value\n  if (ecmaVersion < 13 || this.type === types$1.parenL || kind !== \"method\" || isGenerator || isAsync) {\n    var isConstructor = !node.static && checkKeyName(node, \"constructor\");\n    var allowsDirectSuper = isConstructor && constructorAllowsSuper;\n    // Couldn't move this check into the 'parseClassMethod' method for backward compatibility.\n    if (isConstructor && kind !== \"method\") {\n      this.raise(node.key.start, \"Constructor can't have get/set modifier\");\n    }\n    node.kind = isConstructor ? \"constructor\" : kind;\n    this.parseClassMethod(node, isGenerator, isAsync, allowsDirectSuper);\n  } else {\n    this.parseClassField(node);\n  }\n  return node;\n};\npp$8.isClassElementNameStart = function () {\n  return this.type === types$1.name || this.type === types$1.privateId || this.type === types$1.num || this.type === types$1.string || this.type === types$1.bracketL || this.type.keyword;\n};\npp$8.parseClassElementName = function (element) {\n  if (this.type === types$1.privateId) {\n    if (this.value === \"constructor\") {\n      this.raise(this.start, \"Classes can't have an element named '#constructor'\");\n    }\n    element.computed = false;\n    element.key = this.parsePrivateIdent();\n  } else {\n    this.parsePropertyName(element);\n  }\n};\npp$8.parseClassMethod = function (method, isGenerator, isAsync, allowsDirectSuper) {\n  // Check key and flags\n  var key = method.key;\n  if (method.kind === \"constructor\") {\n    if (isGenerator) {\n      this.raise(key.start, \"Constructor can't be a generator\");\n    }\n    if (isAsync) {\n      this.raise(key.start, \"Constructor can't be an async method\");\n    }\n  } else if (method.static && checkKeyName(method, \"prototype\")) {\n    this.raise(key.start, \"Classes may not have a static property named prototype\");\n  }\n\n  // Parse value\n  var value = method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n\n  // Check value\n  if (method.kind === \"get\" && value.params.length !== 0) {\n    this.raiseRecoverable(value.start, \"getter should have no params\");\n  }\n  if (method.kind === \"set\" && value.params.length !== 1) {\n    this.raiseRecoverable(value.start, \"setter should have exactly one param\");\n  }\n  if (method.kind === \"set\" && value.params[0].type === \"RestElement\") {\n    this.raiseRecoverable(value.params[0].start, \"Setter cannot use rest params\");\n  }\n  return this.finishNode(method, \"MethodDefinition\");\n};\npp$8.parseClassField = function (field) {\n  if (checkKeyName(field, \"constructor\")) {\n    this.raise(field.key.start, \"Classes can't have a field named 'constructor'\");\n  } else if (field.static && checkKeyName(field, \"prototype\")) {\n    this.raise(field.key.start, \"Classes can't have a static field named 'prototype'\");\n  }\n  if (this.eat(types$1.eq)) {\n    // To raise SyntaxError if 'arguments' exists in the initializer.\n    var scope = this.currentThisScope();\n    var inClassFieldInit = scope.inClassFieldInit;\n    scope.inClassFieldInit = true;\n    field.value = this.parseMaybeAssign();\n    scope.inClassFieldInit = inClassFieldInit;\n  } else {\n    field.value = null;\n  }\n  this.semicolon();\n  return this.finishNode(field, \"PropertyDefinition\");\n};\npp$8.parseClassStaticBlock = function (node) {\n  node.body = [];\n  var oldLabels = this.labels;\n  this.labels = [];\n  this.enterScope(SCOPE_CLASS_STATIC_BLOCK | SCOPE_SUPER);\n  while (this.type !== types$1.braceR) {\n    var stmt = this.parseStatement(null);\n    node.body.push(stmt);\n  }\n  this.next();\n  this.exitScope();\n  this.labels = oldLabels;\n  return this.finishNode(node, \"StaticBlock\");\n};\npp$8.parseClassId = function (node, isStatement) {\n  if (this.type === types$1.name) {\n    node.id = this.parseIdent();\n    if (isStatement) {\n      this.checkLValSimple(node.id, BIND_LEXICAL, false);\n    }\n  } else {\n    if (isStatement === true) {\n      this.unexpected();\n    }\n    node.id = null;\n  }\n};\npp$8.parseClassSuper = function (node) {\n  node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts(false) : null;\n};\npp$8.enterClassBody = function () {\n  var element = {\n    declared: Object.create(null),\n    used: []\n  };\n  this.privateNameStack.push(element);\n  return element.declared;\n};\npp$8.exitClassBody = function () {\n  var ref = this.privateNameStack.pop();\n  var declared = ref.declared;\n  var used = ref.used;\n  var len = this.privateNameStack.length;\n  var parent = len === 0 ? null : this.privateNameStack[len - 1];\n  for (var i = 0; i < used.length; ++i) {\n    var id = used[i];\n    if (!hasOwn(declared, id.name)) {\n      if (parent) {\n        parent.used.push(id);\n      } else {\n        this.raiseRecoverable(id.start, \"Private field '#\" + id.name + \"' must be declared in an enclosing class\");\n      }\n    }\n  }\n};\nfunction isPrivateNameConflicted(privateNameMap, element) {\n  var name = element.key.name;\n  var curr = privateNameMap[name];\n  var next = \"true\";\n  if (element.type === \"MethodDefinition\" && (element.kind === \"get\" || element.kind === \"set\")) {\n    next = (element.static ? \"s\" : \"i\") + element.kind;\n  }\n\n  // `class { get #a(){}; static set #a(_){} }` is also conflict.\n  if (curr === \"iget\" && next === \"iset\" || curr === \"iset\" && next === \"iget\" || curr === \"sget\" && next === \"sset\" || curr === \"sset\" && next === \"sget\") {\n    privateNameMap[name] = \"true\";\n    return false;\n  } else if (!curr) {\n    privateNameMap[name] = next;\n    return false;\n  } else {\n    return true;\n  }\n}\nfunction checkKeyName(node, name) {\n  var computed = node.computed;\n  var key = node.key;\n  return !computed && (key.type === \"Identifier\" && key.name === name || key.type === \"Literal\" && key.value === name);\n}\n\n// Parses module export declaration.\n\npp$8.parseExport = function (node, exports) {\n  this.next();\n  // export * from '...'\n  if (this.eat(types$1.star)) {\n    if (this.options.ecmaVersion >= 11) {\n      if (this.eatContextual(\"as\")) {\n        node.exported = this.parseModuleExportName();\n        this.checkExport(exports, node.exported, this.lastTokStart);\n      } else {\n        node.exported = null;\n      }\n    }\n    this.expectContextual(\"from\");\n    if (this.type !== types$1.string) {\n      this.unexpected();\n    }\n    node.source = this.parseExprAtom();\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\");\n  }\n  if (this.eat(types$1._default)) {\n    // export default ...\n    this.checkExport(exports, \"default\", this.lastTokStart);\n    var isAsync;\n    if (this.type === types$1._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n      if (isAsync) {\n        this.next();\n      }\n      node.declaration = this.parseFunction(fNode, FUNC_STATEMENT$1 | FUNC_NULLABLE_ID$1, false, isAsync);\n    } else if (this.type === types$1._class) {\n      var cNode = this.startNode();\n      node.declaration = this.parseClass(cNode, \"nullableID\");\n    } else {\n      node.declaration = this.parseMaybeAssign();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportDefaultDeclaration\");\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(null);\n    if (node.declaration.type === \"VariableDeclaration\") {\n      this.checkVariableExport(exports, node.declaration.declarations);\n    } else {\n      this.checkExport(exports, node.declaration.id, node.declaration.id.start);\n    }\n    node.specifiers = [];\n    node.source = null;\n  } else {\n    // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers(exports);\n    if (this.eatContextual(\"from\")) {\n      if (this.type !== types$1.string) {\n        this.unexpected();\n      }\n      node.source = this.parseExprAtom();\n    } else {\n      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n        // check for keywords used as local names\n        var spec = list[i];\n        this.checkUnreserved(spec.local);\n        // check if export is defined\n        this.checkLocalExport(spec.local);\n        if (spec.local.type === \"Literal\") {\n          this.raise(spec.local.start, \"A string literal cannot be used as an exported binding without `from`.\");\n        }\n      }\n      node.source = null;\n    }\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\");\n};\npp$8.checkExport = function (exports, name, pos) {\n  if (!exports) {\n    return;\n  }\n  if (typeof name !== \"string\") {\n    name = name.type === \"Identifier\" ? name.name : name.value;\n  }\n  if (hasOwn(exports, name)) {\n    this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\");\n  }\n  exports[name] = true;\n};\npp$8.checkPatternExport = function (exports, pat) {\n  var type = pat.type;\n  if (type === \"Identifier\") {\n    this.checkExport(exports, pat, pat.start);\n  } else if (type === \"ObjectPattern\") {\n    for (var i = 0, list = pat.properties; i < list.length; i += 1) {\n      var prop = list[i];\n      this.checkPatternExport(exports, prop);\n    }\n  } else if (type === \"ArrayPattern\") {\n    for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n      var elt = list$1[i$1];\n      if (elt) {\n        this.checkPatternExport(exports, elt);\n      }\n    }\n  } else if (type === \"Property\") {\n    this.checkPatternExport(exports, pat.value);\n  } else if (type === \"AssignmentPattern\") {\n    this.checkPatternExport(exports, pat.left);\n  } else if (type === \"RestElement\") {\n    this.checkPatternExport(exports, pat.argument);\n  } else if (type === \"ParenthesizedExpression\") {\n    this.checkPatternExport(exports, pat.expression);\n  }\n};\npp$8.checkVariableExport = function (exports, decls) {\n  if (!exports) {\n    return;\n  }\n  for (var i = 0, list = decls; i < list.length; i += 1) {\n    var decl = list[i];\n    this.checkPatternExport(exports, decl.id);\n  }\n};\npp$8.shouldParseExportStatement = function () {\n  return this.type.keyword === \"var\" || this.type.keyword === \"const\" || this.type.keyword === \"class\" || this.type.keyword === \"function\" || this.isLet() || this.isAsyncFunction();\n};\n\n// Parses a comma-separated list of module exports.\n\npp$8.parseExportSpecifiers = function (exports) {\n  var nodes = [],\n    first = true;\n  // export { x, y as z } [from '...']\n  this.expect(types$1.braceL);\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.afterTrailingComma(types$1.braceR)) {\n        break;\n      }\n    } else {\n      first = false;\n    }\n    var node = this.startNode();\n    node.local = this.parseModuleExportName();\n    node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local;\n    this.checkExport(exports, node.exported, node.exported.start);\n    nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n  }\n  return nodes;\n};\n\n// Parses import declaration.\n\npp$8.parseImport = function (node) {\n  this.next();\n  // import '...'\n  if (this.type === types$1.string) {\n    node.specifiers = empty$1;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === types$1.string ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\");\n};\n\n// Parses a comma-separated list of module imports.\n\npp$8.parseImportSpecifiers = function () {\n  var nodes = [],\n    first = true;\n  if (this.type === types$1.name) {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLValSimple(node.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n    if (!this.eat(types$1.comma)) {\n      return nodes;\n    }\n  }\n  if (this.type === types$1.star) {\n    var node$1 = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node$1.local = this.parseIdent();\n    this.checkLValSimple(node$1.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n    return nodes;\n  }\n  this.expect(types$1.braceL);\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.afterTrailingComma(types$1.braceR)) {\n        break;\n      }\n    } else {\n      first = false;\n    }\n    var node$2 = this.startNode();\n    node$2.imported = this.parseModuleExportName();\n    if (this.eatContextual(\"as\")) {\n      node$2.local = this.parseIdent();\n    } else {\n      this.checkUnreserved(node$2.imported);\n      node$2.local = node$2.imported;\n    }\n    this.checkLValSimple(node$2.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node$2, \"ImportSpecifier\"));\n  }\n  return nodes;\n};\npp$8.parseModuleExportName = function () {\n  if (this.options.ecmaVersion >= 13 && this.type === types$1.string) {\n    var stringLiteral = this.parseLiteral(this.value);\n    if (loneSurrogate.test(stringLiteral.value)) {\n      this.raise(stringLiteral.start, \"An export name cannot include a lone surrogate.\");\n    }\n    return stringLiteral;\n  }\n  return this.parseIdent(true);\n};\n\n// Set `ExpressionStatement#directive` property for directive prologues.\npp$8.adaptDirectivePrologue = function (statements) {\n  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n    statements[i].directive = statements[i].expression.raw.slice(1, -1);\n  }\n};\npp$8.isDirectiveCandidate = function (statement) {\n  return this.options.ecmaVersion >= 5 && statement.type === \"ExpressionStatement\" && statement.expression.type === \"Literal\" && typeof statement.expression.value === \"string\" && (\n  // Reject parenthesized strings.\n  this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\");\n};\nvar pp$7 = Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$7.toAssignable = function (node, isBinding, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n      case \"Identifier\":\n        if (this.inAsync && node.name === \"await\") {\n          this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\");\n        }\n        break;\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        if (refDestructuringErrors) {\n          this.checkPatternErrors(refDestructuringErrors, true);\n        }\n        for (var i = 0, list = node.properties; i < list.length; i += 1) {\n          var prop = list[i];\n          this.toAssignable(prop, isBinding);\n          // Early error:\n          //   AssignmentRestProperty[Yield, Await] :\n          //     `...` DestructuringAssignmentTarget[Yield, Await]\n          //\n          //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n          if (prop.type === \"RestElement\" && (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")) {\n            this.raise(prop.argument.start, \"Unexpected token\");\n          }\n        }\n        break;\n      case \"Property\":\n        // AssignmentProperty has type === \"Property\"\n        if (node.kind !== \"init\") {\n          this.raise(node.key.start, \"Object pattern can't contain getter or setter\");\n        }\n        this.toAssignable(node.value, isBinding);\n        break;\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        if (refDestructuringErrors) {\n          this.checkPatternErrors(refDestructuringErrors, true);\n        }\n        this.toAssignableList(node.elements, isBinding);\n        break;\n      case \"SpreadElement\":\n        node.type = \"RestElement\";\n        this.toAssignable(node.argument, isBinding);\n        if (node.argument.type === \"AssignmentPattern\") {\n          this.raise(node.argument.start, \"Rest elements cannot have a default value\");\n        }\n        break;\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\");\n        }\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isBinding);\n        break;\n      case \"ParenthesizedExpression\":\n        this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n        break;\n      case \"ChainExpression\":\n        this.raiseRecoverable(node.start, \"Optional chaining cannot appear in left-hand side\");\n        break;\n      case \"MemberExpression\":\n        if (!isBinding) {\n          break;\n        }\n      default:\n        this.raise(node.start, \"Assigning to rvalue\");\n    }\n  } else if (refDestructuringErrors) {\n    this.checkPatternErrors(refDestructuringErrors, true);\n  }\n  return node;\n};\n\n// Convert list of expression atoms to binding list.\n\npp$7.toAssignableList = function (exprList, isBinding) {\n  var end = exprList.length;\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) {\n      this.toAssignable(elt, isBinding);\n    }\n  }\n  if (end) {\n    var last = exprList[end - 1];\n    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\") {\n      this.unexpected(last.argument.start);\n    }\n  }\n  return exprList;\n};\n\n// Parses spread element.\n\npp$7.parseSpread = function (refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n  return this.finishNode(node, \"SpreadElement\");\n};\npp$7.parseRestBinding = function () {\n  var node = this.startNode();\n  this.next();\n\n  // RestElement inside of a function parameter must be an identifier\n  if (this.options.ecmaVersion === 6 && this.type !== types$1.name) {\n    this.unexpected();\n  }\n  node.argument = this.parseBindingAtom();\n  return this.finishNode(node, \"RestElement\");\n};\n\n// Parses lvalue (assignable) atom.\n\npp$7.parseBindingAtom = function () {\n  if (this.options.ecmaVersion >= 6) {\n    switch (this.type) {\n      case types$1.bracketL:\n        var node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(types$1.bracketR, true, true);\n        return this.finishNode(node, \"ArrayPattern\");\n      case types$1.braceL:\n        return this.parseObj(true);\n    }\n  }\n  return this.parseIdent();\n};\npp$7.parseBindingList = function (close, allowEmpty, allowTrailingComma) {\n  var elts = [],\n    first = true;\n  while (!this.eat(close)) {\n    if (first) {\n      first = false;\n    } else {\n      this.expect(types$1.comma);\n    }\n    if (allowEmpty && this.type === types$1.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n      break;\n    } else if (this.type === types$1.ellipsis) {\n      var rest = this.parseRestBinding();\n      this.parseBindingListItem(rest);\n      elts.push(rest);\n      if (this.type === types$1.comma) {\n        this.raise(this.start, \"Comma is not permitted after the rest element\");\n      }\n      this.expect(close);\n      break;\n    } else {\n      var elem = this.parseMaybeDefault(this.start, this.startLoc);\n      this.parseBindingListItem(elem);\n      elts.push(elem);\n    }\n  }\n  return elts;\n};\npp$7.parseBindingListItem = function (param) {\n  return param;\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp$7.parseMaybeDefault = function (startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n  if (this.options.ecmaVersion < 6 || !this.eat(types$1.eq)) {\n    return left;\n  }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\");\n};\n\n// The following three functions all verify that a node is an lvalue —\n// something that can be bound, or assigned to. In order to do so, they perform\n// a variety of checks:\n//\n// - Check that none of the bound/assigned-to identifiers are reserved words.\n// - Record name declarations for bindings in the appropriate scope.\n// - Check duplicate argument names, if checkClashes is set.\n//\n// If a complex binding pattern is encountered (e.g., object and array\n// destructuring), the entire pattern is recursively checked.\n//\n// There are three versions of checkLVal*() appropriate for different\n// circumstances:\n//\n// - checkLValSimple() shall be used if the syntactic construct supports\n//   nothing other than identifiers and member expressions. Parenthesized\n//   expressions are also correctly handled. This is generally appropriate for\n//   constructs for which the spec says\n//\n//   > It is a Syntax Error if AssignmentTargetType of [the production] is not\n//   > simple.\n//\n//   It is also appropriate for checking if an identifier is valid and not\n//   defined elsewhere, like import declarations or function/class identifiers.\n//\n//   Examples where this is used include:\n//     a += …;\n//     import a from '…';\n//   where a is the node to be checked.\n//\n// - checkLValPattern() shall be used if the syntactic construct supports\n//   anything checkLValSimple() supports, as well as object and array\n//   destructuring patterns. This is generally appropriate for constructs for\n//   which the spec says\n//\n//   > It is a Syntax Error if [the production] is neither an ObjectLiteral nor\n//   > an ArrayLiteral and AssignmentTargetType of [the production] is not\n//   > simple.\n//\n//   Examples where this is used include:\n//     (a = …);\n//     const a = …;\n//     try { … } catch (a) { … }\n//   where a is the node to be checked.\n//\n// - checkLValInnerPattern() shall be used if the syntactic construct supports\n//   anything checkLValPattern() supports, as well as default assignment\n//   patterns, rest elements, and other constructs that may appear within an\n//   object or array destructuring pattern.\n//\n//   As a special case, function parameters also use checkLValInnerPattern(),\n//   as they also support defaults and rest constructs.\n//\n// These functions deliberately support both assignment and binding constructs,\n// as the logic for both is exceedingly similar. If the node is the target of\n// an assignment, then bindingType should be set to BIND_NONE. Otherwise, it\n// should be set to the appropriate BIND_* constant, like BIND_VAR or\n// BIND_LEXICAL.\n//\n// If the function is called with a non-BIND_NONE bindingType, then\n// additionally a checkClashes object may be specified to allow checking for\n// duplicate argument names. checkClashes is ignored if the provided construct\n// is an assignment (i.e., bindingType is BIND_NONE).\n\npp$7.checkLValSimple = function (expr, bindingType, checkClashes) {\n  if (bindingType === void 0) bindingType = BIND_NONE;\n  var isBind = bindingType !== BIND_NONE;\n  switch (expr.type) {\n    case \"Identifier\":\n      if (this.strict && this.reservedWordsStrictBind.test(expr.name)) {\n        this.raiseRecoverable(expr.start, (isBind ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\");\n      }\n      if (isBind) {\n        if (bindingType === BIND_LEXICAL && expr.name === \"let\") {\n          this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\");\n        }\n        if (checkClashes) {\n          if (hasOwn(checkClashes, expr.name)) {\n            this.raiseRecoverable(expr.start, \"Argument name clash\");\n          }\n          checkClashes[expr.name] = true;\n        }\n        if (bindingType !== BIND_OUTSIDE) {\n          this.declareName(expr.name, bindingType, expr.start);\n        }\n      }\n      break;\n    case \"ChainExpression\":\n      this.raiseRecoverable(expr.start, \"Optional chaining cannot appear in left-hand side\");\n      break;\n    case \"MemberExpression\":\n      if (isBind) {\n        this.raiseRecoverable(expr.start, \"Binding member expression\");\n      }\n      break;\n    case \"ParenthesizedExpression\":\n      if (isBind) {\n        this.raiseRecoverable(expr.start, \"Binding parenthesized expression\");\n      }\n      return this.checkLValSimple(expr.expression, bindingType, checkClashes);\n    default:\n      this.raise(expr.start, (isBind ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n};\npp$7.checkLValPattern = function (expr, bindingType, checkClashes) {\n  if (bindingType === void 0) bindingType = BIND_NONE;\n  switch (expr.type) {\n    case \"ObjectPattern\":\n      for (var i = 0, list = expr.properties; i < list.length; i += 1) {\n        var prop = list[i];\n        this.checkLValInnerPattern(prop, bindingType, checkClashes);\n      }\n      break;\n    case \"ArrayPattern\":\n      for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n        var elem = list$1[i$1];\n        if (elem) {\n          this.checkLValInnerPattern(elem, bindingType, checkClashes);\n        }\n      }\n      break;\n    default:\n      this.checkLValSimple(expr, bindingType, checkClashes);\n  }\n};\npp$7.checkLValInnerPattern = function (expr, bindingType, checkClashes) {\n  if (bindingType === void 0) bindingType = BIND_NONE;\n  switch (expr.type) {\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      this.checkLValInnerPattern(expr.value, bindingType, checkClashes);\n      break;\n    case \"AssignmentPattern\":\n      this.checkLValPattern(expr.left, bindingType, checkClashes);\n      break;\n    case \"RestElement\":\n      this.checkLValPattern(expr.argument, bindingType, checkClashes);\n      break;\n    default:\n      this.checkLValPattern(expr, bindingType, checkClashes);\n  }\n};\n\n// The algorithm used to determine whether a regexp can appear at a\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n  this.generator = !!generator;\n};\nvar types = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", false),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) {\n    return p.tryReadTemplateToken();\n  }),\n  f_stat: new TokContext(\"function\", false),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n};\nvar pp$6 = Parser.prototype;\npp$6.initialContext = function () {\n  return [types.b_stat];\n};\npp$6.curContext = function () {\n  return this.context[this.context.length - 1];\n};\npp$6.braceIsBlock = function (prevType) {\n  var parent = this.curContext();\n  if (parent === types.f_expr || parent === types.f_stat) {\n    return true;\n  }\n  if (prevType === types$1.colon && (parent === types.b_stat || parent === types.b_expr)) {\n    return !parent.isExpr;\n  }\n\n  // The check for `tt.name && exprAllowed` detects whether we are\n  // after a `yield` or `of` construct. See the `updateContext` for\n  // `tt.name`.\n  if (prevType === types$1._return || prevType === types$1.name && this.exprAllowed) {\n    return lineBreak.test(this.input.slice(this.lastTokEnd, this.start));\n  }\n  if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow) {\n    return true;\n  }\n  if (prevType === types$1.braceL) {\n    return parent === types.b_stat;\n  }\n  if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name) {\n    return false;\n  }\n  return !this.exprAllowed;\n};\npp$6.inGeneratorContext = function () {\n  for (var i = this.context.length - 1; i >= 1; i--) {\n    var context = this.context[i];\n    if (context.token === \"function\") {\n      return context.generator;\n    }\n  }\n  return false;\n};\npp$6.updateContext = function (prevType) {\n  var update,\n    type = this.type;\n  if (type.keyword && prevType === types$1.dot) {\n    this.exprAllowed = false;\n  } else if (update = type.updateContext) {\n    update.call(this, prevType);\n  } else {\n    this.exprAllowed = type.beforeExpr;\n  }\n};\n\n// Used to handle egde cases when token context could not be inferred correctly during tokenization phase\n\npp$6.overrideContext = function (tokenCtx) {\n  if (this.curContext() !== tokenCtx) {\n    this.context[this.context.length - 1] = tokenCtx;\n  }\n};\n\n// Token-specific context update code\n\ntypes$1.parenR.updateContext = types$1.braceR.updateContext = function () {\n  if (this.context.length === 1) {\n    this.exprAllowed = true;\n    return;\n  }\n  var out = this.context.pop();\n  if (out === types.b_stat && this.curContext().token === \"function\") {\n    out = this.context.pop();\n  }\n  this.exprAllowed = !out.isExpr;\n};\ntypes$1.braceL.updateContext = function (prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr);\n  this.exprAllowed = true;\n};\ntypes$1.dollarBraceL.updateContext = function () {\n  this.context.push(types.b_tmpl);\n  this.exprAllowed = true;\n};\ntypes$1.parenL.updateContext = function (prevType) {\n  var statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;\n  this.context.push(statementParens ? types.p_stat : types.p_expr);\n  this.exprAllowed = true;\n};\ntypes$1.incDec.updateContext = function () {\n  // tokExprAllowed stays unchanged\n};\ntypes$1._function.updateContext = types$1._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types$1._else && !(prevType === types$1.semi && this.curContext() !== types.p_stat) && !(prevType === types$1._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) && !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat)) {\n    this.context.push(types.f_expr);\n  } else {\n    this.context.push(types.f_stat);\n  }\n  this.exprAllowed = false;\n};\ntypes$1.backQuote.updateContext = function () {\n  if (this.curContext() === types.q_tmpl) {\n    this.context.pop();\n  } else {\n    this.context.push(types.q_tmpl);\n  }\n  this.exprAllowed = false;\n};\ntypes$1.star.updateContext = function (prevType) {\n  if (prevType === types$1._function) {\n    var index = this.context.length - 1;\n    if (this.context[index] === types.f_expr) {\n      this.context[index] = types.f_expr_gen;\n    } else {\n      this.context[index] = types.f_gen;\n    }\n  }\n  this.exprAllowed = true;\n};\ntypes$1.name.updateContext = function (prevType) {\n  var allowed = false;\n  if (this.options.ecmaVersion >= 6 && prevType !== types$1.dot) {\n    if (this.value === \"of\" && !this.exprAllowed || this.value === \"yield\" && this.inGeneratorContext()) {\n      allowed = true;\n    }\n  }\n  this.exprAllowed = allowed;\n};\n\n// A recursive descent parser operates by defining functions for all\n\nvar pp$5 = Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$5.checkPropClash = function (prop, propHash, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\") {\n    return;\n  }\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand)) {\n    return;\n  }\n  var key = prop.key;\n  var name;\n  switch (key.type) {\n    case \"Identifier\":\n      name = key.name;\n      break;\n    case \"Literal\":\n      name = String(key.value);\n      break;\n    default:\n      return;\n  }\n  var kind = prop.kind;\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) {\n        if (refDestructuringErrors) {\n          if (refDestructuringErrors.doubleProto < 0) {\n            refDestructuringErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\");\n        }\n      }\n      propHash.proto = true;\n    }\n    return;\n  }\n  name = \"$\" + name;\n  var other = propHash[name];\n  if (other) {\n    var redefinition;\n    if (kind === \"init\") {\n      redefinition = this.strict && other.init || other.get || other.set;\n    } else {\n      redefinition = other.init || other[kind];\n    }\n    if (redefinition) {\n      this.raiseRecoverable(key.start, \"Redefinition of property\");\n    }\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n  other[kind] = true;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$5.parseExpression = function (forInit, refDestructuringErrors) {\n  var startPos = this.start,\n    startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(forInit, refDestructuringErrors);\n  if (this.type === types$1.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(types$1.comma)) {\n      node.expressions.push(this.parseMaybeAssign(forInit, refDestructuringErrors));\n    }\n    return this.finishNode(node, \"SequenceExpression\");\n  }\n  return expr;\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$5.parseMaybeAssign = function (forInit, refDestructuringErrors, afterLeftParse) {\n  if (this.isContextual(\"yield\")) {\n    if (this.inGenerator) {\n      return this.parseYield(forInit);\n    }\n    // The tokenizer will assume an expression is allowed after\n    // `yield`, but this isn't that kind of yield\n    else {\n      this.exprAllowed = false;\n    }\n  }\n  var ownDestructuringErrors = false,\n    oldParenAssign = -1,\n    oldTrailingComma = -1,\n    oldDoubleProto = -1;\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n    oldTrailingComma = refDestructuringErrors.trailingComma;\n    oldDoubleProto = refDestructuringErrors.doubleProto;\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n  } else {\n    refDestructuringErrors = new DestructuringErrors();\n    ownDestructuringErrors = true;\n  }\n  var startPos = this.start,\n    startLoc = this.startLoc;\n  if (this.type === types$1.parenL || this.type === types$1.name) {\n    this.potentialArrowAt = this.start;\n    this.potentialArrowInForAwait = forInit === \"await\";\n  }\n  var left = this.parseMaybeConditional(forInit, refDestructuringErrors);\n  if (afterLeftParse) {\n    left = afterLeftParse.call(this, left, startPos, startLoc);\n  }\n  if (this.type.isAssign) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    if (this.type === types$1.eq) {\n      left = this.toAssignable(left, false, refDestructuringErrors);\n    }\n    if (!ownDestructuringErrors) {\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n    }\n    if (refDestructuringErrors.shorthandAssign >= left.start) {\n      refDestructuringErrors.shorthandAssign = -1;\n    } // reset because shorthand default was used correctly\n    if (this.type === types$1.eq) {\n      this.checkLValPattern(left);\n    } else {\n      this.checkLValSimple(left);\n    }\n    node.left = left;\n    this.next();\n    node.right = this.parseMaybeAssign(forInit);\n    if (oldDoubleProto > -1) {\n      refDestructuringErrors.doubleProto = oldDoubleProto;\n    }\n    return this.finishNode(node, \"AssignmentExpression\");\n  } else {\n    if (ownDestructuringErrors) {\n      this.checkExpressionErrors(refDestructuringErrors, true);\n    }\n  }\n  if (oldParenAssign > -1) {\n    refDestructuringErrors.parenthesizedAssign = oldParenAssign;\n  }\n  if (oldTrailingComma > -1) {\n    refDestructuringErrors.trailingComma = oldTrailingComma;\n  }\n  return left;\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$5.parseMaybeConditional = function (forInit, refDestructuringErrors) {\n  var startPos = this.start,\n    startLoc = this.startLoc;\n  var expr = this.parseExprOps(forInit, refDestructuringErrors);\n  if (this.checkExpressionErrors(refDestructuringErrors)) {\n    return expr;\n  }\n  if (this.eat(types$1.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types$1.colon);\n    node.alternate = this.parseMaybeAssign(forInit);\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n  return expr;\n};\n\n// Start the precedence parser.\n\npp$5.parseExprOps = function (forInit, refDestructuringErrors) {\n  var startPos = this.start,\n    startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false, false, forInit);\n  if (this.checkExpressionErrors(refDestructuringErrors)) {\n    return expr;\n  }\n  return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, forInit);\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$5.parseExprOp = function (left, leftStartPos, leftStartLoc, minPrec, forInit) {\n  var prec = this.type.binop;\n  if (prec != null && (!forInit || this.type !== types$1._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === types$1.logicalOR || this.type === types$1.logicalAND;\n      var coalesce = this.type === types$1.coalesce;\n      if (coalesce) {\n        // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n        // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n        prec = types$1.logicalAND.binop;\n      }\n      var op = this.value;\n      this.next();\n      var startPos = this.start,\n        startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false, false, forInit), startPos, startLoc, prec, forInit);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);\n      if (logical && this.type === types$1.coalesce || coalesce && (this.type === types$1.logicalOR || this.type === types$1.logicalAND)) {\n        this.raiseRecoverable(this.start, \"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses\");\n      }\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, forInit);\n    }\n  }\n  return left;\n};\npp$5.buildBinary = function (startPos, startLoc, left, right, op, logical) {\n  if (right.type === \"PrivateIdentifier\") {\n    this.raise(right.start, \"Private identifier can only be left side of binary expression\");\n  }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\");\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp$5.parseMaybeUnary = function (refDestructuringErrors, sawUnary, incDec, forInit) {\n  var startPos = this.start,\n    startLoc = this.startLoc,\n    expr;\n  if (this.isContextual(\"await\") && this.canAwait) {\n    expr = this.parseAwait(forInit);\n    sawUnary = true;\n  } else if (this.type.prefix) {\n    var node = this.startNode(),\n      update = this.type === types$1.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true, update, forInit);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    if (update) {\n      this.checkLValSimple(node.argument);\n    } else if (this.strict && node.operator === \"delete\" && node.argument.type === \"Identifier\") {\n      this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\");\n    } else if (node.operator === \"delete\" && isPrivateFieldAccess(node.argument)) {\n      this.raiseRecoverable(node.start, \"Private fields can not be deleted\");\n    } else {\n      sawUnary = true;\n    }\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else if (!sawUnary && this.type === types$1.privateId) {\n    if (forInit || this.privateNameStack.length === 0) {\n      this.unexpected();\n    }\n    expr = this.parsePrivateIdent();\n    // only could be private fields in 'in', such as #x in obj\n    if (this.type !== types$1._in) {\n      this.unexpected();\n    }\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors, forInit);\n    if (this.checkExpressionErrors(refDestructuringErrors)) {\n      return expr;\n    }\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.operator = this.value;\n      node$1.prefix = false;\n      node$1.argument = expr;\n      this.checkLValSimple(expr);\n      this.next();\n      expr = this.finishNode(node$1, \"UpdateExpression\");\n    }\n  }\n  if (!incDec && this.eat(types$1.starstar)) {\n    if (sawUnary) {\n      this.unexpected(this.lastTokStart);\n    } else {\n      return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false, false, forInit), \"**\", false);\n    }\n  } else {\n    return expr;\n  }\n};\nfunction isPrivateFieldAccess(node) {\n  return node.type === \"MemberExpression\" && node.property.type === \"PrivateIdentifier\" || node.type === \"ChainExpression\" && isPrivateFieldAccess(node.expression);\n}\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$5.parseExprSubscripts = function (refDestructuringErrors, forInit) {\n  var startPos = this.start,\n    startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors, forInit);\n  if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\") {\n    return expr;\n  }\n  var result = this.parseSubscripts(expr, startPos, startLoc, false, forInit);\n  if (refDestructuringErrors && result.type === \"MemberExpression\") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) {\n      refDestructuringErrors.parenthesizedAssign = -1;\n    }\n    if (refDestructuringErrors.parenthesizedBind >= result.start) {\n      refDestructuringErrors.parenthesizedBind = -1;\n    }\n    if (refDestructuringErrors.trailingComma >= result.start) {\n      refDestructuringErrors.trailingComma = -1;\n    }\n  }\n  return result;\n};\npp$5.parseSubscripts = function (base, startPos, startLoc, noCalls, forInit) {\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" && this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && this.potentialArrowAt === base.start;\n  var optionalChained = false;\n  while (true) {\n    var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit);\n    if (element.optional) {\n      optionalChained = true;\n    }\n    if (element === base || element.type === \"ArrowFunctionExpression\") {\n      if (optionalChained) {\n        var chainNode = this.startNodeAt(startPos, startLoc);\n        chainNode.expression = element;\n        element = this.finishNode(chainNode, \"ChainExpression\");\n      }\n      return element;\n    }\n    base = element;\n  }\n};\npp$5.parseSubscript = function (base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit) {\n  var optionalSupported = this.options.ecmaVersion >= 11;\n  var optional = optionalSupported && this.eat(types$1.questionDot);\n  if (noCalls && optional) {\n    this.raise(this.lastTokStart, \"Optional chaining cannot appear in the callee of new expressions\");\n  }\n  var computed = this.eat(types$1.bracketL);\n  if (computed || optional && this.type !== types$1.parenL && this.type !== types$1.backQuote || this.eat(types$1.dot)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(types$1.bracketR);\n    } else if (this.type === types$1.privateId && base.type !== \"Super\") {\n      node.property = this.parsePrivateIdent();\n    } else {\n      node.property = this.parseIdent(this.options.allowReserved !== \"never\");\n    }\n    node.computed = !!computed;\n    if (optionalSupported) {\n      node.optional = optional;\n    }\n    base = this.finishNode(node, \"MemberExpression\");\n  } else if (!noCalls && this.eat(types$1.parenL)) {\n    var refDestructuringErrors = new DestructuringErrors(),\n      oldYieldPos = this.yieldPos,\n      oldAwaitPos = this.awaitPos,\n      oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    var exprList = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n    if (maybeAsyncArrow && !optional && !this.canInsertSemicolon() && this.eat(types$1.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      if (this.awaitIdentPos > 0) {\n        this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\");\n      }\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos;\n      return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true, forInit);\n    }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n    var node$1 = this.startNodeAt(startPos, startLoc);\n    node$1.callee = base;\n    node$1.arguments = exprList;\n    if (optionalSupported) {\n      node$1.optional = optional;\n    }\n    base = this.finishNode(node$1, \"CallExpression\");\n  } else if (this.type === types$1.backQuote) {\n    if (optional || optionalChained) {\n      this.raise(this.start, \"Optional chaining cannot appear in the tag of tagged template expressions\");\n    }\n    var node$2 = this.startNodeAt(startPos, startLoc);\n    node$2.tag = base;\n    node$2.quasi = this.parseTemplate({\n      isTagged: true\n    });\n    base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n  }\n  return base;\n};\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$5.parseExprAtom = function (refDestructuringErrors, forInit) {\n  // If a division operator appears in an expression position, the\n  // tokenizer got confused, and we force it to read a regexp instead.\n  if (this.type === types$1.slash) {\n    this.readRegexp();\n  }\n  var node,\n    canBeArrow = this.potentialArrowAt === this.start;\n  switch (this.type) {\n    case types$1._super:\n      if (!this.allowSuper) {\n        this.raise(this.start, \"'super' keyword outside a method\");\n      }\n      node = this.startNode();\n      this.next();\n      if (this.type === types$1.parenL && !this.allowDirectSuper) {\n        this.raise(node.start, \"super() call outside constructor of a subclass\");\n      }\n      // The `super` keyword can appear at below:\n      // SuperProperty:\n      //     super [ Expression ]\n      //     super . IdentifierName\n      // SuperCall:\n      //     super ( Arguments )\n      if (this.type !== types$1.dot && this.type !== types$1.bracketL && this.type !== types$1.parenL) {\n        this.unexpected();\n      }\n      return this.finishNode(node, \"Super\");\n    case types$1._this:\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, \"ThisExpression\");\n    case types$1.name:\n      var startPos = this.start,\n        startLoc = this.startLoc,\n        containsEsc = this.containsEsc;\n      var id = this.parseIdent(false);\n      if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types$1._function)) {\n        this.overrideContext(types.f_expr);\n        return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true, forInit);\n      }\n      if (canBeArrow && !this.canInsertSemicolon()) {\n        if (this.eat(types$1.arrow)) {\n          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false, forInit);\n        }\n        if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types$1.name && !containsEsc && (!this.potentialArrowInForAwait || this.value !== \"of\" || this.containsEsc)) {\n          id = this.parseIdent(false);\n          if (this.canInsertSemicolon() || !this.eat(types$1.arrow)) {\n            this.unexpected();\n          }\n          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true, forInit);\n        }\n      }\n      return id;\n    case types$1.regexp:\n      var value = this.value;\n      node = this.parseLiteral(value.value);\n      node.regex = {\n        pattern: value.pattern,\n        flags: value.flags\n      };\n      return node;\n    case types$1.num:\n    case types$1.string:\n      return this.parseLiteral(this.value);\n    case types$1._null:\n    case types$1._true:\n    case types$1._false:\n      node = this.startNode();\n      node.value = this.type === types$1._null ? null : this.type === types$1._true;\n      node.raw = this.type.keyword;\n      this.next();\n      return this.finishNode(node, \"Literal\");\n    case types$1.parenL:\n      var start = this.start,\n        expr = this.parseParenAndDistinguishExpression(canBeArrow, forInit);\n      if (refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr)) {\n          refDestructuringErrors.parenthesizedAssign = start;\n        }\n        if (refDestructuringErrors.parenthesizedBind < 0) {\n          refDestructuringErrors.parenthesizedBind = start;\n        }\n      }\n      return expr;\n    case types$1.bracketL:\n      node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(types$1.bracketR, true, true, refDestructuringErrors);\n      return this.finishNode(node, \"ArrayExpression\");\n    case types$1.braceL:\n      this.overrideContext(types.b_expr);\n      return this.parseObj(false, refDestructuringErrors);\n    case types$1._function:\n      node = this.startNode();\n      this.next();\n      return this.parseFunction(node, 0);\n    case types$1._class:\n      return this.parseClass(this.startNode(), false);\n    case types$1._new:\n      return this.parseNew();\n    case types$1.backQuote:\n      return this.parseTemplate();\n    case types$1._import:\n      if (this.options.ecmaVersion >= 11) {\n        return this.parseExprImport();\n      } else {\n        return this.unexpected();\n      }\n    default:\n      this.unexpected();\n  }\n};\npp$5.parseExprImport = function () {\n  var node = this.startNode();\n\n  // Consume `import` as an identifier for `import.meta`.\n  // Because `this.parseIdent(true)` doesn't check escape sequences, it needs the check of `this.containsEsc`.\n  if (this.containsEsc) {\n    this.raiseRecoverable(this.start, \"Escape sequence in keyword import\");\n  }\n  var meta = this.parseIdent(true);\n  switch (this.type) {\n    case types$1.parenL:\n      return this.parseDynamicImport(node);\n    case types$1.dot:\n      node.meta = meta;\n      return this.parseImportMeta(node);\n    default:\n      this.unexpected();\n  }\n};\npp$5.parseDynamicImport = function (node) {\n  this.next(); // skip `(`\n\n  // Parse node.source.\n  node.source = this.parseMaybeAssign();\n\n  // Verify ending.\n  if (!this.eat(types$1.parenR)) {\n    var errorPos = this.start;\n    if (this.eat(types$1.comma) && this.eat(types$1.parenR)) {\n      this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n    } else {\n      this.unexpected(errorPos);\n    }\n  }\n  return this.finishNode(node, \"ImportExpression\");\n};\npp$5.parseImportMeta = function (node) {\n  this.next(); // skip `.`\n\n  var containsEsc = this.containsEsc;\n  node.property = this.parseIdent(true);\n  if (node.property.name !== \"meta\") {\n    this.raiseRecoverable(node.property.start, \"The only valid meta property for import is 'import.meta'\");\n  }\n  if (containsEsc) {\n    this.raiseRecoverable(node.start, \"'import.meta' must not contain escaped characters\");\n  }\n  if (this.options.sourceType !== \"module\" && !this.options.allowImportExportEverywhere) {\n    this.raiseRecoverable(node.start, \"Cannot use 'import.meta' outside a module\");\n  }\n  return this.finishNode(node, \"MetaProperty\");\n};\npp$5.parseLiteral = function (value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  if (node.raw.charCodeAt(node.raw.length - 1) === 110) {\n    node.bigint = node.raw.slice(0, -1).replace(/_/g, \"\");\n  }\n  this.next();\n  return this.finishNode(node, \"Literal\");\n};\npp$5.parseParenExpression = function () {\n  this.expect(types$1.parenL);\n  var val = this.parseExpression();\n  this.expect(types$1.parenR);\n  return val;\n};\npp$5.parseParenAndDistinguishExpression = function (canBeArrow, forInit) {\n  var startPos = this.start,\n    startLoc = this.startLoc,\n    val,\n    allowTrailingComma = this.options.ecmaVersion >= 8;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n    var innerStartPos = this.start,\n      innerStartLoc = this.startLoc;\n    var exprList = [],\n      first = true,\n      lastIsComma = false;\n    var refDestructuringErrors = new DestructuringErrors(),\n      oldYieldPos = this.yieldPos,\n      oldAwaitPos = this.awaitPos,\n      spreadStart;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    // Do not save awaitIdentPos to allow checking awaits nested in parameters\n    while (this.type !== types$1.parenR) {\n      first ? first = false : this.expect(types$1.comma);\n      if (allowTrailingComma && this.afterTrailingComma(types$1.parenR, true)) {\n        lastIsComma = true;\n        break;\n      } else if (this.type === types$1.ellipsis) {\n        spreadStart = this.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding()));\n        if (this.type === types$1.comma) {\n          this.raise(this.start, \"Comma is not permitted after the rest element\");\n        }\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n      }\n    }\n    var innerEndPos = this.lastTokEnd,\n      innerEndLoc = this.lastTokEndLoc;\n    this.expect(types$1.parenR);\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types$1.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      return this.parseParenArrowList(startPos, startLoc, exprList, forInit);\n    }\n    if (!exprList.length || lastIsComma) {\n      this.unexpected(this.lastTokStart);\n    }\n    if (spreadStart) {\n      this.unexpected(spreadStart);\n    }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\");\n  } else {\n    return val;\n  }\n};\npp$5.parseParenItem = function (item) {\n  return item;\n};\npp$5.parseParenArrowList = function (startPos, startLoc, exprList, forInit) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, false, forInit);\n};\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty = [];\npp$5.parseNew = function () {\n  if (this.containsEsc) {\n    this.raiseRecoverable(this.start, \"Escape sequence in keyword new\");\n  }\n  var node = this.startNode();\n  var meta = this.parseIdent(true);\n  if (this.options.ecmaVersion >= 6 && this.eat(types$1.dot)) {\n    node.meta = meta;\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"target\") {\n      this.raiseRecoverable(node.property.start, \"The only valid meta property for new is 'new.target'\");\n    }\n    if (containsEsc) {\n      this.raiseRecoverable(node.start, \"'new.target' must not contain escaped characters\");\n    }\n    if (!this.allowNewDotTarget) {\n      this.raiseRecoverable(node.start, \"'new.target' can only be used in functions and class static block\");\n    }\n    return this.finishNode(node, \"MetaProperty\");\n  }\n  var startPos = this.start,\n    startLoc = this.startLoc,\n    isImport = this.type === types$1._import;\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true, false);\n  if (isImport && node.callee.type === \"ImportExpression\") {\n    this.raise(startPos, \"Cannot use new with import()\");\n  }\n  if (this.eat(types$1.parenL)) {\n    node.arguments = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false);\n  } else {\n    node.arguments = empty;\n  }\n  return this.finishNode(node, \"NewExpression\");\n};\n\n// Parse template expression.\n\npp$5.parseTemplateElement = function (ref) {\n  var isTagged = ref.isTagged;\n  var elem = this.startNode();\n  if (this.type === types$1.invalidTemplate) {\n    if (!isTagged) {\n      this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n    }\n    elem.value = {\n      raw: this.value,\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.value\n    };\n  }\n  this.next();\n  elem.tail = this.type === types$1.backQuote;\n  return this.finishNode(elem, \"TemplateElement\");\n};\npp$5.parseTemplate = function (ref) {\n  if (ref === void 0) ref = {};\n  var isTagged = ref.isTagged;\n  if (isTagged === void 0) isTagged = false;\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement({\n    isTagged: isTagged\n  });\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    if (this.type === types$1.eof) {\n      this.raise(this.pos, \"Unterminated template literal\");\n    }\n    this.expect(types$1.dollarBraceL);\n    node.expressions.push(this.parseExpression());\n    this.expect(types$1.braceR);\n    node.quasis.push(curElt = this.parseTemplateElement({\n      isTagged: isTagged\n    }));\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\");\n};\npp$5.isAsyncProp = function (prop) {\n  return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" && (this.type === types$1.name || this.type === types$1.num || this.type === types$1.string || this.type === types$1.bracketL || this.type.keyword || this.options.ecmaVersion >= 9 && this.type === types$1.star) && !lineBreak.test(this.input.slice(this.lastTokEnd, this.start));\n};\n\n// Parse an object literal or binding pattern.\n\npp$5.parseObj = function (isPattern, refDestructuringErrors) {\n  var node = this.startNode(),\n    first = true,\n    propHash = {};\n  node.properties = [];\n  this.next();\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types$1.braceR)) {\n        break;\n      }\n    } else {\n      first = false;\n    }\n    var prop = this.parseProperty(isPattern, refDestructuringErrors);\n    if (!isPattern) {\n      this.checkPropClash(prop, propHash, refDestructuringErrors);\n    }\n    node.properties.push(prop);\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\");\n};\npp$5.parseProperty = function (isPattern, refDestructuringErrors) {\n  var prop = this.startNode(),\n    isGenerator,\n    isAsync,\n    startPos,\n    startLoc;\n  if (this.options.ecmaVersion >= 9 && this.eat(types$1.ellipsis)) {\n    if (isPattern) {\n      prop.argument = this.parseIdent(false);\n      if (this.type === types$1.comma) {\n        this.raise(this.start, \"Comma is not permitted after the rest element\");\n      }\n      return this.finishNode(prop, \"RestElement\");\n    }\n    // Parse argument.\n    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    // To disallow trailing comma via `this.toAssignable()`.\n    if (this.type === types$1.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n      refDestructuringErrors.trailingComma = this.start;\n    }\n    // Finish\n    return this.finishNode(prop, \"SpreadElement\");\n  }\n  if (this.options.ecmaVersion >= 6) {\n    prop.method = false;\n    prop.shorthand = false;\n    if (isPattern || refDestructuringErrors) {\n      startPos = this.start;\n      startLoc = this.startLoc;\n    }\n    if (!isPattern) {\n      isGenerator = this.eat(types$1.star);\n    }\n  }\n  var containsEsc = this.containsEsc;\n  this.parsePropertyName(prop);\n  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n    isAsync = true;\n    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types$1.star);\n    this.parsePropertyName(prop, refDestructuringErrors);\n  } else {\n    isAsync = false;\n  }\n  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n  return this.finishNode(prop, \"Property\");\n};\npp$5.parsePropertyValue = function (prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n  if ((isGenerator || isAsync) && this.type === types$1.colon) {\n    this.unexpected();\n  }\n  if (this.eat(types$1.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = \"init\";\n  } else if (this.options.ecmaVersion >= 6 && this.type === types$1.parenL) {\n    if (isPattern) {\n      this.unexpected();\n    }\n    prop.kind = \"init\";\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator, isAsync);\n  } else if (!isPattern && !containsEsc && this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" && (prop.key.name === \"get\" || prop.key.name === \"set\") && this.type !== types$1.comma && this.type !== types$1.braceR && this.type !== types$1.eq) {\n    if (isGenerator || isAsync) {\n      this.unexpected();\n    }\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n      if (prop.kind === \"get\") {\n        this.raiseRecoverable(start, \"getter should have no params\");\n      } else {\n        this.raiseRecoverable(start, \"setter should have exactly one param\");\n      }\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\") {\n        this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\");\n      }\n    }\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    if (isGenerator || isAsync) {\n      this.unexpected();\n    }\n    this.checkUnreserved(prop.key);\n    if (prop.key.name === \"await\" && !this.awaitIdentPos) {\n      this.awaitIdentPos = startPos;\n    }\n    prop.kind = \"init\";\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n    } else if (this.type === types$1.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0) {\n        refDestructuringErrors.shorthandAssign = this.start;\n      }\n      prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n    } else {\n      prop.value = this.copyNode(prop.key);\n    }\n    prop.shorthand = true;\n  } else {\n    this.unexpected();\n  }\n};\npp$5.parsePropertyName = function (prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(types$1.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(types$1.bracketR);\n      return prop.key;\n    } else {\n      prop.computed = false;\n    }\n  }\n  return prop.key = this.type === types$1.num || this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\");\n};\n\n// Initialize empty function node.\n\npp$5.initFunction = function (node) {\n  node.id = null;\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = node.expression = false;\n  }\n  if (this.options.ecmaVersion >= 8) {\n    node.async = false;\n  }\n};\n\n// Parse object or class method.\n\npp$5.parseMethod = function (isGenerator, isAsync, allowDirectSuper) {\n  var node = this.startNode(),\n    oldYieldPos = this.yieldPos,\n    oldAwaitPos = this.awaitPos,\n    oldAwaitIdentPos = this.awaitIdentPos;\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = isGenerator;\n  }\n  if (this.options.ecmaVersion >= 8) {\n    node.async = !!isAsync;\n  }\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n  this.expect(types$1.parenL);\n  node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n  this.parseFunctionBody(node, false, true, false);\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, \"FunctionExpression\");\n};\n\n// Parse arrow function expression with given parameters.\n\npp$5.parseArrowExpression = function (node, params, isAsync, forInit) {\n  var oldYieldPos = this.yieldPos,\n    oldAwaitPos = this.awaitPos,\n    oldAwaitIdentPos = this.awaitIdentPos;\n  this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 8) {\n    node.async = !!isAsync;\n  }\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true, false, forInit);\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, \"ArrowFunctionExpression\");\n};\n\n// Parse function body and check parameters.\n\npp$5.parseFunctionBody = function (node, isArrowFunction, isMethod, forInit) {\n  var isExpression = isArrowFunction && this.type !== types$1.braceL;\n  var oldStrict = this.strict,\n    useStrict = false;\n  if (isExpression) {\n    node.body = this.parseMaybeAssign(forInit);\n    node.expression = true;\n    this.checkParams(node, false);\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end);\n      // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n      if (useStrict && nonSimple) {\n        this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\");\n      }\n    }\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldLabels = this.labels;\n    this.labels = [];\n    if (useStrict) {\n      this.strict = true;\n    }\n\n    // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n    if (this.strict && node.id) {\n      this.checkLValSimple(node.id, BIND_OUTSIDE);\n    }\n    node.body = this.parseBlock(false, undefined, useStrict && !oldStrict);\n    node.expression = false;\n    this.adaptDirectivePrologue(node.body.body);\n    this.labels = oldLabels;\n  }\n  this.exitScope();\n};\npp$5.isSimpleParamList = function (params) {\n  for (var i = 0, list = params; i < list.length; i += 1) {\n    var param = list[i];\n    if (param.type !== \"Identifier\") {\n      return false;\n    }\n  }\n  return true;\n};\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp$5.checkParams = function (node, allowDuplicates) {\n  var nameHash = Object.create(null);\n  for (var i = 0, list = node.params; i < list.length; i += 1) {\n    var param = list[i];\n    this.checkLValInnerPattern(param, BIND_VAR, allowDuplicates ? null : nameHash);\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$5.parseExprList = function (close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var elts = [],\n    first = true;\n  while (!this.eat(close)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (allowTrailingComma && this.afterTrailingComma(close)) {\n        break;\n      }\n    } else {\n      first = false;\n    }\n    var elt = void 0;\n    if (allowEmpty && this.type === types$1.comma) {\n      elt = null;\n    } else if (this.type === types$1.ellipsis) {\n      elt = this.parseSpread(refDestructuringErrors);\n      if (refDestructuringErrors && this.type === types$1.comma && refDestructuringErrors.trailingComma < 0) {\n        refDestructuringErrors.trailingComma = this.start;\n      }\n    } else {\n      elt = this.parseMaybeAssign(false, refDestructuringErrors);\n    }\n    elts.push(elt);\n  }\n  return elts;\n};\npp$5.checkUnreserved = function (ref) {\n  var start = ref.start;\n  var end = ref.end;\n  var name = ref.name;\n  if (this.inGenerator && name === \"yield\") {\n    this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\");\n  }\n  if (this.inAsync && name === \"await\") {\n    this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\");\n  }\n  if (this.currentThisScope().inClassFieldInit && name === \"arguments\") {\n    this.raiseRecoverable(start, \"Cannot use 'arguments' in class field initializer\");\n  }\n  if (this.inClassStaticBlock && (name === \"arguments\" || name === \"await\")) {\n    this.raise(start, \"Cannot use \" + name + \" in class static initialization block\");\n  }\n  if (this.keywords.test(name)) {\n    this.raise(start, \"Unexpected keyword '\" + name + \"'\");\n  }\n  if (this.options.ecmaVersion < 6 && this.input.slice(start, end).indexOf(\"\\\\\") !== -1) {\n    return;\n  }\n  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n  if (re.test(name)) {\n    if (!this.inAsync && name === \"await\") {\n      this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\");\n    }\n    this.raiseRecoverable(start, \"The keyword '\" + name + \"' is reserved\");\n  }\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$5.parseIdent = function (liberal, isBinding) {\n  var node = this.startNode();\n  if (this.type === types$1.name) {\n    node.name = this.value;\n  } else if (this.type.keyword) {\n    node.name = this.type.keyword;\n\n    // To fix https://github.com/acornjs/acorn/issues/575\n    // `class` and `function` keywords push new context into this.context.\n    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n    if ((node.name === \"class\" || node.name === \"function\") && (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n      this.context.pop();\n    }\n  } else {\n    this.unexpected();\n  }\n  this.next(!!liberal);\n  this.finishNode(node, \"Identifier\");\n  if (!liberal) {\n    this.checkUnreserved(node);\n    if (node.name === \"await\" && !this.awaitIdentPos) {\n      this.awaitIdentPos = node.start;\n    }\n  }\n  return node;\n};\npp$5.parsePrivateIdent = function () {\n  var node = this.startNode();\n  if (this.type === types$1.privateId) {\n    node.name = this.value;\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  this.finishNode(node, \"PrivateIdentifier\");\n\n  // For validating existence\n  if (this.privateNameStack.length === 0) {\n    this.raise(node.start, \"Private field '#\" + node.name + \"' must be declared in an enclosing class\");\n  } else {\n    this.privateNameStack[this.privateNameStack.length - 1].used.push(node);\n  }\n  return node;\n};\n\n// Parses yield expression inside generator.\n\npp$5.parseYield = function (forInit) {\n  if (!this.yieldPos) {\n    this.yieldPos = this.start;\n  }\n  var node = this.startNode();\n  this.next();\n  if (this.type === types$1.semi || this.canInsertSemicolon() || this.type !== types$1.star && !this.type.startsExpr) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types$1.star);\n    node.argument = this.parseMaybeAssign(forInit);\n  }\n  return this.finishNode(node, \"YieldExpression\");\n};\npp$5.parseAwait = function (forInit) {\n  if (!this.awaitPos) {\n    this.awaitPos = this.start;\n  }\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary(null, true, false, forInit);\n  return this.finishNode(node, \"AwaitExpression\");\n};\nvar pp$4 = Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function (pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos;\n  err.loc = loc;\n  err.raisedAt = this.pos;\n  throw err;\n};\npp$4.raiseRecoverable = pp$4.raise;\npp$4.curPosition = function () {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n};\nvar pp$3 = Parser.prototype;\nvar Scope = function Scope(flags) {\n  this.flags = flags;\n  // A list of var-declared names in the current lexical scope\n  this.var = [];\n  // A list of lexically-declared names in the current lexical scope\n  this.lexical = [];\n  // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n  this.functions = [];\n  // A switch to disallow the identifier reference 'arguments'\n  this.inClassFieldInit = false;\n};\n\n// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\npp$3.enterScope = function (flags) {\n  this.scopeStack.push(new Scope(flags));\n};\npp$3.exitScope = function () {\n  this.scopeStack.pop();\n};\n\n// The spec says:\n// > At the top level of a function, or script, function declarations are\n// > treated like var declarations rather than like lexical declarations.\npp$3.treatFunctionsAsVarInScope = function (scope) {\n  return scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_TOP;\n};\npp$3.declareName = function (name, bindingType, pos) {\n  var redeclared = false;\n  if (bindingType === BIND_LEXICAL) {\n    var scope = this.currentScope();\n    redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    scope.lexical.push(name);\n    if (this.inModule && scope.flags & SCOPE_TOP) {\n      delete this.undefinedExports[name];\n    }\n  } else if (bindingType === BIND_SIMPLE_CATCH) {\n    var scope$1 = this.currentScope();\n    scope$1.lexical.push(name);\n  } else if (bindingType === BIND_FUNCTION) {\n    var scope$2 = this.currentScope();\n    if (this.treatFunctionsAsVar) {\n      redeclared = scope$2.lexical.indexOf(name) > -1;\n    } else {\n      redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1;\n    }\n    scope$2.functions.push(name);\n  } else {\n    for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n      var scope$3 = this.scopeStack[i];\n      if (scope$3.lexical.indexOf(name) > -1 && !(scope$3.flags & SCOPE_SIMPLE_CATCH && scope$3.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n        redeclared = true;\n        break;\n      }\n      scope$3.var.push(name);\n      if (this.inModule && scope$3.flags & SCOPE_TOP) {\n        delete this.undefinedExports[name];\n      }\n      if (scope$3.flags & SCOPE_VAR) {\n        break;\n      }\n    }\n  }\n  if (redeclared) {\n    this.raiseRecoverable(pos, \"Identifier '\" + name + \"' has already been declared\");\n  }\n};\npp$3.checkLocalExport = function (id) {\n  // scope.functions must be empty as Module code is always strict.\n  if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1) {\n    this.undefinedExports[id.name] = id;\n  }\n};\npp$3.currentScope = function () {\n  return this.scopeStack[this.scopeStack.length - 1];\n};\npp$3.currentVarScope = function () {\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.flags & SCOPE_VAR) {\n      return scope;\n    }\n  }\n};\n\n// Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\npp$3.currentThisScope = function () {\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) {\n      return scope;\n    }\n  }\n};\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n  if (parser.options.locations) {\n    this.loc = new SourceLocation(parser, loc);\n  }\n  if (parser.options.directSourceFile) {\n    this.sourceFile = parser.options.directSourceFile;\n  }\n  if (parser.options.ranges) {\n    this.range = [pos, 0];\n  }\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$2 = Parser.prototype;\npp$2.startNode = function () {\n  return new Node(this, this.start, this.startLoc);\n};\npp$2.startNodeAt = function (pos, loc) {\n  return new Node(this, pos, loc);\n};\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  if (this.options.locations) {\n    node.loc.end = loc;\n  }\n  if (this.options.ranges) {\n    node.range[1] = pos;\n  }\n  return node;\n}\npp$2.finishNode = function (node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc);\n};\n\n// Finish node at given position\n\npp$2.finishNodeAt = function (node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc);\n};\npp$2.copyNode = function (node) {\n  var newNode = new Node(this, node.start, this.startLoc);\n  for (var prop in node) {\n    newNode[prop] = node[prop];\n  }\n  return newNode;\n};\n\n// This file contains Unicode properties extracted from the ECMAScript\n// specification. The lists are extracted like so:\n// $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)\n\n// #table-binary-unicode-properties\nvar ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\nvar ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\nvar ecma11BinaryProperties = ecma10BinaryProperties;\nvar ecma12BinaryProperties = ecma11BinaryProperties + \" EBase EComp EMod EPres ExtPict\";\nvar ecma13BinaryProperties = ecma12BinaryProperties;\nvar unicodeBinaryProperties = {\n  9: ecma9BinaryProperties,\n  10: ecma10BinaryProperties,\n  11: ecma11BinaryProperties,\n  12: ecma12BinaryProperties,\n  13: ecma13BinaryProperties\n};\n\n// #table-unicode-general-category-values\nvar unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n// #table-unicode-script-values\nvar ecma9ScriptValues = \"Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\nvar ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\nvar ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\nvar ecma12ScriptValues = ecma11ScriptValues + \" Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi\";\nvar ecma13ScriptValues = ecma12ScriptValues + \" Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith\";\nvar unicodeScriptValues = {\n  9: ecma9ScriptValues,\n  10: ecma10ScriptValues,\n  11: ecma11ScriptValues,\n  12: ecma12ScriptValues,\n  13: ecma13ScriptValues\n};\nvar data = {};\nfunction buildUnicodeData(ecmaVersion) {\n  var d = data[ecmaVersion] = {\n    binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n    nonBinary: {\n      General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n      Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n    }\n  };\n  d.nonBinary.Script_Extensions = d.nonBinary.Script;\n  d.nonBinary.gc = d.nonBinary.General_Category;\n  d.nonBinary.sc = d.nonBinary.Script;\n  d.nonBinary.scx = d.nonBinary.Script_Extensions;\n}\nfor (var i = 0, list = [9, 10, 11, 12, 13]; i < list.length; i += 1) {\n  var ecmaVersion = list[i];\n  buildUnicodeData(ecmaVersion);\n}\nvar pp$1 = Parser.prototype;\nvar RegExpValidationState = function RegExpValidationState(parser) {\n  this.parser = parser;\n  this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\") + (parser.options.ecmaVersion >= 13 ? \"d\" : \"\");\n  this.unicodeProperties = data[parser.options.ecmaVersion >= 13 ? 13 : parser.options.ecmaVersion];\n  this.source = \"\";\n  this.flags = \"\";\n  this.start = 0;\n  this.switchU = false;\n  this.switchN = false;\n  this.pos = 0;\n  this.lastIntValue = 0;\n  this.lastStringValue = \"\";\n  this.lastAssertionIsQuantifiable = false;\n  this.numCapturingParens = 0;\n  this.maxBackReference = 0;\n  this.groupNames = [];\n  this.backReferenceNames = [];\n};\nRegExpValidationState.prototype.reset = function reset(start, pattern, flags) {\n  var unicode = flags.indexOf(\"u\") !== -1;\n  this.start = start | 0;\n  this.source = pattern + \"\";\n  this.flags = flags;\n  this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n  this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n};\nRegExpValidationState.prototype.raise = function raise(message) {\n  this.parser.raiseRecoverable(this.start, \"Invalid regular expression: /\" + this.source + \"/: \" + message);\n};\n\n// If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\nRegExpValidationState.prototype.at = function at(i, forceU) {\n  if (forceU === void 0) forceU = false;\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return -1;\n  }\n  var c = s.charCodeAt(i);\n  if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return c;\n  }\n  var next = s.charCodeAt(i + 1);\n  return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c;\n};\nRegExpValidationState.prototype.nextIndex = function nextIndex(i, forceU) {\n  if (forceU === void 0) forceU = false;\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return l;\n  }\n  var c = s.charCodeAt(i),\n    next;\n  if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l || (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n    return i + 1;\n  }\n  return i + 2;\n};\nRegExpValidationState.prototype.current = function current(forceU) {\n  if (forceU === void 0) forceU = false;\n  return this.at(this.pos, forceU);\n};\nRegExpValidationState.prototype.lookahead = function lookahead(forceU) {\n  if (forceU === void 0) forceU = false;\n  return this.at(this.nextIndex(this.pos, forceU), forceU);\n};\nRegExpValidationState.prototype.advance = function advance(forceU) {\n  if (forceU === void 0) forceU = false;\n  this.pos = this.nextIndex(this.pos, forceU);\n};\nRegExpValidationState.prototype.eat = function eat(ch, forceU) {\n  if (forceU === void 0) forceU = false;\n  if (this.current(forceU) === ch) {\n    this.advance(forceU);\n    return true;\n  }\n  return false;\n};\n\n/**\n * Validate the flags part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$1.validateRegExpFlags = function (state) {\n  var validFlags = state.validFlags;\n  var flags = state.flags;\n  for (var i = 0; i < flags.length; i++) {\n    var flag = flags.charAt(i);\n    if (validFlags.indexOf(flag) === -1) {\n      this.raise(state.start, \"Invalid regular expression flag\");\n    }\n    if (flags.indexOf(flag, i + 1) > -1) {\n      this.raise(state.start, \"Duplicate regular expression flag\");\n    }\n  }\n};\n\n/**\n * Validate the pattern part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$1.validateRegExpPattern = function (state) {\n  this.regexp_pattern(state);\n\n  // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n  // parsing contains a |GroupName|, reparse with the goal symbol\n  // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n  // exception if _P_ did not conform to the grammar, if any elements of _P_\n  // were not matched by the parse, or if any Early Error conditions exist.\n  if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n    state.switchN = true;\n    this.regexp_pattern(state);\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\npp$1.regexp_pattern = function (state) {\n  state.pos = 0;\n  state.lastIntValue = 0;\n  state.lastStringValue = \"\";\n  state.lastAssertionIsQuantifiable = false;\n  state.numCapturingParens = 0;\n  state.maxBackReference = 0;\n  state.groupNames.length = 0;\n  state.backReferenceNames.length = 0;\n  this.regexp_disjunction(state);\n  if (state.pos !== state.source.length) {\n    // Make the same messages as V8.\n    if (state.eat(0x29 /* ) */)) {\n      state.raise(\"Unmatched ')'\");\n    }\n    if (state.eat(0x5D /* ] */) || state.eat(0x7D /* } */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  }\n  if (state.maxBackReference > state.numCapturingParens) {\n    state.raise(\"Invalid escape\");\n  }\n  for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n    var name = list[i];\n    if (state.groupNames.indexOf(name) === -1) {\n      state.raise(\"Invalid named capture referenced\");\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\npp$1.regexp_disjunction = function (state) {\n  this.regexp_alternative(state);\n  while (state.eat(0x7C /* | */)) {\n    this.regexp_alternative(state);\n  }\n\n  // Make the same message as V8.\n  if (this.regexp_eatQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  if (state.eat(0x7B /* { */)) {\n    state.raise(\"Lone quantifier brackets\");\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\npp$1.regexp_alternative = function (state) {\n  while (state.pos < state.source.length && this.regexp_eatTerm(state)) {}\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\npp$1.regexp_eatTerm = function (state) {\n  if (this.regexp_eatAssertion(state)) {\n    // Handle `QuantifiableAssertion Quantifier` alternative.\n    // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n    // is a QuantifiableAssertion.\n    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n      // Make the same message as V8.\n      if (state.switchU) {\n        state.raise(\"Invalid quantifier\");\n      }\n    }\n    return true;\n  }\n  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n    this.regexp_eatQuantifier(state);\n    return true;\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\npp$1.regexp_eatAssertion = function (state) {\n  var start = state.pos;\n  state.lastAssertionIsQuantifiable = false;\n\n  // ^, $\n  if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n    return true;\n  }\n\n  // \\b \\B\n  if (state.eat(0x5C /* \\ */)) {\n    if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n      return true;\n    }\n    state.pos = start;\n  }\n\n  // Lookahead / Lookbehind\n  if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n    var lookbehind = false;\n    if (this.options.ecmaVersion >= 9) {\n      lookbehind = state.eat(0x3C /* < */);\n    }\n\n    if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n      this.regexp_disjunction(state);\n      if (!state.eat(0x29 /* ) */)) {\n        state.raise(\"Unterminated group\");\n      }\n      state.lastAssertionIsQuantifiable = !lookbehind;\n      return true;\n    }\n  }\n  state.pos = start;\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\npp$1.regexp_eatQuantifier = function (state, noError) {\n  if (noError === void 0) noError = false;\n  if (this.regexp_eatQuantifierPrefix(state, noError)) {\n    state.eat(0x3F /* ? */);\n    return true;\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\npp$1.regexp_eatQuantifierPrefix = function (state, noError) {\n  return state.eat(0x2A /* * */) || state.eat(0x2B /* + */) || state.eat(0x3F /* ? */) || this.regexp_eatBracedQuantifier(state, noError);\n};\npp$1.regexp_eatBracedQuantifier = function (state, noError) {\n  var start = state.pos;\n  if (state.eat(0x7B /* { */)) {\n    var min = 0,\n      max = -1;\n    if (this.regexp_eatDecimalDigits(state)) {\n      min = state.lastIntValue;\n      if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n        max = state.lastIntValue;\n      }\n      if (state.eat(0x7D /* } */)) {\n        // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n        if (max !== -1 && max < min && !noError) {\n          state.raise(\"numbers out of order in {} quantifier\");\n        }\n        return true;\n      }\n    }\n    if (state.switchU && !noError) {\n      state.raise(\"Incomplete quantifier\");\n    }\n    state.pos = start;\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\npp$1.regexp_eatAtom = function (state) {\n  return this.regexp_eatPatternCharacters(state) || state.eat(0x2E /* . */) || this.regexp_eatReverseSolidusAtomEscape(state) || this.regexp_eatCharacterClass(state) || this.regexp_eatUncapturingGroup(state) || this.regexp_eatCapturingGroup(state);\n};\npp$1.regexp_eatReverseSolidusAtomEscape = function (state) {\n  var start = state.pos;\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatAtomEscape(state)) {\n      return true;\n    }\n    state.pos = start;\n  }\n  return false;\n};\npp$1.regexp_eatUncapturingGroup = function (state) {\n  var start = state.pos;\n  if (state.eat(0x28 /* ( */)) {\n    if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        return true;\n      }\n      state.raise(\"Unterminated group\");\n    }\n    state.pos = start;\n  }\n  return false;\n};\npp$1.regexp_eatCapturingGroup = function (state) {\n  if (state.eat(0x28 /* ( */)) {\n    if (this.options.ecmaVersion >= 9) {\n      this.regexp_groupSpecifier(state);\n    } else if (state.current() === 0x3F /* ? */) {\n      state.raise(\"Invalid group\");\n    }\n    this.regexp_disjunction(state);\n    if (state.eat(0x29 /* ) */)) {\n      state.numCapturingParens += 1;\n      return true;\n    }\n    state.raise(\"Unterminated group\");\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\npp$1.regexp_eatExtendedAtom = function (state) {\n  return state.eat(0x2E /* . */) || this.regexp_eatReverseSolidusAtomEscape(state) || this.regexp_eatCharacterClass(state) || this.regexp_eatUncapturingGroup(state) || this.regexp_eatCapturingGroup(state) || this.regexp_eatInvalidBracedQuantifier(state) || this.regexp_eatExtendedPatternCharacter(state);\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\npp$1.regexp_eatInvalidBracedQuantifier = function (state) {\n  if (this.regexp_eatBracedQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\npp$1.regexp_eatSyntaxCharacter = function (state) {\n  var ch = state.current();\n  if (isSyntaxCharacter(ch)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true;\n  }\n  return false;\n};\nfunction isSyntaxCharacter(ch) {\n  return ch === 0x24 /* $ */ || ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ || ch === 0x2E /* . */ || ch === 0x3F /* ? */ || ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ || ch >= 0x7B /* { */ && ch <= 0x7D /* } */;\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n// But eat eager.\npp$1.regexp_eatPatternCharacters = function (state) {\n  var start = state.pos;\n  var ch = 0;\n  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n    state.advance();\n  }\n  return state.pos !== start;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\npp$1.regexp_eatExtendedPatternCharacter = function (state) {\n  var ch = state.current();\n  if (ch !== -1 && ch !== 0x24 /* $ */ && !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) && ch !== 0x2E /* . */ && ch !== 0x3F /* ? */ && ch !== 0x5B /* [ */ && ch !== 0x5E /* ^ */ && ch !== 0x7C /* | */) {\n    state.advance();\n    return true;\n  }\n  return false;\n};\n\n// GroupSpecifier ::\n//   [empty]\n//   `?` GroupName\npp$1.regexp_groupSpecifier = function (state) {\n  if (state.eat(0x3F /* ? */)) {\n    if (this.regexp_eatGroupName(state)) {\n      if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n        state.raise(\"Duplicate capture group name\");\n      }\n      state.groupNames.push(state.lastStringValue);\n      return;\n    }\n    state.raise(\"Invalid group\");\n  }\n};\n\n// GroupName ::\n//   `<` RegExpIdentifierName `>`\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$1.regexp_eatGroupName = function (state) {\n  state.lastStringValue = \"\";\n  if (state.eat(0x3C /* < */)) {\n    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n      return true;\n    }\n    state.raise(\"Invalid capture group name\");\n  }\n  return false;\n};\n\n// RegExpIdentifierName ::\n//   RegExpIdentifierStart\n//   RegExpIdentifierName RegExpIdentifierPart\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$1.regexp_eatRegExpIdentifierName = function (state) {\n  state.lastStringValue = \"\";\n  if (this.regexp_eatRegExpIdentifierStart(state)) {\n    state.lastStringValue += codePointToString(state.lastIntValue);\n    while (this.regexp_eatRegExpIdentifierPart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n    }\n    return true;\n  }\n  return false;\n};\n\n// RegExpIdentifierStart ::\n//   UnicodeIDStart\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[+U]\npp$1.regexp_eatRegExpIdentifierStart = function (state) {\n  var start = state.pos;\n  var forceU = this.options.ecmaVersion >= 11;\n  var ch = state.current(forceU);\n  state.advance(forceU);\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierStart(ch)) {\n    state.lastIntValue = ch;\n    return true;\n  }\n  state.pos = start;\n  return false;\n};\nfunction isRegExpIdentifierStart(ch) {\n  return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F; /* _ */\n}\n\n// RegExpIdentifierPart ::\n//   UnicodeIDContinue\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[+U]\n//   <ZWNJ>\n//   <ZWJ>\npp$1.regexp_eatRegExpIdentifierPart = function (state) {\n  var start = state.pos;\n  var forceU = this.options.ecmaVersion >= 11;\n  var ch = state.current(forceU);\n  state.advance(forceU);\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierPart(ch)) {\n    state.lastIntValue = ch;\n    return true;\n  }\n  state.pos = start;\n  return false;\n};\nfunction isRegExpIdentifierPart(ch) {\n  return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D; /* <ZWJ> */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\npp$1.regexp_eatAtomEscape = function (state) {\n  if (this.regexp_eatBackReference(state) || this.regexp_eatCharacterClassEscape(state) || this.regexp_eatCharacterEscape(state) || state.switchN && this.regexp_eatKGroupName(state)) {\n    return true;\n  }\n  if (state.switchU) {\n    // Make the same message as V8.\n    if (state.current() === 0x63 /* c */) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.raise(\"Invalid escape\");\n  }\n  return false;\n};\npp$1.regexp_eatBackReference = function (state) {\n  var start = state.pos;\n  if (this.regexp_eatDecimalEscape(state)) {\n    var n = state.lastIntValue;\n    if (state.switchU) {\n      // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n      if (n > state.maxBackReference) {\n        state.maxBackReference = n;\n      }\n      return true;\n    }\n    if (n <= state.numCapturingParens) {\n      return true;\n    }\n    state.pos = start;\n  }\n  return false;\n};\npp$1.regexp_eatKGroupName = function (state) {\n  if (state.eat(0x6B /* k */)) {\n    if (this.regexp_eatGroupName(state)) {\n      state.backReferenceNames.push(state.lastStringValue);\n      return true;\n    }\n    state.raise(\"Invalid named reference\");\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\npp$1.regexp_eatCharacterEscape = function (state) {\n  return this.regexp_eatControlEscape(state) || this.regexp_eatCControlLetter(state) || this.regexp_eatZero(state) || this.regexp_eatHexEscapeSequence(state) || this.regexp_eatRegExpUnicodeEscapeSequence(state, false) || !state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state) || this.regexp_eatIdentityEscape(state);\n};\npp$1.regexp_eatCControlLetter = function (state) {\n  var start = state.pos;\n  if (state.eat(0x63 /* c */)) {\n    if (this.regexp_eatControlLetter(state)) {\n      return true;\n    }\n    state.pos = start;\n  }\n  return false;\n};\npp$1.regexp_eatZero = function (state) {\n  if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n    state.lastIntValue = 0;\n    state.advance();\n    return true;\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\npp$1.regexp_eatControlEscape = function (state) {\n  var ch = state.current();\n  if (ch === 0x74 /* t */) {\n    state.lastIntValue = 0x09; /* \\t */\n    state.advance();\n    return true;\n  }\n  if (ch === 0x6E /* n */) {\n    state.lastIntValue = 0x0A; /* \\n */\n    state.advance();\n    return true;\n  }\n  if (ch === 0x76 /* v */) {\n    state.lastIntValue = 0x0B; /* \\v */\n    state.advance();\n    return true;\n  }\n  if (ch === 0x66 /* f */) {\n    state.lastIntValue = 0x0C; /* \\f */\n    state.advance();\n    return true;\n  }\n  if (ch === 0x72 /* r */) {\n    state.lastIntValue = 0x0D; /* \\r */\n    state.advance();\n    return true;\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\npp$1.regexp_eatControlLetter = function (state) {\n  var ch = state.current();\n  if (isControlLetter(ch)) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true;\n  }\n  return false;\n};\nfunction isControlLetter(ch) {\n  return ch >= 0x41 /* A */ && ch <= 0x5A /* Z */ || ch >= 0x61 /* a */ && ch <= 0x7A /* z */;\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\npp$1.regexp_eatRegExpUnicodeEscapeSequence = function (state, forceU) {\n  if (forceU === void 0) forceU = false;\n  var start = state.pos;\n  var switchU = forceU || state.switchU;\n  if (state.eat(0x75 /* u */)) {\n    if (this.regexp_eatFixedHexDigits(state, 4)) {\n      var lead = state.lastIntValue;\n      if (switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n        var leadSurrogateEnd = state.pos;\n        if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n          var trail = state.lastIntValue;\n          if (trail >= 0xDC00 && trail <= 0xDFFF) {\n            state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n            return true;\n          }\n        }\n        state.pos = leadSurrogateEnd;\n        state.lastIntValue = lead;\n      }\n      return true;\n    }\n    if (switchU && state.eat(0x7B /* { */) && this.regexp_eatHexDigits(state) && state.eat(0x7D /* } */) && isValidUnicode(state.lastIntValue)) {\n      return true;\n    }\n    if (switchU) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.pos = start;\n  }\n  return false;\n};\nfunction isValidUnicode(ch) {\n  return ch >= 0 && ch <= 0x10FFFF;\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\npp$1.regexp_eatIdentityEscape = function (state) {\n  if (state.switchU) {\n    if (this.regexp_eatSyntaxCharacter(state)) {\n      return true;\n    }\n    if (state.eat(0x2F /* / */)) {\n      state.lastIntValue = 0x2F; /* / */\n      return true;\n    }\n    return false;\n  }\n  var ch = state.current();\n  if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true;\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\npp$1.regexp_eatDecimalEscape = function (state) {\n  state.lastIntValue = 0;\n  var ch = state.current();\n  if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n    do {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */);\n    return true;\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\npp$1.regexp_eatCharacterClassEscape = function (state) {\n  var ch = state.current();\n  if (isCharacterClassEscape(ch)) {\n    state.lastIntValue = -1;\n    state.advance();\n    return true;\n  }\n  if (state.switchU && this.options.ecmaVersion >= 9 && (ch === 0x50 /* P */ || ch === 0x70 /* p */)) {\n    state.lastIntValue = -1;\n    state.advance();\n    if (state.eat(0x7B /* { */) && this.regexp_eatUnicodePropertyValueExpression(state) && state.eat(0x7D /* } */)) {\n      return true;\n    }\n    state.raise(\"Invalid property name\");\n  }\n  return false;\n};\nfunction isCharacterClassEscape(ch) {\n  return ch === 0x64 /* d */ || ch === 0x44 /* D */ || ch === 0x73 /* s */ || ch === 0x53 /* S */ || ch === 0x77 /* w */ || ch === 0x57 /* W */;\n}\n\n// UnicodePropertyValueExpression ::\n//   UnicodePropertyName `=` UnicodePropertyValue\n//   LoneUnicodePropertyNameOrValue\npp$1.regexp_eatUnicodePropertyValueExpression = function (state) {\n  var start = state.pos;\n\n  // UnicodePropertyName `=` UnicodePropertyValue\n  if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n    var name = state.lastStringValue;\n    if (this.regexp_eatUnicodePropertyValue(state)) {\n      var value = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n      return true;\n    }\n  }\n  state.pos = start;\n\n  // LoneUnicodePropertyNameOrValue\n  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n    var nameOrValue = state.lastStringValue;\n    this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n    return true;\n  }\n  return false;\n};\npp$1.regexp_validateUnicodePropertyNameAndValue = function (state, name, value) {\n  if (!hasOwn(state.unicodeProperties.nonBinary, name)) {\n    state.raise(\"Invalid property name\");\n  }\n  if (!state.unicodeProperties.nonBinary[name].test(value)) {\n    state.raise(\"Invalid property value\");\n  }\n};\npp$1.regexp_validateUnicodePropertyNameOrValue = function (state, nameOrValue) {\n  if (!state.unicodeProperties.binary.test(nameOrValue)) {\n    state.raise(\"Invalid property name\");\n  }\n};\n\n// UnicodePropertyName ::\n//   UnicodePropertyNameCharacters\npp$1.regexp_eatUnicodePropertyName = function (state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyNameCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\";\n};\nfunction isUnicodePropertyNameCharacter(ch) {\n  return isControlLetter(ch) || ch === 0x5F; /* _ */\n}\n\n// UnicodePropertyValue ::\n//   UnicodePropertyValueCharacters\npp$1.regexp_eatUnicodePropertyValue = function (state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyValueCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\";\n};\nfunction isUnicodePropertyValueCharacter(ch) {\n  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch);\n}\n\n// LoneUnicodePropertyNameOrValue ::\n//   UnicodePropertyValueCharacters\npp$1.regexp_eatLoneUnicodePropertyNameOrValue = function (state) {\n  return this.regexp_eatUnicodePropertyValue(state);\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\npp$1.regexp_eatCharacterClass = function (state) {\n  if (state.eat(0x5B /* [ */)) {\n    state.eat(0x5E /* ^ */);\n    this.regexp_classRanges(state);\n    if (state.eat(0x5D /* ] */)) {\n      return true;\n    }\n    // Unreachable since it threw \"unterminated regular expression\" error before.\n    state.raise(\"Unterminated character class\");\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\npp$1.regexp_classRanges = function (state) {\n  while (this.regexp_eatClassAtom(state)) {\n    var left = state.lastIntValue;\n    if (state.eat(0x2D /* - */) && this.regexp_eatClassAtom(state)) {\n      var right = state.lastIntValue;\n      if (state.switchU && (left === -1 || right === -1)) {\n        state.raise(\"Invalid character class\");\n      }\n      if (left !== -1 && right !== -1 && left > right) {\n        state.raise(\"Range out of order in character class\");\n      }\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\npp$1.regexp_eatClassAtom = function (state) {\n  var start = state.pos;\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatClassEscape(state)) {\n      return true;\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      var ch$1 = state.current();\n      if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n        state.raise(\"Invalid class escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n  var ch = state.current();\n  if (ch !== 0x5D /* ] */) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true;\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\npp$1.regexp_eatClassEscape = function (state) {\n  var start = state.pos;\n  if (state.eat(0x62 /* b */)) {\n    state.lastIntValue = 0x08; /* <BS> */\n    return true;\n  }\n  if (state.switchU && state.eat(0x2D /* - */)) {\n    state.lastIntValue = 0x2D; /* - */\n    return true;\n  }\n  if (!state.switchU && state.eat(0x63 /* c */)) {\n    if (this.regexp_eatClassControlLetter(state)) {\n      return true;\n    }\n    state.pos = start;\n  }\n  return this.regexp_eatCharacterClassEscape(state) || this.regexp_eatCharacterEscape(state);\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\npp$1.regexp_eatClassControlLetter = function (state) {\n  var ch = state.current();\n  if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true;\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$1.regexp_eatHexEscapeSequence = function (state) {\n  var start = state.pos;\n  if (state.eat(0x78 /* x */)) {\n    if (this.regexp_eatFixedHexDigits(state, 2)) {\n      return true;\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\npp$1.regexp_eatDecimalDigits = function (state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isDecimalDigit(ch = state.current())) {\n    state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n    state.advance();\n  }\n  return state.pos !== start;\n};\nfunction isDecimalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x39; /* 9 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\npp$1.regexp_eatHexDigits = function (state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isHexDigit(ch = state.current())) {\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return state.pos !== start;\n};\nfunction isHexDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */ || ch >= 0x41 /* A */ && ch <= 0x46 /* F */ || ch >= 0x61 /* a */ && ch <= 0x66 /* f */;\n}\n\nfunction hexToInt(ch) {\n  if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n    return 10 + (ch - 0x41 /* A */);\n  }\n\n  if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n    return 10 + (ch - 0x61 /* a */);\n  }\n\n  return ch - 0x30; /* 0 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n// Allows only 0-377(octal) i.e. 0-255(decimal).\npp$1.regexp_eatLegacyOctalEscapeSequence = function (state) {\n  if (this.regexp_eatOctalDigit(state)) {\n    var n1 = state.lastIntValue;\n    if (this.regexp_eatOctalDigit(state)) {\n      var n2 = state.lastIntValue;\n      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n      } else {\n        state.lastIntValue = n1 * 8 + n2;\n      }\n    } else {\n      state.lastIntValue = n1;\n    }\n    return true;\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\npp$1.regexp_eatOctalDigit = function (state) {\n  var ch = state.current();\n  if (isOctalDigit(ch)) {\n    state.lastIntValue = ch - 0x30; /* 0 */\n    state.advance();\n    return true;\n  }\n  state.lastIntValue = 0;\n  return false;\n};\nfunction isOctalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x37; /* 7 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$1.regexp_eatFixedHexDigits = function (state, length) {\n  var start = state.pos;\n  state.lastIntValue = 0;\n  for (var i = 0; i < length; ++i) {\n    var ch = state.current();\n    if (!isHexDigit(ch)) {\n      state.pos = start;\n      return false;\n    }\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return true;\n};\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n  if (p.options.locations) {\n    this.loc = new SourceLocation(p, p.startLoc, p.endLoc);\n  }\n  if (p.options.ranges) {\n    this.range = [p.start, p.end];\n  }\n};\n\n// ## Tokenizer\n\nvar pp = Parser.prototype;\n\n// Move to the next token\n\npp.next = function (ignoreEscapeSequenceInKeyword) {\n  if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc) {\n    this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword);\n  }\n  if (this.options.onToken) {\n    this.options.onToken(new Token(this));\n  }\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\npp.getToken = function () {\n  this.next();\n  return new Token(this);\n};\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\") {\n  pp[Symbol.iterator] = function () {\n    var this$1$1 = this;\n    return {\n      next: function () {\n        var token = this$1$1.getToken();\n        return {\n          done: token.type === types$1.eof,\n          value: token\n        };\n      }\n    };\n  };\n}\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp.nextToken = function () {\n  var curContext = this.curContext();\n  if (!curContext || !curContext.preserveSpace) {\n    this.skipSpace();\n  }\n  this.start = this.pos;\n  if (this.options.locations) {\n    this.startLoc = this.curPosition();\n  }\n  if (this.pos >= this.input.length) {\n    return this.finishToken(types$1.eof);\n  }\n  if (curContext.override) {\n    return curContext.override(this);\n  } else {\n    this.readToken(this.fullCharCodeAtPos());\n  }\n};\npp.readToken = function (code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */) {\n    return this.readWord();\n  }\n  return this.getTokenFromCode(code);\n};\npp.fullCharCodeAtPos = function () {\n  var code = this.input.charCodeAt(this.pos);\n  if (code <= 0xd7ff || code >= 0xdc00) {\n    return code;\n  }\n  var next = this.input.charCodeAt(this.pos + 1);\n  return next <= 0xdbff || next >= 0xe000 ? code : (code << 10) + next - 0x35fdc00;\n};\npp.skipBlockComment = function () {\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos,\n    end = this.input.indexOf(\"*/\", this.pos += 2);\n  if (end === -1) {\n    this.raise(this.pos - 2, \"Unterminated comment\");\n  }\n  this.pos = end + 2;\n  if (this.options.locations) {\n    for (var nextBreak = void 0, pos = start; (nextBreak = nextLineBreak(this.input, pos, this.pos)) > -1;) {\n      ++this.curLine;\n      pos = this.lineStart = nextBreak;\n    }\n  }\n  if (this.options.onComment) {\n    this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos, startLoc, this.curPosition());\n  }\n};\npp.skipLineComment = function (startSkip) {\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n  while (this.pos < this.input.length && !isNewLine(ch)) {\n    ch = this.input.charCodeAt(++this.pos);\n  }\n  if (this.options.onComment) {\n    this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos, startLoc, this.curPosition());\n  }\n};\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp.skipSpace = function () {\n  loop: while (this.pos < this.input.length) {\n    var ch = this.input.charCodeAt(this.pos);\n    switch (ch) {\n      case 32:\n      case 160:\n        // ' '\n        ++this.pos;\n        break;\n      case 13:\n        if (this.input.charCodeAt(this.pos + 1) === 10) {\n          ++this.pos;\n        }\n      case 10:\n      case 8232:\n      case 8233:\n        ++this.pos;\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        break;\n      case 47:\n        // '/'\n        switch (this.input.charCodeAt(this.pos + 1)) {\n          case 42:\n            // '*'\n            this.skipBlockComment();\n            break;\n          case 47:\n            this.skipLineComment(2);\n            break;\n          default:\n            break loop;\n        }\n        break;\n      default:\n        if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n          ++this.pos;\n        } else {\n          break loop;\n        }\n    }\n  }\n};\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp.finishToken = function (type, val) {\n  this.end = this.pos;\n  if (this.options.locations) {\n    this.endLoc = this.curPosition();\n  }\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n  this.updateContext(prevType);\n};\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp.readToken_dot = function () {\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next >= 48 && next <= 57) {\n    return this.readNumber(true);\n  }\n  var next2 = this.input.charCodeAt(this.pos + 2);\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) {\n    // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(types$1.ellipsis);\n  } else {\n    ++this.pos;\n    return this.finishToken(types$1.dot);\n  }\n};\npp.readToken_slash = function () {\n  // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (this.exprAllowed) {\n    ++this.pos;\n    return this.readRegexp();\n  }\n  if (next === 61) {\n    return this.finishOp(types$1.assign, 2);\n  }\n  return this.finishOp(types$1.slash, 1);\n};\npp.readToken_mult_modulo_exp = function (code) {\n  // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? types$1.star : types$1.modulo;\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n    ++size;\n    tokentype = types$1.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n  if (next === 61) {\n    return this.finishOp(types$1.assign, size + 1);\n  }\n  return this.finishOp(tokentype, size);\n};\npp.readToken_pipe_amp = function (code) {\n  // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (this.options.ecmaVersion >= 12) {\n      var next2 = this.input.charCodeAt(this.pos + 2);\n      if (next2 === 61) {\n        return this.finishOp(types$1.assign, 3);\n      }\n    }\n    return this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2);\n  }\n  if (next === 61) {\n    return this.finishOp(types$1.assign, 2);\n  }\n  return this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1);\n};\npp.readToken_caret = function () {\n  // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) {\n    return this.finishOp(types$1.assign, 2);\n  }\n  return this.finishOp(types$1.bitwiseXOR, 1);\n};\npp.readToken_plus_min = function (code) {\n  // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 && (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken();\n    }\n    return this.finishOp(types$1.incDec, 2);\n  }\n  if (next === 61) {\n    return this.finishOp(types$1.assign, 2);\n  }\n  return this.finishOp(types$1.plusMin, 1);\n};\npp.readToken_lt_gt = function (code) {\n  // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n    if (this.input.charCodeAt(this.pos + size) === 61) {\n      return this.finishOp(types$1.assign, size + 1);\n    }\n    return this.finishOp(types$1.bitShift, size);\n  }\n  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 && this.input.charCodeAt(this.pos + 3) === 45) {\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken();\n  }\n  if (next === 61) {\n    size = 2;\n  }\n  return this.finishOp(types$1.relational, size);\n};\npp.readToken_eq_excl = function (code) {\n  // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) {\n    return this.finishOp(types$1.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2);\n  }\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) {\n    // '=>'\n    this.pos += 2;\n    return this.finishToken(types$1.arrow);\n  }\n  return this.finishOp(code === 61 ? types$1.eq : types$1.prefix, 1);\n};\npp.readToken_question = function () {\n  // '?'\n  var ecmaVersion = this.options.ecmaVersion;\n  if (ecmaVersion >= 11) {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 46) {\n      var next2 = this.input.charCodeAt(this.pos + 2);\n      if (next2 < 48 || next2 > 57) {\n        return this.finishOp(types$1.questionDot, 2);\n      }\n    }\n    if (next === 63) {\n      if (ecmaVersion >= 12) {\n        var next2$1 = this.input.charCodeAt(this.pos + 2);\n        if (next2$1 === 61) {\n          return this.finishOp(types$1.assign, 3);\n        }\n      }\n      return this.finishOp(types$1.coalesce, 2);\n    }\n  }\n  return this.finishOp(types$1.question, 1);\n};\npp.readToken_numberSign = function () {\n  // '#'\n  var ecmaVersion = this.options.ecmaVersion;\n  var code = 35; // '#'\n  if (ecmaVersion >= 13) {\n    ++this.pos;\n    code = this.fullCharCodeAtPos();\n    if (isIdentifierStart(code, true) || code === 92 /* '\\' */) {\n      return this.finishToken(types$1.privateId, this.readWord1());\n    }\n  }\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\npp.getTokenFromCode = function (code) {\n  switch (code) {\n    // The interpretation of a dot depends on whether it is followed\n    // by a digit or another two dots.\n    case 46:\n      // '.'\n      return this.readToken_dot();\n\n    // Punctuation tokens.\n    case 40:\n      ++this.pos;\n      return this.finishToken(types$1.parenL);\n    case 41:\n      ++this.pos;\n      return this.finishToken(types$1.parenR);\n    case 59:\n      ++this.pos;\n      return this.finishToken(types$1.semi);\n    case 44:\n      ++this.pos;\n      return this.finishToken(types$1.comma);\n    case 91:\n      ++this.pos;\n      return this.finishToken(types$1.bracketL);\n    case 93:\n      ++this.pos;\n      return this.finishToken(types$1.bracketR);\n    case 123:\n      ++this.pos;\n      return this.finishToken(types$1.braceL);\n    case 125:\n      ++this.pos;\n      return this.finishToken(types$1.braceR);\n    case 58:\n      ++this.pos;\n      return this.finishToken(types$1.colon);\n    case 96:\n      // '`'\n      if (this.options.ecmaVersion < 6) {\n        break;\n      }\n      ++this.pos;\n      return this.finishToken(types$1.backQuote);\n    case 48:\n      // '0'\n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 120 || next === 88) {\n        return this.readRadixNumber(16);\n      } // '0x', '0X' - hex number\n      if (this.options.ecmaVersion >= 6) {\n        if (next === 111 || next === 79) {\n          return this.readRadixNumber(8);\n        } // '0o', '0O' - octal number\n        if (next === 98 || next === 66) {\n          return this.readRadixNumber(2);\n        } // '0b', '0B' - binary number\n      }\n\n    // Anything else beginning with a digit is an integer, octal\n    // number, or float.\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      // 1-9\n      return this.readNumber(false);\n\n    // Quotes produce strings.\n    case 34:\n    case 39:\n      // '\"', \"'\"\n      return this.readString(code);\n\n    // Operators are parsed inline in tiny state machines. '=' (61) is\n    // often referred to. `finishOp` simply skips the amount of\n    // characters it is given as second argument, and returns a token\n    // of the type given by its first argument.\n    case 47:\n      // '/'\n      return this.readToken_slash();\n    case 37:\n    case 42:\n      // '%*'\n      return this.readToken_mult_modulo_exp(code);\n    case 124:\n    case 38:\n      // '|&'\n      return this.readToken_pipe_amp(code);\n    case 94:\n      // '^'\n      return this.readToken_caret();\n    case 43:\n    case 45:\n      // '+-'\n      return this.readToken_plus_min(code);\n    case 60:\n    case 62:\n      // '<>'\n      return this.readToken_lt_gt(code);\n    case 61:\n    case 33:\n      // '=!'\n      return this.readToken_eq_excl(code);\n    case 63:\n      // '?'\n      return this.readToken_question();\n    case 126:\n      // '~'\n      return this.finishOp(types$1.prefix, 1);\n    case 35:\n      // '#'\n      return this.readToken_numberSign();\n  }\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\npp.finishOp = function (type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str);\n};\npp.readRegexp = function () {\n  var escaped,\n    inClass,\n    start = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) {\n      this.raise(start, \"Unterminated regular expression\");\n    }\n    var ch = this.input.charAt(this.pos);\n    if (lineBreak.test(ch)) {\n      this.raise(start, \"Unterminated regular expression\");\n    }\n    if (!escaped) {\n      if (ch === \"[\") {\n        inClass = true;\n      } else if (ch === \"]\" && inClass) {\n        inClass = false;\n      } else if (ch === \"/\" && !inClass) {\n        break;\n      }\n      escaped = ch === \"\\\\\";\n    } else {\n      escaped = false;\n    }\n    ++this.pos;\n  }\n  var pattern = this.input.slice(start, this.pos);\n  ++this.pos;\n  var flagsStart = this.pos;\n  var flags = this.readWord1();\n  if (this.containsEsc) {\n    this.unexpected(flagsStart);\n  }\n\n  // Validate pattern\n  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n  state.reset(start, pattern, flags);\n  this.validateRegExpFlags(state);\n  this.validateRegExpPattern(state);\n\n  // Create Literal#value property value.\n  var value = null;\n  try {\n    value = new RegExp(pattern, flags);\n  } catch (e) {\n    // ESTree requires null if it failed to instantiate RegExp object.\n    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n  }\n  return this.finishToken(types$1.regexp, {\n    pattern: pattern,\n    flags: flags,\n    value: value\n  });\n};\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp.readInt = function (radix, len, maybeLegacyOctalNumericLiteral) {\n  // `len` is used for character escape sequences. In that case, disallow separators.\n  var allowSeparators = this.options.ecmaVersion >= 12 && len === undefined;\n\n  // `maybeLegacyOctalNumericLiteral` is true if it doesn't have prefix (0x,0o,0b)\n  // and isn't fraction part nor exponent part. In that case, if the first digit\n  // is zero then disallow separators.\n  var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;\n  var start = this.pos,\n    total = 0,\n    lastCode = 0;\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i, ++this.pos) {\n    var code = this.input.charCodeAt(this.pos),\n      val = void 0;\n    if (allowSeparators && code === 95) {\n      if (isLegacyOctalNumericLiteral) {\n        this.raiseRecoverable(this.pos, \"Numeric separator is not allowed in legacy octal numeric literals\");\n      }\n      if (lastCode === 95) {\n        this.raiseRecoverable(this.pos, \"Numeric separator must be exactly one underscore\");\n      }\n      if (i === 0) {\n        this.raiseRecoverable(this.pos, \"Numeric separator is not allowed at the first of digits\");\n      }\n      lastCode = code;\n      continue;\n    }\n    if (code >= 97) {\n      val = code - 97 + 10;\n    } // a\n    else if (code >= 65) {\n      val = code - 65 + 10;\n    } // A\n    else if (code >= 48 && code <= 57) {\n      val = code - 48;\n    } // 0-9\n    else {\n      val = Infinity;\n    }\n    if (val >= radix) {\n      break;\n    }\n    lastCode = code;\n    total = total * radix + val;\n  }\n  if (allowSeparators && lastCode === 95) {\n    this.raiseRecoverable(this.pos - 1, \"Numeric separator is not allowed at the last of digits\");\n  }\n  if (this.pos === start || len != null && this.pos - start !== len) {\n    return null;\n  }\n  return total;\n};\nfunction stringToNumber(str, isLegacyOctalNumericLiteral) {\n  if (isLegacyOctalNumericLiteral) {\n    return parseInt(str, 8);\n  }\n\n  // `parseFloat(value)` stops parsing at the first numeric separator then returns a wrong value.\n  return parseFloat(str.replace(/_/g, \"\"));\n}\nfunction stringToBigInt(str) {\n  if (typeof BigInt !== \"function\") {\n    return null;\n  }\n\n  // `BigInt(value)` throws syntax error if the string contains numeric separators.\n  return BigInt(str.replace(/_/g, \"\"));\n}\npp.readRadixNumber = function (radix) {\n  var start = this.pos;\n  this.pos += 2; // 0x\n  var val = this.readInt(radix);\n  if (val == null) {\n    this.raise(this.start + 2, \"Expected number in radix \" + radix);\n  }\n  if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n    val = stringToBigInt(this.input.slice(start, this.pos));\n    ++this.pos;\n  } else if (isIdentifierStart(this.fullCharCodeAtPos())) {\n    this.raise(this.pos, \"Identifier directly after number\");\n  }\n  return this.finishToken(types$1.num, val);\n};\n\n// Read an integer, octal integer, or floating-point number.\n\npp.readNumber = function (startsWithDot) {\n  var start = this.pos;\n  if (!startsWithDot && this.readInt(10, undefined, true) === null) {\n    this.raise(start, \"Invalid number\");\n  }\n  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n  if (octal && this.strict) {\n    this.raise(start, \"Invalid number\");\n  }\n  var next = this.input.charCodeAt(this.pos);\n  if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n    var val$1 = stringToBigInt(this.input.slice(start, this.pos));\n    ++this.pos;\n    if (isIdentifierStart(this.fullCharCodeAtPos())) {\n      this.raise(this.pos, \"Identifier directly after number\");\n    }\n    return this.finishToken(types$1.num, val$1);\n  }\n  if (octal && /[89]/.test(this.input.slice(start, this.pos))) {\n    octal = false;\n  }\n  if (next === 46 && !octal) {\n    // '.'\n    ++this.pos;\n    this.readInt(10);\n    next = this.input.charCodeAt(this.pos);\n  }\n  if ((next === 69 || next === 101) && !octal) {\n    // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n    if (next === 43 || next === 45) {\n      ++this.pos;\n    } // '+-'\n    if (this.readInt(10) === null) {\n      this.raise(start, \"Invalid number\");\n    }\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) {\n    this.raise(this.pos, \"Identifier directly after number\");\n  }\n  var val = stringToNumber(this.input.slice(start, this.pos), octal);\n  return this.finishToken(types$1.num, val);\n};\n\n// Read a string value, interpreting backslash-escapes.\n\npp.readCodePoint = function () {\n  var ch = this.input.charCodeAt(this.pos),\n    code;\n  if (ch === 123) {\n    // '{'\n    if (this.options.ecmaVersion < 6) {\n      this.unexpected();\n    }\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n    ++this.pos;\n    if (code > 0x10FFFF) {\n      this.invalidStringToken(codePos, \"Code point out of bounds\");\n    }\n  } else {\n    code = this.readHexChar(4);\n  }\n  return code;\n};\npp.readString = function (quote) {\n  var out = \"\",\n    chunkStart = ++this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) {\n      this.raise(this.start, \"Unterminated string constant\");\n    }\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === quote) {\n      break;\n    }\n    if (ch === 92) {\n      // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(false);\n      chunkStart = this.pos;\n    } else if (ch === 0x2028 || ch === 0x2029) {\n      if (this.options.ecmaVersion < 10) {\n        this.raise(this.start, \"Unterminated string constant\");\n      }\n      ++this.pos;\n      if (this.options.locations) {\n        this.curLine++;\n        this.lineStart = this.pos;\n      }\n    } else {\n      if (isNewLine(ch)) {\n        this.raise(this.start, \"Unterminated string constant\");\n      }\n      ++this.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(types$1.string, out);\n};\n\n// Reads template string tokens.\n\nvar INVALID_TEMPLATE_ESCAPE_ERROR = {};\npp.tryReadTemplateToken = function () {\n  this.inTemplateElement = true;\n  try {\n    this.readTmplToken();\n  } catch (err) {\n    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n      this.readInvalidTemplateToken();\n    } else {\n      throw err;\n    }\n  }\n  this.inTemplateElement = false;\n};\npp.invalidStringToken = function (position, message) {\n  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n    throw INVALID_TEMPLATE_ESCAPE_ERROR;\n  } else {\n    this.raise(position, message);\n  }\n};\npp.readTmplToken = function () {\n  var out = \"\",\n    chunkStart = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) {\n      this.raise(this.start, \"Unterminated template\");\n    }\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) {\n      // '`', '${'\n      if (this.pos === this.start && (this.type === types$1.template || this.type === types$1.invalidTemplate)) {\n        if (ch === 36) {\n          this.pos += 2;\n          return this.finishToken(types$1.dollarBraceL);\n        } else {\n          ++this.pos;\n          return this.finishToken(types$1.backQuote);\n        }\n      }\n      out += this.input.slice(chunkStart, this.pos);\n      return this.finishToken(types$1.template, out);\n    }\n    if (ch === 92) {\n      // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(true);\n      chunkStart = this.pos;\n    } else if (isNewLine(ch)) {\n      out += this.input.slice(chunkStart, this.pos);\n      ++this.pos;\n      switch (ch) {\n        case 13:\n          if (this.input.charCodeAt(this.pos) === 10) {\n            ++this.pos;\n          }\n        case 10:\n          out += \"\\n\";\n          break;\n        default:\n          out += String.fromCharCode(ch);\n          break;\n      }\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n      chunkStart = this.pos;\n    } else {\n      ++this.pos;\n    }\n  }\n};\n\n// Reads a template token to search for the end, without validating any escape sequences\npp.readInvalidTemplateToken = function () {\n  for (; this.pos < this.input.length; this.pos++) {\n    switch (this.input[this.pos]) {\n      case \"\\\\\":\n        ++this.pos;\n        break;\n      case \"$\":\n        if (this.input[this.pos + 1] !== \"{\") {\n          break;\n        }\n\n      // falls through\n      case \"`\":\n        return this.finishToken(types$1.invalidTemplate, this.input.slice(this.start, this.pos));\n\n      // no default\n    }\n  }\n\n  this.raise(this.start, \"Unterminated template\");\n};\n\n// Used to read escaped characters\n\npp.readEscapedChar = function (inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n  switch (ch) {\n    case 110:\n      return \"\\n\";\n    // 'n' -> '\\n'\n    case 114:\n      return \"\\r\";\n    // 'r' -> '\\r'\n    case 120:\n      return String.fromCharCode(this.readHexChar(2));\n    // 'x'\n    case 117:\n      return codePointToString(this.readCodePoint());\n    // 'u'\n    case 116:\n      return \"\\t\";\n    // 't' -> '\\t'\n    case 98:\n      return \"\\b\";\n    // 'b' -> '\\b'\n    case 118:\n      return \"\\u000b\";\n    // 'v' -> '\\u000b'\n    case 102:\n      return \"\\f\";\n    // 'f' -> '\\f'\n    case 13:\n      if (this.input.charCodeAt(this.pos) === 10) {\n        ++this.pos;\n      }\n    // '\\r\\n'\n    case 10:\n      // ' \\n'\n      if (this.options.locations) {\n        this.lineStart = this.pos;\n        ++this.curLine;\n      }\n      return \"\";\n    case 56:\n    case 57:\n      if (this.strict) {\n        this.invalidStringToken(this.pos - 1, \"Invalid escape sequence\");\n      }\n      if (inTemplate) {\n        var codePos = this.pos - 1;\n        this.invalidStringToken(codePos, \"Invalid escape sequence in template string\");\n        return null;\n      }\n    default:\n      if (ch >= 48 && ch <= 55) {\n        var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n        var octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        this.pos += octalStr.length - 1;\n        ch = this.input.charCodeAt(this.pos);\n        if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n          this.invalidStringToken(this.pos - 1 - octalStr.length, inTemplate ? \"Octal literal in template string\" : \"Octal literal in strict mode\");\n        }\n        return String.fromCharCode(octal);\n      }\n      if (isNewLine(ch)) {\n        // Unicode new line characters after \\ get removed from output in both\n        // template literals and strings\n        return \"\";\n      }\n      return String.fromCharCode(ch);\n  }\n};\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp.readHexChar = function (len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n  if (n === null) {\n    this.invalidStringToken(codePos, \"Bad character escape sequence\");\n  }\n  return n;\n};\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp.readWord1 = function () {\n  this.containsEsc = false;\n  var word = \"\",\n    first = true,\n    chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n  while (this.pos < this.input.length) {\n    var ch = this.fullCharCodeAtPos();\n    if (isIdentifierChar(ch, astral)) {\n      this.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) {\n      // \"\\\"\n      this.containsEsc = true;\n      word += this.input.slice(chunkStart, this.pos);\n      var escStart = this.pos;\n      if (this.input.charCodeAt(++this.pos) !== 117)\n        // \"u\"\n        {\n          this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\");\n        }\n      ++this.pos;\n      var esc = this.readCodePoint();\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral)) {\n        this.invalidStringToken(escStart, \"Invalid Unicode escape\");\n      }\n      word += codePointToString(esc);\n      chunkStart = this.pos;\n    } else {\n      break;\n    }\n    first = false;\n  }\n  return word + this.input.slice(chunkStart, this.pos);\n};\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp.readWord = function () {\n  var word = this.readWord1();\n  var type = types$1.name;\n  if (this.keywords.test(word)) {\n    type = keywords[word];\n  }\n  return this.finishToken(type, word);\n};\n\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n\nvar version = \"8.8.1\";\nParser.acorn = {\n  Parser: Parser,\n  version: version,\n  defaultOptions: defaultOptions,\n  Position: Position,\n  SourceLocation: SourceLocation,\n  getLineInfo: getLineInfo,\n  Node: Node,\n  TokenType: TokenType,\n  tokTypes: types$1,\n  keywordTypes: keywords,\n  TokContext: TokContext,\n  tokContexts: types,\n  isIdentifierChar: isIdentifierChar,\n  isIdentifierStart: isIdentifierStart,\n  Token: Token,\n  isNewLine: isNewLine,\n  lineBreak: lineBreak,\n  lineBreakG: lineBreakG,\n  nonASCIIwhitespace: nonASCIIwhitespace\n};\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nfunction parse(input, options) {\n  return Parser.parse(input, options);\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  return Parser.parseExpressionAt(input, pos, options);\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return Parser.tokenizer(input, options);\n}\nconst _acorn = /*#__PURE__*/Object.defineProperty({\n  __proto__: null,\n  Node,\n  Parser,\n  Position,\n  SourceLocation,\n  TokContext,\n  Token,\n  TokenType,\n  defaultOptions,\n  getLineInfo,\n  isIdentifierChar,\n  isIdentifierStart,\n  isNewLine,\n  keywordTypes: keywords,\n  lineBreak,\n  lineBreakG,\n  nonASCIIwhitespace,\n  parse,\n  parseExpressionAt,\n  tokContexts: types,\n  tokTypes: types$1,\n  tokenizer,\n  version\n}, Symbol.toStringTag, {\n  value: 'Module'\n});\nfunction flru(max) {\n  var num, curr, prev;\n  var limit = max || 1;\n  function keep(key, value) {\n    if (++num > limit) {\n      prev = curr;\n      reset(1);\n      ++num;\n    }\n    curr[key] = value;\n  }\n  function reset(isPartial) {\n    num = 0;\n    curr = Object.create(null);\n    isPartial || (prev = Object.create(null));\n  }\n  reset();\n  return {\n    clear: reset,\n    has: function (key) {\n      return curr[key] !== void 0 || prev[key] !== void 0;\n    },\n    get: function (key) {\n      var val = curr[key];\n      if (val !== void 0) return val;\n      if ((val = prev[key]) !== void 0) {\n        keep(key, val);\n        return val;\n      }\n    },\n    set: function (key, value) {\n      if (curr[key] !== void 0) {\n        curr[key] = value;\n      } else {\n        keep(key, value);\n      }\n    }\n  };\n}\nfunction resolveIdViaPlugins(source, importer, pluginDriver, moduleLoaderResolveId, skip, customOptions, isEntry, assertions) {\n  let skipped = null;\n  let replaceContext = null;\n  if (skip) {\n    skipped = new Set();\n    for (const skippedCall of skip) {\n      if (source === skippedCall.source && importer === skippedCall.importer) {\n        skipped.add(skippedCall.plugin);\n      }\n    }\n    replaceContext = (pluginContext, plugin) => ({\n      ...pluginContext,\n      resolve: function (source, importer) {\n        let {\n          assertions,\n          custom,\n          isEntry,\n          skipSelf\n        } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : BLANK;\n        return moduleLoaderResolveId(source, importer, custom, isEntry, assertions || EMPTY_OBJECT, skipSelf ? [...skip, {\n          importer,\n          plugin,\n          source\n        }] : skip);\n      }\n    });\n  }\n  return pluginDriver.hookFirstAndGetPlugin('resolveId', [source, importer, {\n    assertions,\n    custom: customOptions,\n    isEntry\n  }], replaceContext, skipped);\n}\nasync function resolveId(source, importer, preserveSymlinks, pluginDriver, moduleLoaderResolveId, skip, customOptions, isEntry, assertions) {\n  const pluginResult = await resolveIdViaPlugins(source, importer, pluginDriver, moduleLoaderResolveId, skip, customOptions, isEntry, assertions);\n  if (pluginResult != null) {\n    const [resolveIdResult, plugin] = pluginResult;\n    if (typeof resolveIdResult === 'object' && !resolveIdResult.resolvedBy) {\n      return {\n        ...resolveIdResult,\n        resolvedBy: plugin.name\n      };\n    }\n    if (typeof resolveIdResult === 'string') {\n      return {\n        id: resolveIdResult,\n        resolvedBy: plugin.name\n      };\n    }\n    return resolveIdResult;\n  }\n  // external modules (non-entry modules that start with neither '.' or '/')\n  // are skipped at this stage.\n  if (importer !== undefined && !isAbsolute(source) && source[0] !== '.') return null;\n  // `resolve` processes paths from right to left, prepending them until an\n  // absolute path is created. Absolute importees therefore shortcircuit the\n  // resolve call and require no special handing on our part.\n  // See https://nodejs.org/api/path.html#path_path_resolve_paths\n  return addJsExtensionIfNecessary(importer ? resolve(dirname(importer), source) : resolve(source), preserveSymlinks);\n}\nasync function addJsExtensionIfNecessary(file, preserveSymlinks) {\n  return (await findFile(file, preserveSymlinks)) ?? (await findFile(file + '.mjs', preserveSymlinks)) ?? (await findFile(file + '.js', preserveSymlinks));\n}\nasync function findFile(file, preserveSymlinks) {\n  try {\n    const stats = await lstat(file);\n    if (!preserveSymlinks && stats.isSymbolicLink()) return await findFile(await realpath(file), preserveSymlinks);\n    if (preserveSymlinks && stats.isSymbolicLink() || stats.isFile()) {\n      // check case\n      const name = basename(file);\n      const files = await readdir(dirname(file));\n      if (files.includes(name)) return file;\n    }\n  } catch {\n    // suppress\n  }\n}\nconst ANONYMOUS_PLUGIN_PREFIX = 'at position ';\nconst ANONYMOUS_OUTPUT_PLUGIN_PREFIX = 'at output position ';\nfunction createPluginCache(cache) {\n  return {\n    delete(id) {\n      return delete cache[id];\n    },\n    get(id) {\n      const item = cache[id];\n      if (!item) return;\n      item[0] = 0;\n      return item[1];\n    },\n    has(id) {\n      const item = cache[id];\n      if (!item) return false;\n      item[0] = 0;\n      return true;\n    },\n    set(id, value) {\n      cache[id] = [0, value];\n    }\n  };\n}\nfunction getTrackedPluginCache(pluginCache, onUse) {\n  return {\n    delete(id) {\n      onUse();\n      return pluginCache.delete(id);\n    },\n    get(id) {\n      onUse();\n      return pluginCache.get(id);\n    },\n    has(id) {\n      onUse();\n      return pluginCache.has(id);\n    },\n    set(id, value) {\n      onUse();\n      return pluginCache.set(id, value);\n    }\n  };\n}\nconst NO_CACHE = {\n  delete() {\n    return false;\n  },\n  get() {\n    return undefined;\n  },\n  has() {\n    return false;\n  },\n  set() {}\n};\nfunction uncacheablePluginError(pluginName) {\n  if (pluginName.startsWith(ANONYMOUS_PLUGIN_PREFIX) || pluginName.startsWith(ANONYMOUS_OUTPUT_PLUGIN_PREFIX)) {\n    return error(errorAnonymousPluginCache());\n  }\n  return error(errorDuplicatePluginName(pluginName));\n}\nfunction getCacheForUncacheablePlugin(pluginName) {\n  return {\n    delete() {\n      return uncacheablePluginError(pluginName);\n    },\n    get() {\n      return uncacheablePluginError(pluginName);\n    },\n    has() {\n      return uncacheablePluginError(pluginName);\n    },\n    set() {\n      return uncacheablePluginError(pluginName);\n    }\n  };\n}\nasync function transform(source, module, pluginDriver, warn) {\n  const id = module.id;\n  const sourcemapChain = [];\n  let originalSourcemap = source.map === null ? null : decodedSourcemap(source.map);\n  const originalCode = source.code;\n  let ast = source.ast;\n  const transformDependencies = [];\n  const emittedFiles = [];\n  let customTransformCache = false;\n  const useCustomTransformCache = () => customTransformCache = true;\n  let pluginName = '';\n  const currentSource = source.code;\n  function transformReducer(previousCode, result, plugin) {\n    let code;\n    let map;\n    if (typeof result === 'string') {\n      code = result;\n    } else if (result && typeof result === 'object') {\n      module.updateOptions(result);\n      if (result.code == null) {\n        if (result.map || result.ast) {\n          warn(errorNoTransformMapOrAstWithoutCode(plugin.name));\n        }\n        return previousCode;\n      }\n      ({\n        code,\n        map,\n        ast\n      } = result);\n    } else {\n      return previousCode;\n    }\n    // strict null check allows 'null' maps to not be pushed to the chain,\n    // while 'undefined' gets the missing map warning\n    if (map !== null) {\n      sourcemapChain.push(decodedSourcemap(typeof map === 'string' ? JSON.parse(map) : map) || {\n        missing: true,\n        plugin: plugin.name\n      });\n    }\n    return code;\n  }\n  let code;\n  try {\n    code = await pluginDriver.hookReduceArg0('transform', [currentSource, id], transformReducer, (pluginContext, plugin) => {\n      pluginName = plugin.name;\n      return {\n        ...pluginContext,\n        addWatchFile(id) {\n          transformDependencies.push(id);\n          pluginContext.addWatchFile(id);\n        },\n        cache: customTransformCache ? pluginContext.cache : getTrackedPluginCache(pluginContext.cache, useCustomTransformCache),\n        emitFile(emittedFile) {\n          emittedFiles.push(emittedFile);\n          return pluginDriver.emitFile(emittedFile);\n        },\n        error(error_, pos) {\n          if (typeof error_ === 'string') error_ = {\n            message: error_\n          };\n          if (pos) augmentCodeLocation(error_, pos, currentSource, id);\n          error_.id = id;\n          error_.hook = 'transform';\n          return pluginContext.error(error_);\n        },\n        getCombinedSourcemap() {\n          const combinedMap = collapseSourcemap(id, originalCode, originalSourcemap, sourcemapChain, warn);\n          if (!combinedMap) {\n            const magicString = new MagicString(originalCode);\n            return magicString.generateMap({\n              hires: true,\n              includeContent: true,\n              source: id\n            });\n          }\n          if (originalSourcemap !== combinedMap) {\n            originalSourcemap = combinedMap;\n            sourcemapChain.length = 0;\n          }\n          return new SourceMap({\n            ...combinedMap,\n            file: null,\n            sourcesContent: combinedMap.sourcesContent\n          });\n        },\n        setAssetSource() {\n          return this.error(errorInvalidSetAssetSourceCall());\n        },\n        warn(warning, pos) {\n          if (typeof warning === 'string') warning = {\n            message: warning\n          };\n          if (pos) augmentCodeLocation(warning, pos, currentSource, id);\n          warning.id = id;\n          warning.hook = 'transform';\n          pluginContext.warn(warning);\n        }\n      };\n    });\n  } catch (error_) {\n    return error(errorPluginError(error_, pluginName, {\n      hook: 'transform',\n      id\n    }));\n  }\n  if (!customTransformCache &&\n  // files emitted by a transform hook need to be emitted again if the hook is skipped\n  emittedFiles.length > 0) module.transformFiles = emittedFiles;\n  return {\n    ast,\n    code,\n    customTransformCache,\n    originalCode,\n    originalSourcemap,\n    sourcemapChain,\n    transformDependencies\n  };\n}\nconst RESOLVE_DEPENDENCIES = 'resolveDependencies';\nclass ModuleLoader {\n  constructor(graph, modulesById, options, pluginDriver) {\n    var _this = this;\n    this.graph = graph;\n    this.modulesById = modulesById;\n    this.options = options;\n    this.pluginDriver = pluginDriver;\n    this.implicitEntryModules = new Set();\n    this.indexedEntryModules = [];\n    this.latestLoadModulesPromise = Promise.resolve();\n    this.moduleLoadPromises = new Map();\n    this.modulesWithLoadedDependencies = new Set();\n    this.nextChunkNamePriority = 0;\n    this.nextEntryModuleIndex = 0;\n    this.resolveId = async function (source, importer, customOptions, isEntry, assertions) {\n      let skip = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n      return _this.getResolvedIdWithDefaults(_this.getNormalizedResolvedIdWithoutDefaults(_this.options.external(source, importer, false) ? false : await resolveId(source, importer, _this.options.preserveSymlinks, _this.pluginDriver, _this.resolveId, skip, customOptions, typeof isEntry === 'boolean' ? isEntry : !importer, assertions), importer, source), assertions);\n    };\n    this.hasModuleSideEffects = options.treeshake ? options.treeshake.moduleSideEffects : () => true;\n  }\n  async addAdditionalModules(unresolvedModules) {\n    const result = this.extendLoadModulesPromise(Promise.all(unresolvedModules.map(id => this.loadEntryModule(id, false, undefined, null))));\n    await this.awaitLoadModulesPromise();\n    return result;\n  }\n  async addEntryModules(unresolvedEntryModules, isUserDefined) {\n    const firstEntryModuleIndex = this.nextEntryModuleIndex;\n    this.nextEntryModuleIndex += unresolvedEntryModules.length;\n    const firstChunkNamePriority = this.nextChunkNamePriority;\n    this.nextChunkNamePriority += unresolvedEntryModules.length;\n    const newEntryModules = await this.extendLoadModulesPromise(Promise.all(unresolvedEntryModules.map(_ref109 => {\n      let {\n        id,\n        importer\n      } = _ref109;\n      return this.loadEntryModule(id, true, importer, null);\n    })).then(entryModules => {\n      for (const [index, entryModule] of entryModules.entries()) {\n        entryModule.isUserDefinedEntryPoint = entryModule.isUserDefinedEntryPoint || isUserDefined;\n        addChunkNamesToModule(entryModule, unresolvedEntryModules[index], isUserDefined, firstChunkNamePriority + index);\n        const existingIndexedModule = this.indexedEntryModules.find(indexedModule => indexedModule.module === entryModule);\n        if (existingIndexedModule) {\n          existingIndexedModule.index = Math.min(existingIndexedModule.index, firstEntryModuleIndex + index);\n        } else {\n          this.indexedEntryModules.push({\n            index: firstEntryModuleIndex + index,\n            module: entryModule\n          });\n        }\n      }\n      this.indexedEntryModules.sort((_ref110, _ref111) => {\n        let {\n          index: indexA\n        } = _ref110;\n        let {\n          index: indexB\n        } = _ref111;\n        return indexA > indexB ? 1 : -1;\n      });\n      return entryModules;\n    }));\n    await this.awaitLoadModulesPromise();\n    return {\n      entryModules: this.indexedEntryModules.map(_ref112 => {\n        let {\n          module\n        } = _ref112;\n        return module;\n      }),\n      implicitEntryModules: [...this.implicitEntryModules],\n      newEntryModules\n    };\n  }\n  async emitChunk(_ref113) {\n    let {\n      fileName,\n      id,\n      importer,\n      name,\n      implicitlyLoadedAfterOneOf,\n      preserveSignature\n    } = _ref113;\n    const unresolvedModule = {\n      fileName: fileName || null,\n      id,\n      importer,\n      name: name || null\n    };\n    const module = implicitlyLoadedAfterOneOf ? await this.addEntryWithImplicitDependants(unresolvedModule, implicitlyLoadedAfterOneOf) : (await this.addEntryModules([unresolvedModule], false)).newEntryModules[0];\n    if (preserveSignature != null) {\n      module.preserveSignature = preserveSignature;\n    }\n    return module;\n  }\n  async preloadModule(resolvedId) {\n    const module = await this.fetchModule(this.getResolvedIdWithDefaults(resolvedId, EMPTY_OBJECT), undefined, false, resolvedId.resolveDependencies ? RESOLVE_DEPENDENCIES : true);\n    return module.info;\n  }\n  addEntryWithImplicitDependants(unresolvedModule, implicitlyLoadedAfter) {\n    const chunkNamePriority = this.nextChunkNamePriority++;\n    return this.extendLoadModulesPromise(this.loadEntryModule(unresolvedModule.id, false, unresolvedModule.importer, null).then(async entryModule => {\n      addChunkNamesToModule(entryModule, unresolvedModule, false, chunkNamePriority);\n      if (!entryModule.info.isEntry) {\n        this.implicitEntryModules.add(entryModule);\n        const implicitlyLoadedAfterModules = await Promise.all(implicitlyLoadedAfter.map(id => this.loadEntryModule(id, false, unresolvedModule.importer, entryModule.id)));\n        for (const module of implicitlyLoadedAfterModules) {\n          entryModule.implicitlyLoadedAfter.add(module);\n        }\n        for (const dependant of entryModule.implicitlyLoadedAfter) {\n          dependant.implicitlyLoadedBefore.add(entryModule);\n        }\n      }\n      return entryModule;\n    }));\n  }\n  async addModuleSource(id, importer, module) {\n    let source;\n    try {\n      source = await this.graph.fileOperationQueue.run(async () => (await this.pluginDriver.hookFirst('load', [id])) ?? (await readFile(id, 'utf8')));\n    } catch (error_) {\n      let message = `Could not load ${id}`;\n      if (importer) message += ` (imported by ${relativeId(importer)})`;\n      message += `: ${error_.message}`;\n      error_.message = message;\n      throw error_;\n    }\n    const sourceDescription = typeof source === 'string' ? {\n      code: source\n    } : source != null && typeof source === 'object' && typeof source.code === 'string' ? source : error(errorBadLoader(id));\n    const cachedModule = this.graph.cachedModules.get(id);\n    if (cachedModule && !cachedModule.customTransformCache && cachedModule.originalCode === sourceDescription.code && !(await this.pluginDriver.hookFirst('shouldTransformCachedModule', [{\n      ast: cachedModule.ast,\n      code: cachedModule.code,\n      id: cachedModule.id,\n      meta: cachedModule.meta,\n      moduleSideEffects: cachedModule.moduleSideEffects,\n      resolvedSources: cachedModule.resolvedIds,\n      syntheticNamedExports: cachedModule.syntheticNamedExports\n    }]))) {\n      if (cachedModule.transformFiles) {\n        for (const emittedFile of cachedModule.transformFiles) this.pluginDriver.emitFile(emittedFile);\n      }\n      module.setSource(cachedModule);\n    } else {\n      module.updateOptions(sourceDescription);\n      module.setSource(await transform(sourceDescription, module, this.pluginDriver, this.options.onwarn));\n    }\n  }\n  async awaitLoadModulesPromise() {\n    let startingPromise;\n    do {\n      startingPromise = this.latestLoadModulesPromise;\n      await startingPromise;\n    } while (startingPromise !== this.latestLoadModulesPromise);\n  }\n  extendLoadModulesPromise(loadNewModulesPromise) {\n    this.latestLoadModulesPromise = Promise.all([loadNewModulesPromise, this.latestLoadModulesPromise]);\n    this.latestLoadModulesPromise.catch(() => {\n      /* Avoid unhandled Promise rejections */\n    });\n    return loadNewModulesPromise;\n  }\n  async fetchDynamicDependencies(module, resolveDynamicImportPromises) {\n    const dependencies = await Promise.all(resolveDynamicImportPromises.map(resolveDynamicImportPromise => resolveDynamicImportPromise.then(async _ref114 => {\n      let [dynamicImport, resolvedId] = _ref114;\n      if (resolvedId === null) return null;\n      if (typeof resolvedId === 'string') {\n        dynamicImport.resolution = resolvedId;\n        return null;\n      }\n      return dynamicImport.resolution = await this.fetchResolvedDependency(relativeId(resolvedId.id), module.id, resolvedId);\n    })));\n    for (const dependency of dependencies) {\n      if (dependency) {\n        module.dynamicDependencies.add(dependency);\n        dependency.dynamicImporters.push(module.id);\n      }\n    }\n  }\n  // If this is a preload, then this method always waits for the dependencies of\n  // the module to be resolved.\n  // Otherwise, if the module does not exist, it waits for the module and all\n  // its dependencies to be loaded.\n  // Otherwise, it returns immediately.\n  async fetchModule(_ref115, importer, isEntry, isPreload) {\n    let {\n      assertions,\n      id,\n      meta,\n      moduleSideEffects,\n      syntheticNamedExports\n    } = _ref115;\n    const existingModule = this.modulesById.get(id);\n    if (existingModule instanceof Module) {\n      if (importer && doAssertionsDiffer(assertions, existingModule.info.assertions)) {\n        this.options.onwarn(errorInconsistentImportAssertions(existingModule.info.assertions, assertions, id, importer));\n      }\n      await this.handleExistingModule(existingModule, isEntry, isPreload);\n      return existingModule;\n    }\n    const module = new Module(this.graph, id, this.options, isEntry, moduleSideEffects, syntheticNamedExports, meta, assertions);\n    this.modulesById.set(id, module);\n    this.graph.watchFiles[id] = true;\n    const loadPromise = this.addModuleSource(id, importer, module).then(() => [this.getResolveStaticDependencyPromises(module), this.getResolveDynamicImportPromises(module), loadAndResolveDependenciesPromise]);\n    const loadAndResolveDependenciesPromise = waitForDependencyResolution(loadPromise).then(() => this.pluginDriver.hookParallel('moduleParsed', [module.info]));\n    loadAndResolveDependenciesPromise.catch(() => {\n      /* avoid unhandled promise rejections */\n    });\n    this.moduleLoadPromises.set(module, loadPromise);\n    const resolveDependencyPromises = await loadPromise;\n    if (!isPreload) {\n      await this.fetchModuleDependencies(module, ...resolveDependencyPromises);\n    } else if (isPreload === RESOLVE_DEPENDENCIES) {\n      await loadAndResolveDependenciesPromise;\n    }\n    return module;\n  }\n  async fetchModuleDependencies(module, resolveStaticDependencyPromises, resolveDynamicDependencyPromises, loadAndResolveDependenciesPromise) {\n    if (this.modulesWithLoadedDependencies.has(module)) {\n      return;\n    }\n    this.modulesWithLoadedDependencies.add(module);\n    await Promise.all([this.fetchStaticDependencies(module, resolveStaticDependencyPromises), this.fetchDynamicDependencies(module, resolveDynamicDependencyPromises)]);\n    module.linkImports();\n    // To handle errors when resolving dependencies or in moduleParsed\n    await loadAndResolveDependenciesPromise;\n  }\n  fetchResolvedDependency(source, importer, resolvedId) {\n    if (resolvedId.external) {\n      const {\n        assertions,\n        external,\n        id,\n        moduleSideEffects,\n        meta\n      } = resolvedId;\n      let externalModule = this.modulesById.get(id);\n      if (!externalModule) {\n        externalModule = new ExternalModule(this.options, id, moduleSideEffects, meta, external !== 'absolute' && isAbsolute(id), assertions);\n        this.modulesById.set(id, externalModule);\n      } else if (!(externalModule instanceof ExternalModule)) {\n        return error(errorInternalIdCannotBeExternal(source, importer));\n      } else if (doAssertionsDiffer(externalModule.info.assertions, assertions)) {\n        this.options.onwarn(errorInconsistentImportAssertions(externalModule.info.assertions, assertions, source, importer));\n      }\n      return Promise.resolve(externalModule);\n    }\n    return this.fetchModule(resolvedId, importer, false, false);\n  }\n  async fetchStaticDependencies(module, resolveStaticDependencyPromises) {\n    for (const dependency of await Promise.all(resolveStaticDependencyPromises.map(resolveStaticDependencyPromise => resolveStaticDependencyPromise.then(_ref116 => {\n      let [source, resolvedId] = _ref116;\n      return this.fetchResolvedDependency(source, module.id, resolvedId);\n    })))) {\n      module.dependencies.add(dependency);\n      dependency.importers.push(module.id);\n    }\n    if (!this.options.treeshake || module.info.moduleSideEffects === 'no-treeshake') {\n      for (const dependency of module.dependencies) {\n        if (dependency instanceof Module) {\n          dependency.importedFromNotTreeshaken = true;\n        }\n      }\n    }\n  }\n  getNormalizedResolvedIdWithoutDefaults(resolveIdResult, importer, source) {\n    const {\n      makeAbsoluteExternalsRelative\n    } = this.options;\n    if (resolveIdResult) {\n      if (typeof resolveIdResult === 'object') {\n        const external = resolveIdResult.external || this.options.external(resolveIdResult.id, importer, true);\n        return {\n          ...resolveIdResult,\n          external: external && (external === 'relative' || !isAbsolute(resolveIdResult.id) || external === true && isNotAbsoluteExternal(resolveIdResult.id, source, makeAbsoluteExternalsRelative) || 'absolute')\n        };\n      }\n      const external = this.options.external(resolveIdResult, importer, true);\n      return {\n        external: external && (isNotAbsoluteExternal(resolveIdResult, source, makeAbsoluteExternalsRelative) || 'absolute'),\n        id: external && makeAbsoluteExternalsRelative ? normalizeRelativeExternalId(resolveIdResult, importer) : resolveIdResult\n      };\n    }\n    const id = makeAbsoluteExternalsRelative ? normalizeRelativeExternalId(source, importer) : source;\n    if (resolveIdResult !== false && !this.options.external(id, importer, true)) {\n      return null;\n    }\n    return {\n      external: isNotAbsoluteExternal(id, source, makeAbsoluteExternalsRelative) || 'absolute',\n      id\n    };\n  }\n  getResolveDynamicImportPromises(module) {\n    return module.dynamicImports.map(async dynamicImport => {\n      const resolvedId = await this.resolveDynamicImport(module, typeof dynamicImport.argument === 'string' ? dynamicImport.argument : dynamicImport.argument.esTreeNode, module.id, getAssertionsFromImportExpression(dynamicImport.node));\n      if (resolvedId && typeof resolvedId === 'object') {\n        dynamicImport.id = resolvedId.id;\n      }\n      return [dynamicImport, resolvedId];\n    });\n  }\n  getResolveStaticDependencyPromises(module) {\n    // eslint-disable-next-line unicorn/prefer-spread\n    return Array.from(module.sourcesWithAssertions, async _ref117 => {\n      let [source, assertions] = _ref117;\n      return [source, module.resolvedIds[source] = module.resolvedIds[source] || this.handleInvalidResolvedId(await this.resolveId(source, module.id, EMPTY_OBJECT, false, assertions), source, module.id, assertions)];\n    });\n  }\n  getResolvedIdWithDefaults(resolvedId, assertions) {\n    if (!resolvedId) {\n      return null;\n    }\n    const external = resolvedId.external || false;\n    return {\n      assertions: resolvedId.assertions || assertions,\n      external,\n      id: resolvedId.id,\n      meta: resolvedId.meta || {},\n      moduleSideEffects: resolvedId.moduleSideEffects ?? this.hasModuleSideEffects(resolvedId.id, !!external),\n      resolvedBy: resolvedId.resolvedBy ?? 'rollup',\n      syntheticNamedExports: resolvedId.syntheticNamedExports ?? false\n    };\n  }\n  async handleExistingModule(module, isEntry, isPreload) {\n    const loadPromise = this.moduleLoadPromises.get(module);\n    if (isPreload) {\n      return isPreload === RESOLVE_DEPENDENCIES ? waitForDependencyResolution(loadPromise) : loadPromise;\n    }\n    if (isEntry) {\n      module.info.isEntry = true;\n      this.implicitEntryModules.delete(module);\n      for (const dependant of module.implicitlyLoadedAfter) {\n        dependant.implicitlyLoadedBefore.delete(module);\n      }\n      module.implicitlyLoadedAfter.clear();\n    }\n    return this.fetchModuleDependencies(module, ...(await loadPromise));\n  }\n  handleInvalidResolvedId(resolvedId, source, importer, assertions) {\n    if (resolvedId === null) {\n      if (isRelative(source)) {\n        return error(errorUnresolvedImport(source, importer));\n      }\n      this.options.onwarn(errorUnresolvedImportTreatedAsExternal(source, importer));\n      return {\n        assertions,\n        external: true,\n        id: source,\n        meta: {},\n        moduleSideEffects: this.hasModuleSideEffects(source, true),\n        resolvedBy: 'rollup',\n        syntheticNamedExports: false\n      };\n    } else if (resolvedId.external && resolvedId.syntheticNamedExports) {\n      this.options.onwarn(errorExternalSyntheticExports(source, importer));\n    }\n    return resolvedId;\n  }\n  async loadEntryModule(unresolvedId, isEntry, importer, implicitlyLoadedBefore) {\n    const resolveIdResult = await resolveId(unresolvedId, importer, this.options.preserveSymlinks, this.pluginDriver, this.resolveId, null, EMPTY_OBJECT, true, EMPTY_OBJECT);\n    if (resolveIdResult == null) {\n      return error(implicitlyLoadedBefore === null ? errorUnresolvedEntry(unresolvedId) : errorUnresolvedImplicitDependant(unresolvedId, implicitlyLoadedBefore));\n    }\n    if (resolveIdResult === false || typeof resolveIdResult === 'object' && resolveIdResult.external) {\n      return error(implicitlyLoadedBefore === null ? errorEntryCannotBeExternal(unresolvedId) : errorImplicitDependantCannotBeExternal(unresolvedId, implicitlyLoadedBefore));\n    }\n    return this.fetchModule(this.getResolvedIdWithDefaults(typeof resolveIdResult === 'object' ? resolveIdResult : {\n      id: resolveIdResult\n    }, EMPTY_OBJECT), undefined, isEntry, false);\n  }\n  async resolveDynamicImport(module, specifier, importer, assertions) {\n    const resolution = await this.pluginDriver.hookFirst('resolveDynamicImport', [specifier, importer, {\n      assertions\n    }]);\n    if (typeof specifier !== 'string') {\n      if (typeof resolution === 'string') {\n        return resolution;\n      }\n      if (!resolution) {\n        return null;\n      }\n      return this.getResolvedIdWithDefaults(resolution, assertions);\n    }\n    if (resolution == null) {\n      const existingResolution = module.resolvedIds[specifier];\n      if (existingResolution) {\n        if (doAssertionsDiffer(existingResolution.assertions, assertions)) {\n          this.options.onwarn(errorInconsistentImportAssertions(existingResolution.assertions, assertions, specifier, importer));\n        }\n        return existingResolution;\n      }\n      return module.resolvedIds[specifier] = this.handleInvalidResolvedId(await this.resolveId(specifier, module.id, EMPTY_OBJECT, false, assertions), specifier, module.id, assertions);\n    }\n    return this.handleInvalidResolvedId(this.getResolvedIdWithDefaults(this.getNormalizedResolvedIdWithoutDefaults(resolution, importer, specifier), assertions), specifier, importer, assertions);\n  }\n}\nfunction normalizeRelativeExternalId(source, importer) {\n  return isRelative(source) ? importer ? resolve(importer, '..', source) : resolve(source) : source;\n}\nfunction addChunkNamesToModule(module, _ref118, isUserDefined, priority) {\n  let {\n    fileName,\n    name\n  } = _ref118;\n  if (fileName !== null) {\n    module.chunkFileNames.add(fileName);\n  } else if (name !== null) {\n    // Always keep chunkNames sorted by priority\n    let namePosition = 0;\n    while (module.chunkNames[namePosition]?.priority < priority) namePosition++;\n    module.chunkNames.splice(namePosition, 0, {\n      isUserDefined,\n      name,\n      priority\n    });\n  }\n}\nfunction isNotAbsoluteExternal(id, source, makeAbsoluteExternalsRelative) {\n  return makeAbsoluteExternalsRelative === true || makeAbsoluteExternalsRelative === 'ifRelativeSource' && isRelative(source) || !isAbsolute(id);\n}\nasync function waitForDependencyResolution(loadPromise) {\n  const [resolveStaticDependencyPromises, resolveDynamicImportPromises] = await loadPromise;\n  return Promise.all([...resolveStaticDependencyPromises, ...resolveDynamicImportPromises]);\n}\nclass GlobalScope extends Scope$1 {\n  constructor() {\n    super();\n    this.parent = null;\n    this.variables.set('undefined', new UndefinedVariable());\n  }\n  findVariable(name) {\n    let variable = this.variables.get(name);\n    if (!variable) {\n      variable = new GlobalVariable(name);\n      this.variables.set(name, variable);\n    }\n    return variable;\n  }\n}\nfunction getSourceHash(source) {\n  return createHash().update(source).digest('hex');\n}\nfunction generateAssetFileName(name, source, sourceHash, outputOptions, bundle) {\n  const emittedName = outputOptions.sanitizeFileName(name || 'asset');\n  return makeUnique(renderNamePattern(typeof outputOptions.assetFileNames === 'function' ? outputOptions.assetFileNames({\n    name,\n    source,\n    type: 'asset'\n  }) : outputOptions.assetFileNames, 'output.assetFileNames', {\n    ext: () => extname(emittedName).slice(1),\n    extname: () => extname(emittedName),\n    hash: size => sourceHash.slice(0, Math.max(0, size || defaultHashSize)),\n    name: () => emittedName.slice(0, Math.max(0, emittedName.length - extname(emittedName).length))\n  }), bundle);\n}\nfunction reserveFileNameInBundle(fileName, _ref119, warn) {\n  let {\n    bundle\n  } = _ref119;\n  if (bundle[lowercaseBundleKeys].has(fileName.toLowerCase())) {\n    warn(errorFileNameConflict(fileName));\n  } else {\n    bundle[fileName] = FILE_PLACEHOLDER;\n  }\n}\nfunction hasValidType(emittedFile) {\n  return Boolean(emittedFile && (emittedFile.type === 'asset' || emittedFile.type === 'chunk'));\n}\nfunction hasValidName(emittedFile) {\n  const validatedName = emittedFile.fileName || emittedFile.name;\n  return !validatedName || typeof validatedName === 'string' && !isPathFragment(validatedName);\n}\nfunction getValidSource(source, emittedFile, fileReferenceId) {\n  if (!(typeof source === 'string' || source instanceof Uint8Array)) {\n    const assetName = emittedFile.fileName || emittedFile.name || fileReferenceId;\n    return error(errorFailedValidation(`Could not set source for ${typeof assetName === 'string' ? `asset \"${assetName}\"` : 'unnamed asset'}, asset source needs to be a string, Uint8Array or Buffer.`));\n  }\n  return source;\n}\nfunction getAssetFileName(file, referenceId) {\n  if (typeof file.fileName !== 'string') {\n    return error(errorAssetNotFinalisedForFileName(file.name || referenceId));\n  }\n  return file.fileName;\n}\nfunction getChunkFileName(file, facadeChunkByModule) {\n  if (file.fileName) {\n    return file.fileName;\n  }\n  if (facadeChunkByModule) {\n    return facadeChunkByModule.get(file.module).getFileName();\n  }\n  return error(errorChunkNotGeneratedForFileName(file.fileName || file.name));\n}\nclass FileEmitter {\n  constructor(graph, options, baseFileEmitter) {\n    this.graph = graph;\n    this.options = options;\n    this.facadeChunkByModule = null;\n    this.nextIdBase = 1;\n    this.output = null;\n    this.outputFileEmitters = [];\n    this.emitFile = emittedFile => {\n      if (!hasValidType(emittedFile)) {\n        return error(errorFailedValidation(`Emitted files must be of type \"asset\" or \"chunk\", received \"${emittedFile && emittedFile.type}\".`));\n      }\n      if (!hasValidName(emittedFile)) {\n        return error(errorFailedValidation(`The \"fileName\" or \"name\" properties of emitted files must be strings that are neither absolute nor relative paths, received \"${emittedFile.fileName || emittedFile.name}\".`));\n      }\n      if (emittedFile.type === 'chunk') {\n        return this.emitChunk(emittedFile);\n      }\n      return this.emitAsset(emittedFile);\n    };\n    this.finaliseAssets = () => {\n      for (const [referenceId, emittedFile] of this.filesByReferenceId) {\n        if (emittedFile.type === 'asset' && typeof emittedFile.fileName !== 'string') return error(errorNoAssetSourceSet(emittedFile.name || referenceId));\n      }\n    };\n    this.getFileName = fileReferenceId => {\n      const emittedFile = this.filesByReferenceId.get(fileReferenceId);\n      if (!emittedFile) return error(errorFileReferenceIdNotFoundForFilename(fileReferenceId));\n      if (emittedFile.type === 'chunk') {\n        return getChunkFileName(emittedFile, this.facadeChunkByModule);\n      }\n      return getAssetFileName(emittedFile, fileReferenceId);\n    };\n    this.setAssetSource = (referenceId, requestedSource) => {\n      const consumedFile = this.filesByReferenceId.get(referenceId);\n      if (!consumedFile) return error(errorAssetReferenceIdNotFoundForSetSource(referenceId));\n      if (consumedFile.type !== 'asset') {\n        return error(errorFailedValidation(`Asset sources can only be set for emitted assets but \"${referenceId}\" is an emitted chunk.`));\n      }\n      if (consumedFile.source !== undefined) {\n        return error(errorAssetSourceAlreadySet(consumedFile.name || referenceId));\n      }\n      const source = getValidSource(requestedSource, consumedFile, referenceId);\n      if (this.output) {\n        this.finalizeAsset(consumedFile, source, referenceId, this.output);\n      } else {\n        consumedFile.source = source;\n        for (const emitter of this.outputFileEmitters) {\n          emitter.finalizeAsset(consumedFile, source, referenceId, emitter.output);\n        }\n      }\n    };\n    this.setChunkInformation = facadeChunkByModule => {\n      this.facadeChunkByModule = facadeChunkByModule;\n    };\n    this.setOutputBundle = (bundle, outputOptions) => {\n      const output = this.output = {\n        bundle,\n        fileNamesBySource: new Map(),\n        outputOptions\n      };\n      for (const emittedFile of this.filesByReferenceId.values()) {\n        if (emittedFile.fileName) {\n          reserveFileNameInBundle(emittedFile.fileName, output, this.options.onwarn);\n        }\n      }\n      for (const [referenceId, consumedFile] of this.filesByReferenceId) {\n        if (consumedFile.type === 'asset' && consumedFile.source !== undefined) {\n          this.finalizeAsset(consumedFile, consumedFile.source, referenceId, output);\n        }\n      }\n    };\n    this.filesByReferenceId = baseFileEmitter ? new Map(baseFileEmitter.filesByReferenceId) : new Map();\n    baseFileEmitter?.addOutputFileEmitter(this);\n  }\n  addOutputFileEmitter(outputFileEmitter) {\n    this.outputFileEmitters.push(outputFileEmitter);\n  }\n  assignReferenceId(file, idBase) {\n    let referenceId = idBase;\n    do {\n      referenceId = createHash().update(referenceId).digest('hex').slice(0, 8);\n    } while (this.filesByReferenceId.has(referenceId) || this.outputFileEmitters.some(_ref120 => {\n      let {\n        filesByReferenceId\n      } = _ref120;\n      return filesByReferenceId.has(referenceId);\n    }));\n    this.filesByReferenceId.set(referenceId, file);\n    for (const {\n      filesByReferenceId\n    } of this.outputFileEmitters) {\n      filesByReferenceId.set(referenceId, file);\n    }\n    return referenceId;\n  }\n  emitAsset(emittedAsset) {\n    const source = emittedAsset.source === undefined ? undefined : getValidSource(emittedAsset.source, emittedAsset, null);\n    const consumedAsset = {\n      fileName: emittedAsset.fileName,\n      name: emittedAsset.name,\n      needsCodeReference: !!emittedAsset.needsCodeReference,\n      source,\n      type: 'asset'\n    };\n    const referenceId = this.assignReferenceId(consumedAsset, emittedAsset.fileName || emittedAsset.name || String(this.nextIdBase++));\n    if (this.output) {\n      this.emitAssetWithReferenceId(consumedAsset, referenceId, this.output);\n    } else {\n      for (const fileEmitter of this.outputFileEmitters) {\n        fileEmitter.emitAssetWithReferenceId(consumedAsset, referenceId, fileEmitter.output);\n      }\n    }\n    return referenceId;\n  }\n  emitAssetWithReferenceId(consumedAsset, referenceId, output) {\n    const {\n      fileName,\n      source\n    } = consumedAsset;\n    if (fileName) {\n      reserveFileNameInBundle(fileName, output, this.options.onwarn);\n    }\n    if (source !== undefined) {\n      this.finalizeAsset(consumedAsset, source, referenceId, output);\n    }\n  }\n  emitChunk(emittedChunk) {\n    if (this.graph.phase > BuildPhase.LOAD_AND_PARSE) {\n      return error(errorInvalidRollupPhaseForChunkEmission());\n    }\n    if (typeof emittedChunk.id !== 'string') {\n      return error(errorFailedValidation(`Emitted chunks need to have a valid string id, received \"${emittedChunk.id}\"`));\n    }\n    const consumedChunk = {\n      fileName: emittedChunk.fileName,\n      module: null,\n      name: emittedChunk.name || emittedChunk.id,\n      type: 'chunk'\n    };\n    this.graph.moduleLoader.emitChunk(emittedChunk).then(module => consumedChunk.module = module).catch(() => {\n      // Avoid unhandled Promise rejection as the error will be thrown later\n      // once module loading has finished\n    });\n    return this.assignReferenceId(consumedChunk, emittedChunk.id);\n  }\n  finalizeAsset(consumedFile, source, referenceId, _ref121) {\n    let {\n      bundle,\n      fileNamesBySource,\n      outputOptions\n    } = _ref121;\n    let fileName = consumedFile.fileName;\n    // Deduplicate assets if an explicit fileName is not provided\n    if (!fileName) {\n      const sourceHash = getSourceHash(source);\n      fileName = fileNamesBySource.get(sourceHash);\n      if (!fileName) {\n        fileName = generateAssetFileName(consumedFile.name, source, sourceHash, outputOptions, bundle);\n        fileNamesBySource.set(sourceHash, fileName);\n      }\n    }\n    // We must not modify the original assets to avoid interaction between outputs\n    const assetWithFileName = {\n      ...consumedFile,\n      fileName,\n      source\n    };\n    this.filesByReferenceId.set(referenceId, assetWithFileName);\n    bundle[fileName] = {\n      fileName,\n      name: consumedFile.name,\n      needsCodeReference: consumedFile.needsCodeReference,\n      source,\n      type: 'asset'\n    };\n  }\n}\nfunction getPluginContext(plugin, pluginCache, graph, options, fileEmitter, existingPluginNames) {\n  let cacheable = true;\n  if (typeof plugin.cacheKey !== 'string') {\n    if (plugin.name.startsWith(ANONYMOUS_PLUGIN_PREFIX) || plugin.name.startsWith(ANONYMOUS_OUTPUT_PLUGIN_PREFIX) || existingPluginNames.has(plugin.name)) {\n      cacheable = false;\n    } else {\n      existingPluginNames.add(plugin.name);\n    }\n  }\n  let cacheInstance;\n  if (!pluginCache) {\n    cacheInstance = NO_CACHE;\n  } else if (cacheable) {\n    const cacheKey = plugin.cacheKey || plugin.name;\n    cacheInstance = createPluginCache(pluginCache[cacheKey] || (pluginCache[cacheKey] = Object.create(null)));\n  } else {\n    cacheInstance = getCacheForUncacheablePlugin(plugin.name);\n  }\n  return {\n    addWatchFile(id) {\n      if (graph.phase >= BuildPhase.GENERATE) {\n        return this.error(errorInvalidRollupPhaseForAddWatchFile());\n      }\n      graph.watchFiles[id] = true;\n    },\n    cache: cacheInstance,\n    emitFile: fileEmitter.emitFile.bind(fileEmitter),\n    error(error_) {\n      return error(errorPluginError(error_, plugin.name));\n    },\n    getFileName: fileEmitter.getFileName,\n    getModuleIds: () => graph.modulesById.keys(),\n    getModuleInfo: graph.getModuleInfo,\n    getWatchFiles: () => Object.keys(graph.watchFiles),\n    load(resolvedId) {\n      return graph.moduleLoader.preloadModule(resolvedId);\n    },\n    meta: {\n      rollupVersion: version$1,\n      watchMode: graph.watchMode\n    },\n    get moduleIds() {\n      function* wrappedModuleIds() {\n        // We are wrapping this in a generator to only show the message once we are actually iterating\n        warnDeprecation(`Accessing \"this.moduleIds\" on the plugin context by plugin ${plugin.name} is deprecated. The \"this.getModuleIds\" plugin context function should be used instead.`, URL_THIS_GETMODULEIDS, true, options, plugin.name);\n        yield* moduleIds;\n      }\n      const moduleIds = graph.modulesById.keys();\n      return wrappedModuleIds();\n    },\n    parse: graph.contextParse.bind(graph),\n    resolve(source, importer) {\n      let {\n        assertions,\n        custom,\n        isEntry,\n        skipSelf\n      } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : BLANK;\n      return graph.moduleLoader.resolveId(source, importer, custom, isEntry, assertions || EMPTY_OBJECT, skipSelf ? [{\n        importer,\n        plugin,\n        source\n      }] : null);\n    },\n    setAssetSource: fileEmitter.setAssetSource,\n    warn(warning) {\n      if (typeof warning === 'string') warning = {\n        message: warning\n      };\n      if (warning.code) warning.pluginCode = warning.code;\n      warning.code = 'PLUGIN_WARNING';\n      warning.plugin = plugin.name;\n      options.onwarn(warning);\n    }\n  };\n}\n\n// This will make sure no input hook is omitted\nconst inputHookNames = {\n  buildEnd: 1,\n  buildStart: 1,\n  closeBundle: 1,\n  closeWatcher: 1,\n  load: 1,\n  moduleParsed: 1,\n  options: 1,\n  resolveDynamicImport: 1,\n  resolveId: 1,\n  shouldTransformCachedModule: 1,\n  transform: 1,\n  watchChange: 1\n};\nconst inputHooks = Object.keys(inputHookNames);\nclass PluginDriver {\n  constructor(graph, options, userPlugins, pluginCache, basePluginDriver) {\n    this.graph = graph;\n    this.options = options;\n    this.pluginCache = pluginCache;\n    this.sortedPlugins = new Map();\n    this.unfulfilledActions = new Set();\n    this.fileEmitter = new FileEmitter(graph, options, basePluginDriver && basePluginDriver.fileEmitter);\n    this.emitFile = this.fileEmitter.emitFile.bind(this.fileEmitter);\n    this.getFileName = this.fileEmitter.getFileName.bind(this.fileEmitter);\n    this.finaliseAssets = this.fileEmitter.finaliseAssets.bind(this.fileEmitter);\n    this.setChunkInformation = this.fileEmitter.setChunkInformation.bind(this.fileEmitter);\n    this.setOutputBundle = this.fileEmitter.setOutputBundle.bind(this.fileEmitter);\n    this.plugins = [...(basePluginDriver ? basePluginDriver.plugins : []), ...userPlugins];\n    const existingPluginNames = new Set();\n    this.pluginContexts = new Map(this.plugins.map(plugin => [plugin, getPluginContext(plugin, pluginCache, graph, options, this.fileEmitter, existingPluginNames)]));\n    if (basePluginDriver) {\n      for (const plugin of userPlugins) {\n        for (const hook of inputHooks) {\n          if (hook in plugin) {\n            options.onwarn(errorInputHookInOutputPlugin(plugin.name, hook));\n          }\n        }\n      }\n    }\n  }\n  createOutputPluginDriver(plugins) {\n    return new PluginDriver(this.graph, this.options, plugins, this.pluginCache, this);\n  }\n  getUnfulfilledHookActions() {\n    return this.unfulfilledActions;\n  }\n  // chains, first non-null result stops and returns\n  hookFirst(hookName, parameters, replaceContext, skipped) {\n    return this.hookFirstAndGetPlugin(hookName, parameters, replaceContext, skipped).then(result => result && result[0]);\n  }\n  // chains, first non-null result stops and returns result and last plugin\n  async hookFirstAndGetPlugin(hookName, parameters, replaceContext, skipped) {\n    for (const plugin of this.getSortedPlugins(hookName)) {\n      if (skipped?.has(plugin)) continue;\n      const result = await this.runHook(hookName, parameters, plugin, replaceContext);\n      if (result != null) return [result, plugin];\n    }\n    return null;\n  }\n  // chains synchronously, first non-null result stops and returns\n  hookFirstSync(hookName, parameters, replaceContext) {\n    for (const plugin of this.getSortedPlugins(hookName)) {\n      const result = this.runHookSync(hookName, parameters, plugin, replaceContext);\n      if (result != null) return result;\n    }\n    return null;\n  }\n  // parallel, ignores returns\n  async hookParallel(hookName, parameters, replaceContext) {\n    const parallelPromises = [];\n    for (const plugin of this.getSortedPlugins(hookName)) {\n      if (plugin[hookName].sequential) {\n        await Promise.all(parallelPromises);\n        parallelPromises.length = 0;\n        await this.runHook(hookName, parameters, plugin, replaceContext);\n      } else {\n        parallelPromises.push(this.runHook(hookName, parameters, plugin, replaceContext));\n      }\n    }\n    await Promise.all(parallelPromises);\n  }\n  // chains, reduces returned value, handling the reduced value as the first hook argument\n  hookReduceArg0(hookName, _ref122, reduce, replaceContext) {\n    let [argument0, ...rest] = _ref122;\n    let promise = Promise.resolve(argument0);\n    for (const plugin of this.getSortedPlugins(hookName)) {\n      promise = promise.then(argument0 => this.runHook(hookName, [argument0, ...rest], plugin, replaceContext).then(result => reduce.call(this.pluginContexts.get(plugin), argument0, result, plugin)));\n    }\n    return promise;\n  }\n  // chains synchronously, reduces returned value, handling the reduced value as the first hook argument\n  hookReduceArg0Sync(hookName, _ref123, reduce, replaceContext) {\n    let [argument0, ...rest] = _ref123;\n    for (const plugin of this.getSortedPlugins(hookName)) {\n      const parameters = [argument0, ...rest];\n      const result = this.runHookSync(hookName, parameters, plugin, replaceContext);\n      argument0 = reduce.call(this.pluginContexts.get(plugin), argument0, result, plugin);\n    }\n    return argument0;\n  }\n  // chains, reduces returned value to type string, handling the reduced value separately. permits hooks as values.\n  async hookReduceValue(hookName, initialValue, parameters, reducer) {\n    const results = [];\n    const parallelResults = [];\n    for (const plugin of this.getSortedPlugins(hookName, validateAddonPluginHandler)) {\n      if (plugin[hookName].sequential) {\n        results.push(...(await Promise.all(parallelResults)));\n        parallelResults.length = 0;\n        results.push(await this.runHook(hookName, parameters, plugin));\n      } else {\n        parallelResults.push(this.runHook(hookName, parameters, plugin));\n      }\n    }\n    results.push(...(await Promise.all(parallelResults)));\n    return results.reduce(reducer, await initialValue);\n  }\n  // chains synchronously, reduces returned value to type T, handling the reduced value separately. permits hooks as values.\n  hookReduceValueSync(hookName, initialValue, parameters, reduce, replaceContext) {\n    let accumulator = initialValue;\n    for (const plugin of this.getSortedPlugins(hookName)) {\n      const result = this.runHookSync(hookName, parameters, plugin, replaceContext);\n      accumulator = reduce.call(this.pluginContexts.get(plugin), accumulator, result, plugin);\n    }\n    return accumulator;\n  }\n  // chains, ignores returns\n  hookSeq(hookName, parameters, replaceContext) {\n    let promise = Promise.resolve();\n    for (const plugin of this.getSortedPlugins(hookName)) {\n      promise = promise.then(() => this.runHook(hookName, parameters, plugin, replaceContext));\n    }\n    return promise.then(noReturn);\n  }\n  getSortedPlugins(hookName, validateHandler) {\n    return getOrCreate(this.sortedPlugins, hookName, () => getSortedValidatedPlugins(hookName, this.plugins, validateHandler));\n  }\n  // Implementation signature\n  runHook(hookName, parameters, plugin, replaceContext) {\n    // We always filter for plugins that support the hook before running it\n    const hook = plugin[hookName];\n    const handler = typeof hook === 'object' ? hook.handler : hook;\n    let context = this.pluginContexts.get(plugin);\n    if (replaceContext) {\n      context = replaceContext(context, plugin);\n    }\n    let action = null;\n    return Promise.resolve().then(() => {\n      if (typeof handler !== 'function') {\n        return handler;\n      }\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      const hookResult = handler.apply(context, parameters);\n      if (!hookResult?.then) {\n        // short circuit for non-thenables and non-Promises\n        return hookResult;\n      }\n      // Track pending hook actions to properly error out when\n      // unfulfilled promises cause rollup to abruptly and confusingly\n      // exit with a successful 0 return code but without producing any\n      // output, errors or warnings.\n      action = [plugin.name, hookName, parameters];\n      this.unfulfilledActions.add(action);\n      // Although it would be more elegant to just return hookResult here\n      // and put the .then() handler just above the .catch() handler below,\n      // doing so would subtly change the defacto async event dispatch order\n      // which at least one test and some plugins in the wild may depend on.\n      return Promise.resolve(hookResult).then(result => {\n        // action was fulfilled\n        this.unfulfilledActions.delete(action);\n        return result;\n      });\n    }).catch(error_ => {\n      if (action !== null) {\n        // action considered to be fulfilled since error being handled\n        this.unfulfilledActions.delete(action);\n      }\n      return error(errorPluginError(error_, plugin.name, {\n        hook: hookName\n      }));\n    });\n  }\n  /**\n   * Run a sync plugin hook and return the result.\n   * @param hookName Name of the plugin hook. Must be in `PluginHooks`.\n   * @param args Arguments passed to the plugin hook.\n   * @param plugin The acutal plugin\n   * @param replaceContext When passed, the plugin context can be overridden.\n   */\n  runHookSync(hookName, parameters, plugin, replaceContext) {\n    const hook = plugin[hookName];\n    const handler = typeof hook === 'object' ? hook.handler : hook;\n    let context = this.pluginContexts.get(plugin);\n    if (replaceContext) {\n      context = replaceContext(context, plugin);\n    }\n    try {\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      return handler.apply(context, parameters);\n    } catch (error_) {\n      return error(errorPluginError(error_, plugin.name, {\n        hook: hookName\n      }));\n    }\n  }\n}\nfunction getSortedValidatedPlugins(hookName, plugins) {\n  let validateHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : validateFunctionPluginHandler;\n  const pre = [];\n  const normal = [];\n  const post = [];\n  for (const plugin of plugins) {\n    const hook = plugin[hookName];\n    if (hook) {\n      if (typeof hook === 'object') {\n        validateHandler(hook.handler, hookName, plugin);\n        if (hook.order === 'pre') {\n          pre.push(plugin);\n          continue;\n        }\n        if (hook.order === 'post') {\n          post.push(plugin);\n          continue;\n        }\n      } else {\n        validateHandler(hook, hookName, plugin);\n      }\n      normal.push(plugin);\n    }\n  }\n  return [...pre, ...normal, ...post];\n}\nfunction validateFunctionPluginHandler(handler, hookName, plugin) {\n  if (typeof handler !== 'function') {\n    error(errorInvalidFunctionPluginHook(hookName, plugin.name));\n  }\n}\nfunction validateAddonPluginHandler(handler, hookName, plugin) {\n  if (typeof handler !== 'string' && typeof handler !== 'function') {\n    return error(errorInvalidAddonPluginHook(hookName, plugin.name));\n  }\n}\nfunction noReturn() {}\nclass Queue {\n  constructor(maxParallel) {\n    this.maxParallel = maxParallel;\n    this.queue = [];\n    this.workerCount = 0;\n  }\n  run(task) {\n    return new Promise((resolve, reject) => {\n      this.queue.push({\n        reject,\n        resolve,\n        task\n      });\n      this.work();\n    });\n  }\n  async work() {\n    if (this.workerCount >= this.maxParallel) return;\n    this.workerCount++;\n    let entry;\n    while (entry = this.queue.shift()) {\n      const {\n        reject,\n        resolve,\n        task\n      } = entry;\n      try {\n        const result = await task();\n        resolve(result);\n      } catch (error) {\n        reject(error);\n      }\n    }\n    this.workerCount--;\n  }\n}\nfunction normalizeEntryModules(entryModules) {\n  if (Array.isArray(entryModules)) {\n    return entryModules.map(id => ({\n      fileName: null,\n      id,\n      implicitlyLoadedAfter: [],\n      importer: undefined,\n      name: null\n    }));\n  }\n  return Object.entries(entryModules).map(_ref124 => {\n    let [name, id] = _ref124;\n    return {\n      fileName: null,\n      id,\n      implicitlyLoadedAfter: [],\n      importer: undefined,\n      name\n    };\n  });\n}\nclass Graph {\n  constructor(options, watcher) {\n    var _this2 = this;\n    this.options = options;\n    this.astLru = flru(5);\n    this.cachedModules = new Map();\n    this.deoptimizationTracker = new PathTracker();\n    this.entryModules = [];\n    this.modulesById = new Map();\n    this.needsTreeshakingPass = false;\n    this.phase = BuildPhase.LOAD_AND_PARSE;\n    this.scope = new GlobalScope();\n    this.watchFiles = Object.create(null);\n    this.watchMode = false;\n    this.externalModules = [];\n    this.implicitEntryModules = [];\n    this.modules = [];\n    this.getModuleInfo = moduleId => {\n      const foundModule = this.modulesById.get(moduleId);\n      if (!foundModule) return null;\n      return foundModule.info;\n    };\n    if (options.cache !== false) {\n      if (options.cache?.modules) {\n        for (const module of options.cache.modules) this.cachedModules.set(module.id, module);\n      }\n      this.pluginCache = options.cache?.plugins || Object.create(null);\n      // increment access counter\n      for (const name in this.pluginCache) {\n        const cache = this.pluginCache[name];\n        for (const value of Object.values(cache)) value[0]++;\n      }\n    }\n    if (watcher) {\n      this.watchMode = true;\n      const handleChange = function () {\n        for (var _len2 = arguments.length, parameters = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          parameters[_key2] = arguments[_key2];\n        }\n        return _this2.pluginDriver.hookParallel('watchChange', parameters);\n      };\n      const handleClose = () => this.pluginDriver.hookParallel('closeWatcher', []);\n      watcher.onCurrentRun('change', handleChange);\n      watcher.onCurrentRun('close', handleClose);\n    }\n    this.pluginDriver = new PluginDriver(this, options, options.plugins, this.pluginCache);\n    this.acornParser = Parser.extend(...options.acornInjectPlugins);\n    this.moduleLoader = new ModuleLoader(this, this.modulesById, this.options, this.pluginDriver);\n    this.fileOperationQueue = new Queue(options.maxParallelFileOps);\n    this.pureFunctions = getPureFunctions(options);\n  }\n  async build() {\n    timeStart('generate module graph', 2);\n    await this.generateModuleGraph();\n    timeEnd('generate module graph', 2);\n    timeStart('sort and bind modules', 2);\n    this.phase = BuildPhase.ANALYSE;\n    this.sortModules();\n    timeEnd('sort and bind modules', 2);\n    timeStart('mark included statements', 2);\n    this.includeStatements();\n    timeEnd('mark included statements', 2);\n    this.phase = BuildPhase.GENERATE;\n  }\n  contextParse(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const onCommentOrig = options.onComment;\n    const comments = [];\n    options.onComment = onCommentOrig && typeof onCommentOrig == 'function' ? function (block, text, start, end) {\n      comments.push({\n        end,\n        start,\n        type: block ? 'Block' : 'Line',\n        value: text\n      });\n      for (var _len3 = arguments.length, parameters = new Array(_len3 > 4 ? _len3 - 4 : 0), _key3 = 4; _key3 < _len3; _key3++) {\n        parameters[_key3 - 4] = arguments[_key3];\n      }\n      return onCommentOrig.call(options, block, text, start, end, ...parameters);\n    } : comments;\n    const ast = this.acornParser.parse(code, {\n      ...this.options.acorn,\n      ...options\n    });\n    if (typeof onCommentOrig == 'object') {\n      onCommentOrig.push(...comments);\n    }\n    options.onComment = onCommentOrig;\n    addAnnotations(comments, ast, code);\n    return ast;\n  }\n  getCache() {\n    // handle plugin cache eviction\n    for (const name in this.pluginCache) {\n      const cache = this.pluginCache[name];\n      let allDeleted = true;\n      for (const [key, value] of Object.entries(cache)) {\n        if (value[0] >= this.options.experimentalCacheExpiry) delete cache[key];else allDeleted = false;\n      }\n      if (allDeleted) delete this.pluginCache[name];\n    }\n    return {\n      modules: this.modules.map(module => module.toJSON()),\n      plugins: this.pluginCache\n    };\n  }\n  async generateModuleGraph() {\n    ({\n      entryModules: this.entryModules,\n      implicitEntryModules: this.implicitEntryModules\n    } = await this.moduleLoader.addEntryModules(normalizeEntryModules(this.options.input), true));\n    if (this.entryModules.length === 0) {\n      throw new Error('You must supply options.input to rollup');\n    }\n    for (const module of this.modulesById.values()) {\n      if (module instanceof Module) {\n        this.modules.push(module);\n      } else {\n        this.externalModules.push(module);\n      }\n    }\n  }\n  includeStatements() {\n    const entryModules = [...this.entryModules, ...this.implicitEntryModules];\n    for (const module of entryModules) {\n      markModuleAndImpureDependenciesAsExecuted(module);\n    }\n    if (this.options.treeshake) {\n      let treeshakingPass = 1;\n      do {\n        timeStart(`treeshaking pass ${treeshakingPass}`, 3);\n        this.needsTreeshakingPass = false;\n        for (const module of this.modules) {\n          if (module.isExecuted) {\n            if (module.info.moduleSideEffects === 'no-treeshake') {\n              module.includeAllInBundle();\n            } else {\n              module.include();\n            }\n          }\n        }\n        if (treeshakingPass === 1) {\n          // We only include exports after the first pass to avoid issues with\n          // the TDZ detection logic\n          for (const module of entryModules) {\n            if (module.preserveSignature !== false) {\n              module.includeAllExports(false);\n              this.needsTreeshakingPass = true;\n            }\n          }\n        }\n        timeEnd(`treeshaking pass ${treeshakingPass++}`, 3);\n      } while (this.needsTreeshakingPass);\n    } else {\n      for (const module of this.modules) module.includeAllInBundle();\n    }\n    for (const externalModule of this.externalModules) externalModule.warnUnusedImports();\n    for (const module of this.implicitEntryModules) {\n      for (const dependant of module.implicitlyLoadedAfter) {\n        if (!(dependant.info.isEntry || dependant.isIncluded())) {\n          error(errorImplicitDependantIsNotIncluded(dependant));\n        }\n      }\n    }\n  }\n  sortModules() {\n    const {\n      orderedModules,\n      cyclePaths\n    } = analyseModuleExecution(this.entryModules);\n    for (const cyclePath of cyclePaths) {\n      this.options.onwarn(errorCircularDependency(cyclePath));\n    }\n    this.modules = orderedModules;\n    for (const module of this.modules) {\n      module.bindReferences();\n    }\n    this.warnForMissingExports();\n  }\n  warnForMissingExports() {\n    for (const module of this.modules) {\n      for (const importDescription of module.importDescriptions.values()) {\n        if (importDescription.name !== '*' && !importDescription.module.getVariableForExportName(importDescription.name)[0]) {\n          module.warn(errorMissingExport(importDescription.name, module.id, importDescription.module.id), importDescription.start);\n        }\n      }\n    }\n  }\n}\nfunction formatAction(_ref125) {\n  let [pluginName, hookName, parameters] = _ref125;\n  const action = `(${pluginName}) ${hookName}`;\n  const s = JSON.stringify;\n  switch (hookName) {\n    case 'resolveId':\n      {\n        return `${action} ${s(parameters[0])} ${s(parameters[1])}`;\n      }\n    case 'load':\n      {\n        return `${action} ${s(parameters[0])}`;\n      }\n    case 'transform':\n      {\n        return `${action} ${s(parameters[1])}`;\n      }\n    case 'shouldTransformCachedModule':\n      {\n        return `${action} ${s(parameters[0].id)}`;\n      }\n    case 'moduleParsed':\n      {\n        return `${action} ${s(parameters[0].id)}`;\n      }\n  }\n  return action;\n}\n// We do not directly listen on process to avoid max listeners warnings for\n// complicated build processes\nconst beforeExitEvent = 'beforeExit';\nconst beforeExitEmitter = new EventEmitter();\nbeforeExitEmitter.setMaxListeners(0);\nprocess$1.on(beforeExitEvent, () => beforeExitEmitter.emit(beforeExitEvent));\nasync function catchUnfinishedHookActions(pluginDriver, callback) {\n  let handleEmptyEventLoop;\n  const emptyEventLoopPromise = new Promise((_, reject) => {\n    handleEmptyEventLoop = () => {\n      const unfulfilledActions = pluginDriver.getUnfulfilledHookActions();\n      reject(new Error(`Unexpected early exit. This happens when Promises returned by plugins cannot resolve. Unfinished hook action(s) on exit:\\n` + [...unfulfilledActions].map(formatAction).join('\\n')));\n    };\n    beforeExitEmitter.once(beforeExitEvent, handleEmptyEventLoop);\n  });\n  const result = await Promise.race([callback(), emptyEventLoopPromise]);\n  beforeExitEmitter.off(beforeExitEvent, handleEmptyEventLoop);\n  return result;\n}\nconst leftCurlyBrace = \"{\".charCodeAt(0);\nconst space = \" \".charCodeAt(0);\nconst keyword = \"assert\";\nconst FUNC_STATEMENT = 1,\n  FUNC_NULLABLE_ID = 4;\nfunction importAssertions(Parser) {\n  // Use supplied version acorn version if present, to avoid\n  // reference mismatches due to different acorn versions. This\n  // allows this plugin to be used with Rollup which supplies\n  // its own internal version of acorn and thereby sidesteps\n  // the package manager.\n  const acorn = Parser.acorn || _acorn;\n  const {\n    tokTypes: tt,\n    TokenType\n  } = acorn;\n  return class extends Parser {\n    constructor() {\n      super(...arguments);\n      this.assertToken = new TokenType(keyword);\n    }\n    _codeAt(i) {\n      return this.input.charCodeAt(i);\n    }\n    _eat(t) {\n      if (this.type !== t) {\n        this.unexpected();\n      }\n      this.next();\n    }\n    readToken(code) {\n      let i = 0;\n      for (; i < keyword.length; i++) {\n        if (this._codeAt(this.pos + i) !== keyword.charCodeAt(i)) {\n          return super.readToken(code);\n        }\n      }\n\n      // ensure that the keyword is at the correct location\n      // ie `assert{...` or `assert {...`\n      for (;; i++) {\n        if (this._codeAt(this.pos + i) === leftCurlyBrace) {\n          // Found '{'\n          break;\n        } else if (this._codeAt(this.pos + i) === space) {\n          // white space is allowed between `assert` and `{`, so continue.\n          continue;\n        } else {\n          return super.readToken(code);\n        }\n      }\n\n      // If we're inside a dynamic import expression we'll parse\n      // the `assert` keyword as a standard object property name\n      // ie `import(\"\"./foo.json\", { assert: { type: \"json\" } })`\n      if (this.type.label === \"{\") {\n        return super.readToken(code);\n      }\n      this.pos += keyword.length;\n      return this.finishToken(this.assertToken);\n    }\n    parseDynamicImport(node) {\n      this.next(); // skip `(`\n\n      // Parse node.source.\n      node.source = this.parseMaybeAssign();\n      if (this.eat(tt.comma)) {\n        const obj = this.parseObj(false);\n        node.arguments = [obj];\n      }\n      this._eat(tt.parenR);\n      return this.finishNode(node, \"ImportExpression\");\n    }\n\n    // ported from acorn/src/statement.js pp.parseExport\n    parseExport(node, exports) {\n      this.next();\n      // export * from '...'\n      if (this.eat(tt.star)) {\n        if (this.options.ecmaVersion >= 11) {\n          if (this.eatContextual(\"as\")) {\n            node.exported = this.parseIdent(true);\n            this.checkExport(exports, node.exported.name, this.lastTokStart);\n          } else {\n            node.exported = null;\n          }\n        }\n        this.expectContextual(\"from\");\n        if (this.type !== tt.string) {\n          this.unexpected();\n        }\n        node.source = this.parseExprAtom();\n        if (this.type === this.assertToken) {\n          this.next();\n          const assertions = this.parseImportAssertions();\n          if (assertions) {\n            node.assertions = assertions;\n          }\n        }\n        this.semicolon();\n        return this.finishNode(node, \"ExportAllDeclaration\");\n      }\n      if (this.eat(tt._default)) {\n        // export default ...\n        this.checkExport(exports, \"default\", this.lastTokStart);\n        var isAsync;\n        if (this.type === tt._function || (isAsync = this.isAsyncFunction())) {\n          var fNode = this.startNode();\n          this.next();\n          if (isAsync) {\n            this.next();\n          }\n          node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);\n        } else if (this.type === tt._class) {\n          var cNode = this.startNode();\n          node.declaration = this.parseClass(cNode, \"nullableID\");\n        } else {\n          node.declaration = this.parseMaybeAssign();\n          this.semicolon();\n        }\n        return this.finishNode(node, \"ExportDefaultDeclaration\");\n      }\n      // export var|const|let|function|class ...\n      if (this.shouldParseExportStatement()) {\n        node.declaration = this.parseStatement(null);\n        if (node.declaration.type === \"VariableDeclaration\") {\n          this.checkVariableExport(exports, node.declaration.declarations);\n        } else {\n          this.checkExport(exports, node.declaration.id.name, node.declaration.id.start);\n        }\n        node.specifiers = [];\n        node.source = null;\n      } else {\n        // export { x, y as z } [from '...']\n        node.declaration = null;\n        node.specifiers = this.parseExportSpecifiers(exports);\n        if (this.eatContextual(\"from\")) {\n          if (this.type !== tt.string) {\n            this.unexpected();\n          }\n          node.source = this.parseExprAtom();\n          if (this.type === this.assertToken) {\n            this.next();\n            const assertions = this.parseImportAssertions();\n            if (assertions) {\n              node.assertions = assertions;\n            }\n          }\n        } else {\n          for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n            // check for keywords used as local names\n            var spec = list[i];\n            this.checkUnreserved(spec.local);\n            // check if export is defined\n            this.checkLocalExport(spec.local);\n          }\n          node.source = null;\n        }\n        this.semicolon();\n      }\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n    parseImport(node) {\n      this.next();\n      // import '...'\n      if (this.type === tt.string) {\n        node.specifiers = [];\n        node.source = this.parseExprAtom();\n      } else {\n        node.specifiers = this.parseImportSpecifiers();\n        this.expectContextual(\"from\");\n        node.source = this.type === tt.string ? this.parseExprAtom() : this.unexpected();\n      }\n      if (this.type === this.assertToken) {\n        this.next();\n        const assertions = this.parseImportAssertions();\n        if (assertions) {\n          node.assertions = assertions;\n        }\n      }\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n    parseImportAssertions() {\n      this._eat(tt.braceL);\n      const attrs = this.parseAssertEntries();\n      this._eat(tt.braceR);\n      return attrs;\n    }\n    parseAssertEntries() {\n      const attrs = [];\n      const attrNames = new Set();\n      do {\n        if (this.type === tt.braceR) {\n          break;\n        }\n        const node = this.startNode();\n\n        // parse AssertionKey : IdentifierName, StringLiteral\n        let assertionKeyNode;\n        if (this.type === tt.string) {\n          assertionKeyNode = this.parseLiteral(this.value);\n        } else {\n          assertionKeyNode = this.parseIdent(true);\n        }\n        this.next();\n        node.key = assertionKeyNode;\n\n        // check if we already have an entry for an attribute\n        // if a duplicate entry is found, throw an error\n        // for now this logic will come into play only when someone declares `type` twice\n        if (attrNames.has(node.key.name)) {\n          this.raise(this.pos, \"Duplicated key in assertions\");\n        }\n        attrNames.add(node.key.name);\n        if (this.type !== tt.string) {\n          this.raise(this.pos, \"Only string is supported as an assertion value\");\n        }\n        node.value = this.parseLiteral(this.value);\n        attrs.push(this.finishNode(node, \"ImportAttribute\"));\n      } while (this.eat(tt.comma));\n      return attrs;\n    }\n  };\n}\nfunction ensureArray(items) {\n  if (Array.isArray(items)) {\n    return items.filter(Boolean);\n  }\n  if (items) {\n    return [items];\n  }\n  return [];\n}\nasync function asyncFlatten(array) {\n  do {\n    array = (await Promise.all(array)).flat(Infinity);\n  } while (array.some(v => v?.then));\n  return array;\n}\nconst defaultOnWarn = warning => console.warn(warning.message || warning);\nfunction warnUnknownOptions(passedOptions, validOptions, optionType, warn) {\n  let ignoredKeys = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : /$./;\n  const validOptionSet = new Set(validOptions);\n  const unknownOptions = Object.keys(passedOptions).filter(key => !(validOptionSet.has(key) || ignoredKeys.test(key)));\n  if (unknownOptions.length > 0) {\n    warn(errorUnknownOption(optionType, unknownOptions, [...validOptionSet].sort()));\n  }\n}\nconst treeshakePresets = {\n  recommended: {\n    annotations: true,\n    correctVarValueBeforeDeclaration: false,\n    manualPureFunctions: EMPTY_ARRAY,\n    moduleSideEffects: () => true,\n    propertyReadSideEffects: true,\n    tryCatchDeoptimization: true,\n    unknownGlobalSideEffects: false\n  },\n  safest: {\n    annotations: true,\n    correctVarValueBeforeDeclaration: true,\n    manualPureFunctions: EMPTY_ARRAY,\n    moduleSideEffects: () => true,\n    propertyReadSideEffects: true,\n    tryCatchDeoptimization: true,\n    unknownGlobalSideEffects: true\n  },\n  smallest: {\n    annotations: true,\n    correctVarValueBeforeDeclaration: false,\n    manualPureFunctions: EMPTY_ARRAY,\n    moduleSideEffects: () => false,\n    propertyReadSideEffects: false,\n    tryCatchDeoptimization: false,\n    unknownGlobalSideEffects: false\n  }\n};\nconst generatedCodePresets = {\n  es2015: {\n    arrowFunctions: true,\n    constBindings: true,\n    objectShorthand: true,\n    reservedNamesAsProps: true,\n    symbols: true\n  },\n  es5: {\n    arrowFunctions: false,\n    constBindings: false,\n    objectShorthand: false,\n    reservedNamesAsProps: true,\n    symbols: false\n  }\n};\nconst objectifyOption = value => value && typeof value === 'object' ? value : {};\nconst objectifyOptionWithPresets = (presets, optionName, urlSnippet, additionalValues) => value => {\n  if (typeof value === 'string') {\n    const preset = presets[value];\n    if (preset) {\n      return preset;\n    }\n    error(errorInvalidOption(optionName, urlSnippet, `valid values are ${additionalValues}${printQuotedStringList(Object.keys(presets))}. You can also supply an object for more fine-grained control`, value));\n  }\n  return objectifyOption(value);\n};\nconst getOptionWithPreset = (value, presets, optionName, urlSnippet, additionalValues) => {\n  const presetName = value?.preset;\n  if (presetName) {\n    const preset = presets[presetName];\n    if (preset) {\n      return {\n        ...preset,\n        ...value\n      };\n    } else {\n      error(errorInvalidOption(`${optionName}.preset`, urlSnippet, `valid values are ${printQuotedStringList(Object.keys(presets))}`, presetName));\n    }\n  }\n  return objectifyOptionWithPresets(presets, optionName, urlSnippet, additionalValues)(value);\n};\nconst normalizePluginOption = async plugins => (await asyncFlatten([plugins])).filter(Boolean);\nasync function normalizeInputOptions(config) {\n  // These are options that may trigger special warnings or behaviour later\n  // if the user did not select an explicit value\n  const unsetOptions = new Set();\n  const context = config.context ?? 'undefined';\n  const onwarn = getOnwarn(config);\n  const strictDeprecations = config.strictDeprecations || false;\n  const maxParallelFileOps = getmaxParallelFileOps(config, onwarn, strictDeprecations);\n  const options = {\n    acorn: getAcorn(config),\n    acornInjectPlugins: getAcornInjectPlugins(config),\n    cache: getCache(config),\n    context,\n    experimentalCacheExpiry: config.experimentalCacheExpiry ?? 10,\n    experimentalLogSideEffects: config.experimentalLogSideEffects || false,\n    external: getIdMatcher(config.external),\n    inlineDynamicImports: getInlineDynamicImports$1(config, onwarn, strictDeprecations),\n    input: getInput(config),\n    makeAbsoluteExternalsRelative: config.makeAbsoluteExternalsRelative ?? 'ifRelativeSource',\n    manualChunks: getManualChunks$1(config, onwarn, strictDeprecations),\n    maxParallelFileOps,\n    maxParallelFileReads: maxParallelFileOps,\n    moduleContext: getModuleContext(config, context),\n    onwarn,\n    perf: config.perf || false,\n    plugins: await normalizePluginOption(config.plugins),\n    preserveEntrySignatures: config.preserveEntrySignatures ?? 'exports-only',\n    preserveModules: getPreserveModules$1(config, onwarn, strictDeprecations),\n    preserveSymlinks: config.preserveSymlinks || false,\n    shimMissingExports: config.shimMissingExports || false,\n    strictDeprecations,\n    treeshake: getTreeshake(config)\n  };\n  warnUnknownOptions(config, [...Object.keys(options), 'watch'], 'input options', options.onwarn, /^(output)$/);\n  return {\n    options,\n    unsetOptions\n  };\n}\nconst getOnwarn = config => {\n  const {\n    onwarn\n  } = config;\n  return onwarn ? warning => {\n    warning.toString = () => {\n      let warningString = '';\n      if (warning.plugin) warningString += `(${warning.plugin} plugin) `;\n      if (warning.loc) warningString += `${relativeId(warning.loc.file)} (${warning.loc.line}:${warning.loc.column}) `;\n      warningString += warning.message;\n      return warningString;\n    };\n    onwarn(warning, defaultOnWarn);\n  } : defaultOnWarn;\n};\nconst getAcorn = config => ({\n  ecmaVersion: 'latest',\n  sourceType: 'module',\n  ...config.acorn\n});\nconst getAcornInjectPlugins = config => [importAssertions, ...ensureArray(config.acornInjectPlugins)];\nconst getCache = config => config.cache === true // `true` is the default\n? undefined : config.cache?.cache || config.cache;\nconst getIdMatcher = option => {\n  if (option === true) {\n    return () => true;\n  }\n  if (typeof option === 'function') {\n    return function (id) {\n      for (var _len4 = arguments.length, parameters = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n        parameters[_key4 - 1] = arguments[_key4];\n      }\n      return !id.startsWith('\\0') && option(id, ...parameters) || false;\n    };\n  }\n  if (option) {\n    const ids = new Set();\n    const matchers = [];\n    for (const value of ensureArray(option)) {\n      if (value instanceof RegExp) {\n        matchers.push(value);\n      } else {\n        ids.add(value);\n      }\n    }\n    return function (id) {\n      return ids.has(id) || matchers.some(matcher => matcher.test(id));\n    };\n  }\n  return () => false;\n};\nconst getInlineDynamicImports$1 = (config, warn, strictDeprecations) => {\n  const configInlineDynamicImports = config.inlineDynamicImports;\n  if (configInlineDynamicImports) {\n    warnDeprecationWithOptions('The \"inlineDynamicImports\" option is deprecated. Use the \"output.inlineDynamicImports\" option instead.', URL_OUTPUT_INLINEDYNAMICIMPORTS, true, warn, strictDeprecations);\n  }\n  return configInlineDynamicImports;\n};\nconst getInput = config => {\n  const configInput = config.input;\n  return configInput == null ? [] : typeof configInput === 'string' ? [configInput] : configInput;\n};\nconst getManualChunks$1 = (config, warn, strictDeprecations) => {\n  const configManualChunks = config.manualChunks;\n  if (configManualChunks) {\n    warnDeprecationWithOptions('The \"manualChunks\" option is deprecated. Use the \"output.manualChunks\" option instead.', URL_OUTPUT_MANUALCHUNKS, true, warn, strictDeprecations);\n  }\n  return configManualChunks;\n};\nconst getmaxParallelFileOps = (config, warn, strictDeprecations) => {\n  const maxParallelFileReads = config.maxParallelFileReads;\n  if (typeof maxParallelFileReads === 'number') {\n    warnDeprecationWithOptions('The \"maxParallelFileReads\" option is deprecated. Use the \"maxParallelFileOps\" option instead.', URL_MAXPARALLELFILEOPS, true, warn, strictDeprecations);\n  }\n  const maxParallelFileOps = config.maxParallelFileOps ?? maxParallelFileReads;\n  if (typeof maxParallelFileOps === 'number') {\n    if (maxParallelFileOps <= 0) return Infinity;\n    return maxParallelFileOps;\n  }\n  return 20;\n};\nconst getModuleContext = (config, context) => {\n  const configModuleContext = config.moduleContext;\n  if (typeof configModuleContext === 'function') {\n    return id => configModuleContext(id) ?? context;\n  }\n  if (configModuleContext) {\n    const contextByModuleId = Object.create(null);\n    for (const [key, moduleContext] of Object.entries(configModuleContext)) {\n      contextByModuleId[resolve(key)] = moduleContext;\n    }\n    return id => contextByModuleId[id] ?? context;\n  }\n  return () => context;\n};\nconst getPreserveModules$1 = (config, warn, strictDeprecations) => {\n  const configPreserveModules = config.preserveModules;\n  if (configPreserveModules) {\n    warnDeprecationWithOptions('The \"preserveModules\" option is deprecated. Use the \"output.preserveModules\" option instead.', URL_OUTPUT_PRESERVEMODULES, true, warn, strictDeprecations);\n  }\n  return configPreserveModules;\n};\nconst getTreeshake = config => {\n  const configTreeshake = config.treeshake;\n  if (configTreeshake === false) {\n    return false;\n  }\n  const configWithPreset = getOptionWithPreset(config.treeshake, treeshakePresets, 'treeshake', URL_TREESHAKE, 'false, true, ');\n  return {\n    annotations: configWithPreset.annotations !== false,\n    correctVarValueBeforeDeclaration: configWithPreset.correctVarValueBeforeDeclaration === true,\n    manualPureFunctions: configWithPreset.manualPureFunctions ?? EMPTY_ARRAY,\n    moduleSideEffects: getHasModuleSideEffects(configWithPreset.moduleSideEffects),\n    propertyReadSideEffects: configWithPreset.propertyReadSideEffects === 'always' ? 'always' : configWithPreset.propertyReadSideEffects !== false,\n    tryCatchDeoptimization: configWithPreset.tryCatchDeoptimization !== false,\n    unknownGlobalSideEffects: configWithPreset.unknownGlobalSideEffects !== false\n  };\n};\nconst getHasModuleSideEffects = moduleSideEffectsOption => {\n  if (typeof moduleSideEffectsOption === 'boolean') {\n    return () => moduleSideEffectsOption;\n  }\n  if (moduleSideEffectsOption === 'no-external') {\n    return (_id, external) => !external;\n  }\n  if (typeof moduleSideEffectsOption === 'function') {\n    return (id, external) => id.startsWith('\\0') ? true : moduleSideEffectsOption(id, external) !== false;\n  }\n  if (Array.isArray(moduleSideEffectsOption)) {\n    const ids = new Set(moduleSideEffectsOption);\n    return id => ids.has(id);\n  }\n  if (moduleSideEffectsOption) {\n    error(errorInvalidOption('treeshake.moduleSideEffects', URL_TREESHAKE_MODULESIDEEFFECTS, 'please use one of false, \"no-external\", a function or an array'));\n  }\n  return () => true;\n};\n\n// https://datatracker.ietf.org/doc/html/rfc2396\n// eslint-disable-next-line no-control-regex\nconst INVALID_CHAR_REGEX = /[\\u0000-\\u001F\"#$&*+,:;<=>?[\\]^`{|}\\u007F]/g;\nconst DRIVE_LETTER_REGEX = /^[a-z]:/i;\nfunction sanitizeFileName(name) {\n  const match = DRIVE_LETTER_REGEX.exec(name);\n  const driveLetter = match ? match[0] : '';\n  // A `:` is only allowed as part of a windows drive letter (ex: C:\\foo)\n  // Otherwise, avoid them because they can refer to NTFS alternate data streams.\n  return driveLetter + name.slice(driveLetter.length).replace(INVALID_CHAR_REGEX, '_');\n}\nasync function normalizeOutputOptions(config, inputOptions, unsetInputOptions) {\n  // These are options that may trigger special warnings or behaviour later\n  // if the user did not select an explicit value\n  const unsetOptions = new Set(unsetInputOptions);\n  const compact = config.compact || false;\n  const format = getFormat(config);\n  const inlineDynamicImports = getInlineDynamicImports(config, inputOptions);\n  const preserveModules = getPreserveModules(config, inlineDynamicImports, inputOptions);\n  const file = getFile(config, preserveModules, inputOptions);\n  const preferConst = getPreferConst(config, inputOptions);\n  const generatedCode = getGeneratedCode(config, preferConst);\n  const outputOptions = {\n    amd: getAmd(config),\n    assetFileNames: config.assetFileNames ?? 'assets/[name]-[hash][extname]',\n    banner: getAddon(config, 'banner'),\n    chunkFileNames: config.chunkFileNames ?? '[name]-[hash].js',\n    compact,\n    dir: getDir(config, file),\n    dynamicImportFunction: getDynamicImportFunction(config, inputOptions, format),\n    dynamicImportInCjs: config.dynamicImportInCjs ?? true,\n    entryFileNames: getEntryFileNames(config, unsetOptions),\n    esModule: config.esModule ?? 'if-default-prop',\n    experimentalDeepDynamicChunkOptimization: getExperimentalDeepDynamicChunkOptimization(config, inputOptions),\n    experimentalMinChunkSize: config.experimentalMinChunkSize || 0,\n    exports: getExports(config, unsetOptions),\n    extend: config.extend || false,\n    externalImportAssertions: config.externalImportAssertions ?? true,\n    externalLiveBindings: config.externalLiveBindings ?? true,\n    file,\n    footer: getAddon(config, 'footer'),\n    format,\n    freeze: config.freeze ?? true,\n    generatedCode,\n    globals: config.globals || {},\n    hoistTransitiveImports: config.hoistTransitiveImports ?? true,\n    indent: getIndent(config, compact),\n    inlineDynamicImports,\n    interop: getInterop(config),\n    intro: getAddon(config, 'intro'),\n    manualChunks: getManualChunks(config, inlineDynamicImports, preserveModules, inputOptions),\n    minifyInternalExports: getMinifyInternalExports(config, format, compact),\n    name: config.name,\n    namespaceToStringTag: getNamespaceToStringTag(config, generatedCode, inputOptions),\n    noConflict: config.noConflict || false,\n    outro: getAddon(config, 'outro'),\n    paths: config.paths || {},\n    plugins: await normalizePluginOption(config.plugins),\n    preferConst,\n    preserveModules,\n    preserveModulesRoot: getPreserveModulesRoot(config),\n    sanitizeFileName: typeof config.sanitizeFileName === 'function' ? config.sanitizeFileName : config.sanitizeFileName === false ? id => id : sanitizeFileName,\n    sourcemap: config.sourcemap || false,\n    sourcemapBaseUrl: getSourcemapBaseUrl(config),\n    sourcemapExcludeSources: config.sourcemapExcludeSources || false,\n    sourcemapFile: config.sourcemapFile,\n    sourcemapIgnoreList: typeof config.sourcemapIgnoreList === 'function' ? config.sourcemapIgnoreList : config.sourcemapIgnoreList === false ? () => false : relativeSourcePath => relativeSourcePath.includes('node_modules'),\n    sourcemapPathTransform: config.sourcemapPathTransform,\n    strict: config.strict ?? true,\n    systemNullSetters: config.systemNullSetters ?? true,\n    validate: config.validate || false\n  };\n  warnUnknownOptions(config, Object.keys(outputOptions), 'output options', inputOptions.onwarn);\n  return {\n    options: outputOptions,\n    unsetOptions\n  };\n}\nconst getFile = (config, preserveModules, inputOptions) => {\n  const {\n    file\n  } = config;\n  if (typeof file === 'string') {\n    if (preserveModules) {\n      return error(errorInvalidOption('output.file', URL_OUTPUT_DIR, 'you must set \"output.dir\" instead of \"output.file\" when using the \"output.preserveModules\" option'));\n    }\n    if (!Array.isArray(inputOptions.input)) return error(errorInvalidOption('output.file', URL_OUTPUT_DIR, 'you must set \"output.dir\" instead of \"output.file\" when providing named inputs'));\n  }\n  return file;\n};\nconst getFormat = config => {\n  const configFormat = config.format;\n  switch (configFormat) {\n    case undefined:\n    case 'es':\n    case 'esm':\n    case 'module':\n      {\n        return 'es';\n      }\n    case 'cjs':\n    case 'commonjs':\n      {\n        return 'cjs';\n      }\n    case 'system':\n    case 'systemjs':\n      {\n        return 'system';\n      }\n    case 'amd':\n    case 'iife':\n    case 'umd':\n      {\n        return configFormat;\n      }\n    default:\n      {\n        return error(errorInvalidOption('output.format', URL_OUTPUT_FORMAT, `Valid values are \"amd\", \"cjs\", \"system\", \"es\", \"iife\" or \"umd\"`, configFormat));\n      }\n  }\n};\nconst getInlineDynamicImports = (config, inputOptions) => {\n  const inlineDynamicImports = (config.inlineDynamicImports ?? inputOptions.inlineDynamicImports) || false;\n  const {\n    input\n  } = inputOptions;\n  if (inlineDynamicImports && (Array.isArray(input) ? input : Object.keys(input)).length > 1) {\n    return error(errorInvalidOption('output.inlineDynamicImports', URL_OUTPUT_INLINEDYNAMICIMPORTS, 'multiple inputs are not supported when \"output.inlineDynamicImports\" is true'));\n  }\n  return inlineDynamicImports;\n};\nconst getPreserveModules = (config, inlineDynamicImports, inputOptions) => {\n  const preserveModules = (config.preserveModules ?? inputOptions.preserveModules) || false;\n  if (preserveModules) {\n    if (inlineDynamicImports) {\n      return error(errorInvalidOption('output.inlineDynamicImports', URL_OUTPUT_INLINEDYNAMICIMPORTS, `this option is not supported for \"output.preserveModules\"`));\n    }\n    if (inputOptions.preserveEntrySignatures === false) {\n      return error(errorInvalidOption('preserveEntrySignatures', URL_PRESERVEENTRYSIGNATURES, 'setting this option to false is not supported for \"output.preserveModules\"'));\n    }\n  }\n  return preserveModules;\n};\nconst getPreferConst = (config, inputOptions) => {\n  const configPreferConst = config.preferConst;\n  if (configPreferConst != null) {\n    warnDeprecation(`The \"output.preferConst\" option is deprecated. Use the \"output.generatedCode.constBindings\" option instead.`, URL_OUTPUT_GENERATEDCODE_CONSTBINDINGS, true, inputOptions);\n  }\n  return !!configPreferConst;\n};\nconst getPreserveModulesRoot = config => {\n  const {\n    preserveModulesRoot\n  } = config;\n  if (preserveModulesRoot === null || preserveModulesRoot === undefined) {\n    return undefined;\n  }\n  return resolve(preserveModulesRoot);\n};\nconst getAmd = config => {\n  const mergedOption = {\n    autoId: false,\n    basePath: '',\n    define: 'define',\n    forceJsExtensionForImports: false,\n    ...config.amd\n  };\n  if ((mergedOption.autoId || mergedOption.basePath) && mergedOption.id) {\n    return error(errorInvalidOption('output.amd.id', URL_OUTPUT_AMD_ID, 'this option cannot be used together with \"output.amd.autoId\"/\"output.amd.basePath\"'));\n  }\n  if (mergedOption.basePath && !mergedOption.autoId) {\n    return error(errorInvalidOption('output.amd.basePath', URL_OUTPUT_AMD_BASEPATH, 'this option only works with \"output.amd.autoId\"'));\n  }\n  return mergedOption.autoId ? {\n    autoId: true,\n    basePath: mergedOption.basePath,\n    define: mergedOption.define,\n    forceJsExtensionForImports: mergedOption.forceJsExtensionForImports\n  } : {\n    autoId: false,\n    define: mergedOption.define,\n    forceJsExtensionForImports: mergedOption.forceJsExtensionForImports,\n    id: mergedOption.id\n  };\n};\nconst getAddon = (config, name) => {\n  const configAddon = config[name];\n  if (typeof configAddon === 'function') {\n    return configAddon;\n  }\n  return () => configAddon || '';\n};\n// eslint-disable-next-line unicorn/prevent-abbreviations\nconst getDir = (config, file) => {\n  const {\n    dir\n  } = config;\n  if (typeof dir === 'string' && typeof file === 'string') {\n    return error(errorInvalidOption('output.dir', URL_OUTPUT_DIR, 'you must set either \"output.file\" for a single-file build or \"output.dir\" when generating multiple chunks'));\n  }\n  return dir;\n};\nconst getDynamicImportFunction = (config, inputOptions, format) => {\n  const configDynamicImportFunction = config.dynamicImportFunction;\n  if (configDynamicImportFunction) {\n    warnDeprecation(`The \"output.dynamicImportFunction\" option is deprecated. Use the \"renderDynamicImport\" plugin hook instead.`, URL_RENDERDYNAMICIMPORT, true, inputOptions);\n    if (format !== 'es') {\n      inputOptions.onwarn(errorInvalidOption('output.dynamicImportFunction', URL_OUTPUT_DYNAMICIMPORTFUNCTION, 'this option is ignored for formats other than \"es\"'));\n    }\n  }\n  return configDynamicImportFunction;\n};\nconst getEntryFileNames = (config, unsetOptions) => {\n  const configEntryFileNames = config.entryFileNames;\n  if (configEntryFileNames == null) {\n    unsetOptions.add('entryFileNames');\n  }\n  return configEntryFileNames ?? '[name].js';\n};\nfunction getExperimentalDeepDynamicChunkOptimization(config, inputOptions) {\n  const configExperimentalDeepDynamicChunkOptimization = config.experimentalDeepDynamicChunkOptimization;\n  if (configExperimentalDeepDynamicChunkOptimization != null) {\n    warnDeprecation(`The \"output.experimentalDeepDynamicChunkOptimization\" option is deprecated as Rollup always runs the full chunking algorithm now. The option should be removed.`, URL_OUTPUT_EXPERIMENTALDEEPCHUNKOPTIMIZATION, true, inputOptions);\n  }\n  return configExperimentalDeepDynamicChunkOptimization || false;\n}\nfunction getExports(config, unsetOptions) {\n  const configExports = config.exports;\n  if (configExports == null) {\n    unsetOptions.add('exports');\n  } else if (!['default', 'named', 'none', 'auto'].includes(configExports)) {\n    return error(errorInvalidExportOptionValue(configExports));\n  }\n  return configExports || 'auto';\n}\nconst getGeneratedCode = (config, preferConst) => {\n  const configWithPreset = getOptionWithPreset(config.generatedCode, generatedCodePresets, 'output.generatedCode', URL_OUTPUT_GENERATEDCODE, '');\n  return {\n    arrowFunctions: configWithPreset.arrowFunctions === true,\n    constBindings: configWithPreset.constBindings === true || preferConst,\n    objectShorthand: configWithPreset.objectShorthand === true,\n    reservedNamesAsProps: configWithPreset.reservedNamesAsProps !== false,\n    symbols: configWithPreset.symbols === true\n  };\n};\nconst getIndent = (config, compact) => {\n  if (compact) {\n    return '';\n  }\n  const configIndent = config.indent;\n  return configIndent === false ? '' : configIndent ?? true;\n};\nconst ALLOWED_INTEROP_TYPES = new Set(['compat', 'auto', 'esModule', 'default', 'defaultOnly']);\nconst getInterop = config => {\n  const configInterop = config.interop;\n  if (typeof configInterop === 'function') {\n    const interopPerId = Object.create(null);\n    let defaultInterop = null;\n    return id => id === null ? defaultInterop || validateInterop(defaultInterop = configInterop(id)) : id in interopPerId ? interopPerId[id] : validateInterop(interopPerId[id] = configInterop(id));\n  }\n  return configInterop === undefined ? () => 'default' : () => validateInterop(configInterop);\n};\nconst validateInterop = interop => {\n  if (!ALLOWED_INTEROP_TYPES.has(interop)) {\n    return error(errorInvalidOption('output.interop', URL_OUTPUT_INTEROP,\n    // eslint-disable-next-line unicorn/prefer-spread\n    `use one of ${Array.from(ALLOWED_INTEROP_TYPES, value => JSON.stringify(value)).join(', ')}`, interop));\n  }\n  return interop;\n};\nconst getManualChunks = (config, inlineDynamicImports, preserveModules, inputOptions) => {\n  const configManualChunks = config.manualChunks || inputOptions.manualChunks;\n  if (configManualChunks) {\n    if (inlineDynamicImports) {\n      return error(errorInvalidOption('output.manualChunks', URL_OUTPUT_MANUALCHUNKS, 'this option is not supported for \"output.inlineDynamicImports\"'));\n    }\n    if (preserveModules) {\n      return error(errorInvalidOption('output.manualChunks', URL_OUTPUT_MANUALCHUNKS, 'this option is not supported for \"output.preserveModules\"'));\n    }\n  }\n  return configManualChunks || {};\n};\nconst getMinifyInternalExports = (config, format, compact) => config.minifyInternalExports ?? (compact || format === 'es' || format === 'system');\nconst getNamespaceToStringTag = (config, generatedCode, inputOptions) => {\n  const configNamespaceToStringTag = config.namespaceToStringTag;\n  if (configNamespaceToStringTag != null) {\n    warnDeprecation(`The \"output.namespaceToStringTag\" option is deprecated. Use the \"output.generatedCode.symbols\" option instead.`, URL_OUTPUT_GENERATEDCODE_SYMBOLS, true, inputOptions);\n    return configNamespaceToStringTag;\n  }\n  return generatedCode.symbols || false;\n};\nconst getSourcemapBaseUrl = config => {\n  const {\n    sourcemapBaseUrl\n  } = config;\n  if (sourcemapBaseUrl) {\n    if (isValidUrl(sourcemapBaseUrl)) {\n      return sourcemapBaseUrl;\n    }\n    return error(errorInvalidOption('output.sourcemapBaseUrl', URL_OUTPUT_SOURCEMAPBASEURL, `must be a valid URL, received ${JSON.stringify(sourcemapBaseUrl)}`));\n  }\n};\nfunction rollup(rawInputOptions) {\n  return rollupInternal(rawInputOptions, null);\n}\nasync function rollupInternal(rawInputOptions, watcher) {\n  const {\n    options: inputOptions,\n    unsetOptions: unsetInputOptions\n  } = await getInputOptions(rawInputOptions, watcher !== null);\n  initialiseTimers(inputOptions);\n  const graph = new Graph(inputOptions, watcher);\n  // remove the cache object from the memory after graph creation (cache is not used anymore)\n  const useCache = rawInputOptions.cache !== false;\n  if (rawInputOptions.cache) {\n    inputOptions.cache = undefined;\n    rawInputOptions.cache = undefined;\n  }\n  timeStart('BUILD', 1);\n  await catchUnfinishedHookActions(graph.pluginDriver, async () => {\n    try {\n      timeStart('initialize', 2);\n      await graph.pluginDriver.hookParallel('buildStart', [inputOptions]);\n      timeEnd('initialize', 2);\n      await graph.build();\n    } catch (error_) {\n      const watchFiles = Object.keys(graph.watchFiles);\n      if (watchFiles.length > 0) {\n        error_.watchFiles = watchFiles;\n      }\n      await graph.pluginDriver.hookParallel('buildEnd', [error_]);\n      await graph.pluginDriver.hookParallel('closeBundle', []);\n      throw error_;\n    }\n    await graph.pluginDriver.hookParallel('buildEnd', []);\n  });\n  timeEnd('BUILD', 1);\n  const result = {\n    cache: useCache ? graph.getCache() : undefined,\n    async close() {\n      if (result.closed) return;\n      result.closed = true;\n      await graph.pluginDriver.hookParallel('closeBundle', []);\n    },\n    closed: false,\n    async generate(rawOutputOptions) {\n      if (result.closed) return error(errorAlreadyClosed());\n      return handleGenerateWrite(false, inputOptions, unsetInputOptions, rawOutputOptions, graph);\n    },\n    watchFiles: Object.keys(graph.watchFiles),\n    async write(rawOutputOptions) {\n      if (result.closed) return error(errorAlreadyClosed());\n      return handleGenerateWrite(true, inputOptions, unsetInputOptions, rawOutputOptions, graph);\n    }\n  };\n  if (inputOptions.perf) result.getTimings = getTimings;\n  return result;\n}\nasync function getInputOptions(rawInputOptions, watchMode) {\n  if (!rawInputOptions) {\n    throw new Error('You must supply an options object to rollup');\n  }\n  const rawPlugins = getSortedValidatedPlugins('options', await normalizePluginOption(rawInputOptions.plugins));\n  const {\n    options,\n    unsetOptions\n  } = await normalizeInputOptions(await rawPlugins.reduce(applyOptionHook(watchMode), Promise.resolve(rawInputOptions)));\n  normalizePlugins(options.plugins, ANONYMOUS_PLUGIN_PREFIX);\n  return {\n    options,\n    unsetOptions\n  };\n}\nfunction applyOptionHook(watchMode) {\n  return async (inputOptions, plugin) => {\n    const handler = 'handler' in plugin.options ? plugin.options.handler : plugin.options;\n    return (await handler.call({\n      meta: {\n        rollupVersion: version$1,\n        watchMode\n      }\n    }, await inputOptions)) || inputOptions;\n  };\n}\nfunction normalizePlugins(plugins, anonymousPrefix) {\n  for (const [index, plugin] of plugins.entries()) {\n    if (!plugin.name) {\n      plugin.name = `${anonymousPrefix}${index + 1}`;\n    }\n  }\n}\nasync function handleGenerateWrite(isWrite, inputOptions, unsetInputOptions, rawOutputOptions, graph) {\n  const {\n    options: outputOptions,\n    outputPluginDriver,\n    unsetOptions\n  } = await getOutputOptionsAndPluginDriver(rawOutputOptions, graph.pluginDriver, inputOptions, unsetInputOptions);\n  return catchUnfinishedHookActions(outputPluginDriver, async () => {\n    const bundle = new Bundle(outputOptions, unsetOptions, inputOptions, outputPluginDriver, graph);\n    const generated = await bundle.generate(isWrite);\n    if (isWrite) {\n      timeStart('WRITE', 1);\n      if (!outputOptions.dir && !outputOptions.file) {\n        return error(errorMissingFileOrDirOption());\n      }\n      await Promise.all(Object.values(generated).map(chunk => graph.fileOperationQueue.run(() => writeOutputFile(chunk, outputOptions))));\n      await outputPluginDriver.hookParallel('writeBundle', [outputOptions, generated]);\n      timeEnd('WRITE', 1);\n    }\n    return createOutput(generated);\n  });\n}\nasync function getOutputOptionsAndPluginDriver(rawOutputOptions, inputPluginDriver, inputOptions, unsetInputOptions) {\n  if (!rawOutputOptions) {\n    throw new Error('You must supply an options object');\n  }\n  const rawPlugins = await normalizePluginOption(rawOutputOptions.plugins);\n  normalizePlugins(rawPlugins, ANONYMOUS_OUTPUT_PLUGIN_PREFIX);\n  const outputPluginDriver = inputPluginDriver.createOutputPluginDriver(rawPlugins);\n  return {\n    ...(await getOutputOptions(inputOptions, unsetInputOptions, rawOutputOptions, outputPluginDriver)),\n    outputPluginDriver\n  };\n}\nfunction getOutputOptions(inputOptions, unsetInputOptions, rawOutputOptions, outputPluginDriver) {\n  return normalizeOutputOptions(outputPluginDriver.hookReduceArg0Sync('outputOptions', [rawOutputOptions], (outputOptions, result) => result || outputOptions, pluginContext => {\n    const emitError = () => pluginContext.error(errorCannotEmitFromOptionsHook());\n    return {\n      ...pluginContext,\n      emitFile: emitError,\n      setAssetSource: emitError\n    };\n  }), inputOptions, unsetInputOptions);\n}\nfunction createOutput(outputBundle) {\n  return {\n    output: Object.values(outputBundle).filter(outputFile => Object.keys(outputFile).length > 0).sort((outputFileA, outputFileB) => getSortingFileType(outputFileA) - getSortingFileType(outputFileB))\n  };\n}\nvar SortingFileType;\n(function (SortingFileType) {\n  SortingFileType[SortingFileType[\"ENTRY_CHUNK\"] = 0] = \"ENTRY_CHUNK\";\n  SortingFileType[SortingFileType[\"SECONDARY_CHUNK\"] = 1] = \"SECONDARY_CHUNK\";\n  SortingFileType[SortingFileType[\"ASSET\"] = 2] = \"ASSET\";\n})(SortingFileType || (SortingFileType = {}));\nfunction getSortingFileType(file) {\n  if (file.type === 'asset') {\n    return SortingFileType.ASSET;\n  }\n  if (file.isEntry) {\n    return SortingFileType.ENTRY_CHUNK;\n  }\n  return SortingFileType.SECONDARY_CHUNK;\n}\nasync function writeOutputFile(outputFile, outputOptions) {\n  const fileName = resolve(outputOptions.dir || dirname(outputOptions.file), outputFile.fileName);\n  // 'recursive: true' does not throw if the folder structure, or parts of it, already exist\n  await mkdir(dirname(fileName), {\n    recursive: true\n  });\n  return writeFile(fileName, outputFile.type === 'asset' ? outputFile.source : outputFile.code);\n}\n/**\n * Auxiliary function for defining rollup configuration\n * Mainly to facilitate IDE code prompts, after all, export default does not prompt, even if you add @type annotations, it is not accurate\n * @param options\n */\nfunction defineConfig(options) {\n  return options;\n}\nconst {\n  env = {},\n  argv = [],\n  platform = \"\"\n} = typeof process === \"undefined\" ? {} : process;\nconst isDisabled = \"NO_COLOR\" in env || argv.includes(\"--no-color\");\nconst isForced = \"FORCE_COLOR\" in env || argv.includes(\"--color\");\nconst isWindows = platform === \"win32\";\nconst isDumbTerminal = env.TERM === \"dumb\";\nconst isCompatibleTerminal = tty && tty.isatty && tty.isatty(1) && env.TERM && !isDumbTerminal;\nconst isCI = \"CI\" in env && (\"GITHUB_ACTIONS\" in env || \"GITLAB_CI\" in env || \"CIRCLECI\" in env);\nconst isColorSupported = !isDisabled && (isForced || isWindows && !isDumbTerminal || isCompatibleTerminal || isCI);\nconst replaceClose = function (index, string, close, replace) {\n  let head = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : string.substring(0, index) + replace;\n  let tail = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : string.substring(index + close.length);\n  let next = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : tail.indexOf(close);\n  return head + (next < 0 ? tail : replaceClose(next, tail, close, replace));\n};\nconst clearBleed = (index, string, open, close, replace) => index < 0 ? open + string + close : open + replaceClose(index, string, close, replace) + close;\nconst filterEmpty = function (open, close) {\n  let replace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : open;\n  let at = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : open.length + 1;\n  return string => string || !(string === \"\" || string === undefined) ? clearBleed((\"\" + string).indexOf(close, at), string, open, close, replace) : \"\";\n};\nconst init = (open, close, replace) => filterEmpty(`\\x1b[${open}m`, `\\x1b[${close}m`, replace);\nconst colors = {\n  reset: init(0, 0),\n  bold: init(1, 22, \"\\x1b[22m\\x1b[1m\"),\n  dim: init(2, 22, \"\\x1b[22m\\x1b[2m\"),\n  italic: init(3, 23),\n  underline: init(4, 24),\n  inverse: init(7, 27),\n  hidden: init(8, 28),\n  strikethrough: init(9, 29),\n  black: init(30, 39),\n  red: init(31, 39),\n  green: init(32, 39),\n  yellow: init(33, 39),\n  blue: init(34, 39),\n  magenta: init(35, 39),\n  cyan: init(36, 39),\n  white: init(37, 39),\n  gray: init(90, 39),\n  bgBlack: init(40, 49),\n  bgRed: init(41, 49),\n  bgGreen: init(42, 49),\n  bgYellow: init(43, 49),\n  bgBlue: init(44, 49),\n  bgMagenta: init(45, 49),\n  bgCyan: init(46, 49),\n  bgWhite: init(47, 49),\n  blackBright: init(90, 39),\n  redBright: init(91, 39),\n  greenBright: init(92, 39),\n  yellowBright: init(93, 39),\n  blueBright: init(94, 39),\n  magentaBright: init(95, 39),\n  cyanBright: init(96, 39),\n  whiteBright: init(97, 39),\n  bgBlackBright: init(100, 49),\n  bgRedBright: init(101, 49),\n  bgGreenBright: init(102, 49),\n  bgYellowBright: init(103, 49),\n  bgBlueBright: init(104, 49),\n  bgMagentaBright: init(105, 49),\n  bgCyanBright: init(106, 49),\n  bgWhiteBright: init(107, 49)\n};\nconst createColors = function () {\n  let {\n    useColor = isColorSupported\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return useColor ? colors : Object.keys(colors).reduce((colors, key) => ({\n    ...colors,\n    [key]: String\n  }), {});\n};\ncreateColors();\n\n// @see https://no-color.org\n// @see https://www.npmjs.com/package/chalk\nconst {\n  bold,\n  cyan,\n  dim,\n  gray,\n  green,\n  red,\n  underline,\n  yellow\n} = createColors({\n  useColor: env$1.FORCE_COLOR !== '0' && !env$1.NO_COLOR\n});\n\n// log to stderr to keep `rollup main.js > bundle.js` from breaking\nconst stderr = function () {\n  for (var _len5 = arguments.length, parameters = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    parameters[_key5] = arguments[_key5];\n  }\n  return process$1.stderr.write(`${parameters.join('')}\\n`);\n};\nfunction handleError(error) {\n  let recover = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const name = error.name || error.cause?.name;\n  const nameSection = name ? `${name}: ` : '';\n  const pluginSection = error.plugin ? `(plugin ${error.plugin}) ` : '';\n  const message = `${pluginSection}${nameSection}${error.message}`;\n  const outputLines = [bold(red(`[!] ${bold(message.toString())}`))];\n  if (error.url) {\n    outputLines.push(cyan(error.url));\n  }\n  if (error.loc) {\n    outputLines.push(`${relativeId(error.loc.file || error.id)} (${error.loc.line}:${error.loc.column})`);\n  } else if (error.id) {\n    outputLines.push(relativeId(error.id));\n  }\n  if (error.frame) {\n    outputLines.push(dim(error.frame));\n  }\n  if (error.stack) {\n    outputLines.push(dim(error.stack?.replace(`${nameSection}${error.message}\\n`, '')));\n  }\n  outputLines.push('', '');\n  stderr(outputLines.join('\\n'));\n  // eslint-disable-next-line unicorn/no-process-exit\n  if (!recover) process$1.exit(1);\n}\nconst commandAliases = {\n  c: 'config',\n  d: 'dir',\n  e: 'external',\n  f: 'format',\n  g: 'globals',\n  h: 'help',\n  i: 'input',\n  m: 'sourcemap',\n  n: 'name',\n  o: 'file',\n  p: 'plugin',\n  v: 'version',\n  w: 'watch'\n};\nconst EMPTY_COMMAND_OPTIONS = {\n  external: [],\n  globals: undefined\n};\nasync function mergeOptions(config) {\n  let rawCommandOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : EMPTY_COMMAND_OPTIONS;\n  let defaultOnWarnHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultOnWarn;\n  const command = getCommandOptions(rawCommandOptions);\n  const inputOptions = await mergeInputOptions(config, command, defaultOnWarnHandler);\n  const warn = inputOptions.onwarn;\n  if (command.output) {\n    Object.assign(command, command.output);\n  }\n  const outputOptionsArray = ensureArray(config.output);\n  if (outputOptionsArray.length === 0) outputOptionsArray.push({});\n  const outputOptions = await Promise.all(outputOptionsArray.map(singleOutputOptions => mergeOutputOptions(singleOutputOptions, command, warn)));\n  warnUnknownOptions(command, [...Object.keys(inputOptions), ...Object.keys(outputOptions[0]).filter(option => option !== 'sourcemapIgnoreList' && option !== 'sourcemapPathTransform'), ...Object.keys(commandAliases), 'bundleConfigAsCjs', 'config', 'environment', 'plugin', 'silent', 'failAfterWarnings', 'stdin', 'waitForBundleInput', 'configPlugin'], 'CLI flags', warn, /^_$|output$|config/);\n  inputOptions.output = outputOptions;\n  return inputOptions;\n}\nfunction getCommandOptions(rawCommandOptions) {\n  const external = rawCommandOptions.external && typeof rawCommandOptions.external === 'string' ? rawCommandOptions.external.split(',') : [];\n  return {\n    ...rawCommandOptions,\n    external,\n    globals: typeof rawCommandOptions.globals === 'string' ? rawCommandOptions.globals.split(',').reduce((globals, globalDefinition) => {\n      const [id, variableName] = globalDefinition.split(':');\n      globals[id] = variableName;\n      if (!external.includes(id)) {\n        external.push(id);\n      }\n      return globals;\n    }, Object.create(null)) : undefined\n  };\n}\nasync function mergeInputOptions(config, overrides, defaultOnWarnHandler) {\n  const getOption = name => overrides[name] ?? config[name];\n  const inputOptions = {\n    acorn: getOption('acorn'),\n    acornInjectPlugins: config.acornInjectPlugins,\n    cache: config.cache,\n    context: getOption('context'),\n    experimentalCacheExpiry: getOption('experimentalCacheExpiry'),\n    experimentalLogSideEffects: getOption('experimentalLogSideEffects'),\n    external: getExternal(config, overrides),\n    inlineDynamicImports: getOption('inlineDynamicImports'),\n    input: getOption('input') || [],\n    makeAbsoluteExternalsRelative: getOption('makeAbsoluteExternalsRelative'),\n    manualChunks: getOption('manualChunks'),\n    maxParallelFileOps: getOption('maxParallelFileOps'),\n    maxParallelFileReads: getOption('maxParallelFileReads'),\n    moduleContext: getOption('moduleContext'),\n    onwarn: getOnWarn(config, defaultOnWarnHandler),\n    perf: getOption('perf'),\n    plugins: await normalizePluginOption(config.plugins),\n    preserveEntrySignatures: getOption('preserveEntrySignatures'),\n    preserveModules: getOption('preserveModules'),\n    preserveSymlinks: getOption('preserveSymlinks'),\n    shimMissingExports: getOption('shimMissingExports'),\n    strictDeprecations: getOption('strictDeprecations'),\n    treeshake: getObjectOption(config, overrides, 'treeshake', objectifyOptionWithPresets(treeshakePresets, 'treeshake', URL_TREESHAKE, 'false, true, ')),\n    watch: getWatch(config, overrides)\n  };\n  warnUnknownOptions(config, Object.keys(inputOptions), 'input options', inputOptions.onwarn, /^output$/);\n  return inputOptions;\n}\nconst getExternal = (config, overrides) => {\n  const configExternal = config.external;\n  return typeof configExternal === 'function' ? (source, importer, isResolved) => configExternal(source, importer, isResolved) || overrides.external.includes(source) : [...ensureArray(configExternal), ...overrides.external];\n};\nconst getOnWarn = (config, defaultOnWarnHandler) => config.onwarn ? warning => config.onwarn(warning, defaultOnWarnHandler) : defaultOnWarnHandler;\nconst getObjectOption = function (config, overrides, name) {\n  let objectifyValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : objectifyOption;\n  const commandOption = normalizeObjectOptionValue(overrides[name], objectifyValue);\n  const configOption = normalizeObjectOptionValue(config[name], objectifyValue);\n  if (commandOption !== undefined) {\n    return commandOption && {\n      ...configOption,\n      ...commandOption\n    };\n  }\n  return configOption;\n};\nconst getWatch = (config, overrides) => config.watch !== false && getObjectOption(config, overrides, 'watch');\nconst normalizeObjectOptionValue = (optionValue, objectifyValue) => {\n  if (!optionValue) {\n    return optionValue;\n  }\n  if (Array.isArray(optionValue)) {\n    return optionValue.reduce((result, value) => value && result && {\n      ...result,\n      ...objectifyValue(value)\n    }, {});\n  }\n  return objectifyValue(optionValue);\n};\nasync function mergeOutputOptions(config, overrides, warn) {\n  const getOption = name => overrides[name] ?? config[name];\n  const outputOptions = {\n    amd: getObjectOption(config, overrides, 'amd'),\n    assetFileNames: getOption('assetFileNames'),\n    banner: getOption('banner'),\n    chunkFileNames: getOption('chunkFileNames'),\n    compact: getOption('compact'),\n    dir: getOption('dir'),\n    dynamicImportFunction: getOption('dynamicImportFunction'),\n    dynamicImportInCjs: getOption('dynamicImportInCjs'),\n    entryFileNames: getOption('entryFileNames'),\n    esModule: getOption('esModule'),\n    experimentalDeepDynamicChunkOptimization: getOption('experimentalDeepDynamicChunkOptimization'),\n    experimentalMinChunkSize: getOption('experimentalMinChunkSize'),\n    exports: getOption('exports'),\n    extend: getOption('extend'),\n    externalImportAssertions: getOption('externalImportAssertions'),\n    externalLiveBindings: getOption('externalLiveBindings'),\n    file: getOption('file'),\n    footer: getOption('footer'),\n    format: getOption('format'),\n    freeze: getOption('freeze'),\n    generatedCode: getObjectOption(config, overrides, 'generatedCode', objectifyOptionWithPresets(generatedCodePresets, 'output.generatedCode', URL_OUTPUT_GENERATEDCODE, '')),\n    globals: getOption('globals'),\n    hoistTransitiveImports: getOption('hoistTransitiveImports'),\n    indent: getOption('indent'),\n    inlineDynamicImports: getOption('inlineDynamicImports'),\n    interop: getOption('interop'),\n    intro: getOption('intro'),\n    manualChunks: getOption('manualChunks'),\n    minifyInternalExports: getOption('minifyInternalExports'),\n    name: getOption('name'),\n    namespaceToStringTag: getOption('namespaceToStringTag'),\n    noConflict: getOption('noConflict'),\n    outro: getOption('outro'),\n    paths: getOption('paths'),\n    plugins: await normalizePluginOption(config.plugins),\n    preferConst: getOption('preferConst'),\n    preserveModules: getOption('preserveModules'),\n    preserveModulesRoot: getOption('preserveModulesRoot'),\n    sanitizeFileName: getOption('sanitizeFileName'),\n    sourcemap: getOption('sourcemap'),\n    sourcemapBaseUrl: getOption('sourcemapBaseUrl'),\n    sourcemapExcludeSources: getOption('sourcemapExcludeSources'),\n    sourcemapFile: getOption('sourcemapFile'),\n    sourcemapIgnoreList: getOption('sourcemapIgnoreList'),\n    sourcemapPathTransform: getOption('sourcemapPathTransform'),\n    strict: getOption('strict'),\n    systemNullSetters: getOption('systemNullSetters'),\n    validate: getOption('validate')\n  };\n  warnUnknownOptions(config, Object.keys(outputOptions), 'output options', warn);\n  return outputOptions;\n}\nclass WatchEmitter {\n  constructor() {\n    this.currentHandlers = Object.create(null);\n    this.persistentHandlers = Object.create(null);\n  }\n  // Will be overwritten by Rollup\n  async close() {}\n  emit(event) {\n    for (var _len6 = arguments.length, parameters = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n      parameters[_key6 - 1] = arguments[_key6];\n    }\n    return Promise.all([...this.getCurrentHandlers(event), ...this.getPersistentHandlers(event)].map(handler => handler(...parameters)));\n  }\n  off(event, listener) {\n    const listeners = this.persistentHandlers[event];\n    if (listeners) {\n      // A hack stolen from \"mitt\": \">>> 0\" does not change numbers >= 0, but -1\n      // (which would remove the last array element if used unchanged) is turned\n      // into max_int, which is outside the array and does not change anything.\n      listeners.splice(listeners.indexOf(listener) >>> 0, 1);\n    }\n    return this;\n  }\n  on(event, listener) {\n    this.getPersistentHandlers(event).push(listener);\n    return this;\n  }\n  onCurrentRun(event, listener) {\n    this.getCurrentHandlers(event).push(listener);\n    return this;\n  }\n  once(event, listener) {\n    var _this3 = this;\n    const selfRemovingListener = function () {\n      _this3.off(event, selfRemovingListener);\n      return listener(...arguments);\n    };\n    this.on(event, selfRemovingListener);\n    return this;\n  }\n  removeAllListeners() {\n    this.removeListenersForCurrentRun();\n    this.persistentHandlers = Object.create(null);\n    return this;\n  }\n  removeListenersForCurrentRun() {\n    this.currentHandlers = Object.create(null);\n    return this;\n  }\n  getCurrentHandlers(event) {\n    return this.currentHandlers[event] || (this.currentHandlers[event] = []);\n  }\n  getPersistentHandlers(event) {\n    return this.persistentHandlers[event] || (this.persistentHandlers[event] = []);\n  }\n}\nlet fsEvents;\nlet fsEventsImportError;\nasync function loadFsEvents() {\n  try {\n    ({\n      default: fsEvents\n    } = await import('fsevents'));\n  } catch (error) {\n    fsEventsImportError = error;\n  }\n}\n// A call to this function will be injected into the chokidar code\nfunction getFsEvents() {\n  if (fsEventsImportError) throw fsEventsImportError;\n  return fsEvents;\n}\nconst fseventsImporter = /*#__PURE__*/Object.defineProperty({\n  __proto__: null,\n  getFsEvents,\n  loadFsEvents\n}, Symbol.toStringTag, {\n  value: 'Module'\n});\nfunction watch(configs) {\n  const emitter = new WatchEmitter();\n  watchInternal(configs, emitter).catch(error => {\n    handleError(error);\n  });\n  return emitter;\n}\nasync function watchInternal(configs, emitter) {\n  const optionsList = await Promise.all(ensureArray(configs).map(config => mergeOptions(config)));\n  const watchOptionsList = optionsList.filter(config => config.watch !== false);\n  if (watchOptionsList.length === 0) {\n    return error(errorInvalidOption('watch', URL_WATCH, 'there must be at least one config where \"watch\" is not set to \"false\"'));\n  }\n  await loadFsEvents();\n  const {\n    Watcher\n  } = await import('./watch.js');\n  new Watcher(watchOptionsList, emitter);\n}\nexport { createFilter, defineConfig, fseventsImporter, getAugmentedNamespace, picomatchExports, rollup, rollupInternal, version$1 as version, watch };","map":{"version":3,"names":["resolve","basename","extname","dirname","relative","relative$1","require$$0$1","win32","posix","isAbsolute","isAbsolute$1","resolve$1","process$1","env","env$1","performance","createHash","createHash$1","lstat","realpath","readdir","readFile","mkdir","writeFile","EventEmitter","tty","version$1","comma","charCodeAt","semicolon","chars$1","intToChar","Uint8Array","charToInt","i","length","c","td","TextDecoder","Buffer","decode","buf","out","from","buffer","byteOffset","byteLength","toString","String","fromCharCode","mappings","state","Int32Array","decoded","index","semi","indexOf","line","sorted","lastCol","seg","decodeInteger","col","hasMoreVlq","push","sort","idx","pos","j","value","shift","integer","shouldNegate","sortComparator","a","b","encode","bufLength","subLength","sub","subarray","segment","copyWithin","encodeInteger","next","num","clamped","BitSet","constructor","arg","bits","slice","add","n","has","Chunk$1","Chunk","start","end","content","original","intro","outro","storeName","edited","previous","appendLeft","appendRight","clone","chunk","contains","eachNext","fn","eachPrevious","edit","contentOnly","prependLeft","prependRight","split","sliceIndex","originalBefore","originalAfter","newChunk","trimEnd","rx","replace","trimmed","undefined","trimStart","getBtoa","window","btoa","str","unescape","encodeURIComponent","Error","SourceMap","properties","version","file","sources","sourcesContent","names","x_google_ignoreList","JSON","stringify","toUrl","guessIndent","code","lines","tabbed","filter","test","spaced","min","reduce","current","numSpaces","exec","Math","Infinity","Array","join","getRelativePath","to","fromParts","toParts","pop","concat","toString$1","Object","prototype","isObject$1","thing","call","getLocator$1","source","originalLines","lineOffsets","locate","m","column","Mappings","hires","generatedCodeLine","generatedCodeColumn","raw","rawSegments","pending","addEdit","sourceIndex","loc","nameIndex","advance","addUneditedChunk","sourcemapLocations","originalCharIndex","first","warned","insertLeft","insertRight","MagicString","string","options","arguments","defineProperties","writable","firstChunk","lastChunk","lastSearchedChunk","byStart","byEnd","filename","indentExclusionRanges","storedNames","indentStr","addSourcemapLocation","char","append","TypeError","_split","cloned","originalChunk","clonedChunk","nextOriginalChunk","nextClonedChunk","generateDecodedMap","keys","includeContent","generateMap","_ensureindentStr","_getRawIndentString","getIndentString","indent","pattern","isExcluded","exclude","exclusions","forEach","exclusion","shouldIndentNextCharacter","indentStart","replacer","match","charIndex","_splitChunk","insert","console","warn","move","last","oldLeft","oldRight","newRight","newLeft","overwrite","update","defineProperty","enumerable","prepend","remove","lastChar","lastLine","lineIndex","lastIndexOf","substr","lineStr","result","startChunk","containsEnd","sliceStart","sliceEnd","snip","searchForward","isEmpty","trim","trimLines","charType","trimEndAborted","RegExp","aborted","trimStartAborted","hasChanged","_replaceRegexp","searchValue","replacement","getReplacement","_","groups","matchAll","re","matches","global","_replaceString","_replaceAllString","stringLength","replaceAll","hasOwnProp","hasOwnProperty","Bundle$1","Bundle","separator","uniqueSources","uniqueSourceIndexByFilename","addSource","option","uniqueSource","bundle","name","magicString","map","indentStringCounts","trailingNewline","body","some","ANY_SLASH_REGEX","Boolean","unshift","needsEscapeRegEx","quoteNewlineRegEx","backSlashRegEx","escapeId","id","ABSOLUTE_PATH_REGEX","RELATIVE_PATH_REGEX","path","isRelative","BACKSLASH_REGEX","normalize","getAliasName","base","max","relativeId","isPathFragment","UPPER_DIR_REGEX","getImportPath","importerId","targetPath","stripJsExtension","ensureFileName","relativePath","endsWith","startsWith","ExternalChunk","module","inputBase","defaultVariableName","namespaceVariableName","variableName","fileName","importAssertions","moduleInfo","info","renormalizeRenderPath","suggestedVariableName","getFileName","paths","getImportAssertions","snippets","formatAssertions$1","format","externalImportAssertions","assertions","importer","_ref","getObject","assertionEntries","entries","_ref2","key","lineBreakIndent","getOrCreate","init","existing","get","set","getNewSet","Set","getNewArray","UnknownKey","Symbol","UnknownNonAccessorKey","UnknownInteger","SymbolToStringTag","EMPTY_PATH","UNKNOWN_PATH","UNKNOWN_NON_ACCESSOR_PATH","UNKNOWN_INTEGER_PATH","EntitiesKey","PathTracker","entityPaths","create","trackEntityAtPathAndGetIfTracked","entity","trackedEntities","getEntities","withTrackedEntityAtPath","onUntracked","returnIfTracked","delete","currentPaths","pathSegment","SHARED_RECURSION_TRACKER","DiscriminatedPathTracker","Map","discriminator","UnknownValue","UnknownTruthyValue","ExpressionEntity","included","deoptimizePath","_path","deoptimizeThisOnInteractionAtPath","_ref3","_recursionTracker","thisArg","getLiteralValueAtPath","_origin","getReturnExpressionWhenCalledAtPath","_interaction","UNKNOWN_RETURN_EXPRESSION","hasEffectsOnInteractionAtPath","_context","include","_includeChildrenRecursively","_options","includeCallArguments","context","parameters","argument","shouldBeIncluded","UNKNOWN_EXPRESSION","UnknownExpression","INTERACTION_ACCESSED","INTERACTION_ASSIGNED","INTERACTION_CALLED","NODE_INTERACTION_UNKNOWN_ACCESS","type","UNKNOWN_ARG","NODE_INTERACTION_UNKNOWN_ASSIGNMENT","args","NO_ARGS","NODE_INTERACTION_UNKNOWN_CALL","withNew","Variable","alwaysRendered","forbiddenNames","initReached","isId","isReassigned","kind","renderBaseName","renderName","addReference","_identifier","forbidName","getBaseVariableName","getName","getPropertyAccess","useOriginalName","_ref4","markCalledFromTryStatement","setRenderNames","baseName","ExternalVariable","referenced","isNamespace","identifier","suggestName","_ref5","used","BLANK","freeze","EMPTY_OBJECT","EMPTY_ARRAY","getLocator","offsetLine","offsetColumn","lineRanges","range","rangeContains","getLocation","character","search","startIndex","d","spaces","tabsToSpaces","LINE_TRUNCATE_LENGTH","MIN_CHARACTERS_SHOWN_AFTER_LOCATION","ELLIPSIS","getCodeFrame","maxLineLength","frameStart","frameEnd","digits","sourceLine","isErrorLine","lineNumber","displayedLine","indicator","printQuotedStringList","list","verbs","isSingleItem","quotedList","item","output","isValidUrl","url","URL","getRollupUrl","snippet","URL_AVOIDING_EVAL","URL_NAME_IS_NOT_EXPORTED","URL_THIS_IS_UNDEFINED","URL_TREATING_MODULE_AS_EXTERNAL_DEPENDENCY","URL_SOURCEMAP_IS_LIKELY_TO_BE_INCORRECT","URL_MAXPARALLELFILEOPS","URL_OUTPUT_AMD_ID","URL_OUTPUT_AMD_BASEPATH","URL_OUTPUT_DIR","URL_OUTPUT_DYNAMICIMPORTFUNCTION","URL_OUTPUT_EXPORTS","URL_OUTPUT_EXTEND","URL_OUTPUT_FORMAT","URL_OUTPUT_GENERATEDCODE","URL_OUTPUT_EXPERIMENTALDEEPCHUNKOPTIMIZATION","URL_OUTPUT_GENERATEDCODE_CONSTBINDINGS","URL_OUTPUT_GENERATEDCODE_SYMBOLS","URL_OUTPUT_GLOBALS","URL_OUTPUT_INLINEDYNAMICIMPORTS","URL_OUTPUT_INTEROP","URL_OUTPUT_MANUALCHUNKS","URL_OUTPUT_NAME","URL_OUTPUT_PRESERVEMODULES","URL_OUTPUT_SOURCEMAPBASEURL","URL_OUTPUT_SOURCEMAPFILE","URL_PRESERVEENTRYSIGNATURES","URL_TREESHAKE","URL_TREESHAKE_MODULESIDEEFFECTS","URL_WATCH","URL_RENDERDYNAMICIMPORT","URL_THIS_GETMODULEIDS","URL_THIS_GETMODULEINFO","error","assign","message","augmentCodeLocation","frame","ADDON_ERROR","ALREADY_CLOSED","AMBIGUOUS_EXTERNAL_NAMESPACES","ANONYMOUS_PLUGIN_CACHE","ASSET_NOT_FINALISED","ASSET_NOT_FOUND","ASSET_SOURCE_ALREADY_SET","ASSET_SOURCE_MISSING","BAD_LOADER","CANNOT_CALL_NAMESPACE","CANNOT_EMIT_FROM_OPTIONS_HOOK","CHUNK_NOT_GENERATED","CHUNK_INVALID","CIRCULAR_DEPENDENCY","CIRCULAR_REEXPORT","CYCLIC_CROSS_CHUNK_REEXPORT","DEPRECATED_FEATURE","DUPLICATE_PLUGIN_NAME","EMPTY_BUNDLE","EVAL","EXTERNAL_SYNTHETIC_EXPORTS","FILE_NAME_CONFLICT","FILE_NOT_FOUND","ILLEGAL_IDENTIFIER_AS_NAME","ILLEGAL_REASSIGNMENT","INCONSISTENT_IMPORT_ASSERTIONS","INPUT_HOOK_IN_OUTPUT_PLUGIN","INVALID_CHUNK","INVALID_EXPORT_OPTION","INVALID_EXTERNAL_ID","INVALID_OPTION","INVALID_PLUGIN_HOOK","INVALID_ROLLUP_PHASE","INVALID_SETASSETSOURCE","INVALID_TLA_FORMAT","MISSING_EXPORT","MISSING_GLOBAL_NAME","MISSING_IMPLICIT_DEPENDANT","MISSING_NAME_OPTION_FOR_IIFE_EXPORT","MISSING_NODE_BUILTINS","MISSING_OPTION","MIXED_EXPORTS","MODULE_LEVEL_DIRECTIVE","NAMESPACE_CONFLICT","NO_TRANSFORM_MAP_OR_AST_WITHOUT_CODE","PARSE_ERROR","PLUGIN_ERROR","SHIMMED_EXPORT","SOURCEMAP_BROKEN","SOURCEMAP_ERROR","SYNTHETIC_NAMED_EXPORTS_NEED_NAMESPACE_EXPORT","THIS_IS_UNDEFINED","UNEXPECTED_NAMED_IMPORT","UNKNOWN_OPTION","UNRESOLVED_ENTRY","UNRESOLVED_IMPORT","UNUSED_EXTERNAL_IMPORT","VALIDATION_ERROR","errorAddonNotGenerated","hook","plugin","errorAlreadyClosed","errorAmbiguousExternalNamespaces","binding","reexportingModule","usedModule","ids","reexporter","errorAnonymousPluginCache","errorAssetNotFinalisedForFileName","errorAssetReferenceIdNotFoundForSetSource","assetReferenceId","errorAssetSourceAlreadySet","errorNoAssetSourceSet","assetName","errorBadLoader","errorCannotCallNamespace","errorCannotEmitFromOptionsHook","errorChunkNotGeneratedForFileName","errorChunkInvalid","_ref6","exception","errorProperties","errorCircularDependency","cyclePath","errorCircularReexport","exportName","exporter","errorCyclicCrossChunkReexport","preserveModules","errorDeprecation","deprecation","urlSnippet","errorDuplicatePluginName","errorEmptyChunk","chunkName","errorEval","errorExternalSyntheticExports","errorFileNameConflict","errorFileReferenceIdNotFoundForFilename","errorIllegalIdentifierAsName","errorIllegalImportReassignment","importingId","errorInconsistentImportAssertions","existingAssertions","newAssertions","formatAssertions","_ref7","errorInputHookInOutputPlugin","pluginName","hookName","errorCannotAssignModuleToChunk","moduleId","assignToAlias","currentAlias","errorInvalidExportOptionValue","optionValue","errorIncompatibleExportOptionValue","entryModule","errorInternalIdCannotBeExternal","errorInvalidOption","explanation","errorInvalidAddonPluginHook","errorInvalidFunctionPluginHook","errorInvalidRollupPhaseForAddWatchFile","errorInvalidRollupPhaseForChunkEmission","errorInvalidSetAssetSourceCall","errorInvalidFormatForTopLevelAwait","errorMissingExport","importingModule","isJson","errorMissingGlobalName","externalId","guess","errorImplicitDependantCannotBeExternal","unresolvedId","implicitlyLoadedBefore","errorUnresolvedImplicitDependant","errorImplicitDependantIsNotIncluded","implicitDependencies","dependency","errorMissingNameOptionForIifeExport","errorMissingNameOptionForUmdExport","errorMissingNodeBuiltins","externalBuiltins","errorMissingFileOrDirOption","errorMixedExport","facadeModuleId","errorModuleLevelDirective","directive","errorNamespaceConflict","reexportingModuleId","errorNoTransformMapOrAstWithoutCode","errorParseError","cause","errorPluginError","pluginCode","errorShimmedExport","errorSourcemapBroken","errorConflictingSourcemapSources","errorInvalidSourcemapForError","errorSyntheticNamedExportsNeedNamespaceExport","syntheticNamedExportsOption","errorThisIsUndefined","errorUnexpectedNamedImport","imported","isReexport","importType","errorUnexpectedNamespaceReexport","errorUnknownOption","optionType","unknownOptions","validOptions","errorEntryCannotBeExternal","errorUnresolvedEntry","errorUnresolvedImport","errorUnresolvedImportTreatedAsExternal","errorUnusedExternalImports","importers","errorFailedValidation","warnDeprecation","activeDeprecation","warnDeprecationWithOptions","onwarn","strictDeprecations","warning","RESERVED_NAMES","RESERVED_NAMES$1","illegalCharacters","startsWithDigit","needsEscape","isLegal","makeLegal","letter","toUpperCase","ExternalModule","moduleSideEffects","meta","dynamicImporters","execIndex","exportedVariables","reexported","declarations","mostCommonSuggestion","nameSuggestions","ast","dynamicallyImportedIdResolutions","dynamicallyImportedIds","exportedBindings","exports","hasDefaultExport","hasModuleSideEffects","implicitlyLoadedAfterOneOf","importedIdResolutions","importedIds","isEntry","isExternal","isIncluded","syntheticNamedExports","getVariableForExportName","declaration","externalVariable","warnUnusedImports","unused","_ref8","_ref9","importersSet","importersArray","getDefaultExportFromCjs","x","__esModule","getAugmentedNamespace","f","default","apply","Ctor","Function","bind","k","getOwnPropertyDescriptor","picomatchExports","picomatch$1","v","utils$3","path$1","WIN_SLASH","WIN_NO_SLASH","DOT_LITERAL","PLUS_LITERAL","QMARK_LITERAL","SLASH_LITERAL","ONE_CHAR","QMARK","END_ANCHOR","START_ANCHOR","DOTS_SLASH","NO_DOT","NO_DOTS","NO_DOT_SLASH","NO_DOTS_SLASH","QMARK_NO_DOT","STAR","POSIX_CHARS","WINDOWS_CHARS","POSIX_REGEX_SOURCE$1","alnum","alpha","ascii","blank","cntrl","digit","graph","lower","print","punct","space","upper","word","xdigit","constants$2","MAX_LENGTH","POSIX_REGEX_SOURCE","REGEX_BACKSLASH","REGEX_NON_SPECIAL_CHARS","REGEX_SPECIAL_CHARS","REGEX_SPECIAL_CHARS_BACKREF","REGEX_SPECIAL_CHARS_GLOBAL","REGEX_REMOVE_BACKSLASH","REPLACEMENTS","CHAR_0","CHAR_9","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_LEFT_PARENTHESES","CHAR_RIGHT_PARENTHESES","CHAR_ASTERISK","CHAR_AMPERSAND","CHAR_AT","CHAR_BACKWARD_SLASH","CHAR_CARRIAGE_RETURN","CHAR_CIRCUMFLEX_ACCENT","CHAR_COLON","CHAR_COMMA","CHAR_DOT","CHAR_DOUBLE_QUOTE","CHAR_EQUAL","CHAR_EXCLAMATION_MARK","CHAR_FORM_FEED","CHAR_FORWARD_SLASH","CHAR_GRAVE_ACCENT","CHAR_HASH","CHAR_HYPHEN_MINUS","CHAR_LEFT_ANGLE_BRACKET","CHAR_LEFT_CURLY_BRACE","CHAR_LEFT_SQUARE_BRACKET","CHAR_LINE_FEED","CHAR_NO_BREAK_SPACE","CHAR_PERCENT","CHAR_PLUS","CHAR_QUESTION_MARK","CHAR_RIGHT_ANGLE_BRACKET","CHAR_RIGHT_CURLY_BRACE","CHAR_RIGHT_SQUARE_BRACKET","CHAR_SEMICOLON","CHAR_SINGLE_QUOTE","CHAR_SPACE","CHAR_TAB","CHAR_UNDERSCORE","CHAR_VERTICAL_LINE","CHAR_ZERO_WIDTH_NOBREAK_SPACE","SEP","sep","extglobChars","chars","open","close","globChars","process","platform","isObject","val","isArray","hasRegexChars","isRegexChar","escapeRegex","toPosixSlashes","removeBackslashes","supportsLookbehinds","segs","Number","isWindows","windows","escapeLast","input","lastIdx","removePrefix","prefix","wrapOutput","negated","utils$2","isPathSeparator","depth","token","isPrefix","isGlobstar","scan$1","opts","scanToEnd","parts","slashes","tokens","lastIndex","isBrace","isBracket","isGlob","isExtglob","braceEscaped","backslashes","negatedExtglob","finished","braces","prev","eos","peek","noext","isExtglobChar","nonegate","noparen","glob","maxDepth","prevIndex","scan_1","constants$1","utils$1","expandRange","syntaxError","parse$2","maxLength","len","SyntaxError","bos","capture","PLATFORM_CHARS","EXTGLOB_CHARS","globstar","dot","nodot","qmarkNoDot","star","bash","noextglob","consumed","backtrack","brackets","parens","quotes","extglobs","stack","remaining","consume","negate","count","increment","decrement","tok","extglob","inner","extglobOpen","conditions","extglobClose","rest","extglobStar","includes","expression","fastpaths","esc","repeat","pre","keepQuotes","strictBrackets","nobracket","prevValue","literalBrackets","escaped","nobrace","outputIndex","tokensIndex","brace","dots","arr","toks","t","isGroup","regex","noglobstar","prior","before","isStart","afterStar","after","strictSlashes","suffix","slashDot","parse_1","scan","parse$1","utils","constants","picomatch","returnState","fns","arrayMatcher","isMatch","isState","compileRe","makeRe","isIgnored","ignore","ignoreOpts","onMatch","onResult","matcher","returnObject","onIgnore","matchBase","patterns","parse","p","returnOutput","toRegex","parsed","flags","nocase","err","debug","picomatch_1","pm","extractors","ArrayPattern","param","element","elements","AssignmentPattern","left","Identifier","MemberExpression","ObjectPattern","prop","RestElement","extractAssignedNames","isArray$1","ensureArray$1","normalizePath","getMatcherString","resolutionBase","basePath","createFilter","getMatcher","what","includeMatchers","excludeMatchers","pathId","reservedWords$1","builtins","forbiddenIdentifiers","BROKEN_FLOW_NONE","BROKEN_FLOW_BREAK_CONTINUE","BROKEN_FLOW_ERROR_RETURN_LABEL","createInclusionContext","brokenFlow","includedCallArguments","includedLabels","createHasEffectsContext","accessed","assigned","called","breaks","continues","labels","returnYield","this","instantiated","replacedVariableInits","assembleMemberDescriptions","memberDescriptions","inheritedDescriptions","UNDEFINED_EXPRESSION","UndefinedExpression","returnsUnknown","hasEffectsWhenCalled","returns","UNKNOWN_LITERAL_BOOLEAN","UnknownBoolean","getMemberReturnExpressionWhenCalled","literalBooleanMembers","interaction","hasMemberEffectWhenCalled","returnsBoolean","UNKNOWN_LITERAL_NUMBER","UnknownNumber","literalNumberMembers","returnsNumber","UNKNOWN_LITERAL_STRING","UnknownString","literalStringMembers","returnsString","stringReplace","_ref10","argument1","deoptimizeCache","objectMembers","isPrototypeOf","propertyIsEnumerable","toLocaleString","valueOf","toExponential","toFixed","toPrecision","literalRegExpMembers","anchor","at","big","blink","bold","charAt","codePointAt","fixed","fontcolor","fontsize","italics","link","localeCompare","padEnd","padStart","small","strike","substring","sup","toLocaleLowerCase","toLocaleUpperCase","toLowerCase","trimLeft","trimRight","getLiteralMembersForValue","members","memberName","skipThrough","node","st","_node","_st","_c","base$1","Program","BlockStatement","StaticBlock","stmt","Statement","EmptyStatement","ExpressionStatement","ParenthesizedExpression","ChainExpression","IfStatement","consequent","alternate","LabeledStatement","BreakStatement","ContinueStatement","WithStatement","object","SwitchStatement","discriminant","i$1","list$1","cases","cs","cons","SwitchCase","ReturnStatement","YieldExpression","AwaitExpression","ThrowStatement","SpreadElement","TryStatement","block","handler","finalizer","CatchClause","WhileStatement","DoWhileStatement","ForStatement","ForInStatement","ForOfStatement","right","ForInit","DebuggerStatement","FunctionDeclaration","VariableDeclaration","decl","VariableDeclarator","params","Pattern","VariablePattern","MemberPattern","elt","computed","Expression","ThisExpression","Super","MetaProperty","ArrayExpression","ObjectExpression","FunctionExpression","ArrowFunctionExpression","SequenceExpression","expressions","expr","TemplateLiteral","quasis","quasi","TemplateElement","UnaryExpression","UpdateExpression","BinaryExpression","LogicalExpression","AssignmentExpression","ConditionalExpression","NewExpression","CallExpression","callee","property","ExportNamedDeclaration","ExportDefaultDeclaration","ExportAllDeclaration","exported","ImportDeclaration","specifiers","spec","ImportExpression","ImportSpecifier","ImportDefaultSpecifier","ImportNamespaceSpecifier","PrivateIdentifier","Literal","TaggedTemplateExpression","tag","ClassDeclaration","ClassExpression","Class","superClass","ClassBody","MethodDefinition","PropertyDefinition","Property","ArrowFunctionExpression$1","BinaryExpression$1","BlockStatement$1","CallExpression$1","ChainExpression$1","ConditionalExpression$1","ExpressionStatement$1","Identifier$1","LogicalExpression$1","NewExpression$1","Program$1","Property$1","ReturnStatement$1","SequenceExpression$1","SOURCEMAPPING_URL","whiteSpaceNoNewline","SOURCEMAPPING_URL_RE","ANNOTATION_KEY","INVALID_COMMENT_KEY","handlePureAnnotationsOfNode","annotations","comment","annotationIndex","markPureNode","annotateNode","neitherWithespaceNorBrackets","noWhitespace","annotatedNodes","invalidAnnotation","codeInBetween","doesNotMatchOutsideComment","parentStart","forbiddenChars","nextMatch","charCodeAfterSlash","pureCommentRegex","addAnnotations","comments","esTreeAst","sourceMappingComments","valid","getAndCreateKeys","esTreeNode","INCLUDE_PARAMETERS","NodeBase","parent","parentScope","keepEsTreeNode","deoptimized","createScope","parseNode","initialise","addExportedVariables","_variables","_exportNamesByVariable","child","scope","hasEffects","applyDeoptimizations","hasEffectsAsAssignmentTarget","_checkAccess","assignmentInteraction","includeChildrenRecursively","includeAsAssignmentTarget","_deoptimizeAccess","insertSemicolon","keepEsTreeNodeKeys","getNodeConstructor","render","setAssignedValue","requestTreeshakingPass","recursionTracker","propertyReadSideEffects","treeshake","Method","description","_ref11","mutatesSelfAsArray","_ref12","returnsPrimitive","callsArgs","argumentIndex","METHOD_RETURNS_BOOLEAN","METHOD_RETURNS_STRING","METHOD_RETURNS_NUMBER","METHOD_RETURNS_UNKNOWN","INTEGER_REG_EXP","ObjectEntity","prototypeExpression","immutable","allProperties","deoptimizedPaths","expressionsToBeDeoptimizedByKey","gettersByKey","hasLostTrack","hasUnknownDeoptimizedInteger","hasUnknownDeoptimizedProperty","propertiesAndGettersByKey","propertiesAndSettersByKey","settersByKey","thisParametersToBeDeoptimized","unknownIntegerProps","unmatchableGetters","unmatchablePropertiesAndGetters","unmatchableSetters","buildPropertyMaps","propertiesForKey","values","deoptimizeAllProperties","noAccessors","isDeoptimized","deoptimizeCachedEntities","deoptimizeIntegerProperties","propertiesAndGetters","deoptimizeCachedIntegerEntities","expressionsToBeDeoptimized","subPath","propertiesForExactMatchByKey","relevantPropertiesByKey","relevantUnmatchableProperties","origin","expressionAtPath","getMemberExpressionAndTrackDeopt","getMemberExpression","propertiesAndAccessorsByKey","accessorsByKey","unmatchableAccessors","accessors","accessor","unmatchablePropertiesAndSetters","isInteger","OBJECT_PROTOTYPE_FALLBACK","ObjectPrototypeFallbackExpression","_ref13","_ref14","OBJECT_PROTOTYPE","__proto__","NEW_ARRAY_PROPERTIES","METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_BOOLEAN","METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NUMBER","METHOD_MUTATES_SELF_RETURNS_NEW_ARRAY","ARRAY_PROTOTYPE","METHOD_DEOPTS_SELF_RETURNS_NEW_ARRAY","METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NEW_ARRAY","METHOD_MUTATES_SELF_RETURNS_NUMBER","METHOD_MUTATES_SELF_RETURNS_UNKNOWN","METHOD_DEOPTS_SELF_RETURNS_UNKNOWN","METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_UNKNOWN","METHOD_MUTATES_SELF_RETURNS_SELF","METHOD_CALLS_ARG_MUTATES_SELF_RETURNS_SELF","every","fill","find","findIndex","findLast","findLastIndex","flat","flatMap","reduceRight","reverse","splice","objectEntity","getObjectEntity","hasSpread","variables","exportNamesByVariable","declare","markDeclarationReached","LocalVariable","declarator","calledFromTryStatement","additionalInitializers","deoptimizationTracker","addDeclaration","markInitializersForDeoptimization","consolidateInitializers","initializer","toBase64","outString","currentDigit","getSafeName","usedNames","safeName","Scope$1","Scope","children","_isHoisted","variable","findVariable","_name","ChildScope","accessedOutsideVariables","addAccessedDynamicImport","importExpression","accessedDynamicImports","addAccessedGlobals","globals","accessedGlobalsByScope","accessedGlobals","addNamespaceMemberAccess","addReturnExpression","addUsedOutsideNames","deconflict","inlineNamespace","findLexicalBoundary","knownVariable","ParameterScope","hasRest","hoistedBodyVarScope","addParameterDeclaration","addParameterVariables","parameterList","parameter","argumentIncluded","restParameter","checkedArgument","parameterVariables","ReturnValueScope","returnExpression","returnExpressions","getReturnExpression","updateReturnExpression","is_reference","local","PureFunctionKey","getPureFunctions","_ref15","pureFunctions","functionName","manualPureFunctions","currentFunctions","ValueProperties","getTruthyLiteralValue","returnFalse","returnTrue","PURE","getLiteralValue","IMPURE","O","PF","MUTATES_ARG_WITHOUT_ACCESSOR","_ref16","C","PC","ARRAY_TYPE","of","INTL_MEMBER","supportedLocalesOf","knownGlobals","globalThis","self","ArrayBuffer","isView","Atomics","BigInt","BigInt64Array","BigUint64Array","DataView","Date","now","UTC","decodeURI","decodeURIComponent","encodeURI","escape","eval","EvalError","Float32Array","Float64Array","Int16Array","Int8Array","isFinite","isNaN","abs","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","clz32","cos","cosh","exp","expm1","floor","fround","hypot","imul","log","log10","log1p","log2","pow","random","round","sign","sin","sinh","sqrt","tan","tanh","trunc","NaN","isSafeInteger","parseFloat","parseInt","getOwnPropertyDescriptors","getOwnPropertyNames","getOwnPropertySymbols","getPrototypeOf","hasOwn","is","isExtensible","isFrozen","isSealed","fromEntries","Promise","all","allSettled","any","race","reject","Proxy","RangeError","ReferenceError","Reflect","SharedArrayBuffer","fromCodePoint","for","keyFor","toStringTag","Uint16Array","Uint32Array","Uint8ClampedArray","URIError","WeakMap","WeakSet","clearInterval","clearTimeout","Intl","Collator","DateTimeFormat","ListFormat","NumberFormat","PluralRules","RelativeTimeFormat","setInterval","setTimeout","TextEncoder","URLSearchParams","AbortController","AbortSignal","addEventListener","alert","AnalyserNode","Animation","AnimationEvent","applicationCache","ApplicationCache","ApplicationCacheErrorEvent","atob","Attr","Audio","AudioBuffer","AudioBufferSourceNode","AudioContext","AudioDestinationNode","AudioListener","AudioNode","AudioParam","AudioProcessingEvent","AudioScheduledSourceNode","AudioWorkletNode","BarProp","BaseAudioContext","BatteryManager","BeforeUnloadEvent","BiquadFilterNode","Blob","BlobEvent","blur","BroadcastChannel","ByteLengthQueuingStrategy","Cache","caches","CacheStorage","cancelAnimationFrame","cancelIdleCallback","CanvasCaptureMediaStreamTrack","CanvasGradient","CanvasPattern","CanvasRenderingContext2D","ChannelMergerNode","ChannelSplitterNode","CharacterData","clientInformation","ClipboardEvent","closed","CloseEvent","Comment","CompositionEvent","confirm","ConstantSourceNode","ConvolverNode","CountQueuingStrategy","createImageBitmap","Credential","CredentialsContainer","crypto","Crypto","CryptoKey","CSS","CSSConditionRule","CSSFontFaceRule","CSSGroupingRule","CSSImportRule","CSSKeyframeRule","CSSKeyframesRule","CSSMediaRule","CSSNamespaceRule","CSSPageRule","CSSRule","CSSRuleList","CSSStyleDeclaration","CSSStyleRule","CSSStyleSheet","CSSSupportsRule","CustomElementRegistry","customElements","CustomEvent","DataTransfer","DataTransferItem","DataTransferItemList","defaultstatus","defaultStatus","DelayNode","DeviceMotionEvent","DeviceOrientationEvent","devicePixelRatio","dispatchEvent","document","Document","DocumentFragment","DocumentType","DOMError","DOMException","DOMImplementation","DOMMatrix","DOMMatrixReadOnly","DOMParser","DOMPoint","DOMPointReadOnly","DOMQuad","DOMRect","DOMRectReadOnly","DOMStringList","DOMStringMap","DOMTokenList","DragEvent","DynamicsCompressorNode","Element","ErrorEvent","Event","EventSource","EventTarget","external","fetch","File","FileList","FileReader","focus","FocusEvent","FontFace","FontFaceSetLoadEvent","FormData","frames","GainNode","Gamepad","GamepadButton","GamepadEvent","getComputedStyle","getSelection","HashChangeEvent","Headers","history","History","HTMLAllCollection","HTMLAnchorElement","HTMLAreaElement","HTMLAudioElement","HTMLBaseElement","HTMLBodyElement","HTMLBRElement","HTMLButtonElement","HTMLCanvasElement","HTMLCollection","HTMLContentElement","HTMLDataElement","HTMLDataListElement","HTMLDetailsElement","HTMLDialogElement","HTMLDirectoryElement","HTMLDivElement","HTMLDListElement","HTMLDocument","HTMLElement","HTMLEmbedElement","HTMLFieldSetElement","HTMLFontElement","HTMLFormControlsCollection","HTMLFormElement","HTMLFrameElement","HTMLFrameSetElement","HTMLHeadElement","HTMLHeadingElement","HTMLHRElement","HTMLHtmlElement","HTMLIFrameElement","HTMLImageElement","HTMLInputElement","HTMLLabelElement","HTMLLegendElement","HTMLLIElement","HTMLLinkElement","HTMLMapElement","HTMLMarqueeElement","HTMLMediaElement","HTMLMenuElement","HTMLMetaElement","HTMLMeterElement","HTMLModElement","HTMLObjectElement","HTMLOListElement","HTMLOptGroupElement","HTMLOptionElement","HTMLOptionsCollection","HTMLOutputElement","HTMLParagraphElement","HTMLParamElement","HTMLPictureElement","HTMLPreElement","HTMLProgressElement","HTMLQuoteElement","HTMLScriptElement","HTMLSelectElement","HTMLShadowElement","HTMLSlotElement","HTMLSourceElement","HTMLSpanElement","HTMLStyleElement","HTMLTableCaptionElement","HTMLTableCellElement","HTMLTableColElement","HTMLTableElement","HTMLTableRowElement","HTMLTableSectionElement","HTMLTemplateElement","HTMLTextAreaElement","HTMLTimeElement","HTMLTitleElement","HTMLTrackElement","HTMLUListElement","HTMLUnknownElement","HTMLVideoElement","IDBCursor","IDBCursorWithValue","IDBDatabase","IDBFactory","IDBIndex","IDBKeyRange","IDBObjectStore","IDBOpenDBRequest","IDBRequest","IDBTransaction","IDBVersionChangeEvent","IdleDeadline","IIRFilterNode","Image","ImageBitmap","ImageBitmapRenderingContext","ImageCapture","ImageData","indexedDB","innerHeight","innerWidth","InputEvent","IntersectionObserver","IntersectionObserverEntry","isSecureContext","KeyboardEvent","KeyframeEffect","localStorage","location","Location","locationbar","matchMedia","MediaDeviceInfo","MediaDevices","MediaElementAudioSourceNode","MediaEncryptedEvent","MediaError","MediaKeyMessageEvent","MediaKeySession","MediaKeyStatusMap","MediaKeySystemAccess","MediaList","MediaQueryList","MediaQueryListEvent","MediaRecorder","MediaSettingsRange","MediaSource","MediaStream","MediaStreamAudioDestinationNode","MediaStreamAudioSourceNode","MediaStreamEvent","MediaStreamTrack","MediaStreamTrackEvent","menubar","MessageChannel","MessageEvent","MessagePort","MIDIAccess","MIDIConnectionEvent","MIDIInput","MIDIInputMap","MIDIMessageEvent","MIDIOutput","MIDIOutputMap","MIDIPort","MimeType","MimeTypeArray","MouseEvent","moveBy","moveTo","MutationEvent","MutationObserver","MutationRecord","NamedNodeMap","NavigationPreloadManager","navigator","Navigator","NetworkInformation","Node","NodeFilter","NodeIterator","NodeList","Notification","OfflineAudioCompletionEvent","OfflineAudioContext","offscreenBuffering","OffscreenCanvas","openDatabase","Option","OscillatorNode","outerHeight","outerWidth","PageTransitionEvent","pageXOffset","pageYOffset","PannerNode","Path2D","PaymentAddress","PaymentRequest","PaymentRequestUpdateEvent","PaymentResponse","Performance","PerformanceEntry","PerformanceLongTaskTiming","PerformanceMark","PerformanceMeasure","PerformanceNavigation","PerformanceNavigationTiming","PerformanceObserver","PerformanceObserverEntryList","PerformancePaintTiming","PerformanceResourceTiming","PerformanceTiming","PeriodicWave","Permissions","PermissionStatus","personalbar","PhotoCapabilities","Plugin","PluginArray","PointerEvent","PopStateEvent","postMessage","Presentation","PresentationAvailability","PresentationConnection","PresentationConnectionAvailableEvent","PresentationConnectionCloseEvent","PresentationConnectionList","PresentationReceiver","PresentationRequest","ProcessingInstruction","ProgressEvent","PromiseRejectionEvent","prompt","PushManager","PushSubscription","PushSubscriptionOptions","queueMicrotask","RadioNodeList","Range","ReadableStream","RemotePlayback","removeEventListener","Request","requestAnimationFrame","requestIdleCallback","resizeBy","ResizeObserver","ResizeObserverEntry","resizeTo","Response","RTCCertificate","RTCDataChannel","RTCDataChannelEvent","RTCDtlsTransport","RTCIceCandidate","RTCIceTransport","RTCPeerConnection","RTCPeerConnectionIceEvent","RTCRtpReceiver","RTCRtpSender","RTCSctpTransport","RTCSessionDescription","RTCStatsReport","RTCTrackEvent","screen","Screen","screenLeft","ScreenOrientation","screenTop","screenX","screenY","ScriptProcessorNode","scroll","scrollbars","scrollBy","scrollTo","scrollX","scrollY","SecurityPolicyViolationEvent","Selection","ServiceWorker","ServiceWorkerContainer","ServiceWorkerRegistration","sessionStorage","ShadowRoot","SharedWorker","SourceBuffer","SourceBufferList","speechSynthesis","SpeechSynthesisEvent","SpeechSynthesisUtterance","StaticRange","status","statusbar","StereoPannerNode","stop","Storage","StorageEvent","StorageManager","styleMedia","StyleSheet","StyleSheetList","SubtleCrypto","SVGAElement","SVGAngle","SVGAnimatedAngle","SVGAnimatedBoolean","SVGAnimatedEnumeration","SVGAnimatedInteger","SVGAnimatedLength","SVGAnimatedLengthList","SVGAnimatedNumber","SVGAnimatedNumberList","SVGAnimatedPreserveAspectRatio","SVGAnimatedRect","SVGAnimatedString","SVGAnimatedTransformList","SVGAnimateElement","SVGAnimateMotionElement","SVGAnimateTransformElement","SVGAnimationElement","SVGCircleElement","SVGClipPathElement","SVGComponentTransferFunctionElement","SVGDefsElement","SVGDescElement","SVGDiscardElement","SVGElement","SVGEllipseElement","SVGFEBlendElement","SVGFEColorMatrixElement","SVGFEComponentTransferElement","SVGFECompositeElement","SVGFEConvolveMatrixElement","SVGFEDiffuseLightingElement","SVGFEDisplacementMapElement","SVGFEDistantLightElement","SVGFEDropShadowElement","SVGFEFloodElement","SVGFEFuncAElement","SVGFEFuncBElement","SVGFEFuncGElement","SVGFEFuncRElement","SVGFEGaussianBlurElement","SVGFEImageElement","SVGFEMergeElement","SVGFEMergeNodeElement","SVGFEMorphologyElement","SVGFEOffsetElement","SVGFEPointLightElement","SVGFESpecularLightingElement","SVGFESpotLightElement","SVGFETileElement","SVGFETurbulenceElement","SVGFilterElement","SVGForeignObjectElement","SVGGElement","SVGGeometryElement","SVGGradientElement","SVGGraphicsElement","SVGImageElement","SVGLength","SVGLengthList","SVGLinearGradientElement","SVGLineElement","SVGMarkerElement","SVGMaskElement","SVGMatrix","SVGMetadataElement","SVGMPathElement","SVGNumber","SVGNumberList","SVGPathElement","SVGPatternElement","SVGPoint","SVGPointList","SVGPolygonElement","SVGPolylineElement","SVGPreserveAspectRatio","SVGRadialGradientElement","SVGRect","SVGRectElement","SVGScriptElement","SVGSetElement","SVGStopElement","SVGStringList","SVGStyleElement","SVGSVGElement","SVGSwitchElement","SVGSymbolElement","SVGTextContentElement","SVGTextElement","SVGTextPathElement","SVGTextPositioningElement","SVGTitleElement","SVGTransform","SVGTransformList","SVGTSpanElement","SVGUnitTypes","SVGUseElement","SVGViewElement","TaskAttributionTiming","Text","TextEvent","TextMetrics","TextTrack","TextTrackCue","TextTrackCueList","TextTrackList","TimeRanges","toolbar","top","Touch","TouchEvent","TouchList","TrackEvent","TransitionEvent","TreeWalker","UIEvent","ValidityState","visualViewport","VisualViewport","VTTCue","WaveShaperNode","WebAssembly","WebGL2RenderingContext","WebGLActiveInfo","WebGLBuffer","WebGLContextEvent","WebGLFramebuffer","WebGLProgram","WebGLQuery","WebGLRenderbuffer","WebGLRenderingContext","WebGLSampler","WebGLShader","WebGLShaderPrecisionFormat","WebGLSync","WebGLTexture","WebGLTransformFeedback","WebGLUniformLocation","WebGLVertexArrayObject","WebSocket","WheelEvent","Window","Worker","WritableStream","XMLDocument","XMLHttpRequest","XMLHttpRequestEventTarget","XMLHttpRequestUpload","XMLSerializer","XPathEvaluator","XPathExpression","XPathResult","XSLTProcessor","getGlobalAtPath","currentGlobal","GlobalVariable","globalAtPath","tdzVariableKinds","class","const","let","var","isTDZAccess","correctVarValueBeforeDeclaration","disallowImportReassignment","getVariableRespectingTDZ","isPure","isPureFunction","isPossibleTDZ","unknownGlobalSideEffects","includeVariableInModule","decl_id","closestParentFunctionOrProgram","_ref17","renderedParentType","isCalleeOfRenderedParent","isShorthandProperty","currentPureFunction","treeshakeNode","annotation","removeAnnotations","NO_SEMICOLON","isNoStatement","findFirstOccurrenceOutsideComment","searchString","searchPos","NON_WHITESPACE","findNonWhiteSpace","findFirstLineBreakOutsideComment","lineBreakPos","renderStatementList","statements","currentNode","currentNodeStart","currentNodeNeedsBoundaries","nextNodeStart","nextNode","nextNodeNeedsBoundaries","needsBoundaries","nextIndex","getCommaSeparatedNodesWithBoundaries","nodes","splitUpNodes","contentEnd","removeLineBreaks","removeStart","removeEnd","BlockScope","isHoisted","directlyIncluded","addImplicitReturnExpressionToScope","lastStatement","preventChildBlockScope","deoptimizeBody","firstBodyStatement","declarationInit","FunctionBase","deoptimizedReturn","async","getSystemExportStatement","_ref18","modifier","fields","renderSystemExportExpression","exportedVariable","expressionStart","expressionEnd","_ref19","renderSystemExportFunction","needsParens","getDirectReturnIifeLeft","needsArrowReturnParens","needsWrappedFunction","renderSystemExportSequenceAfterExpression","renderSystemExportSequenceBeforeExpression","operator","preventASI","renderedSurroundingElement","inclusionStart","exportNames","systemPatternExports","ArgumentsVariable","_ref20","ThisVariable","entitiesToBeDeoptimized","thisDeoptimizationList","thisDeoptimizations","addEntityToBeDeoptimized","thisDeoptimization","replacedVariableInit","FunctionScope","argumentsVariable","thisVariable","FunctionNode","constructedEntity","thisInit","hasArguments","checkTopLevelAwait","usesTopLevelAwait","binaryOperators","!=","!==","%","&","*","**","+","-","/","<","<<","<=","==","===",">",">=",">>",">>>","^","|","leftValue","rightValue","operatorFunction","_ref21","label","renderCallArguments","lastIncludedIndex","sticky","MAX_PATH_DEPTH","getResolvablePropertyKey","memberExpression","getResolvableComputedPropertyKey","propertyKey","getPathIfNotComputed","nextPathKey","parentPath","getStringFromPath","pathString","assignmentDeoptimized","bound","isUndefined","baseVariable","resolvedVariable","resolveNamespaceVariables","disallowNamespaceReassignment","getPropertyKey","hasAccessEffect","checkAccess","applyAssignmentDeoptimization","includeProperties","deoptimizeAccess","accessInteraction","isSkippedAsOptional","optional","astContext","traceExport","CallExpressionBase","deoptimizableDependentExpressions","CatchScope","existingParameter","ClassBodyScope","classNode","instanceScope","definition","static","MethodBase","accessedValue","getAccessedValue","ObjectMember","ClassNode","initEffect","classConstructor","method","staticProperties","dynamicMethods","definitionKind","keyValue","renderedVariable","_variable","accessedVariable","MultiExpression","isBranchResolutionAnalysed","usedBranch","unusedBranch","getUsedBranch","colonPos","testValue","asSingleStatement","addExport","nodeRenderOptions","getDeclarationStart","getIdInsertPosition","declarationKeyword","endMarker","declarationEnd","generatorStarPos","declarationName","addExportDefaultDeclaration","getModuleName","declarationStart","renderNamedDeclaration","getOriginalVariable","renderVariableDeclaration","needsId","_ref22","cnst","hasTrailingSemicolon","systemExportNames","ExportSpecifier","TrackingScope","hoistedDeclarations","unset","getTestValue","consequentBrokenFlow","includeRecursively","includeUnknownTest","includeKnownTest","consequentScope","alternateScope","includesIfElse","noTreeshake","shouldKeepAlternateBranch","renderHoistedDeclarations","hoistedVariables","parentType","needsBraces","currentParent","ImportAttribute","addImport","INTEROP_DEFAULT_VARIABLE","INTEROP_DEFAULT_COMPAT_VARIABLE","INTEROP_NAMESPACE_VARIABLE","INTEROP_NAMESPACE_COMPAT_VARIABLE","INTEROP_NAMESPACE_DEFAULT_VARIABLE","INTEROP_NAMESPACE_DEFAULT_ONLY_VARIABLE","MERGE_NAMESPACES_VARIABLE","defaultInteropHelpersByInteropType","auto","compat","defaultOnly","esModule","isDefaultAProperty","interopType","externalLiveBindings","namespaceInteropHelpersByInteropType","canDefaultBeTakenFromNamespace","getHelpersBlock","additionalHelpers","liveBindings","namespaceToStringTag","usedHelpers","HELPER_NAMES","HELPER_GENERATORS","_t","getDirectReturnFunction","functionReturn","getIsCompatNamespace","getDefaultLiveBinding","getDefaultStatic","createNamespaceObject","_liveBindings","getFrozen","getWithToStringTag","useForEach","loopOverNamespaces","copyOwnPropertyLiveBinding","copyPropertyLiveBinding","copyPropertyStatic","_ref23","_ref24","_ref25","s","copyProperty","copyNonDefaultOwnPropertyLiveBinding","getToStringTagValue","loopOverKeys","allowVariableLoopVariable","_ref26","getFunctionIntro","isAsync","_ref27","_ref28","_ref29","_ref30","fragment","_ref31","mechanism","namespaceExportName","resolution","resolutionString","includeDynamicImport","addDynamicImport","setExternalResolution","exportMode","pluginDriver","accessedImportGlobals","helper","getDynamicImportMechanismAndHelper","setInternalResolution","_ref32","_ref33","compact","dynamicImportFunction","dynamicImportInCjs","generatedCode","arrowFunctions","interop","hookFirstSync","customResolution","targetModuleId","hasDynamicTarget","getInteropHelper","functionLeft","functionRight","resolveLeft","resolveRight","resolveNamespace","handlerLeft","handlerRight","amd","cjs","system","operatorPos","removePos","FILE_PREFIX","IMPORT","metaProperty","preliminaryChunkId","referenceId","getReferencedFileName","outputPluginDriver","_ref34","addImportMeta","_ref35","chunkId","relativeUrlMechanisms","importMetaMechanisms","setResolution","accessedFileUrlGlobals","accessedMetaUrlGlobals","es","iife","umd","getResolveUrl","getRelativeUrlFromDocument","getGenericImportMetaMechanism","getUrl","_ref36","urlMechanism","getFileUrlFromFullPath","getFileUrlFromRelativePath","getUrlFromDocument","_ref37","_ref38","getOriginalLocation","sourcemapChain","filteredSourcemapChain","sourcemap","traceSourcemap","filteredLine","lastSegment","hasCachedEffect","hasLoggedEffect","hasCachedEffects","experimentalLogSideEffects","originalColumn","originalLine","originalCode","shorthand","lastExpression","includedNodes","lastSeparatorPos","lastNode","testEnd","consequentStart","minBrokenFlow","switchCase","defaultCase","isCaseIncluded","caseIndex","hasEffectsContext","cooked","UndefinedVariable","ExportDefaultVariable","exportDefaultDeclaration","hasId","originalId","originalVariable","getAssignedVariableName","getDirectOriginalVariable","currentVariable","checkedVariables","ModuleScope","traceVariable","alias","moduleContext","includedLabelsAfterBlock","tryCatchDeoptimization","size","unaryOperators","typeof","void","argumentValue","_ref39","UnknownNode","_ref40","isReassignedExportsMember","areAllDeclarationsIncludedAndNotExported","declareDeclarator","renderReplacedDeclarations","renderDeclarationEnd","separatorString","actualContentEnd","renderedContentEnd","separatedNodes","isInDeclaration","hasRenderedContent","leadingString","nextSeparatorString","aggregatedSystemExports","singleSystemExport","gatherSystemExportsAndGetSingleExport","renderId","nodeConstructors","MISSING_EXPORT_SHIM_VARIABLE","ExportShimVariable","needsExportShim","NamespaceVariable","memberVariables","mergedNamespaces","referencedEarly","references","getMemberVariables","sortedExports","getExports","getReexports","memberVariable","includeAllExports","prepare","renderBlock","_ref41","assignmentArguments","renderFirst","setMergedNamespaces","moduleExecIndex","getModuleExecIndex","SyntheticNamedExportVariable","syntheticNamespace","getBaseVariable","BuildPhase","getId","getAssertionsFromImportExpression","assertProperty","assertFields","getAssertionsFromImportExportDeclaration","assertion","doAssertionsDiffer","assertionA","assertionB","keysA","NOOP","timers","getPersistedLabel","level","timeStartImpl","startMemory","memoryUsage","heapUsed","startTime","timer","memory","time","totalMemory","timeEndImpl","currentMemory","getTimings","newTimings","timeStart","timeEnd","TIMED_PLUGIN_HOOKS","getPluginWithTimers","timerLabel","_len","_key","hookFunction","initialiseTimers","inputOptions","perf","plugins","markModuleAndImpureDependenciesAsExecuted","baseModule","isExecuted","modules","visitedModules","dependencies","MISSING_EXPORT_SHIM_DESCRIPTION","localName","getVariableForExportNameRecursive","target","importerForSideEffects","isExportAllSearch","searchedNamesAndModules","searchedModules","getAndExtendSideEffectModules","sideEffectModules","sideEffectDependenciesByVariable","referencedVariables","originalSideEffects","Module","alternativeReexportModules","chunkFileNames","chunkNames","cycles","dynamicDependencies","dynamicImports","implicitlyLoadedAfter","importDescriptions","importMetas","importedFromNotTreeshaken","includedDynamicImporters","includedImports","isUserDefinedEntryPoint","sourcesWithAssertions","allExportNames","exportAllModules","exportAllSources","exportShimVariable","namespaceReexportsByName","reexportDescriptions","relevantDependencies","syntheticExports","transformDependencies","transitiveReexports","excludeFromSourcemap","preserveSignature","preserveEntrySignatures","_ref42","resolvedIds","_ref43","exportBindings","phase","GENERATE","extension","bindReferences","addLocationToLogProps","getAllExportNames","getDependenciesToBeIncluded","necessaryDependencies","alwaysCheckedDependencies","dependencyVariables","namespace","sideEffectDependencies","addRelevantSideEffectDependencies","getExportNamesByVariable","tracedVariable","existingExportNames","reexports","getRenderedExports","renderedExports","removedExports","getSyntheticNamespace","onlyExplicit","modulesById","reexportDeclaration","setAlternativeExporterIfCyclic","exportDeclaration","foundNamespaceReexport","getVariableFromNamespaceReexports","shimMissingExports","shimMissingExport","includeNamespaceMembers","needsTreeshakingPass","includeVariable","includeAndGetAdditionalMergedNamespaces","includeAllInBundle","linkImports","addModulesToImportDescriptions","externalExportAllModules","setSource","_ref44","customTransformCache","originalSourcemap","transformFiles","moduleOptions","updateOptions","moduleAst","tryParse","cache","astLru","parsedAst","toJSON","localVariable","importDescription","otherModule","_ref45","exportedName","specifier","error_","handledDependencies","addSideEffectDependencies","possibleDependencies","parsedAssertions","foundSyntheticDeclaration","foundInternalDeclarations","foundExternalDeclarations","indirectExternal","copyNameToModulesMap","foundDeclarationList","usedDeclaration","_ref46","externalNamespaces","syntheticNamespaces","dynamicImport","variableModule","contextParse","exporterCycles","importerCycles","cycleSymbol","_ref47","removeJsExtension","getCompleteAmdId","autoId","getExportBlock$1","namedExportsMode","getSingleDefaultExport","exportBlock","importPath","isChunk","depNamedExportsMode","importName","getReexportedImportName","needsLiveBinding","lhs","rhs","copyPropertyIfNecessary","getDefineProperty","moduleVariableName","moduleInterop","getEsModuleValue","getNamespaceMarkers","hasNamedExports","addEsModule","addNamespaceToStringTag","_ref48","_ref49","getInteropBlock","neededInteropHelpers","interopStatements","addInteropStatement","helperVariableName","dependencyVariableName","imports","hasDefault","hasNamespace","addJsExtension","updateExtensionForRelativeAmdId","forceJsExtensionForImports","_staticExports","_static","require$$0","builtinModules","nodeBuiltins","warnOnBuiltins","_ref50","_ref51","_ref52","hasExports","isEntryFacade","isModuleFacade","strict","deps","getNonArrowFunctionIntro","completeAmdId","defineParameters","useStrict","namespaceMarkers","define","_ref53","_ref54","importBlock","getImportBlock$1","interopBlock","_ref55","definingVariable","_ref56","_ref57","getImportBlock","getExportBlock","_ref58","pathWithAssertion","defaultImport","starImport","importedNames","starExport","namespaceReexports","namedReexports","_ref59","keypath","setupNamespace","root","_ref60","propertyPath","part","assignToDeepVariable","deepName","assignment","_ref61","deepAssignment","trimEmptyImports","_ref62","_ref63","extend","isNamespaced","useVariableAssignment","dep","globalName","wrapperIntro","wrapperOutro","_ref64","_ref65","systemNullSetters","importBindings","setters","starExcludes","analyzeDependencies","registeredName","wrapperParameters","wrapperStart","_ref66","getStarExcludesBlock","getImportBindingsBlock","setter","wrapperEnd","getHoistedExportsBlock","getSyntheticExportsBlock","getMissingExportsBlock","_ref67","reexportedNames","hasStarReexport","exportMapping","getStarExcludes","_ref68","expt","reexport","_ref69","_ref70","getExportsBlock","hoisted","_ref71","_ref72","globalProperty","globalVariable","safeAccess","_ref73","_ref74","_ref75","noConflict","factoryVariable","amdDeps","cjsDeps","trimmedImports","globalDeps","factoryParameters","amdParameters","cjsExport","iifeExport","noConflictExportsVariable","factory","iifeNeedsGlobal","globalArgument","iifeStart","iifeEnd","cjsIntro","finalisers","concatSeparator","concatDblSeparator","createAddons","banner","footer","hookReduceValue","DECONFLICT_IMPORTED_VARIABLES_BY_FORMAT","deconflictImportsOther","deconflictImportsEsmOrSystem","deconflictChunk","dependenciesToBeDeconflicted","chunkByModule","externalChunkByModule","includedNamespaces","reversedModules","deconflictTopLevelVariables","_interop","_externalLiveBindings","_ref76","_ref77","deconflictedDefault","deconflictedNamespace","externalModule","getVariableExportName","assignExportsToMangledNames","exportsByName","assignExportsToNames","getExportMode","_ref78","exportKeys","getExportNames","guessIndentString","numberSpaces","getStaticDependencies","orderedModules","staticDependencyBlocks","modulePos","staticDependencies","addStaticDependencies","handledModules","dependencyChunk","hashPlaceholderLeft","hashPlaceholderRight","hashPlaceholderOverhead","maxHashSize","defaultHashSize","getHashPlaceholderGenerator","optionName","hashSize","placeholder","REPLACER_REGEX","replacePlaceholders","hashesByPlaceholder","replaceSinglePlaceholder","replacePlaceholdersWithDefaultAndGetContainedPlaceholders","placeholders","containedPlaceholders","transformedCode","lowercaseBundleKeys","FILE_PLACEHOLDER","getOutputBundle","outputBundleBase","reservedLowercaseBundleKeys","deleteProperty","removeUnreferencedAssets","outputBundle","unreferencedAssets","bundleEntries","asset","needsCodeReference","referencedFile","referencedFiles","renderNamePattern","patternName","replacements","_match","makeUnique","_ref79","uniqueName","uniqueIndex","NON_ASSET_EXTENSIONS","getGlobalName","outputOptions","unsetOptions","facadeChunkByModule","manualChunkAlias","getPlaceholder","entryModules","facadeModule","dynamicEntryModules","dynamicName","implicitEntryModules","includedDynamicImports","includedReexportsByModule","needsExportsShim","preRenderedChunkInfo","preliminaryFileName","renderedChunkInfo","renderedDependencies","renderedModules","sortedExportNames","strictFacade","chunkModules","generateVariableName","generateFacade","facadedModule","facadeName","assignFacadeName","ensureReexportsAreAvailableForModule","canModuleBeFacade","exposedVariables","moduleExportNamesByVariable","exposedVariable","finalizeChunk","getRenderedChunkInfo","finalize","importedBindings","_ref80","bindings","generateExports","remainingExports","minifyInternalExports","generateFacades","facades","_ref81","requiredFacades","_ref82","isUserDefined","_ref83","needsStrictFacade","getChunkNameFromModule","addNecessaryImportsForFacades","getChunkName","sanitizeFileName","getFallbackChunkName","getPreliminaryFileName","hashPlaceholder","entryFileNames","getPreRenderedChunkInfo","hash","getDynamicDependencies","resolveFileName","getImportedBindingsPerDependency","getRenderedDependencies","getReferencedFiles","addImplicitlyLoadedBeforeFromModule","setUpChunkImportsAndExportsForModule","hoistTransitiveImports","inlineChunkDependencies","renderedSource","usedModules","renderModules","getChunkExportDeclarations","renderedDependence","_ref84","_ref85","_ref86","preservePath","getPreserveModulesChunkNameFromModule","checkCircularDependencyImport","exportChunk","alternativeReexportModule","exportingChunk","includedReexports","isSynthetic","importedVariable","exportingModule","moduleForNaming","chunkDep","importedByReexported","_ref87","isImported","_ref88","getDependenciesToBeDeconflicted","addNonNamespacesAndInteropHelpers","addDependenciesWithoutBindings","getIncludedDynamicImports","resolvedDynamicImport","facadeChunk","externalChunk","getDynamicImportStringAndAssertions","getImportSpecifiers","importsByDependency","isDynamicEntry","isImplicitEntry","moduleIds","_ref89","predefinedChunkName","getPredefinedChunkNameFromModule","preserveModulesRoot","sanitizedId","QUERY_HASH_REGEX","extensionName","idWithoutExtension","getReexportSpecifiers","reexportSpecifiers","importSpecifiers","setDynamicImportResolutions","setImportMetaResolutions","setIdentifierRenderResolutions","hoistedSource","renderedModuleSources","renderOptions","renderedLength","rendered","accessedGlobalVariables","originalLength","exportVariable","importMeta","moduleImports","_ref90","importedBindingsPerDependency","concatLazy","iterables","iterable","getChunkAssignments","manualChunkAliasByEntry","minChunkSize","chunkDefinitions","modulesInManualChunks","getChunkDefinitionsFromManualChunks","allEntries","dependentEntriesByModule","dynamicallyDependentEntriesByDynamicEntry","dynamicImportsByEntry","analyzeModuleGraph","initialChunks","getChunksBySignature","getModulesWithDependentEntries","removeUnnecessaryDependentEntries","createChunks","manualChunkModulesByAlias","entry","addStaticDependenciesToManualChunk","manualChunkModules","modulesToHandle","dynamicImportModulesByEntry","allEntriesSet","entryIndex","currentEntry","dynamicImportsForCurrentEntry","dynamicEntries","getDynamicEntries","getDynamicallyDependentEntriesByDynamicEntry","entryIndexByModule","dynamicImportModules","dynamicEntry","dynamicEntryIndex","dynamicallyDependentEntries","modulesWithDependentEntries","_a","dependentEntries","chunkSignature","chunks","staticDependenciesPerEntry","alreadyLoadedChunksPerEntry","_entry","chunkMask","updatedDynamicallyDependentEntriesByDynamicEntry","updatedDynamicallyDependentEntries","previousLoadedModules","newLoadedModules","chunkModulesBySignature","_ref91","getOptimizedChunks","_ref92","numberOfEntries","chunkPartition","getPartitionedChunks","mergeChunks","smallChunks","bigChunks","sideEffectsByEntry","signature","chunkDescription","correlatedSideEffects","dependentChunks","pure","sideEffects","sortChunksAndAddDependenciesAndEffects","chunkLists","compareChunkSize","firstEntry","entryEffects","sideEffect","_ref93","_ref94","sizeA","sizeB","allowArbitraryMerges","mergedChunk","closestChunk","closestChunkDistance","targetChunk","onlySubsetMerge","distance","getChunkEntryDistance","isValidMerge","getChunksInPartition","dependentChunk","hasTransitiveDependencyOrNonCorrelatedSideEffect","checkSideEffects","chunksToCheck","_ref95","_ref96","enforceSubest","sourceEntries","targetEntries","commondir","files","commonSegments","pathSegements","compareExecIndex","unitA","unitB","sortByExecutionOrder","units","analyseModuleExecution","nextExecIndex","cyclePaths","analysedModules","parents","analyseModule","getCyclePath","nextModule","getGenerateCodeSnippets","_ref97","constBindings","objectShorthand","reservedNamesAsProps","_ref98","_ref99","singleParameter","asyncString","_ref100","isValidPropertyName","validPropertyName","returned","_ref101","wrapIfNeeded","_ref102","_ref103","needsQuotes","Source","isOriginal","traceSegment","Link","traceMappings","sourceIndexMap","nameIndexMap","tracedLine","traced","tracedSegment","segments","searchStart","searchEnd","getLinkMap","linkMap","getCollapsedSourcemap","directory","sourceRoot","baseSources","collapseSourcemaps","bundleSourcemapChain","excludeContent","moduleSources","collapseSourcemap","decodedSourcemap","renderChunks","reserveEntryChunksInBundle","renderedChunks","chunkGraph","getChunkGraph","nonHashedChunksWithPlaceholders","renderedChunksByPlaceholder","hashDependenciesByPlaceholder","transformChunksAndGenerateContentHashes","generateFinalHashes","addChunksToBundle","transformChunk","hookReduceArg0","missing","dir","sourcemapExcludeSources","sourcemapFile","sourcemapPathTransform","sourcemapIgnoreList","resultingFile","decodedMap","sourcesIndex","sourcePath","sourcemapPath","ignoreList","_ref104","transformedChunk","hashAugmentation","hookReduceValueSync","augmentation","pluginHash","contentHash","digest","hashDependencyPlaceholders","dependencyPlaceholder","containedPlaceholder","finalFileName","finalHash","updatedCode","emitSourceMapAndGetComment","_ref105","sourcemapBaseUrl","sourcemapFileName","emitFile","generate","isWrite","setOutputBundle","hookParallel","getHashPlaceholder","generateChunks","validateOptionsForMultiChunkOutput","setChunkInformation","hookSeq","finaliseAssets","addManualChunks","manualChunks","chunkEntries","_ref106","moduleLoader","addAdditionalModules","addModuleToManualChunk","assignManualChunks","getManualChunk","manualChunkAliasesWithEntry","manualChunksApi","getModuleIds","getModuleInfo","_ref107","_ref108","aliasA","aliasB","validate","ecmaVersion","experimentalMinChunkSize","inlineDynamicImports","includedModules","getIncludedModules","getAbsoluteEntryModulePaths","getExternalChunkByModule","onWarn","absoluteEntryModulePaths","existingAlias","astralIdentifierCodes","astralIdentifierStartCodes","nonASCIIidentifierChars","nonASCIIidentifierStartChars","reservedWords","strictBind","ecma5AndLessKeywords","keywords$1","keywordRelationalOperator","nonASCIIidentifierStart","nonASCIIidentifier","isInAstralSet","isIdentifierStart","astral","isIdentifierChar","TokenType","conf","keyword","beforeExpr","startsExpr","isLoop","isAssign","postfix","binop","updateContext","prec","keywords","kw","types$1","regexp","privateId","eof","bracketL","bracketR","braceL","braceR","parenL","parenR","colon","question","questionDot","arrow","template","invalidTemplate","ellipsis","backQuote","dollarBraceL","eq","incDec","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","slash","starstar","coalesce","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","isNewLine","nextLineBreak","nonASCIIwhitespace","skipWhiteSpace","ref","obj","propName","wordsRegexp","words","codePointToString","loneSurrogate","Position","offset","SourceLocation","sourceFile","getLineInfo","cur","nextBreak","defaultOptions","sourceType","onInsertedSemicolon","onTrailingComma","allowReserved","allowReturnOutsideFunction","allowImportExportEverywhere","allowAwaitOutsideFunction","allowSuperOutsideMethod","allowHashBang","locations","onToken","onComment","ranges","program","directSourceFile","preserveParens","warnedAboutEcmaVersion","getOptions","opt","pushComment","array","text","startLoc","endLoc","SCOPE_TOP","SCOPE_FUNCTION","SCOPE_ASYNC","SCOPE_GENERATOR","SCOPE_ARROW","SCOPE_SIMPLE_CATCH","SCOPE_SUPER","SCOPE_DIRECT_SUPER","SCOPE_CLASS_STATIC_BLOCK","SCOPE_VAR","functionFlags","generator","BIND_NONE","BIND_VAR","BIND_LEXICAL","BIND_FUNCTION","BIND_SIMPLE_CATCH","BIND_OUTSIDE","Parser","startPos","reserved","reservedStrict","reservedWordsStrict","reservedWordsStrictBind","containsEsc","lineStart","curLine","curPosition","lastTokEndLoc","lastTokStartLoc","lastTokStart","lastTokEnd","initialContext","exprAllowed","inModule","strictDirective","potentialArrowAt","potentialArrowInForAwait","yieldPos","awaitPos","awaitIdentPos","undefinedExports","skipLineComment","scopeStack","enterScope","regexpState","privateNameStack","prototypeAccessors","inFunction","configurable","inGenerator","inAsync","canAwait","allowSuper","allowDirectSuper","treatFunctionsAsVar","allowNewDotTarget","inClassStaticBlock","startNode","nextToken","parseTopLevel","currentVarScope","inClassFieldInit","currentThisScope","treatFunctionsAsVarInScope","currentScope","cls","parseExpressionAt","parser","parseExpression","tokenizer","pp$9","literal","spaceAfter","eat","isContextual","eatContextual","expectContextual","unexpected","canInsertSemicolon","afterTrailingComma","tokType","notNext","expect","raise","DestructuringErrors","shorthandAssign","trailingComma","parenthesizedAssign","parenthesizedBind","doubleProto","checkPatternErrors","refDestructuringErrors","raiseRecoverable","checkExpressionErrors","andThrow","checkYieldAwaitInDefaultParams","isSimpleAssignTarget","pp$8","parseStatement","adaptDirectivePrologue","finishNode","loopLabel","switchLabel","isLet","skip","nextCh","ident","isAsyncFunction","topLevel","starttype","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseFunctionStatement","parseClass","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseVarStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","parseExpressionStatement","parseImport","parseExport","maybeName","parseLabeledStatement","isBreak","parseIdent","lab","parseParenExpression","awaitAt","parseFor","init$1","parseVar","await","parseForIn","startsWithLet","isForOf","toAssignable","checkLValPattern","declarationPosition","parseFunction","FUNC_STATEMENT$1","FUNC_HANGING_STATEMENT","sawDefault","isCase","exitScope","empty$1","clause","parseBindingAtom","simple","label$1","statementStart","createNewLexicalScope","exitStrict","isForIn","parseMaybeAssign","isFor","parseVarId","FUNC_NULLABLE_ID$1","statement","allowExpressionBody","forInit","initFunction","checkLValSimple","oldYieldPos","oldAwaitPos","oldAwaitIdentPos","parseFunctionParams","parseFunctionBody","parseBindingList","isStatement","oldStrict","parseClassId","parseClassSuper","privateNameMap","enterClassBody","classBody","hadConstructor","parseClassElement","isPrivateNameConflicted","exitClassBody","constructorAllowsSuper","keyName","isGenerator","isStatic","parseClassStaticBlock","isClassElementNameStart","lastValue","startNodeAt","parseClassElementName","isConstructor","checkKeyName","allowsDirectSuper","parseClassMethod","parseClassField","parsePrivateIdent","parsePropertyName","parseMethod","field","oldLabels","parseExprSubscripts","declared","curr","parseModuleExportName","checkExport","parseExprAtom","fNode","cNode","shouldParseExportStatement","checkVariableExport","parseExportSpecifiers","checkUnreserved","checkLocalExport","checkPatternExport","pat","decls","parseImportSpecifiers","node$1","node$2","stringLiteral","parseLiteral","isDirectiveCandidate","pp$7","isBinding","toAssignableList","exprList","parseSpread","parseRestBinding","parseObj","allowEmpty","allowTrailingComma","elts","parseBindingListItem","elem","parseMaybeDefault","bindingType","checkClashes","isBind","declareName","checkLValInnerPattern","TokContext","isExpr","preserveSpace","override","types","b_stat","b_expr","b_tmpl","p_stat","p_expr","q_tmpl","tryReadTemplateToken","f_stat","f_expr","f_expr_gen","f_gen","pp$6","curContext","braceIsBlock","prevType","inGeneratorContext","overrideContext","tokenCtx","statementParens","allowed","pp$5","checkPropClash","propHash","proto","other","redefinition","afterLeftParse","parseYield","ownDestructuringErrors","oldParenAssign","oldTrailingComma","oldDoubleProto","parseMaybeConditional","parseExprOps","parseMaybeUnary","parseExprOp","leftStartPos","leftStartLoc","minPrec","logical","op","buildBinary","sawUnary","parseAwait","isPrivateFieldAccess","parseSubscripts","noCalls","maybeAsyncArrow","optionalChained","parseSubscript","chainNode","optionalSupported","parseExprList","parseArrowExpression","parseTemplate","isTagged","readRegexp","canBeArrow","parseParenAndDistinguishExpression","parseNew","parseExprImport","parseDynamicImport","parseImportMeta","errorPos","bigint","innerStartPos","innerStartLoc","lastIsComma","spreadStart","parseParenItem","innerEndPos","innerEndLoc","parseParenArrowList","finishNodeAt","par","empty","isImport","parseTemplateElement","tail","curElt","isAsyncProp","isPattern","parseProperty","parsePropertyValue","paramCount","copyNode","isArrowFunction","isMethod","isExpression","checkParams","nonSimple","isSimpleParamList","allowDuplicates","nameHash","liberal","delegate","pp$4","raisedAt","pp$3","lexical","functions","redeclared","scope$1","scope$2","scope$3","pp$2","newNode","ecma9BinaryProperties","ecma10BinaryProperties","ecma11BinaryProperties","ecma12BinaryProperties","ecma13BinaryProperties","unicodeBinaryProperties","unicodeGeneralCategoryValues","ecma9ScriptValues","ecma10ScriptValues","ecma11ScriptValues","ecma12ScriptValues","ecma13ScriptValues","unicodeScriptValues","data","buildUnicodeData","binary","nonBinary","General_Category","Script","Script_Extensions","gc","sc","scx","pp$1","RegExpValidationState","validFlags","unicodeProperties","switchU","switchN","lastIntValue","lastStringValue","lastAssertionIsQuantifiable","numCapturingParens","maxBackReference","groupNames","backReferenceNames","reset","unicode","forceU","l","lookahead","ch","validateRegExpFlags","flag","validateRegExpPattern","regexp_pattern","regexp_disjunction","regexp_alternative","regexp_eatQuantifier","regexp_eatTerm","regexp_eatAssertion","regexp_eatAtom","regexp_eatExtendedAtom","lookbehind","noError","regexp_eatQuantifierPrefix","regexp_eatBracedQuantifier","regexp_eatDecimalDigits","regexp_eatPatternCharacters","regexp_eatReverseSolidusAtomEscape","regexp_eatCharacterClass","regexp_eatUncapturingGroup","regexp_eatCapturingGroup","regexp_eatAtomEscape","regexp_groupSpecifier","regexp_eatInvalidBracedQuantifier","regexp_eatExtendedPatternCharacter","regexp_eatSyntaxCharacter","isSyntaxCharacter","regexp_eatGroupName","regexp_eatRegExpIdentifierName","regexp_eatRegExpIdentifierStart","regexp_eatRegExpIdentifierPart","regexp_eatRegExpUnicodeEscapeSequence","isRegExpIdentifierStart","isRegExpIdentifierPart","regexp_eatBackReference","regexp_eatCharacterClassEscape","regexp_eatCharacterEscape","regexp_eatKGroupName","regexp_eatDecimalEscape","regexp_eatControlEscape","regexp_eatCControlLetter","regexp_eatZero","regexp_eatHexEscapeSequence","regexp_eatLegacyOctalEscapeSequence","regexp_eatIdentityEscape","regexp_eatControlLetter","isDecimalDigit","isControlLetter","regexp_eatFixedHexDigits","lead","leadSurrogateEnd","trail","regexp_eatHexDigits","isValidUnicode","isCharacterClassEscape","regexp_eatUnicodePropertyValueExpression","regexp_eatUnicodePropertyName","regexp_eatUnicodePropertyValue","regexp_validateUnicodePropertyNameAndValue","regexp_eatLoneUnicodePropertyNameOrValue","nameOrValue","regexp_validateUnicodePropertyNameOrValue","isUnicodePropertyNameCharacter","isUnicodePropertyValueCharacter","regexp_classRanges","regexp_eatClassAtom","regexp_eatClassEscape","ch$1","isOctalDigit","regexp_eatClassControlLetter","isHexDigit","hexToInt","regexp_eatOctalDigit","n1","n2","Token","pp","ignoreEscapeSequenceInKeyword","getToken","iterator","this$1$1","done","skipSpace","finishToken","readToken","fullCharCodeAtPos","readWord","getTokenFromCode","skipBlockComment","startSkip","loop","readToken_dot","readNumber","next2","readToken_slash","finishOp","readToken_mult_modulo_exp","tokentype","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readToken_question","next2$1","readToken_numberSign","readWord1","readRadixNumber","readString","inClass","flagsStart","e","readInt","radix","maybeLegacyOctalNumericLiteral","allowSeparators","isLegacyOctalNumericLiteral","total","lastCode","stringToNumber","stringToBigInt","startsWithDot","octal","val$1","readCodePoint","codePos","readHexChar","invalidStringToken","quote","chunkStart","readEscapedChar","INVALID_TEMPLATE_ESCAPE_ERROR","inTemplateElement","readTmplToken","readInvalidTemplateToken","position","inTemplate","octalStr","escStart","acorn","tokTypes","keywordTypes","tokContexts","_acorn","flru","limit","keep","isPartial","clear","resolveIdViaPlugins","moduleLoaderResolveId","customOptions","skipped","replaceContext","skippedCall","pluginContext","custom","skipSelf","hookFirstAndGetPlugin","resolveId","preserveSymlinks","pluginResult","resolveIdResult","resolvedBy","addJsExtensionIfNecessary","findFile","stats","isSymbolicLink","isFile","ANONYMOUS_PLUGIN_PREFIX","ANONYMOUS_OUTPUT_PLUGIN_PREFIX","createPluginCache","getTrackedPluginCache","pluginCache","onUse","NO_CACHE","uncacheablePluginError","getCacheForUncacheablePlugin","transform","emittedFiles","useCustomTransformCache","currentSource","transformReducer","previousCode","addWatchFile","emittedFile","getCombinedSourcemap","combinedMap","setAssetSource","RESOLVE_DEPENDENCIES","ModuleLoader","indexedEntryModules","latestLoadModulesPromise","moduleLoadPromises","modulesWithLoadedDependencies","nextChunkNamePriority","nextEntryModuleIndex","getResolvedIdWithDefaults","getNormalizedResolvedIdWithoutDefaults","unresolvedModules","extendLoadModulesPromise","loadEntryModule","awaitLoadModulesPromise","addEntryModules","unresolvedEntryModules","firstEntryModuleIndex","firstChunkNamePriority","newEntryModules","_ref109","then","addChunkNamesToModule","existingIndexedModule","indexedModule","_ref110","_ref111","indexA","indexB","_ref112","emitChunk","_ref113","unresolvedModule","addEntryWithImplicitDependants","preloadModule","resolvedId","fetchModule","resolveDependencies","chunkNamePriority","implicitlyLoadedAfterModules","dependant","addModuleSource","fileOperationQueue","run","hookFirst","sourceDescription","cachedModule","cachedModules","resolvedSources","startingPromise","loadNewModulesPromise","catch","fetchDynamicDependencies","resolveDynamicImportPromises","resolveDynamicImportPromise","_ref114","fetchResolvedDependency","_ref115","isPreload","existingModule","handleExistingModule","watchFiles","loadPromise","getResolveStaticDependencyPromises","getResolveDynamicImportPromises","loadAndResolveDependenciesPromise","waitForDependencyResolution","resolveDependencyPromises","fetchModuleDependencies","resolveStaticDependencyPromises","resolveDynamicDependencyPromises","fetchStaticDependencies","resolveStaticDependencyPromise","_ref116","makeAbsoluteExternalsRelative","isNotAbsoluteExternal","normalizeRelativeExternalId","resolveDynamicImport","_ref117","handleInvalidResolvedId","existingResolution","_ref118","priority","namePosition","GlobalScope","getSourceHash","generateAssetFileName","sourceHash","emittedName","assetFileNames","ext","reserveFileNameInBundle","_ref119","hasValidType","hasValidName","validatedName","getValidSource","fileReferenceId","getAssetFileName","getChunkFileName","FileEmitter","baseFileEmitter","nextIdBase","outputFileEmitters","emitAsset","filesByReferenceId","requestedSource","consumedFile","finalizeAsset","emitter","fileNamesBySource","addOutputFileEmitter","outputFileEmitter","assignReferenceId","idBase","_ref120","emittedAsset","consumedAsset","emitAssetWithReferenceId","fileEmitter","emittedChunk","LOAD_AND_PARSE","consumedChunk","_ref121","assetWithFileName","getPluginContext","existingPluginNames","cacheable","cacheKey","cacheInstance","getWatchFiles","load","rollupVersion","watchMode","wrappedModuleIds","inputHookNames","buildEnd","buildStart","closeBundle","closeWatcher","moduleParsed","shouldTransformCachedModule","watchChange","inputHooks","PluginDriver","userPlugins","basePluginDriver","sortedPlugins","unfulfilledActions","pluginContexts","createOutputPluginDriver","getUnfulfilledHookActions","getSortedPlugins","runHook","runHookSync","parallelPromises","sequential","_ref122","argument0","promise","hookReduceArg0Sync","_ref123","initialValue","reducer","results","parallelResults","validateAddonPluginHandler","accumulator","noReturn","validateHandler","getSortedValidatedPlugins","action","hookResult","validateFunctionPluginHandler","normal","post","order","Queue","maxParallel","queue","workerCount","task","work","normalizeEntryModules","_ref124","Graph","watcher","_this2","externalModules","foundModule","handleChange","_len2","_key2","handleClose","onCurrentRun","acornParser","acornInjectPlugins","maxParallelFileOps","build","generateModuleGraph","ANALYSE","sortModules","includeStatements","onCommentOrig","_len3","_key3","getCache","allDeleted","experimentalCacheExpiry","treeshakingPass","warnForMissingExports","formatAction","_ref125","beforeExitEvent","beforeExitEmitter","setMaxListeners","on","emit","catchUnfinishedHookActions","callback","handleEmptyEventLoop","emptyEventLoopPromise","once","off","leftCurlyBrace","FUNC_STATEMENT","FUNC_NULLABLE_ID","tt","assertToken","_codeAt","_eat","parseImportAssertions","attrs","parseAssertEntries","attrNames","assertionKeyNode","ensureArray","items","asyncFlatten","defaultOnWarn","warnUnknownOptions","passedOptions","ignoredKeys","validOptionSet","treeshakePresets","recommended","safest","smallest","generatedCodePresets","es2015","symbols","es5","objectifyOption","objectifyOptionWithPresets","presets","additionalValues","preset","getOptionWithPreset","presetName","normalizePluginOption","normalizeInputOptions","config","getOnwarn","getmaxParallelFileOps","getAcorn","getAcornInjectPlugins","getIdMatcher","getInlineDynamicImports$1","getInput","getManualChunks$1","maxParallelFileReads","getModuleContext","getPreserveModules$1","getTreeshake","warningString","_len4","_key4","matchers","configInlineDynamicImports","configInput","configManualChunks","configModuleContext","contextByModuleId","configPreserveModules","configTreeshake","configWithPreset","getHasModuleSideEffects","moduleSideEffectsOption","_id","INVALID_CHAR_REGEX","DRIVE_LETTER_REGEX","driveLetter","normalizeOutputOptions","unsetInputOptions","getFormat","getInlineDynamicImports","getPreserveModules","getFile","preferConst","getPreferConst","getGeneratedCode","getAmd","getAddon","getDir","getDynamicImportFunction","getEntryFileNames","experimentalDeepDynamicChunkOptimization","getExperimentalDeepDynamicChunkOptimization","getIndent","getInterop","getManualChunks","getMinifyInternalExports","getNamespaceToStringTag","getPreserveModulesRoot","getSourcemapBaseUrl","relativeSourcePath","configFormat","configPreferConst","mergedOption","configAddon","configDynamicImportFunction","configEntryFileNames","configExperimentalDeepDynamicChunkOptimization","configExports","configIndent","ALLOWED_INTEROP_TYPES","configInterop","interopPerId","defaultInterop","validateInterop","configNamespaceToStringTag","rollup","rawInputOptions","rollupInternal","getInputOptions","useCache","rawOutputOptions","handleGenerateWrite","write","rawPlugins","applyOptionHook","normalizePlugins","anonymousPrefix","getOutputOptionsAndPluginDriver","generated","writeOutputFile","createOutput","inputPluginDriver","getOutputOptions","emitError","outputFile","outputFileA","outputFileB","getSortingFileType","SortingFileType","ASSET","ENTRY_CHUNK","SECONDARY_CHUNK","recursive","defineConfig","argv","isDisabled","isForced","isDumbTerminal","TERM","isCompatibleTerminal","isatty","isCI","isColorSupported","replaceClose","head","clearBleed","filterEmpty","colors","dim","italic","underline","inverse","hidden","strikethrough","black","red","green","yellow","blue","magenta","cyan","white","gray","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","blackBright","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgBlackBright","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright","createColors","useColor","FORCE_COLOR","NO_COLOR","stderr","_len5","_key5","handleError","recover","nameSection","pluginSection","outputLines","exit","commandAliases","g","h","o","w","EMPTY_COMMAND_OPTIONS","mergeOptions","rawCommandOptions","defaultOnWarnHandler","command","getCommandOptions","mergeInputOptions","outputOptionsArray","singleOutputOptions","mergeOutputOptions","globalDefinition","overrides","getOption","getExternal","getOnWarn","getObjectOption","watch","getWatch","configExternal","isResolved","objectifyValue","commandOption","normalizeObjectOptionValue","configOption","WatchEmitter","currentHandlers","persistentHandlers","event","_len6","_key6","getCurrentHandlers","getPersistentHandlers","listener","listeners","_this3","selfRemovingListener","removeAllListeners","removeListenersForCurrentRun","fsEvents","fsEventsImportError","loadFsEvents","getFsEvents","fseventsImporter","configs","watchInternal","optionsList","watchOptionsList","Watcher"],"sources":["/Users/hrushi/node_modules/rollup/dist/es/shared/node-entry.js"],"sourcesContent":["/*\n  @license\n\tRollup.js v3.18.0\n\tWed, 01 Mar 2023 18:45:12 GMT - commit 25bdc129d21685b69a00ee55397d42ac6eff6449\n\n\thttps://github.com/rollup/rollup\n\n\tReleased under the MIT License.\n*/\nimport { resolve, basename, extname, dirname, relative as relative$1 } from 'node:path';\nimport require$$0$1, { win32, posix, isAbsolute as isAbsolute$1, resolve as resolve$1 } from 'path';\nimport process$1, { env as env$1 } from 'node:process';\nimport { performance } from 'node:perf_hooks';\nimport { createHash as createHash$1 } from 'node:crypto';\nimport { lstat, realpath, readdir, readFile, mkdir, writeFile } from 'node:fs/promises';\nimport { EventEmitter } from 'node:events';\nimport * as tty from 'tty';\n\nvar version$1 = \"3.18.0\";\n\nconst comma = ','.charCodeAt(0);\nconst semicolon = ';'.charCodeAt(0);\nconst chars$1 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst intToChar = new Uint8Array(64); // 64 possible chars.\nconst charToInt = new Uint8Array(128); // z is 122 in ASCII\nfor (let i = 0; i < chars$1.length; i++) {\n    const c = chars$1.charCodeAt(i);\n    intToChar[i] = c;\n    charToInt[c] = i;\n}\n// Provide a fallback for older environments.\nconst td = typeof TextDecoder !== 'undefined'\n    ? /* #__PURE__ */ new TextDecoder()\n    : typeof Buffer !== 'undefined'\n        ? {\n            decode(buf) {\n                const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);\n                return out.toString();\n            },\n        }\n        : {\n            decode(buf) {\n                let out = '';\n                for (let i = 0; i < buf.length; i++) {\n                    out += String.fromCharCode(buf[i]);\n                }\n                return out;\n            },\n        };\nfunction decode(mappings) {\n    const state = new Int32Array(5);\n    const decoded = [];\n    let index = 0;\n    do {\n        const semi = indexOf(mappings, index);\n        const line = [];\n        let sorted = true;\n        let lastCol = 0;\n        state[0] = 0;\n        for (let i = index; i < semi; i++) {\n            let seg;\n            i = decodeInteger(mappings, i, state, 0); // genColumn\n            const col = state[0];\n            if (col < lastCol)\n                sorted = false;\n            lastCol = col;\n            if (hasMoreVlq(mappings, i, semi)) {\n                i = decodeInteger(mappings, i, state, 1); // sourcesIndex\n                i = decodeInteger(mappings, i, state, 2); // sourceLine\n                i = decodeInteger(mappings, i, state, 3); // sourceColumn\n                if (hasMoreVlq(mappings, i, semi)) {\n                    i = decodeInteger(mappings, i, state, 4); // namesIndex\n                    seg = [col, state[1], state[2], state[3], state[4]];\n                }\n                else {\n                    seg = [col, state[1], state[2], state[3]];\n                }\n            }\n            else {\n                seg = [col];\n            }\n            line.push(seg);\n        }\n        if (!sorted)\n            sort(line);\n        decoded.push(line);\n        index = semi + 1;\n    } while (index <= mappings.length);\n    return decoded;\n}\nfunction indexOf(mappings, index) {\n    const idx = mappings.indexOf(';', index);\n    return idx === -1 ? mappings.length : idx;\n}\nfunction decodeInteger(mappings, pos, state, j) {\n    let value = 0;\n    let shift = 0;\n    let integer = 0;\n    do {\n        const c = mappings.charCodeAt(pos++);\n        integer = charToInt[c];\n        value |= (integer & 31) << shift;\n        shift += 5;\n    } while (integer & 32);\n    const shouldNegate = value & 1;\n    value >>>= 1;\n    if (shouldNegate) {\n        value = -0x80000000 | -value;\n    }\n    state[j] += value;\n    return pos;\n}\nfunction hasMoreVlq(mappings, i, length) {\n    if (i >= length)\n        return false;\n    return mappings.charCodeAt(i) !== comma;\n}\nfunction sort(line) {\n    line.sort(sortComparator);\n}\nfunction sortComparator(a, b) {\n    return a[0] - b[0];\n}\nfunction encode(decoded) {\n    const state = new Int32Array(5);\n    const bufLength = 1024 * 16;\n    const subLength = bufLength - 36;\n    const buf = new Uint8Array(bufLength);\n    const sub = buf.subarray(0, subLength);\n    let pos = 0;\n    let out = '';\n    for (let i = 0; i < decoded.length; i++) {\n        const line = decoded[i];\n        if (i > 0) {\n            if (pos === bufLength) {\n                out += td.decode(buf);\n                pos = 0;\n            }\n            buf[pos++] = semicolon;\n        }\n        if (line.length === 0)\n            continue;\n        state[0] = 0;\n        for (let j = 0; j < line.length; j++) {\n            const segment = line[j];\n            // We can push up to 5 ints, each int can take at most 7 chars, and we\n            // may push a comma.\n            if (pos > subLength) {\n                out += td.decode(sub);\n                buf.copyWithin(0, subLength, pos);\n                pos -= subLength;\n            }\n            if (j > 0)\n                buf[pos++] = comma;\n            pos = encodeInteger(buf, pos, state, segment, 0); // genColumn\n            if (segment.length === 1)\n                continue;\n            pos = encodeInteger(buf, pos, state, segment, 1); // sourcesIndex\n            pos = encodeInteger(buf, pos, state, segment, 2); // sourceLine\n            pos = encodeInteger(buf, pos, state, segment, 3); // sourceColumn\n            if (segment.length === 4)\n                continue;\n            pos = encodeInteger(buf, pos, state, segment, 4); // namesIndex\n        }\n    }\n    return out + td.decode(buf.subarray(0, pos));\n}\nfunction encodeInteger(buf, pos, state, segment, j) {\n    const next = segment[j];\n    let num = next - state[j];\n    state[j] = next;\n    num = num < 0 ? (-num << 1) | 1 : num << 1;\n    do {\n        let clamped = num & 0b011111;\n        num >>>= 5;\n        if (num > 0)\n            clamped |= 0b100000;\n        buf[pos++] = intToChar[clamped];\n    } while (num > 0);\n    return pos;\n}\n\nclass BitSet {\n\tconstructor(arg) {\n\t\tthis.bits = arg instanceof BitSet ? arg.bits.slice() : [];\n\t}\n\n\tadd(n) {\n\t\tthis.bits[n >> 5] |= 1 << (n & 31);\n\t}\n\n\thas(n) {\n\t\treturn !!(this.bits[n >> 5] & (1 << (n & 31)));\n\t}\n}\n\nlet Chunk$1 = class Chunk {\n\tconstructor(start, end, content) {\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.original = content;\n\n\t\tthis.intro = '';\n\t\tthis.outro = '';\n\n\t\tthis.content = content;\n\t\tthis.storeName = false;\n\t\tthis.edited = false;\n\n\t\t{\n\t\t\tthis.previous = null;\n\t\t\tthis.next = null;\n\t\t}\n\t}\n\n\tappendLeft(content) {\n\t\tthis.outro += content;\n\t}\n\n\tappendRight(content) {\n\t\tthis.intro = this.intro + content;\n\t}\n\n\tclone() {\n\t\tconst chunk = new Chunk(this.start, this.end, this.original);\n\n\t\tchunk.intro = this.intro;\n\t\tchunk.outro = this.outro;\n\t\tchunk.content = this.content;\n\t\tchunk.storeName = this.storeName;\n\t\tchunk.edited = this.edited;\n\n\t\treturn chunk;\n\t}\n\n\tcontains(index) {\n\t\treturn this.start < index && index < this.end;\n\t}\n\n\teachNext(fn) {\n\t\tlet chunk = this;\n\t\twhile (chunk) {\n\t\t\tfn(chunk);\n\t\t\tchunk = chunk.next;\n\t\t}\n\t}\n\n\teachPrevious(fn) {\n\t\tlet chunk = this;\n\t\twhile (chunk) {\n\t\t\tfn(chunk);\n\t\t\tchunk = chunk.previous;\n\t\t}\n\t}\n\n\tedit(content, storeName, contentOnly) {\n\t\tthis.content = content;\n\t\tif (!contentOnly) {\n\t\t\tthis.intro = '';\n\t\t\tthis.outro = '';\n\t\t}\n\t\tthis.storeName = storeName;\n\n\t\tthis.edited = true;\n\n\t\treturn this;\n\t}\n\n\tprependLeft(content) {\n\t\tthis.outro = content + this.outro;\n\t}\n\n\tprependRight(content) {\n\t\tthis.intro = content + this.intro;\n\t}\n\n\tsplit(index) {\n\t\tconst sliceIndex = index - this.start;\n\n\t\tconst originalBefore = this.original.slice(0, sliceIndex);\n\t\tconst originalAfter = this.original.slice(sliceIndex);\n\n\t\tthis.original = originalBefore;\n\n\t\tconst newChunk = new Chunk(index, this.end, originalAfter);\n\t\tnewChunk.outro = this.outro;\n\t\tthis.outro = '';\n\n\t\tthis.end = index;\n\n\t\tif (this.edited) {\n\t\t\t// TODO is this block necessary?...\n\t\t\tnewChunk.edit('', false);\n\t\t\tthis.content = '';\n\t\t} else {\n\t\t\tthis.content = originalBefore;\n\t\t}\n\n\t\tnewChunk.next = this.next;\n\t\tif (newChunk.next) newChunk.next.previous = newChunk;\n\t\tnewChunk.previous = this;\n\t\tthis.next = newChunk;\n\n\t\treturn newChunk;\n\t}\n\n\ttoString() {\n\t\treturn this.intro + this.content + this.outro;\n\t}\n\n\ttrimEnd(rx) {\n\t\tthis.outro = this.outro.replace(rx, '');\n\t\tif (this.outro.length) return true;\n\n\t\tconst trimmed = this.content.replace(rx, '');\n\n\t\tif (trimmed.length) {\n\t\t\tif (trimmed !== this.content) {\n\t\t\t\tthis.split(this.start + trimmed.length).edit('', undefined, true);\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit('', undefined, true);\n\n\t\t\tthis.intro = this.intro.replace(rx, '');\n\t\t\tif (this.intro.length) return true;\n\t\t}\n\t}\n\n\ttrimStart(rx) {\n\t\tthis.intro = this.intro.replace(rx, '');\n\t\tif (this.intro.length) return true;\n\n\t\tconst trimmed = this.content.replace(rx, '');\n\n\t\tif (trimmed.length) {\n\t\t\tif (trimmed !== this.content) {\n\t\t\t\tthis.split(this.end - trimmed.length);\n\t\t\t\tthis.edit('', undefined, true);\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit('', undefined, true);\n\n\t\t\tthis.outro = this.outro.replace(rx, '');\n\t\t\tif (this.outro.length) return true;\n\t\t}\n\t}\n};\n\nfunction getBtoa () {\n\tif (typeof window !== 'undefined' && typeof window.btoa === 'function') {\n\t\treturn (str) => window.btoa(unescape(encodeURIComponent(str)));\n\t} else if (typeof Buffer === 'function') {\n\t\treturn (str) => Buffer.from(str, 'utf-8').toString('base64');\n\t} else {\n\t\treturn () => {\n\t\t\tthrow new Error('Unsupported environment: `window.btoa` or `Buffer` should be supported.');\n\t\t};\n\t}\n}\n\nconst btoa = /*#__PURE__*/ getBtoa();\n\nclass SourceMap {\n\tconstructor(properties) {\n\t\tthis.version = 3;\n\t\tthis.file = properties.file;\n\t\tthis.sources = properties.sources;\n\t\tthis.sourcesContent = properties.sourcesContent;\n\t\tthis.names = properties.names;\n\t\tthis.mappings = encode(properties.mappings);\n\t\tif (typeof properties.x_google_ignoreList !== 'undefined') {\n\t\t\tthis.x_google_ignoreList = properties.x_google_ignoreList;\n\t\t}\n\t}\n\n\ttoString() {\n\t\treturn JSON.stringify(this);\n\t}\n\n\ttoUrl() {\n\t\treturn 'data:application/json;charset=utf-8;base64,' + btoa(this.toString());\n\t}\n}\n\nfunction guessIndent(code) {\n\tconst lines = code.split('\\n');\n\n\tconst tabbed = lines.filter((line) => /^\\t+/.test(line));\n\tconst spaced = lines.filter((line) => /^ {2,}/.test(line));\n\n\tif (tabbed.length === 0 && spaced.length === 0) {\n\t\treturn null;\n\t}\n\n\t// More lines tabbed than spaced? Assume tabs, and\n\t// default to tabs in the case of a tie (or nothing\n\t// to go on)\n\tif (tabbed.length >= spaced.length) {\n\t\treturn '\\t';\n\t}\n\n\t// Otherwise, we need to guess the multiple\n\tconst min = spaced.reduce((previous, current) => {\n\t\tconst numSpaces = /^ +/.exec(current)[0].length;\n\t\treturn Math.min(numSpaces, previous);\n\t}, Infinity);\n\n\treturn new Array(min + 1).join(' ');\n}\n\nfunction getRelativePath(from, to) {\n\tconst fromParts = from.split(/[/\\\\]/);\n\tconst toParts = to.split(/[/\\\\]/);\n\n\tfromParts.pop(); // get dirname\n\n\twhile (fromParts[0] === toParts[0]) {\n\t\tfromParts.shift();\n\t\ttoParts.shift();\n\t}\n\n\tif (fromParts.length) {\n\t\tlet i = fromParts.length;\n\t\twhile (i--) fromParts[i] = '..';\n\t}\n\n\treturn fromParts.concat(toParts).join('/');\n}\n\nconst toString$1 = Object.prototype.toString;\n\nfunction isObject$1(thing) {\n\treturn toString$1.call(thing) === '[object Object]';\n}\n\nfunction getLocator$1(source) {\n\tconst originalLines = source.split('\\n');\n\tconst lineOffsets = [];\n\n\tfor (let i = 0, pos = 0; i < originalLines.length; i++) {\n\t\tlineOffsets.push(pos);\n\t\tpos += originalLines[i].length + 1;\n\t}\n\n\treturn function locate(index) {\n\t\tlet i = 0;\n\t\tlet j = lineOffsets.length;\n\t\twhile (i < j) {\n\t\t\tconst m = (i + j) >> 1;\n\t\t\tif (index < lineOffsets[m]) {\n\t\t\t\tj = m;\n\t\t\t} else {\n\t\t\t\ti = m + 1;\n\t\t\t}\n\t\t}\n\t\tconst line = i - 1;\n\t\tconst column = index - lineOffsets[line];\n\t\treturn { line, column };\n\t};\n}\n\nclass Mappings {\n\tconstructor(hires) {\n\t\tthis.hires = hires;\n\t\tthis.generatedCodeLine = 0;\n\t\tthis.generatedCodeColumn = 0;\n\t\tthis.raw = [];\n\t\tthis.rawSegments = this.raw[this.generatedCodeLine] = [];\n\t\tthis.pending = null;\n\t}\n\n\taddEdit(sourceIndex, content, loc, nameIndex) {\n\t\tif (content.length) {\n\t\t\tconst segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\n\t\t\tif (nameIndex >= 0) {\n\t\t\t\tsegment.push(nameIndex);\n\t\t\t}\n\t\t\tthis.rawSegments.push(segment);\n\t\t} else if (this.pending) {\n\t\t\tthis.rawSegments.push(this.pending);\n\t\t}\n\n\t\tthis.advance(content);\n\t\tthis.pending = null;\n\t}\n\n\taddUneditedChunk(sourceIndex, chunk, original, loc, sourcemapLocations) {\n\t\tlet originalCharIndex = chunk.start;\n\t\tlet first = true;\n\n\t\twhile (originalCharIndex < chunk.end) {\n\t\t\tif (this.hires || first || sourcemapLocations.has(originalCharIndex)) {\n\t\t\t\tthis.rawSegments.push([this.generatedCodeColumn, sourceIndex, loc.line, loc.column]);\n\t\t\t}\n\n\t\t\tif (original[originalCharIndex] === '\\n') {\n\t\t\t\tloc.line += 1;\n\t\t\t\tloc.column = 0;\n\t\t\t\tthis.generatedCodeLine += 1;\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\t\tthis.generatedCodeColumn = 0;\n\t\t\t\tfirst = true;\n\t\t\t} else {\n\t\t\t\tloc.column += 1;\n\t\t\t\tthis.generatedCodeColumn += 1;\n\t\t\t\tfirst = false;\n\t\t\t}\n\n\t\t\toriginalCharIndex += 1;\n\t\t}\n\n\t\tthis.pending = null;\n\t}\n\n\tadvance(str) {\n\t\tif (!str) return;\n\n\t\tconst lines = str.split('\\n');\n\n\t\tif (lines.length > 1) {\n\t\t\tfor (let i = 0; i < lines.length - 1; i++) {\n\t\t\t\tthis.generatedCodeLine++;\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\t}\n\t\t\tthis.generatedCodeColumn = 0;\n\t\t}\n\n\t\tthis.generatedCodeColumn += lines[lines.length - 1].length;\n\t}\n}\n\nconst n = '\\n';\n\nconst warned = {\n\tinsertLeft: false,\n\tinsertRight: false,\n\tstoreName: false,\n};\n\nclass MagicString {\n\tconstructor(string, options = {}) {\n\t\tconst chunk = new Chunk$1(0, string.length, string);\n\n\t\tObject.defineProperties(this, {\n\t\t\toriginal: { writable: true, value: string },\n\t\t\toutro: { writable: true, value: '' },\n\t\t\tintro: { writable: true, value: '' },\n\t\t\tfirstChunk: { writable: true, value: chunk },\n\t\t\tlastChunk: { writable: true, value: chunk },\n\t\t\tlastSearchedChunk: { writable: true, value: chunk },\n\t\t\tbyStart: { writable: true, value: {} },\n\t\t\tbyEnd: { writable: true, value: {} },\n\t\t\tfilename: { writable: true, value: options.filename },\n\t\t\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\n\t\t\tsourcemapLocations: { writable: true, value: new BitSet() },\n\t\t\tstoredNames: { writable: true, value: {} },\n\t\t\tindentStr: { writable: true, value: undefined },\n\t\t});\n\n\t\tthis.byStart[0] = chunk;\n\t\tthis.byEnd[string.length] = chunk;\n\t}\n\n\taddSourcemapLocation(char) {\n\t\tthis.sourcemapLocations.add(char);\n\t}\n\n\tappend(content) {\n\t\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\n\n\t\tthis.outro += content;\n\t\treturn this;\n\t}\n\n\tappendLeft(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byEnd[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.appendLeft(content);\n\t\t} else {\n\t\t\tthis.intro += content;\n\t\t}\n\t\treturn this;\n\t}\n\n\tappendRight(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byStart[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.appendRight(content);\n\t\t} else {\n\t\t\tthis.outro += content;\n\t\t}\n\t\treturn this;\n\t}\n\n\tclone() {\n\t\tconst cloned = new MagicString(this.original, { filename: this.filename });\n\n\t\tlet originalChunk = this.firstChunk;\n\t\tlet clonedChunk = (cloned.firstChunk = cloned.lastSearchedChunk = originalChunk.clone());\n\n\t\twhile (originalChunk) {\n\t\t\tcloned.byStart[clonedChunk.start] = clonedChunk;\n\t\t\tcloned.byEnd[clonedChunk.end] = clonedChunk;\n\n\t\t\tconst nextOriginalChunk = originalChunk.next;\n\t\t\tconst nextClonedChunk = nextOriginalChunk && nextOriginalChunk.clone();\n\n\t\t\tif (nextClonedChunk) {\n\t\t\t\tclonedChunk.next = nextClonedChunk;\n\t\t\t\tnextClonedChunk.previous = clonedChunk;\n\n\t\t\t\tclonedChunk = nextClonedChunk;\n\t\t\t}\n\n\t\t\toriginalChunk = nextOriginalChunk;\n\t\t}\n\n\t\tcloned.lastChunk = clonedChunk;\n\n\t\tif (this.indentExclusionRanges) {\n\t\t\tcloned.indentExclusionRanges = this.indentExclusionRanges.slice();\n\t\t}\n\n\t\tcloned.sourcemapLocations = new BitSet(this.sourcemapLocations);\n\n\t\tcloned.intro = this.intro;\n\t\tcloned.outro = this.outro;\n\n\t\treturn cloned;\n\t}\n\n\tgenerateDecodedMap(options) {\n\t\toptions = options || {};\n\n\t\tconst sourceIndex = 0;\n\t\tconst names = Object.keys(this.storedNames);\n\t\tconst mappings = new Mappings(options.hires);\n\n\t\tconst locate = getLocator$1(this.original);\n\n\t\tif (this.intro) {\n\t\t\tmappings.advance(this.intro);\n\t\t}\n\n\t\tthis.firstChunk.eachNext((chunk) => {\n\t\t\tconst loc = locate(chunk.start);\n\n\t\t\tif (chunk.intro.length) mappings.advance(chunk.intro);\n\n\t\t\tif (chunk.edited) {\n\t\t\t\tmappings.addEdit(\n\t\t\t\t\tsourceIndex,\n\t\t\t\t\tchunk.content,\n\t\t\t\t\tloc,\n\t\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tmappings.addUneditedChunk(sourceIndex, chunk, this.original, loc, this.sourcemapLocations);\n\t\t\t}\n\n\t\t\tif (chunk.outro.length) mappings.advance(chunk.outro);\n\t\t});\n\n\t\treturn {\n\t\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : null,\n\t\t\tsources: [options.source ? getRelativePath(options.file || '', options.source) : null],\n\t\t\tsourcesContent: options.includeContent ? [this.original] : [null],\n\t\t\tnames,\n\t\t\tmappings: mappings.raw,\n\t\t};\n\t}\n\n\tgenerateMap(options) {\n\t\treturn new SourceMap(this.generateDecodedMap(options));\n\t}\n\n\t_ensureindentStr() {\n\t\tif (this.indentStr === undefined) {\n\t\t\tthis.indentStr = guessIndent(this.original);\n\t\t}\n\t}\n\n\t_getRawIndentString() {\n\t\tthis._ensureindentStr();\n\t\treturn this.indentStr;\n\t}\n\n\tgetIndentString() {\n\t\tthis._ensureindentStr();\n\t\treturn this.indentStr === null ? '\\t' : this.indentStr;\n\t}\n\n\tindent(indentStr, options) {\n\t\tconst pattern = /^[^\\r\\n]/gm;\n\n\t\tif (isObject$1(indentStr)) {\n\t\t\toptions = indentStr;\n\t\t\tindentStr = undefined;\n\t\t}\n\n\t\tif (indentStr === undefined) {\n\t\t\tthis._ensureindentStr();\n\t\t\tindentStr = this.indentStr || '\\t';\n\t\t}\n\n\t\tif (indentStr === '') return this; // noop\n\n\t\toptions = options || {};\n\n\t\t// Process exclusion ranges\n\t\tconst isExcluded = {};\n\n\t\tif (options.exclude) {\n\t\t\tconst exclusions =\n\t\t\t\ttypeof options.exclude[0] === 'number' ? [options.exclude] : options.exclude;\n\t\t\texclusions.forEach((exclusion) => {\n\t\t\t\tfor (let i = exclusion[0]; i < exclusion[1]; i += 1) {\n\t\t\t\t\tisExcluded[i] = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tlet shouldIndentNextCharacter = options.indentStart !== false;\n\t\tconst replacer = (match) => {\n\t\t\tif (shouldIndentNextCharacter) return `${indentStr}${match}`;\n\t\t\tshouldIndentNextCharacter = true;\n\t\t\treturn match;\n\t\t};\n\n\t\tthis.intro = this.intro.replace(pattern, replacer);\n\n\t\tlet charIndex = 0;\n\t\tlet chunk = this.firstChunk;\n\n\t\twhile (chunk) {\n\t\t\tconst end = chunk.end;\n\n\t\t\tif (chunk.edited) {\n\t\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\t\tchunk.content = chunk.content.replace(pattern, replacer);\n\n\t\t\t\t\tif (chunk.content.length) {\n\t\t\t\t\t\tshouldIndentNextCharacter = chunk.content[chunk.content.length - 1] === '\\n';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcharIndex = chunk.start;\n\n\t\t\t\twhile (charIndex < end) {\n\t\t\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\t\t\tconst char = this.original[charIndex];\n\n\t\t\t\t\t\tif (char === '\\n') {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = true;\n\t\t\t\t\t\t} else if (char !== '\\r' && shouldIndentNextCharacter) {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = false;\n\n\t\t\t\t\t\t\tif (charIndex === chunk.start) {\n\t\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis._splitChunk(chunk, charIndex);\n\t\t\t\t\t\t\t\tchunk = chunk.next;\n\t\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcharIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcharIndex = chunk.end;\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tthis.outro = this.outro.replace(pattern, replacer);\n\n\t\treturn this;\n\t}\n\n\tinsert() {\n\t\tthrow new Error(\n\t\t\t'magicString.insert(...) is deprecated. Use prependRight(...) or appendLeft(...)'\n\t\t);\n\t}\n\n\tinsertLeft(index, content) {\n\t\tif (!warned.insertLeft) {\n\t\t\tconsole.warn(\n\t\t\t\t'magicString.insertLeft(...) is deprecated. Use magicString.appendLeft(...) instead'\n\t\t\t); // eslint-disable-line no-console\n\t\t\twarned.insertLeft = true;\n\t\t}\n\n\t\treturn this.appendLeft(index, content);\n\t}\n\n\tinsertRight(index, content) {\n\t\tif (!warned.insertRight) {\n\t\t\tconsole.warn(\n\t\t\t\t'magicString.insertRight(...) is deprecated. Use magicString.prependRight(...) instead'\n\t\t\t); // eslint-disable-line no-console\n\t\t\twarned.insertRight = true;\n\t\t}\n\n\t\treturn this.prependRight(index, content);\n\t}\n\n\tmove(start, end, index) {\n\t\tif (index >= start && index <= end) throw new Error('Cannot move a selection inside itself');\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\t\tthis._split(index);\n\n\t\tconst first = this.byStart[start];\n\t\tconst last = this.byEnd[end];\n\n\t\tconst oldLeft = first.previous;\n\t\tconst oldRight = last.next;\n\n\t\tconst newRight = this.byStart[index];\n\t\tif (!newRight && last === this.lastChunk) return this;\n\t\tconst newLeft = newRight ? newRight.previous : this.lastChunk;\n\n\t\tif (oldLeft) oldLeft.next = oldRight;\n\t\tif (oldRight) oldRight.previous = oldLeft;\n\n\t\tif (newLeft) newLeft.next = first;\n\t\tif (newRight) newRight.previous = last;\n\n\t\tif (!first.previous) this.firstChunk = last.next;\n\t\tif (!last.next) {\n\t\t\tthis.lastChunk = first.previous;\n\t\t\tthis.lastChunk.next = null;\n\t\t}\n\n\t\tfirst.previous = newLeft;\n\t\tlast.next = newRight || null;\n\n\t\tif (!newLeft) this.firstChunk = first;\n\t\tif (!newRight) this.lastChunk = last;\n\t\treturn this;\n\t}\n\n\toverwrite(start, end, content, options) {\n\t\toptions = options || {};\n\t\treturn this.update(start, end, content, { ...options, overwrite: !options.contentOnly });\n\t}\n\n\tupdate(start, end, content, options) {\n\t\tif (typeof content !== 'string') throw new TypeError('replacement content must be a string');\n\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tif (end > this.original.length) throw new Error('end is out of bounds');\n\t\tif (start === end)\n\t\t\tthrow new Error(\n\t\t\t\t'Cannot overwrite a zero-length range – use appendLeft or prependRight instead'\n\t\t\t);\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\n\t\tif (options === true) {\n\t\t\tif (!warned.storeName) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'The final argument to magicString.overwrite(...) should be an options object. See https://github.com/rich-harris/magic-string'\n\t\t\t\t); // eslint-disable-line no-console\n\t\t\t\twarned.storeName = true;\n\t\t\t}\n\n\t\t\toptions = { storeName: true };\n\t\t}\n\t\tconst storeName = options !== undefined ? options.storeName : false;\n\t\tconst overwrite = options !== undefined ? options.overwrite : false;\n\n\t\tif (storeName) {\n\t\t\tconst original = this.original.slice(start, end);\n\t\t\tObject.defineProperty(this.storedNames, original, {\n\t\t\t\twritable: true,\n\t\t\t\tvalue: true,\n\t\t\t\tenumerable: true,\n\t\t\t});\n\t\t}\n\n\t\tconst first = this.byStart[start];\n\t\tconst last = this.byEnd[end];\n\n\t\tif (first) {\n\t\t\tlet chunk = first;\n\t\t\twhile (chunk !== last) {\n\t\t\t\tif (chunk.next !== this.byStart[chunk.end]) {\n\t\t\t\t\tthrow new Error('Cannot overwrite across a split point');\n\t\t\t\t}\n\t\t\t\tchunk = chunk.next;\n\t\t\t\tchunk.edit('', false);\n\t\t\t}\n\n\t\t\tfirst.edit(content, storeName, !overwrite);\n\t\t} else {\n\t\t\t// must be inserting at the end\n\t\t\tconst newChunk = new Chunk$1(start, end, '').edit(content, storeName);\n\n\t\t\t// TODO last chunk in the array may not be the last chunk, if it's moved...\n\t\t\tlast.next = newChunk;\n\t\t\tnewChunk.previous = last;\n\t\t}\n\t\treturn this;\n\t}\n\n\tprepend(content) {\n\t\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\n\n\t\tthis.intro = content + this.intro;\n\t\treturn this;\n\t}\n\n\tprependLeft(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byEnd[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.prependLeft(content);\n\t\t} else {\n\t\t\tthis.intro = content + this.intro;\n\t\t}\n\t\treturn this;\n\t}\n\n\tprependRight(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byStart[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.prependRight(content);\n\t\t} else {\n\t\t\tthis.outro = content + this.outro;\n\t\t}\n\t\treturn this;\n\t}\n\n\tremove(start, end) {\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tif (start === end) return this;\n\n\t\tif (start < 0 || end > this.original.length) throw new Error('Character is out of bounds');\n\t\tif (start > end) throw new Error('end must be greater than start');\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\n\t\tlet chunk = this.byStart[start];\n\n\t\twhile (chunk) {\n\t\t\tchunk.intro = '';\n\t\t\tchunk.outro = '';\n\t\t\tchunk.edit('');\n\n\t\t\tchunk = end > chunk.end ? this.byStart[chunk.end] : null;\n\t\t}\n\t\treturn this;\n\t}\n\n\tlastChar() {\n\t\tif (this.outro.length) return this.outro[this.outro.length - 1];\n\t\tlet chunk = this.lastChunk;\n\t\tdo {\n\t\t\tif (chunk.outro.length) return chunk.outro[chunk.outro.length - 1];\n\t\t\tif (chunk.content.length) return chunk.content[chunk.content.length - 1];\n\t\t\tif (chunk.intro.length) return chunk.intro[chunk.intro.length - 1];\n\t\t} while ((chunk = chunk.previous));\n\t\tif (this.intro.length) return this.intro[this.intro.length - 1];\n\t\treturn '';\n\t}\n\n\tlastLine() {\n\t\tlet lineIndex = this.outro.lastIndexOf(n);\n\t\tif (lineIndex !== -1) return this.outro.substr(lineIndex + 1);\n\t\tlet lineStr = this.outro;\n\t\tlet chunk = this.lastChunk;\n\t\tdo {\n\t\t\tif (chunk.outro.length > 0) {\n\t\t\t\tlineIndex = chunk.outro.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.outro.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.outro + lineStr;\n\t\t\t}\n\n\t\t\tif (chunk.content.length > 0) {\n\t\t\t\tlineIndex = chunk.content.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.content.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.content + lineStr;\n\t\t\t}\n\n\t\t\tif (chunk.intro.length > 0) {\n\t\t\t\tlineIndex = chunk.intro.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.intro.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.intro + lineStr;\n\t\t\t}\n\t\t} while ((chunk = chunk.previous));\n\t\tlineIndex = this.intro.lastIndexOf(n);\n\t\tif (lineIndex !== -1) return this.intro.substr(lineIndex + 1) + lineStr;\n\t\treturn this.intro + lineStr;\n\t}\n\n\tslice(start = 0, end = this.original.length) {\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tlet result = '';\n\n\t\t// find start chunk\n\t\tlet chunk = this.firstChunk;\n\t\twhile (chunk && (chunk.start > start || chunk.end <= start)) {\n\t\t\t// found end chunk before start\n\t\t\tif (chunk.start < end && chunk.end >= end) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tif (chunk && chunk.edited && chunk.start !== start)\n\t\t\tthrow new Error(`Cannot use replaced character ${start} as slice start anchor.`);\n\n\t\tconst startChunk = chunk;\n\t\twhile (chunk) {\n\t\t\tif (chunk.intro && (startChunk !== chunk || chunk.start === start)) {\n\t\t\t\tresult += chunk.intro;\n\t\t\t}\n\n\t\t\tconst containsEnd = chunk.start < end && chunk.end >= end;\n\t\t\tif (containsEnd && chunk.edited && chunk.end !== end)\n\t\t\t\tthrow new Error(`Cannot use replaced character ${end} as slice end anchor.`);\n\n\t\t\tconst sliceStart = startChunk === chunk ? start - chunk.start : 0;\n\t\t\tconst sliceEnd = containsEnd ? chunk.content.length + end - chunk.end : chunk.content.length;\n\n\t\t\tresult += chunk.content.slice(sliceStart, sliceEnd);\n\n\t\t\tif (chunk.outro && (!containsEnd || chunk.end === end)) {\n\t\t\t\tresult += chunk.outro;\n\t\t\t}\n\n\t\t\tif (containsEnd) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t// TODO deprecate this? not really very useful\n\tsnip(start, end) {\n\t\tconst clone = this.clone();\n\t\tclone.remove(0, start);\n\t\tclone.remove(end, clone.original.length);\n\n\t\treturn clone;\n\t}\n\n\t_split(index) {\n\t\tif (this.byStart[index] || this.byEnd[index]) return;\n\n\t\tlet chunk = this.lastSearchedChunk;\n\t\tconst searchForward = index > chunk.end;\n\n\t\twhile (chunk) {\n\t\t\tif (chunk.contains(index)) return this._splitChunk(chunk, index);\n\n\t\t\tchunk = searchForward ? this.byStart[chunk.end] : this.byEnd[chunk.start];\n\t\t}\n\t}\n\n\t_splitChunk(chunk, index) {\n\t\tif (chunk.edited && chunk.content.length) {\n\t\t\t// zero-length edited chunks are a special case (overlapping replacements)\n\t\t\tconst loc = getLocator$1(this.original)(index);\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot split a chunk that has already been edited (${loc.line}:${loc.column} – \"${chunk.original}\")`\n\t\t\t);\n\t\t}\n\n\t\tconst newChunk = chunk.split(index);\n\n\t\tthis.byEnd[index] = chunk;\n\t\tthis.byStart[index] = newChunk;\n\t\tthis.byEnd[newChunk.end] = newChunk;\n\n\t\tif (chunk === this.lastChunk) this.lastChunk = newChunk;\n\n\t\tthis.lastSearchedChunk = chunk;\n\t\treturn true;\n\t}\n\n\ttoString() {\n\t\tlet str = this.intro;\n\n\t\tlet chunk = this.firstChunk;\n\t\twhile (chunk) {\n\t\t\tstr += chunk.toString();\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn str + this.outro;\n\t}\n\n\tisEmpty() {\n\t\tlet chunk = this.firstChunk;\n\t\tdo {\n\t\t\tif (\n\t\t\t\t(chunk.intro.length && chunk.intro.trim()) ||\n\t\t\t\t(chunk.content.length && chunk.content.trim()) ||\n\t\t\t\t(chunk.outro.length && chunk.outro.trim())\n\t\t\t)\n\t\t\t\treturn false;\n\t\t} while ((chunk = chunk.next));\n\t\treturn true;\n\t}\n\n\tlength() {\n\t\tlet chunk = this.firstChunk;\n\t\tlet length = 0;\n\t\tdo {\n\t\t\tlength += chunk.intro.length + chunk.content.length + chunk.outro.length;\n\t\t} while ((chunk = chunk.next));\n\t\treturn length;\n\t}\n\n\ttrimLines() {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t}\n\n\ttrim(charType) {\n\t\treturn this.trimStart(charType).trimEnd(charType);\n\t}\n\n\ttrimEndAborted(charType) {\n\t\tconst rx = new RegExp((charType || '\\\\s') + '+$');\n\n\t\tthis.outro = this.outro.replace(rx, '');\n\t\tif (this.outro.length) return true;\n\n\t\tlet chunk = this.lastChunk;\n\n\t\tdo {\n\t\t\tconst end = chunk.end;\n\t\t\tconst aborted = chunk.trimEnd(rx);\n\n\t\t\t// if chunk was trimmed, we have a new lastChunk\n\t\t\tif (chunk.end !== end) {\n\t\t\t\tif (this.lastChunk === chunk) {\n\t\t\t\t\tthis.lastChunk = chunk.next;\n\t\t\t\t}\n\n\t\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t\t}\n\n\t\t\tif (aborted) return true;\n\t\t\tchunk = chunk.previous;\n\t\t} while (chunk);\n\n\t\treturn false;\n\t}\n\n\ttrimEnd(charType) {\n\t\tthis.trimEndAborted(charType);\n\t\treturn this;\n\t}\n\ttrimStartAborted(charType) {\n\t\tconst rx = new RegExp('^' + (charType || '\\\\s') + '+');\n\n\t\tthis.intro = this.intro.replace(rx, '');\n\t\tif (this.intro.length) return true;\n\n\t\tlet chunk = this.firstChunk;\n\n\t\tdo {\n\t\t\tconst end = chunk.end;\n\t\t\tconst aborted = chunk.trimStart(rx);\n\n\t\t\tif (chunk.end !== end) {\n\t\t\t\t// special case...\n\t\t\t\tif (chunk === this.lastChunk) this.lastChunk = chunk.next;\n\n\t\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t\t}\n\n\t\t\tif (aborted) return true;\n\t\t\tchunk = chunk.next;\n\t\t} while (chunk);\n\n\t\treturn false;\n\t}\n\n\ttrimStart(charType) {\n\t\tthis.trimStartAborted(charType);\n\t\treturn this;\n\t}\n\n\thasChanged() {\n\t\treturn this.original !== this.toString();\n\t}\n\n\t_replaceRegexp(searchValue, replacement) {\n\t\tfunction getReplacement(match, str) {\n\t\t\tif (typeof replacement === 'string') {\n\t\t\t\treturn replacement.replace(/\\$(\\$|&|\\d+)/g, (_, i) => {\n\t\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_string_as_a_parameter\n\t\t\t\t\tif (i === '$') return '$';\n\t\t\t\t\tif (i === '&') return match[0];\n\t\t\t\t\tconst num = +i;\n\t\t\t\t\tif (num < match.length) return match[+i];\n\t\t\t\t\treturn `$${i}`;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn replacement(...match, match.index, str, match.groups);\n\t\t\t}\n\t\t}\n\t\tfunction matchAll(re, str) {\n\t\t\tlet match;\n\t\t\tconst matches = [];\n\t\t\twhile ((match = re.exec(str))) {\n\t\t\t\tmatches.push(match);\n\t\t\t}\n\t\t\treturn matches;\n\t\t}\n\t\tif (searchValue.global) {\n\t\t\tconst matches = matchAll(searchValue, this.original);\n\t\t\tmatches.forEach((match) => {\n\t\t\t\tif (match.index != null)\n\t\t\t\t\tthis.overwrite(\n\t\t\t\t\t\tmatch.index,\n\t\t\t\t\t\tmatch.index + match[0].length,\n\t\t\t\t\t\tgetReplacement(match, this.original)\n\t\t\t\t\t);\n\t\t\t});\n\t\t} else {\n\t\t\tconst match = this.original.match(searchValue);\n\t\t\tif (match && match.index != null)\n\t\t\t\tthis.overwrite(\n\t\t\t\t\tmatch.index,\n\t\t\t\t\tmatch.index + match[0].length,\n\t\t\t\t\tgetReplacement(match, this.original)\n\t\t\t\t);\n\t\t}\n\t\treturn this;\n\t}\n\n\t_replaceString(string, replacement) {\n\t\tconst { original } = this;\n\t\tconst index = original.indexOf(string);\n\n\t\tif (index !== -1) {\n\t\t\tthis.overwrite(index, index + string.length, replacement);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\treplace(searchValue, replacement) {\n\t\tif (typeof searchValue === 'string') {\n\t\t\treturn this._replaceString(searchValue, replacement);\n\t\t}\n\n\t\treturn this._replaceRegexp(searchValue, replacement);\n\t}\n\n\t_replaceAllString(string, replacement) {\n\t\tconst { original } = this;\n\t\tconst stringLength = string.length;\n\t\tfor (\n\t\t\tlet index = original.indexOf(string);\n\t\t\tindex !== -1;\n\t\t\tindex = original.indexOf(string, index + stringLength)\n\t\t) {\n\t\t\tthis.overwrite(index, index + stringLength, replacement);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\treplaceAll(searchValue, replacement) {\n\t\tif (typeof searchValue === 'string') {\n\t\t\treturn this._replaceAllString(searchValue, replacement);\n\t\t}\n\n\t\tif (!searchValue.global) {\n\t\t\tthrow new TypeError(\n\t\t\t\t'MagicString.prototype.replaceAll called with a non-global RegExp argument'\n\t\t\t);\n\t\t}\n\n\t\treturn this._replaceRegexp(searchValue, replacement);\n\t}\n}\n\nconst hasOwnProp = Object.prototype.hasOwnProperty;\n\nlet Bundle$1 = class Bundle {\n\tconstructor(options = {}) {\n\t\tthis.intro = options.intro || '';\n\t\tthis.separator = options.separator !== undefined ? options.separator : '\\n';\n\t\tthis.sources = [];\n\t\tthis.uniqueSources = [];\n\t\tthis.uniqueSourceIndexByFilename = {};\n\t}\n\n\taddSource(source) {\n\t\tif (source instanceof MagicString) {\n\t\t\treturn this.addSource({\n\t\t\t\tcontent: source,\n\t\t\t\tfilename: source.filename,\n\t\t\t\tseparator: this.separator,\n\t\t\t});\n\t\t}\n\n\t\tif (!isObject$1(source) || !source.content) {\n\t\t\tthrow new Error(\n\t\t\t\t'bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`'\n\t\t\t);\n\t\t}\n\n\t\t['filename', 'indentExclusionRanges', 'separator'].forEach((option) => {\n\t\t\tif (!hasOwnProp.call(source, option)) source[option] = source.content[option];\n\t\t});\n\n\t\tif (source.separator === undefined) {\n\t\t\t// TODO there's a bunch of this sort of thing, needs cleaning up\n\t\t\tsource.separator = this.separator;\n\t\t}\n\n\t\tif (source.filename) {\n\t\t\tif (!hasOwnProp.call(this.uniqueSourceIndexByFilename, source.filename)) {\n\t\t\t\tthis.uniqueSourceIndexByFilename[source.filename] = this.uniqueSources.length;\n\t\t\t\tthis.uniqueSources.push({ filename: source.filename, content: source.content.original });\n\t\t\t} else {\n\t\t\t\tconst uniqueSource = this.uniqueSources[this.uniqueSourceIndexByFilename[source.filename]];\n\t\t\t\tif (source.content.original !== uniqueSource.content) {\n\t\t\t\t\tthrow new Error(`Illegal source: same filename (${source.filename}), different contents`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.sources.push(source);\n\t\treturn this;\n\t}\n\n\tappend(str, options) {\n\t\tthis.addSource({\n\t\t\tcontent: new MagicString(str),\n\t\t\tseparator: (options && options.separator) || '',\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tclone() {\n\t\tconst bundle = new Bundle({\n\t\t\tintro: this.intro,\n\t\t\tseparator: this.separator,\n\t\t});\n\n\t\tthis.sources.forEach((source) => {\n\t\t\tbundle.addSource({\n\t\t\t\tfilename: source.filename,\n\t\t\t\tcontent: source.content.clone(),\n\t\t\t\tseparator: source.separator,\n\t\t\t});\n\t\t});\n\n\t\treturn bundle;\n\t}\n\n\tgenerateDecodedMap(options = {}) {\n\t\tconst names = [];\n\t\tthis.sources.forEach((source) => {\n\t\t\tObject.keys(source.content.storedNames).forEach((name) => {\n\t\t\t\tif (!~names.indexOf(name)) names.push(name);\n\t\t\t});\n\t\t});\n\n\t\tconst mappings = new Mappings(options.hires);\n\n\t\tif (this.intro) {\n\t\t\tmappings.advance(this.intro);\n\t\t}\n\n\t\tthis.sources.forEach((source, i) => {\n\t\t\tif (i > 0) {\n\t\t\t\tmappings.advance(this.separator);\n\t\t\t}\n\n\t\t\tconst sourceIndex = source.filename ? this.uniqueSourceIndexByFilename[source.filename] : -1;\n\t\t\tconst magicString = source.content;\n\t\t\tconst locate = getLocator$1(magicString.original);\n\n\t\t\tif (magicString.intro) {\n\t\t\t\tmappings.advance(magicString.intro);\n\t\t\t}\n\n\t\t\tmagicString.firstChunk.eachNext((chunk) => {\n\t\t\t\tconst loc = locate(chunk.start);\n\n\t\t\t\tif (chunk.intro.length) mappings.advance(chunk.intro);\n\n\t\t\t\tif (source.filename) {\n\t\t\t\t\tif (chunk.edited) {\n\t\t\t\t\t\tmappings.addEdit(\n\t\t\t\t\t\t\tsourceIndex,\n\t\t\t\t\t\t\tchunk.content,\n\t\t\t\t\t\t\tloc,\n\t\t\t\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmappings.addUneditedChunk(\n\t\t\t\t\t\t\tsourceIndex,\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tmagicString.original,\n\t\t\t\t\t\t\tloc,\n\t\t\t\t\t\t\tmagicString.sourcemapLocations\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmappings.advance(chunk.content);\n\t\t\t\t}\n\n\t\t\t\tif (chunk.outro.length) mappings.advance(chunk.outro);\n\t\t\t});\n\n\t\t\tif (magicString.outro) {\n\t\t\t\tmappings.advance(magicString.outro);\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : null,\n\t\t\tsources: this.uniqueSources.map((source) => {\n\t\t\t\treturn options.file ? getRelativePath(options.file, source.filename) : source.filename;\n\t\t\t}),\n\t\t\tsourcesContent: this.uniqueSources.map((source) => {\n\t\t\t\treturn options.includeContent ? source.content : null;\n\t\t\t}),\n\t\t\tnames,\n\t\t\tmappings: mappings.raw,\n\t\t};\n\t}\n\n\tgenerateMap(options) {\n\t\treturn new SourceMap(this.generateDecodedMap(options));\n\t}\n\n\tgetIndentString() {\n\t\tconst indentStringCounts = {};\n\n\t\tthis.sources.forEach((source) => {\n\t\t\tconst indentStr = source.content._getRawIndentString();\n\n\t\t\tif (indentStr === null) return;\n\n\t\t\tif (!indentStringCounts[indentStr]) indentStringCounts[indentStr] = 0;\n\t\t\tindentStringCounts[indentStr] += 1;\n\t\t});\n\n\t\treturn (\n\t\t\tObject.keys(indentStringCounts).sort((a, b) => {\n\t\t\t\treturn indentStringCounts[a] - indentStringCounts[b];\n\t\t\t})[0] || '\\t'\n\t\t);\n\t}\n\n\tindent(indentStr) {\n\t\tif (!arguments.length) {\n\t\t\tindentStr = this.getIndentString();\n\t\t}\n\n\t\tif (indentStr === '') return this; // noop\n\n\t\tlet trailingNewline = !this.intro || this.intro.slice(-1) === '\\n';\n\n\t\tthis.sources.forEach((source, i) => {\n\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\tconst indentStart = trailingNewline || (i > 0 && /\\r?\\n$/.test(separator));\n\n\t\t\tsource.content.indent(indentStr, {\n\t\t\t\texclude: source.indentExclusionRanges,\n\t\t\t\tindentStart, //: trailingNewline || /\\r?\\n$/.test( separator )  //true///\\r?\\n/.test( separator )\n\t\t\t});\n\n\t\t\ttrailingNewline = source.content.lastChar() === '\\n';\n\t\t});\n\n\t\tif (this.intro) {\n\t\t\tthis.intro =\n\t\t\t\tindentStr +\n\t\t\t\tthis.intro.replace(/^[^\\n]/gm, (match, index) => {\n\t\t\t\t\treturn index > 0 ? indentStr + match : match;\n\t\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tprepend(str) {\n\t\tthis.intro = str + this.intro;\n\t\treturn this;\n\t}\n\n\ttoString() {\n\t\tconst body = this.sources\n\t\t\t.map((source, i) => {\n\t\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\t\tconst str = (i > 0 ? separator : '') + source.content.toString();\n\n\t\t\t\treturn str;\n\t\t\t})\n\t\t\t.join('');\n\n\t\treturn this.intro + body;\n\t}\n\n\tisEmpty() {\n\t\tif (this.intro.length && this.intro.trim()) return false;\n\t\tif (this.sources.some((source) => !source.content.isEmpty())) return false;\n\t\treturn true;\n\t}\n\n\tlength() {\n\t\treturn this.sources.reduce(\n\t\t\t(length, source) => length + source.content.length(),\n\t\t\tthis.intro.length\n\t\t);\n\t}\n\n\ttrimLines() {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t}\n\n\ttrim(charType) {\n\t\treturn this.trimStart(charType).trimEnd(charType);\n\t}\n\n\ttrimStart(charType) {\n\t\tconst rx = new RegExp('^' + (charType || '\\\\s') + '+');\n\t\tthis.intro = this.intro.replace(rx, '');\n\n\t\tif (!this.intro) {\n\t\t\tlet source;\n\t\t\tlet i = 0;\n\n\t\t\tdo {\n\t\t\t\tsource = this.sources[i++];\n\t\t\t\tif (!source) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} while (!source.content.trimStartAborted(charType));\n\t\t}\n\n\t\treturn this;\n\t}\n\n\ttrimEnd(charType) {\n\t\tconst rx = new RegExp((charType || '\\\\s') + '+$');\n\n\t\tlet source;\n\t\tlet i = this.sources.length - 1;\n\n\t\tdo {\n\t\t\tsource = this.sources[i--];\n\t\t\tif (!source) {\n\t\t\t\tthis.intro = this.intro.replace(rx, '');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while (!source.content.trimEndAborted(charType));\n\n\t\treturn this;\n\t}\n};\n\nconst ANY_SLASH_REGEX = /[/\\\\]/;\nfunction relative(from, to) {\n    const fromParts = from.split(ANY_SLASH_REGEX).filter(Boolean);\n    const toParts = to.split(ANY_SLASH_REGEX).filter(Boolean);\n    if (fromParts[0] === '.')\n        fromParts.shift();\n    if (toParts[0] === '.')\n        toParts.shift();\n    while (fromParts[0] && toParts[0] && fromParts[0] === toParts[0]) {\n        fromParts.shift();\n        toParts.shift();\n    }\n    while (toParts[0] === '..' && fromParts.length > 0) {\n        toParts.shift();\n        fromParts.pop();\n    }\n    while (fromParts.pop()) {\n        toParts.unshift('..');\n    }\n    return toParts.join('/');\n}\n\nconst needsEscapeRegEx = /[\\n\\r'\\\\\\u2028\\u2029]/;\nconst quoteNewlineRegEx = /([\\n\\r'\\u2028\\u2029])/g;\nconst backSlashRegEx = /\\\\/g;\nfunction escapeId(id) {\n    if (!needsEscapeRegEx.test(id))\n        return id;\n    return id.replace(backSlashRegEx, '\\\\\\\\').replace(quoteNewlineRegEx, '\\\\$1');\n}\n\nconst ABSOLUTE_PATH_REGEX = /^(?:\\/|(?:[A-Za-z]:)?[/\\\\|])/;\nconst RELATIVE_PATH_REGEX = /^\\.?\\.(\\/|$)/;\nfunction isAbsolute(path) {\n    return ABSOLUTE_PATH_REGEX.test(path);\n}\nfunction isRelative(path) {\n    return RELATIVE_PATH_REGEX.test(path);\n}\nconst BACKSLASH_REGEX = /\\\\/g;\nfunction normalize(path) {\n    return path.replace(BACKSLASH_REGEX, '/');\n}\n\nfunction getAliasName(id) {\n    const base = basename(id);\n    return base.slice(0, Math.max(0, base.length - extname(id).length));\n}\nfunction relativeId(id) {\n    if (!isAbsolute(id))\n        return id;\n    return relative(resolve(), id);\n}\nfunction isPathFragment(name) {\n    // starting with \"/\", \"./\", \"../\", \"C:/\"\n    return (name[0] === '/' || (name[0] === '.' && (name[1] === '/' || name[1] === '.')) || isAbsolute(name));\n}\nconst UPPER_DIR_REGEX = /^(\\.\\.\\/)*\\.\\.$/;\nfunction getImportPath(importerId, targetPath, stripJsExtension, ensureFileName) {\n    let relativePath = normalize(relative(dirname(importerId), targetPath));\n    if (stripJsExtension && relativePath.endsWith('.js')) {\n        relativePath = relativePath.slice(0, -3);\n    }\n    if (ensureFileName) {\n        if (relativePath === '')\n            return '../' + basename(targetPath);\n        if (UPPER_DIR_REGEX.test(relativePath)) {\n            return [...relativePath.split('/'), '..', basename(targetPath)].join('/');\n        }\n    }\n    return relativePath ? (relativePath.startsWith('..') ? relativePath : './' + relativePath) : '.';\n}\n\nclass ExternalChunk {\n    constructor(module, options, inputBase) {\n        this.options = options;\n        this.inputBase = inputBase;\n        this.defaultVariableName = '';\n        this.namespaceVariableName = '';\n        this.variableName = '';\n        this.fileName = null;\n        this.importAssertions = null;\n        this.id = module.id;\n        this.moduleInfo = module.info;\n        this.renormalizeRenderPath = module.renormalizeRenderPath;\n        this.suggestedVariableName = module.suggestedVariableName;\n    }\n    getFileName() {\n        if (this.fileName) {\n            return this.fileName;\n        }\n        const { paths } = this.options;\n        return (this.fileName =\n            (typeof paths === 'function' ? paths(this.id) : paths[this.id]) ||\n                (this.renormalizeRenderPath ? normalize(relative$1(this.inputBase, this.id)) : this.id));\n    }\n    getImportAssertions(snippets) {\n        return (this.importAssertions || (this.importAssertions = formatAssertions$1(this.options.format === 'es' &&\n            this.options.externalImportAssertions &&\n            this.moduleInfo.assertions, snippets)));\n    }\n    getImportPath(importer) {\n        return escapeId(this.renormalizeRenderPath\n            ? getImportPath(importer, this.getFileName(), this.options.format === 'amd', false)\n            : this.getFileName());\n    }\n}\nfunction formatAssertions$1(assertions, { getObject }) {\n    if (!assertions) {\n        return null;\n    }\n    const assertionEntries = Object.entries(assertions).map(([key, value]) => [key, `'${value}'`]);\n    if (assertionEntries.length > 0) {\n        return getObject(assertionEntries, { lineBreakIndent: null });\n    }\n    return null;\n}\n\nfunction getOrCreate(map, key, init) {\n    const existing = map.get(key);\n    if (existing !== undefined) {\n        return existing;\n    }\n    const value = init();\n    map.set(key, value);\n    return value;\n}\nfunction getNewSet() {\n    return new Set();\n}\nfunction getNewArray() {\n    return [];\n}\n\nconst UnknownKey = Symbol('Unknown Key');\nconst UnknownNonAccessorKey = Symbol('Unknown Non-Accessor Key');\nconst UnknownInteger = Symbol('Unknown Integer');\nconst SymbolToStringTag = Symbol('Symbol.toStringTag');\nconst EMPTY_PATH = [];\nconst UNKNOWN_PATH = [UnknownKey];\n// For deoptimizations, this means we are modifying an unknown property but did\n// not lose track of the object or are creating a setter/getter;\n// For assignment effects it means we do not check for setter/getter effects\n// but only if something is mutated that is included, which is relevant for\n// Object.defineProperty\nconst UNKNOWN_NON_ACCESSOR_PATH = [UnknownNonAccessorKey];\nconst UNKNOWN_INTEGER_PATH = [UnknownInteger];\nconst EntitiesKey = Symbol('Entities');\nclass PathTracker {\n    constructor() {\n        this.entityPaths = Object.create(null, {\n            [EntitiesKey]: { value: new Set() }\n        });\n    }\n    trackEntityAtPathAndGetIfTracked(path, entity) {\n        const trackedEntities = this.getEntities(path);\n        if (trackedEntities.has(entity))\n            return true;\n        trackedEntities.add(entity);\n        return false;\n    }\n    withTrackedEntityAtPath(path, entity, onUntracked, returnIfTracked) {\n        const trackedEntities = this.getEntities(path);\n        if (trackedEntities.has(entity))\n            return returnIfTracked;\n        trackedEntities.add(entity);\n        const result = onUntracked();\n        trackedEntities.delete(entity);\n        return result;\n    }\n    getEntities(path) {\n        let currentPaths = this.entityPaths;\n        for (const pathSegment of path) {\n            currentPaths = currentPaths[pathSegment] =\n                currentPaths[pathSegment] ||\n                    Object.create(null, { [EntitiesKey]: { value: new Set() } });\n        }\n        return currentPaths[EntitiesKey];\n    }\n}\nconst SHARED_RECURSION_TRACKER = new PathTracker();\nclass DiscriminatedPathTracker {\n    constructor() {\n        this.entityPaths = Object.create(null, {\n            [EntitiesKey]: { value: new Map() }\n        });\n    }\n    trackEntityAtPathAndGetIfTracked(path, discriminator, entity) {\n        let currentPaths = this.entityPaths;\n        for (const pathSegment of path) {\n            currentPaths = currentPaths[pathSegment] =\n                currentPaths[pathSegment] ||\n                    Object.create(null, { [EntitiesKey]: { value: new Map() } });\n        }\n        const trackedEntities = getOrCreate(currentPaths[EntitiesKey], discriminator, (getNewSet));\n        if (trackedEntities.has(entity))\n            return true;\n        trackedEntities.add(entity);\n        return false;\n    }\n}\n\nconst UnknownValue = Symbol('Unknown Value');\nconst UnknownTruthyValue = Symbol('Unknown Truthy Value');\nclass ExpressionEntity {\n    constructor() {\n        this.included = false;\n    }\n    deoptimizePath(_path) { }\n    deoptimizeThisOnInteractionAtPath({ thisArg }, _path, _recursionTracker) {\n        thisArg.deoptimizePath(UNKNOWN_PATH);\n    }\n    /**\n     * If possible it returns a stringifyable literal value for this node that can be used\n     * for inlining or comparing values.\n     * Otherwise, it should return UnknownValue.\n     */\n    getLiteralValueAtPath(_path, _recursionTracker, _origin) {\n        return UnknownValue;\n    }\n    getReturnExpressionWhenCalledAtPath(_path, _interaction, _recursionTracker, _origin) {\n        return UNKNOWN_RETURN_EXPRESSION;\n    }\n    hasEffectsOnInteractionAtPath(_path, _interaction, _context) {\n        return true;\n    }\n    include(_context, _includeChildrenRecursively, _options) {\n        this.included = true;\n    }\n    includeCallArguments(context, parameters) {\n        for (const argument of parameters) {\n            argument.include(context, false);\n        }\n    }\n    shouldBeIncluded(_context) {\n        return true;\n    }\n}\nconst UNKNOWN_EXPRESSION = new (class UnknownExpression extends ExpressionEntity {\n})();\nconst UNKNOWN_RETURN_EXPRESSION = [\n    UNKNOWN_EXPRESSION,\n    false\n];\n\nconst INTERACTION_ACCESSED = 0;\nconst INTERACTION_ASSIGNED = 1;\nconst INTERACTION_CALLED = 2;\nconst NODE_INTERACTION_UNKNOWN_ACCESS = {\n    thisArg: null,\n    type: INTERACTION_ACCESSED\n};\nconst UNKNOWN_ARG = [UNKNOWN_EXPRESSION];\nconst NODE_INTERACTION_UNKNOWN_ASSIGNMENT = {\n    args: UNKNOWN_ARG,\n    thisArg: null,\n    type: INTERACTION_ASSIGNED\n};\nconst NO_ARGS = [];\n// While this is technically a call without arguments, we can compare against\n// this reference in places where precise values or thisArg would make a\n// difference\nconst NODE_INTERACTION_UNKNOWN_CALL = {\n    args: NO_ARGS,\n    thisArg: null,\n    type: INTERACTION_CALLED,\n    withNew: false\n};\n\nclass Variable extends ExpressionEntity {\n    constructor(name) {\n        super();\n        this.name = name;\n        this.alwaysRendered = false;\n        this.forbiddenNames = null;\n        this.initReached = false;\n        this.isId = false;\n        this.isReassigned = false;\n        this.kind = null;\n        this.renderBaseName = null;\n        this.renderName = null;\n    }\n    /**\n     * Binds identifiers that reference this variable to this variable.\n     * Necessary to be able to change variable names.\n     */\n    addReference(_identifier) { }\n    /**\n     * Prevent this variable from being renamed to this name to avoid name\n     * collisions\n     */\n    forbidName(name) {\n        (this.forbiddenNames || (this.forbiddenNames = new Set())).add(name);\n    }\n    getBaseVariableName() {\n        return this.renderBaseName || this.renderName || this.name;\n    }\n    getName(getPropertyAccess, useOriginalName) {\n        if (useOriginalName?.(this)) {\n            return this.name;\n        }\n        const name = this.renderName || this.name;\n        return this.renderBaseName ? `${this.renderBaseName}${getPropertyAccess(name)}` : name;\n    }\n    hasEffectsOnInteractionAtPath(path, { type }, _context) {\n        return type !== INTERACTION_ACCESSED || path.length > 0;\n    }\n    /**\n     * Marks this variable as being part of the bundle, which is usually the case when one of\n     * its identifiers becomes part of the bundle. Returns true if it has not been included\n     * previously.\n     * Once a variable is included, it should take care all its declarations are included.\n     */\n    include() {\n        this.included = true;\n    }\n    markCalledFromTryStatement() { }\n    setRenderNames(baseName, name) {\n        this.renderBaseName = baseName;\n        this.renderName = name;\n    }\n}\n\nclass ExternalVariable extends Variable {\n    constructor(module, name) {\n        super(name);\n        this.referenced = false;\n        this.module = module;\n        this.isNamespace = name === '*';\n    }\n    addReference(identifier) {\n        this.referenced = true;\n        if (this.name === 'default' || this.name === '*') {\n            this.module.suggestName(identifier.name);\n        }\n    }\n    hasEffectsOnInteractionAtPath(path, { type }) {\n        return type !== INTERACTION_ACCESSED || path.length > (this.isNamespace ? 1 : 0);\n    }\n    include() {\n        if (!this.included) {\n            this.included = true;\n            this.module.used = true;\n        }\n    }\n}\n\nconst BLANK = Object.freeze(Object.create(null));\nconst EMPTY_OBJECT = Object.freeze({});\nconst EMPTY_ARRAY = Object.freeze([]);\n\nfunction getLocator(source, options) {\n    if (options === void 0) { options = {}; }\n    var offsetLine = options.offsetLine || 0;\n    var offsetColumn = options.offsetColumn || 0;\n    var originalLines = source.split('\\n');\n    var start = 0;\n    var lineRanges = originalLines.map(function (line, i) {\n        var end = start + line.length + 1;\n        var range = { start: start, end: end, line: i };\n        start = end;\n        return range;\n    });\n    var i = 0;\n    function rangeContains(range, index) {\n        return range.start <= index && index < range.end;\n    }\n    function getLocation(range, index) {\n        return { line: offsetLine + range.line, column: offsetColumn + index - range.start, character: index };\n    }\n    function locate(search, startIndex) {\n        if (typeof search === 'string') {\n            search = source.indexOf(search, startIndex || 0);\n        }\n        var range = lineRanges[i];\n        var d = search >= range.end ? 1 : -1;\n        while (range) {\n            if (rangeContains(range, search))\n                return getLocation(range, search);\n            i += d;\n            range = lineRanges[i];\n        }\n    }\n    return locate;\n}\nfunction locate(source, search, options) {\n    if (typeof options === 'number') {\n        throw new Error('locate takes a { startIndex, offsetLine, offsetColumn } object as the third argument');\n    }\n    return getLocator(source, options)(search, options && options.startIndex);\n}\n\nfunction spaces(index) {\n    let result = '';\n    while (index--)\n        result += ' ';\n    return result;\n}\nfunction tabsToSpaces(value) {\n    return value.replace(/^\\t+/, match => match.split('\\t').join('  '));\n}\nconst LINE_TRUNCATE_LENGTH = 120;\nconst MIN_CHARACTERS_SHOWN_AFTER_LOCATION = 10;\nconst ELLIPSIS = '...';\nfunction getCodeFrame(source, line, column) {\n    let lines = source.split('\\n');\n    const maxLineLength = Math.max(tabsToSpaces(lines[line - 1].slice(0, column)).length +\n        MIN_CHARACTERS_SHOWN_AFTER_LOCATION +\n        ELLIPSIS.length, LINE_TRUNCATE_LENGTH);\n    const frameStart = Math.max(0, line - 3);\n    let frameEnd = Math.min(line + 2, lines.length);\n    lines = lines.slice(frameStart, frameEnd);\n    while (!/\\S/.test(lines[lines.length - 1])) {\n        lines.pop();\n        frameEnd -= 1;\n    }\n    const digits = String(frameEnd).length;\n    return lines\n        .map((sourceLine, index) => {\n        const isErrorLine = frameStart + index + 1 === line;\n        let lineNumber = String(index + frameStart + 1);\n        while (lineNumber.length < digits)\n            lineNumber = ` ${lineNumber}`;\n        let displayedLine = tabsToSpaces(sourceLine);\n        if (displayedLine.length > maxLineLength) {\n            displayedLine = `${displayedLine.slice(0, maxLineLength - ELLIPSIS.length)}${ELLIPSIS}`;\n        }\n        if (isErrorLine) {\n            const indicator = spaces(digits + 2 + tabsToSpaces(sourceLine.slice(0, column)).length) + '^';\n            return `${lineNumber}: ${displayedLine}\\n${indicator}`;\n        }\n        return `${lineNumber}: ${displayedLine}`;\n    })\n        .join('\\n');\n}\n\nfunction printQuotedStringList(list, verbs) {\n    const isSingleItem = list.length <= 1;\n    const quotedList = list.map(item => `\"${item}\"`);\n    let output = isSingleItem\n        ? quotedList[0]\n        : `${quotedList.slice(0, -1).join(', ')} and ${quotedList.slice(-1)[0]}`;\n    if (verbs) {\n        output += ` ${isSingleItem ? verbs[0] : verbs[1]}`;\n    }\n    return output;\n}\n\nfunction isValidUrl(url) {\n    try {\n        new URL(url);\n    }\n    catch {\n        return false;\n    }\n    return true;\n}\nfunction getRollupUrl(snippet) {\n    return `https://rollupjs.org/${snippet}`;\n}\n\n// troubleshooting\nconst URL_AVOIDING_EVAL = 'troubleshooting/#avoiding-eval';\nconst URL_NAME_IS_NOT_EXPORTED = 'troubleshooting/#error-name-is-not-exported-by-module';\nconst URL_THIS_IS_UNDEFINED = 'troubleshooting/#error-this-is-undefined';\nconst URL_TREATING_MODULE_AS_EXTERNAL_DEPENDENCY = 'troubleshooting/#warning-treating-module-as-external-dependency';\nconst URL_SOURCEMAP_IS_LIKELY_TO_BE_INCORRECT = 'troubleshooting/#warning-sourcemap-is-likely-to-be-incorrect';\n// configuration-options\nconst URL_MAXPARALLELFILEOPS = 'configuration-options/#maxparallelfileops';\nconst URL_OUTPUT_AMD_ID = 'configuration-options/#output-amd-id';\nconst URL_OUTPUT_AMD_BASEPATH = 'configuration-options/#output-amd-basepath';\nconst URL_OUTPUT_DIR = 'configuration-options/#output-dir';\nconst URL_OUTPUT_DYNAMICIMPORTFUNCTION = 'configuration-options/#output-dynamicimportfunction';\nconst URL_OUTPUT_EXPORTS = 'configuration-options/#output-exports';\nconst URL_OUTPUT_EXTEND = 'configuration-options/#output-extend';\nconst URL_OUTPUT_FORMAT = 'configuration-options/#output-format';\nconst URL_OUTPUT_GENERATEDCODE = 'configuration-options/#output-generatedcode';\nconst URL_OUTPUT_EXPERIMENTALDEEPCHUNKOPTIMIZATION = 'configuration-options/#output-experimentaldeepdynamicchunkoptimization';\nconst URL_OUTPUT_GENERATEDCODE_CONSTBINDINGS = 'configuration-options/#output-generatedcode-constbindings';\nconst URL_OUTPUT_GENERATEDCODE_SYMBOLS = 'configuration-options/#output-generatedcode-symbols';\nconst URL_OUTPUT_GLOBALS = 'configuration-options/#output-globals';\nconst URL_OUTPUT_INLINEDYNAMICIMPORTS = 'configuration-options/#output-inlinedynamicimports';\nconst URL_OUTPUT_INTEROP = 'configuration-options/#output-interop';\nconst URL_OUTPUT_MANUALCHUNKS = 'configuration-options/#output-manualchunks';\nconst URL_OUTPUT_NAME = 'configuration-options/#output-name';\nconst URL_OUTPUT_PRESERVEMODULES = 'configuration-options/#output-preservemodules';\nconst URL_OUTPUT_SOURCEMAPBASEURL = 'configuration-options/#output-sourcemapbaseurl';\nconst URL_OUTPUT_SOURCEMAPFILE = 'configuration-options/#output-sourcemapfile';\nconst URL_PRESERVEENTRYSIGNATURES = 'configuration-options/#preserveentrysignatures';\nconst URL_TREESHAKE = 'configuration-options/#treeshake';\nconst URL_TREESHAKE_MODULESIDEEFFECTS = 'configuration-options/#treeshake-modulesideeffects';\nconst URL_WATCH = 'configuration-options/#watch';\nconst URL_RENDERDYNAMICIMPORT = 'plugin-development/#renderdynamicimport';\nconst URL_THIS_GETMODULEIDS = 'plugin-development/#this-getmoduleids';\nconst URL_THIS_GETMODULEINFO = 'plugin-development/#this-getmoduleinfo';\n\nfunction error(base) {\n    if (!(base instanceof Error)) {\n        base = Object.assign(new Error(base.message), base);\n        Object.defineProperty(base, 'name', { value: 'RollupError' });\n    }\n    throw base;\n}\nfunction augmentCodeLocation(properties, pos, source, id) {\n    if (typeof pos === 'object') {\n        const { line, column } = pos;\n        properties.loc = { column, file: id, line };\n    }\n    else {\n        properties.pos = pos;\n        const { line, column } = locate(source, pos, { offsetLine: 1 });\n        properties.loc = { column, file: id, line };\n    }\n    if (properties.frame === undefined) {\n        const { line, column } = properties.loc;\n        properties.frame = getCodeFrame(source, line, column);\n    }\n}\n// Error codes should be sorted alphabetically while errors should be sorted by\n// error code below\nconst ADDON_ERROR = 'ADDON_ERROR', ALREADY_CLOSED = 'ALREADY_CLOSED', AMBIGUOUS_EXTERNAL_NAMESPACES = 'AMBIGUOUS_EXTERNAL_NAMESPACES', ANONYMOUS_PLUGIN_CACHE = 'ANONYMOUS_PLUGIN_CACHE', ASSET_NOT_FINALISED = 'ASSET_NOT_FINALISED', ASSET_NOT_FOUND = 'ASSET_NOT_FOUND', ASSET_SOURCE_ALREADY_SET = 'ASSET_SOURCE_ALREADY_SET', ASSET_SOURCE_MISSING = 'ASSET_SOURCE_MISSING', BAD_LOADER = 'BAD_LOADER', CANNOT_CALL_NAMESPACE = 'CANNOT_CALL_NAMESPACE', CANNOT_EMIT_FROM_OPTIONS_HOOK = 'CANNOT_EMIT_FROM_OPTIONS_HOOK', CHUNK_NOT_GENERATED = 'CHUNK_NOT_GENERATED', CHUNK_INVALID = 'CHUNK_INVALID', CIRCULAR_DEPENDENCY = 'CIRCULAR_DEPENDENCY', CIRCULAR_REEXPORT = 'CIRCULAR_REEXPORT', CYCLIC_CROSS_CHUNK_REEXPORT = 'CYCLIC_CROSS_CHUNK_REEXPORT', DEPRECATED_FEATURE = 'DEPRECATED_FEATURE', DUPLICATE_PLUGIN_NAME = 'DUPLICATE_PLUGIN_NAME', EMPTY_BUNDLE = 'EMPTY_BUNDLE', EVAL = 'EVAL', EXTERNAL_SYNTHETIC_EXPORTS = 'EXTERNAL_SYNTHETIC_EXPORTS', FILE_NAME_CONFLICT = 'FILE_NAME_CONFLICT', FILE_NOT_FOUND = 'FILE_NOT_FOUND', ILLEGAL_IDENTIFIER_AS_NAME = 'ILLEGAL_IDENTIFIER_AS_NAME', ILLEGAL_REASSIGNMENT = 'ILLEGAL_REASSIGNMENT', INCONSISTENT_IMPORT_ASSERTIONS = 'INCONSISTENT_IMPORT_ASSERTIONS', INPUT_HOOK_IN_OUTPUT_PLUGIN = 'INPUT_HOOK_IN_OUTPUT_PLUGIN', INVALID_CHUNK = 'INVALID_CHUNK', INVALID_EXPORT_OPTION = 'INVALID_EXPORT_OPTION', INVALID_EXTERNAL_ID = 'INVALID_EXTERNAL_ID', INVALID_OPTION = 'INVALID_OPTION', INVALID_PLUGIN_HOOK = 'INVALID_PLUGIN_HOOK', INVALID_ROLLUP_PHASE = 'INVALID_ROLLUP_PHASE', INVALID_SETASSETSOURCE = 'INVALID_SETASSETSOURCE', INVALID_TLA_FORMAT = 'INVALID_TLA_FORMAT', MISSING_EXPORT = 'MISSING_EXPORT', MISSING_GLOBAL_NAME = 'MISSING_GLOBAL_NAME', MISSING_IMPLICIT_DEPENDANT = 'MISSING_IMPLICIT_DEPENDANT', MISSING_NAME_OPTION_FOR_IIFE_EXPORT = 'MISSING_NAME_OPTION_FOR_IIFE_EXPORT', MISSING_NODE_BUILTINS = 'MISSING_NODE_BUILTINS', MISSING_OPTION = 'MISSING_OPTION', MIXED_EXPORTS = 'MIXED_EXPORTS', MODULE_LEVEL_DIRECTIVE = 'MODULE_LEVEL_DIRECTIVE', NAMESPACE_CONFLICT = 'NAMESPACE_CONFLICT', NO_TRANSFORM_MAP_OR_AST_WITHOUT_CODE = 'NO_TRANSFORM_MAP_OR_AST_WITHOUT_CODE', PARSE_ERROR = 'PARSE_ERROR', PLUGIN_ERROR = 'PLUGIN_ERROR', SHIMMED_EXPORT = 'SHIMMED_EXPORT', SOURCEMAP_BROKEN = 'SOURCEMAP_BROKEN', SOURCEMAP_ERROR = 'SOURCEMAP_ERROR', SYNTHETIC_NAMED_EXPORTS_NEED_NAMESPACE_EXPORT = 'SYNTHETIC_NAMED_EXPORTS_NEED_NAMESPACE_EXPORT', THIS_IS_UNDEFINED = 'THIS_IS_UNDEFINED', UNEXPECTED_NAMED_IMPORT = 'UNEXPECTED_NAMED_IMPORT', UNKNOWN_OPTION = 'UNKNOWN_OPTION', UNRESOLVED_ENTRY = 'UNRESOLVED_ENTRY', UNRESOLVED_IMPORT = 'UNRESOLVED_IMPORT', UNUSED_EXTERNAL_IMPORT = 'UNUSED_EXTERNAL_IMPORT', VALIDATION_ERROR = 'VALIDATION_ERROR';\nfunction errorAddonNotGenerated(message, hook, plugin) {\n    return {\n        code: ADDON_ERROR,\n        message: `Could not retrieve \"${hook}\". Check configuration of plugin \"${plugin}\".\n\\tError Message: ${message}`\n    };\n}\nfunction errorAlreadyClosed() {\n    return {\n        code: ALREADY_CLOSED,\n        message: 'Bundle is already closed, no more calls to \"generate\" or \"write\" are allowed.'\n    };\n}\nfunction errorAmbiguousExternalNamespaces(binding, reexportingModule, usedModule, sources) {\n    return {\n        binding,\n        code: AMBIGUOUS_EXTERNAL_NAMESPACES,\n        ids: sources,\n        message: `Ambiguous external namespace resolution: \"${relativeId(reexportingModule)}\" re-exports \"${binding}\" from one of the external modules ${printQuotedStringList(sources.map(module => relativeId(module)))}, guessing \"${relativeId(usedModule)}\".`,\n        reexporter: reexportingModule\n    };\n}\nfunction errorAnonymousPluginCache() {\n    return {\n        code: ANONYMOUS_PLUGIN_CACHE,\n        message: 'A plugin is trying to use the Rollup cache but is not declaring a plugin name or cacheKey.'\n    };\n}\nfunction errorAssetNotFinalisedForFileName(name) {\n    return {\n        code: ASSET_NOT_FINALISED,\n        message: `Plugin error - Unable to get file name for asset \"${name}\". Ensure that the source is set and that generate is called first. If you reference assets via import.meta.ROLLUP_FILE_URL_<referenceId>, you need to either have set their source after \"renderStart\" or need to provide an explicit \"fileName\" when emitting them.`\n    };\n}\nfunction errorAssetReferenceIdNotFoundForSetSource(assetReferenceId) {\n    return {\n        code: ASSET_NOT_FOUND,\n        message: `Plugin error - Unable to set the source for unknown asset \"${assetReferenceId}\".`\n    };\n}\nfunction errorAssetSourceAlreadySet(name) {\n    return {\n        code: ASSET_SOURCE_ALREADY_SET,\n        message: `Unable to set the source for asset \"${name}\", source already set.`\n    };\n}\nfunction errorNoAssetSourceSet(assetName) {\n    return {\n        code: ASSET_SOURCE_MISSING,\n        message: `Plugin error creating asset \"${assetName}\" - no asset source set.`\n    };\n}\nfunction errorBadLoader(id) {\n    return {\n        code: BAD_LOADER,\n        message: `Error loading \"${relativeId(id)}\": plugin load hook should return a string, a { code, map } object, or nothing/null.`\n    };\n}\nfunction errorCannotCallNamespace(name) {\n    return {\n        code: CANNOT_CALL_NAMESPACE,\n        message: `Cannot call a namespace (\"${name}\").`\n    };\n}\nfunction errorCannotEmitFromOptionsHook() {\n    return {\n        code: CANNOT_EMIT_FROM_OPTIONS_HOOK,\n        message: `Cannot emit files or set asset sources in the \"outputOptions\" hook, use the \"renderStart\" hook instead.`\n    };\n}\nfunction errorChunkNotGeneratedForFileName(name) {\n    return {\n        code: CHUNK_NOT_GENERATED,\n        message: `Plugin error - Unable to get file name for emitted chunk \"${name}\". You can only get file names once chunks have been generated after the \"renderStart\" hook.`\n    };\n}\nfunction errorChunkInvalid({ fileName, code }, exception) {\n    const errorProperties = {\n        code: CHUNK_INVALID,\n        message: `Chunk \"${fileName}\" is not valid JavaScript: ${exception.message}.`\n    };\n    augmentCodeLocation(errorProperties, exception.loc, code, fileName);\n    return errorProperties;\n}\nfunction errorCircularDependency(cyclePath) {\n    return {\n        code: CIRCULAR_DEPENDENCY,\n        ids: cyclePath,\n        message: `Circular dependency: ${cyclePath.map(relativeId).join(' -> ')}`\n    };\n}\nfunction errorCircularReexport(exportName, exporter) {\n    return {\n        code: CIRCULAR_REEXPORT,\n        exporter,\n        message: `\"${exportName}\" cannot be exported from \"${relativeId(exporter)}\" as it is a reexport that references itself.`\n    };\n}\nfunction errorCyclicCrossChunkReexport(exportName, exporter, reexporter, importer, preserveModules) {\n    return {\n        code: CYCLIC_CROSS_CHUNK_REEXPORT,\n        exporter,\n        id: importer,\n        message: `Export \"${exportName}\" of module \"${relativeId(exporter)}\" was reexported through module \"${relativeId(reexporter)}\" while both modules are dependencies of each other and will end up in different chunks by current Rollup settings. This scenario is not well supported at the moment as it will produce a circular dependency between chunks and will likely lead to broken execution order.\\nEither change the import in \"${relativeId(importer)}\" to point directly to the exporting module or ${preserveModules ? 'do not use \"output.preserveModules\"' : 'reconfigure \"output.manualChunks\"'} to ensure these modules end up in the same chunk.`,\n        reexporter\n    };\n}\nfunction errorDeprecation(deprecation, urlSnippet, plugin) {\n    return {\n        code: DEPRECATED_FEATURE,\n        message: deprecation,\n        url: getRollupUrl(urlSnippet),\n        ...(plugin ? { plugin } : {})\n    };\n}\nfunction errorDuplicatePluginName(plugin) {\n    return {\n        code: DUPLICATE_PLUGIN_NAME,\n        message: `The plugin name ${plugin} is being used twice in the same build. Plugin names must be distinct or provide a cacheKey (please post an issue to the plugin if you are a plugin user).`\n    };\n}\nfunction errorEmptyChunk(chunkName) {\n    return {\n        code: EMPTY_BUNDLE,\n        message: `Generated an empty chunk: \"${chunkName}\".`,\n        names: [chunkName]\n    };\n}\nfunction errorEval(id) {\n    return {\n        code: EVAL,\n        id,\n        message: `Use of eval in \"${relativeId(id)}\" is strongly discouraged as it poses security risks and may cause issues with minification.`,\n        url: getRollupUrl(URL_AVOIDING_EVAL)\n    };\n}\nfunction errorExternalSyntheticExports(id, importer) {\n    return {\n        code: EXTERNAL_SYNTHETIC_EXPORTS,\n        exporter: id,\n        message: `External \"${id}\" cannot have \"syntheticNamedExports\" enabled (imported by \"${relativeId(importer)}\").`\n    };\n}\nfunction errorFileNameConflict(fileName) {\n    return {\n        code: FILE_NAME_CONFLICT,\n        message: `The emitted file \"${fileName}\" overwrites a previously emitted file of the same name.`\n    };\n}\nfunction errorFileReferenceIdNotFoundForFilename(assetReferenceId) {\n    return {\n        code: FILE_NOT_FOUND,\n        message: `Plugin error - Unable to get file name for unknown file \"${assetReferenceId}\".`\n    };\n}\nfunction errorIllegalIdentifierAsName(name) {\n    return {\n        code: ILLEGAL_IDENTIFIER_AS_NAME,\n        message: `Given name \"${name}\" is not a legal JS identifier. If you need this, you can try \"output.extend: true\".`,\n        url: getRollupUrl(URL_OUTPUT_EXTEND)\n    };\n}\nfunction errorIllegalImportReassignment(name, importingId) {\n    return {\n        code: ILLEGAL_REASSIGNMENT,\n        message: `Illegal reassignment of import \"${name}\" in \"${relativeId(importingId)}\".`\n    };\n}\nfunction errorInconsistentImportAssertions(existingAssertions, newAssertions, source, importer) {\n    return {\n        code: INCONSISTENT_IMPORT_ASSERTIONS,\n        message: `Module \"${relativeId(importer)}\" tried to import \"${relativeId(source)}\" with ${formatAssertions(newAssertions)} assertions, but it was already imported elsewhere with ${formatAssertions(existingAssertions)} assertions. Please ensure that import assertions for the same module are always consistent.`\n    };\n}\nconst formatAssertions = (assertions) => {\n    const entries = Object.entries(assertions);\n    if (entries.length === 0)\n        return 'no';\n    return entries.map(([key, value]) => `\"${key}\": \"${value}\"`).join(', ');\n};\nfunction errorInputHookInOutputPlugin(pluginName, hookName) {\n    return {\n        code: INPUT_HOOK_IN_OUTPUT_PLUGIN,\n        message: `The \"${hookName}\" hook used by the output plugin ${pluginName} is a build time hook and will not be run for that plugin. Either this plugin cannot be used as an output plugin, or it should have an option to configure it as an output plugin.`\n    };\n}\nfunction errorCannotAssignModuleToChunk(moduleId, assignToAlias, currentAlias) {\n    return {\n        code: INVALID_CHUNK,\n        message: `Cannot assign \"${relativeId(moduleId)}\" to the \"${assignToAlias}\" chunk as it is already in the \"${currentAlias}\" chunk.`\n    };\n}\nfunction errorInvalidExportOptionValue(optionValue) {\n    return {\n        code: INVALID_EXPORT_OPTION,\n        message: `\"output.exports\" must be \"default\", \"named\", \"none\", \"auto\", or left unspecified (defaults to \"auto\"), received \"${optionValue}\".`,\n        url: getRollupUrl(URL_OUTPUT_EXPORTS)\n    };\n}\nfunction errorIncompatibleExportOptionValue(optionValue, keys, entryModule) {\n    return {\n        code: INVALID_EXPORT_OPTION,\n        message: `\"${optionValue}\" was specified for \"output.exports\", but entry module \"${relativeId(entryModule)}\" has the following exports: ${printQuotedStringList(keys)}`,\n        url: getRollupUrl(URL_OUTPUT_EXPORTS)\n    };\n}\nfunction errorInternalIdCannotBeExternal(source, importer) {\n    return {\n        code: INVALID_EXTERNAL_ID,\n        message: `\"${source}\" is imported as an external by \"${relativeId(importer)}\", but is already an existing non-external module id.`\n    };\n}\nfunction errorInvalidOption(option, urlSnippet, explanation, value) {\n    return {\n        code: INVALID_OPTION,\n        message: `Invalid value ${value === undefined ? '' : `${JSON.stringify(value)} `}for option \"${option}\" - ${explanation}.`,\n        url: getRollupUrl(urlSnippet)\n    };\n}\nfunction errorInvalidAddonPluginHook(hook, plugin) {\n    return {\n        code: INVALID_PLUGIN_HOOK,\n        hook,\n        message: `Error running plugin hook \"${hook}\" for plugin \"${plugin}\", expected a string, a function hook or an object with a \"handler\" string or function.`,\n        plugin\n    };\n}\nfunction errorInvalidFunctionPluginHook(hook, plugin) {\n    return {\n        code: INVALID_PLUGIN_HOOK,\n        hook,\n        message: `Error running plugin hook \"${hook}\" for plugin \"${plugin}\", expected a function hook or an object with a \"handler\" function.`,\n        plugin\n    };\n}\nfunction errorInvalidRollupPhaseForAddWatchFile() {\n    return {\n        code: INVALID_ROLLUP_PHASE,\n        message: `Cannot call \"addWatchFile\" after the build has finished.`\n    };\n}\nfunction errorInvalidRollupPhaseForChunkEmission() {\n    return {\n        code: INVALID_ROLLUP_PHASE,\n        message: `Cannot emit chunks after module loading has finished.`\n    };\n}\nfunction errorInvalidSetAssetSourceCall() {\n    return {\n        code: INVALID_SETASSETSOURCE,\n        message: `setAssetSource cannot be called in transform for caching reasons. Use emitFile with a source, or call setAssetSource in another hook.`\n    };\n}\nfunction errorInvalidFormatForTopLevelAwait(id, format) {\n    return {\n        code: INVALID_TLA_FORMAT,\n        id,\n        message: `Module format \"${format}\" does not support top-level await. Use the \"es\" or \"system\" output formats rather.`\n    };\n}\nfunction errorMissingExport(binding, importingModule, exporter) {\n    const isJson = extname(exporter) === '.json';\n    return {\n        binding,\n        code: MISSING_EXPORT,\n        exporter,\n        id: importingModule,\n        message: `\"${binding}\" is not exported by \"${relativeId(exporter)}\", imported by \"${relativeId(importingModule)}\".${isJson ? ' (Note that you need @rollup/plugin-json to import JSON files)' : ''}`,\n        url: getRollupUrl(URL_NAME_IS_NOT_EXPORTED)\n    };\n}\nfunction errorMissingGlobalName(externalId, guess) {\n    return {\n        code: MISSING_GLOBAL_NAME,\n        id: externalId,\n        message: `No name was provided for external module \"${externalId}\" in \"output.globals\" – guessing \"${guess}\".`,\n        names: [guess],\n        url: getRollupUrl(URL_OUTPUT_GLOBALS)\n    };\n}\nfunction errorImplicitDependantCannotBeExternal(unresolvedId, implicitlyLoadedBefore) {\n    return {\n        code: MISSING_IMPLICIT_DEPENDANT,\n        message: `Module \"${relativeId(unresolvedId)}\" that should be implicitly loaded before \"${relativeId(implicitlyLoadedBefore)}\" cannot be external.`\n    };\n}\nfunction errorUnresolvedImplicitDependant(unresolvedId, implicitlyLoadedBefore) {\n    return {\n        code: MISSING_IMPLICIT_DEPENDANT,\n        message: `Module \"${relativeId(unresolvedId)}\" that should be implicitly loaded before \"${relativeId(implicitlyLoadedBefore)}\" could not be resolved.`\n    };\n}\nfunction errorImplicitDependantIsNotIncluded(module) {\n    const implicitDependencies = [...module.implicitlyLoadedBefore]\n        .map(dependency => relativeId(dependency.id))\n        .sort();\n    return {\n        code: MISSING_IMPLICIT_DEPENDANT,\n        message: `Module \"${relativeId(module.id)}\" that should be implicitly loaded before ${printQuotedStringList(implicitDependencies)} is not included in the module graph. Either it was not imported by an included module or only via a tree-shaken dynamic import, or no imported bindings were used and it had otherwise no side-effects.`\n    };\n}\nfunction errorMissingNameOptionForIifeExport() {\n    return {\n        code: MISSING_NAME_OPTION_FOR_IIFE_EXPORT,\n        message: `If you do not supply \"output.name\", you may not be able to access the exports of an IIFE bundle.`,\n        url: getRollupUrl(URL_OUTPUT_NAME)\n    };\n}\nfunction errorMissingNameOptionForUmdExport() {\n    return {\n        code: MISSING_NAME_OPTION_FOR_IIFE_EXPORT,\n        message: 'You must supply \"output.name\" for UMD bundles that have exports so that the exports are accessible in environments without a module loader.',\n        url: getRollupUrl(URL_OUTPUT_NAME)\n    };\n}\nfunction errorMissingNodeBuiltins(externalBuiltins) {\n    return {\n        code: MISSING_NODE_BUILTINS,\n        ids: externalBuiltins,\n        message: `Creating a browser bundle that depends on Node.js built-in modules (${printQuotedStringList(externalBuiltins)}). You might need to include https://github.com/FredKSchott/rollup-plugin-polyfill-node`\n    };\n}\n// eslint-disable-next-line unicorn/prevent-abbreviations\nfunction errorMissingFileOrDirOption() {\n    return {\n        code: MISSING_OPTION,\n        message: 'You must specify \"output.file\" or \"output.dir\" for the build.',\n        url: getRollupUrl(URL_OUTPUT_DIR)\n    };\n}\nfunction errorMixedExport(facadeModuleId, name) {\n    return {\n        code: MIXED_EXPORTS,\n        id: facadeModuleId,\n        message: `Entry module \"${relativeId(facadeModuleId)}\" is using named and default exports together. Consumers of your bundle will have to use \\`${name || 'chunk'}.default\\` to access the default export, which may not be what you want. Use \\`output.exports: \"named\"\\` to disable this warning.`,\n        url: getRollupUrl(URL_OUTPUT_EXPORTS)\n    };\n}\nfunction errorModuleLevelDirective(directive, id) {\n    return {\n        code: MODULE_LEVEL_DIRECTIVE,\n        id,\n        message: `Module level directives cause errors when bundled, \"${directive}\" in \"${relativeId(id)}\" was ignored.`\n    };\n}\nfunction errorNamespaceConflict(binding, reexportingModuleId, sources) {\n    return {\n        binding,\n        code: NAMESPACE_CONFLICT,\n        ids: sources,\n        message: `Conflicting namespaces: \"${relativeId(reexportingModuleId)}\" re-exports \"${binding}\" from one of the modules ${printQuotedStringList(sources.map(moduleId => relativeId(moduleId)))} (will be ignored).`,\n        reexporter: reexportingModuleId\n    };\n}\nfunction errorNoTransformMapOrAstWithoutCode(pluginName) {\n    return {\n        code: NO_TRANSFORM_MAP_OR_AST_WITHOUT_CODE,\n        message: `The plugin \"${pluginName}\" returned a \"map\" or \"ast\" without returning ` +\n            'a \"code\". This will be ignored.'\n    };\n}\nfunction errorParseError(error, moduleId) {\n    let message = error.message.replace(/ \\(\\d+:\\d+\\)$/, '');\n    if (moduleId.endsWith('.json')) {\n        message += ' (Note that you need @rollup/plugin-json to import JSON files)';\n    }\n    else if (!moduleId.endsWith('.js')) {\n        message += ' (Note that you need plugins to import files that are not JavaScript)';\n    }\n    return {\n        cause: error,\n        code: PARSE_ERROR,\n        id: moduleId,\n        message\n    };\n}\nfunction errorPluginError(error, plugin, { hook, id } = {}) {\n    if (typeof error === 'string')\n        error = { message: error };\n    if (error.code && error.code !== PLUGIN_ERROR) {\n        error.pluginCode = error.code;\n    }\n    error.code = PLUGIN_ERROR;\n    error.plugin = plugin;\n    if (hook) {\n        error.hook = hook;\n    }\n    if (id) {\n        error.id = id;\n    }\n    return error;\n}\nfunction errorShimmedExport(id, binding) {\n    return {\n        binding,\n        code: SHIMMED_EXPORT,\n        exporter: id,\n        message: `Missing export \"${binding}\" has been shimmed in module \"${relativeId(id)}\".`\n    };\n}\nfunction errorSourcemapBroken(plugin) {\n    return {\n        code: SOURCEMAP_BROKEN,\n        message: `Sourcemap is likely to be incorrect: a plugin (${plugin}) was used to transform files, but didn't generate a sourcemap for the transformation. Consult the plugin documentation for help`,\n        plugin,\n        url: getRollupUrl(URL_SOURCEMAP_IS_LIKELY_TO_BE_INCORRECT)\n    };\n}\nfunction errorConflictingSourcemapSources(filename) {\n    return {\n        code: SOURCEMAP_BROKEN,\n        message: `Multiple conflicting contents for sourcemap source ${filename}`\n    };\n}\nfunction errorInvalidSourcemapForError(error, id, column, line, pos) {\n    return {\n        cause: error,\n        code: SOURCEMAP_ERROR,\n        id,\n        loc: {\n            column,\n            file: id,\n            line\n        },\n        message: `Error when using sourcemap for reporting an error: ${error.message}`,\n        pos\n    };\n}\nfunction errorSyntheticNamedExportsNeedNamespaceExport(id, syntheticNamedExportsOption) {\n    return {\n        code: SYNTHETIC_NAMED_EXPORTS_NEED_NAMESPACE_EXPORT,\n        exporter: id,\n        message: `Module \"${relativeId(id)}\" that is marked with \\`syntheticNamedExports: ${JSON.stringify(syntheticNamedExportsOption)}\\` needs ${typeof syntheticNamedExportsOption === 'string' && syntheticNamedExportsOption !== 'default'\n            ? `an explicit export named \"${syntheticNamedExportsOption}\"`\n            : 'a default export'} that does not reexport an unresolved named export of the same module.`\n    };\n}\nfunction errorThisIsUndefined() {\n    return {\n        code: THIS_IS_UNDEFINED,\n        message: `The 'this' keyword is equivalent to 'undefined' at the top level of an ES module, and has been rewritten`,\n        url: getRollupUrl(URL_THIS_IS_UNDEFINED)\n    };\n}\nfunction errorUnexpectedNamedImport(id, imported, isReexport) {\n    const importType = isReexport ? 'reexport' : 'import';\n    return {\n        code: UNEXPECTED_NAMED_IMPORT,\n        exporter: id,\n        message: `The named export \"${imported}\" was ${importType}ed from the external module \"${relativeId(id)}\" even though its interop type is \"defaultOnly\". Either remove or change this ${importType} or change the value of the \"output.interop\" option.`,\n        url: getRollupUrl(URL_OUTPUT_INTEROP)\n    };\n}\nfunction errorUnexpectedNamespaceReexport(id) {\n    return {\n        code: UNEXPECTED_NAMED_IMPORT,\n        exporter: id,\n        message: `There was a namespace \"*\" reexport from the external module \"${relativeId(id)}\" even though its interop type is \"defaultOnly\". This will be ignored as namespace reexports only reexport named exports. If this is not intended, either remove or change this reexport or change the value of the \"output.interop\" option.`,\n        url: getRollupUrl(URL_OUTPUT_INTEROP)\n    };\n}\nfunction errorUnknownOption(optionType, unknownOptions, validOptions) {\n    return {\n        code: UNKNOWN_OPTION,\n        message: `Unknown ${optionType}: ${unknownOptions.join(', ')}. Allowed options: ${validOptions.join(', ')}`\n    };\n}\nfunction errorEntryCannotBeExternal(unresolvedId) {\n    return {\n        code: UNRESOLVED_ENTRY,\n        message: `Entry module \"${relativeId(unresolvedId)}\" cannot be external.`\n    };\n}\nfunction errorUnresolvedEntry(unresolvedId) {\n    return {\n        code: UNRESOLVED_ENTRY,\n        message: `Could not resolve entry module \"${relativeId(unresolvedId)}\".`\n    };\n}\nfunction errorUnresolvedImport(source, importer) {\n    return {\n        code: UNRESOLVED_IMPORT,\n        exporter: source,\n        id: importer,\n        message: `Could not resolve \"${source}\" from \"${relativeId(importer)}\"`\n    };\n}\nfunction errorUnresolvedImportTreatedAsExternal(source, importer) {\n    return {\n        code: UNRESOLVED_IMPORT,\n        exporter: source,\n        id: importer,\n        message: `\"${source}\" is imported by \"${relativeId(importer)}\", but could not be resolved – treating it as an external dependency.`,\n        url: getRollupUrl(URL_TREATING_MODULE_AS_EXTERNAL_DEPENDENCY)\n    };\n}\nfunction errorUnusedExternalImports(externalId, names, importers) {\n    return {\n        code: UNUSED_EXTERNAL_IMPORT,\n        exporter: externalId,\n        ids: importers,\n        message: `${printQuotedStringList(names, [\n            'is',\n            'are'\n        ])} imported from external module \"${externalId}\" but never used in ${printQuotedStringList(importers.map(importer => relativeId(importer)))}.`,\n        names\n    };\n}\nfunction errorFailedValidation(message) {\n    return {\n        code: VALIDATION_ERROR,\n        message\n    };\n}\nfunction warnDeprecation(deprecation, urlSnippet, activeDeprecation, options, plugin) {\n    warnDeprecationWithOptions(deprecation, urlSnippet, activeDeprecation, options.onwarn, options.strictDeprecations, plugin);\n}\nfunction warnDeprecationWithOptions(deprecation, urlSnippet, activeDeprecation, warn, strictDeprecations, plugin) {\n    if (activeDeprecation || strictDeprecations) {\n        const warning = errorDeprecation(deprecation, urlSnippet, plugin);\n        if (strictDeprecations) {\n            return error(warning);\n        }\n        warn(warning);\n    }\n}\n\nconst RESERVED_NAMES = new Set([\n    'await',\n    'break',\n    'case',\n    'catch',\n    'class',\n    'const',\n    'continue',\n    'debugger',\n    'default',\n    'delete',\n    'do',\n    'else',\n    'enum',\n    'eval',\n    'export',\n    'extends',\n    'false',\n    'finally',\n    'for',\n    'function',\n    'if',\n    'implements',\n    'import',\n    'in',\n    'instanceof',\n    'interface',\n    'let',\n    'NaN',\n    'new',\n    'null',\n    'package',\n    'private',\n    'protected',\n    'public',\n    'return',\n    'static',\n    'super',\n    'switch',\n    'this',\n    'throw',\n    'true',\n    'try',\n    'typeof',\n    'undefined',\n    'var',\n    'void',\n    'while',\n    'with',\n    'yield'\n]);\nconst RESERVED_NAMES$1 = RESERVED_NAMES;\n\nconst illegalCharacters = /[^\\w$]/g;\nconst startsWithDigit = (value) => /\\d/.test(value[0]);\nconst needsEscape = (value) => startsWithDigit(value) || RESERVED_NAMES$1.has(value) || value === 'arguments';\nfunction isLegal(value) {\n    if (needsEscape(value)) {\n        return false;\n    }\n    return !illegalCharacters.test(value);\n}\nfunction makeLegal(value) {\n    value = value\n        .replace(/-(\\w)/g, (_, letter) => letter.toUpperCase())\n        .replace(illegalCharacters, '_');\n    if (needsEscape(value))\n        value = `_${value}`;\n    return value || '_';\n}\n\nclass ExternalModule {\n    constructor(options, id, moduleSideEffects, meta, renormalizeRenderPath, assertions) {\n        this.options = options;\n        this.id = id;\n        this.renormalizeRenderPath = renormalizeRenderPath;\n        this.dynamicImporters = [];\n        this.execIndex = Infinity;\n        this.exportedVariables = new Map();\n        this.importers = [];\n        this.reexported = false;\n        this.used = false;\n        this.declarations = new Map();\n        this.mostCommonSuggestion = 0;\n        this.nameSuggestions = new Map();\n        this.suggestedVariableName = makeLegal(id.split(/[/\\\\]/).pop());\n        const { importers, dynamicImporters } = this;\n        const info = (this.info = {\n            assertions,\n            ast: null,\n            code: null,\n            dynamicallyImportedIdResolutions: EMPTY_ARRAY,\n            dynamicallyImportedIds: EMPTY_ARRAY,\n            get dynamicImporters() {\n                return dynamicImporters.sort();\n            },\n            exportedBindings: null,\n            exports: null,\n            hasDefaultExport: null,\n            get hasModuleSideEffects() {\n                warnDeprecation('Accessing ModuleInfo.hasModuleSideEffects from plugins is deprecated. Please use ModuleInfo.moduleSideEffects instead.', URL_THIS_GETMODULEINFO, true, options);\n                return info.moduleSideEffects;\n            },\n            id,\n            implicitlyLoadedAfterOneOf: EMPTY_ARRAY,\n            implicitlyLoadedBefore: EMPTY_ARRAY,\n            importedIdResolutions: EMPTY_ARRAY,\n            importedIds: EMPTY_ARRAY,\n            get importers() {\n                return importers.sort();\n            },\n            isEntry: false,\n            isExternal: true,\n            isIncluded: null,\n            meta,\n            moduleSideEffects,\n            syntheticNamedExports: false\n        });\n        // Hide the deprecated key so that it only warns when accessed explicitly\n        Object.defineProperty(this.info, 'hasModuleSideEffects', {\n            enumerable: false\n        });\n    }\n    getVariableForExportName(name) {\n        const declaration = this.declarations.get(name);\n        if (declaration)\n            return [declaration];\n        const externalVariable = new ExternalVariable(this, name);\n        this.declarations.set(name, externalVariable);\n        this.exportedVariables.set(externalVariable, name);\n        return [externalVariable];\n    }\n    suggestName(name) {\n        const value = (this.nameSuggestions.get(name) ?? 0) + 1;\n        this.nameSuggestions.set(name, value);\n        if (value > this.mostCommonSuggestion) {\n            this.mostCommonSuggestion = value;\n            this.suggestedVariableName = name;\n        }\n    }\n    warnUnusedImports() {\n        const unused = [...this.declarations]\n            .filter(([name, declaration]) => name !== '*' && !declaration.included && !this.reexported && !declaration.referenced)\n            .map(([name]) => name);\n        if (unused.length === 0)\n            return;\n        const importersSet = new Set();\n        for (const name of unused) {\n            for (const importer of this.declarations.get(name).module.importers) {\n                importersSet.add(importer);\n            }\n        }\n        const importersArray = [...importersSet];\n        this.options.onwarn(errorUnusedExternalImports(this.id, unused, importersArray));\n    }\n}\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction getAugmentedNamespace(n) {\n  if (n.__esModule) return n;\n  var f = n.default;\n\tif (typeof f == \"function\") {\n\t\tvar a = function a () {\n\t\t\tif (this instanceof a) {\n\t\t\t\tvar args = [null];\n\t\t\t\targs.push.apply(args, arguments);\n\t\t\t\tvar Ctor = Function.bind.apply(f, args);\n\t\t\t\treturn new Ctor();\n\t\t\t}\n\t\t\treturn f.apply(this, arguments);\n\t\t};\n\t\ta.prototype = f.prototype;\n  } else a = {};\n  Object.defineProperty(a, '__esModule', {value: true});\n\tObject.keys(n).forEach(function (k) {\n\t\tvar d = Object.getOwnPropertyDescriptor(n, k);\n\t\tObject.defineProperty(a, k, d.get ? d : {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn n[k];\n\t\t\t}\n\t\t});\n\t});\n\treturn a;\n}\n\nvar picomatchExports = {};\nvar picomatch$1 = {\n  get exports(){ return picomatchExports; },\n  set exports(v){ picomatchExports = v; },\n};\n\nvar utils$3 = {};\n\nconst path$1 = require$$0$1;\nconst WIN_SLASH = '\\\\\\\\/';\nconst WIN_NO_SLASH = `[^${WIN_SLASH}]`;\n\n/**\n * Posix glob regex\n */\n\nconst DOT_LITERAL = '\\\\.';\nconst PLUS_LITERAL = '\\\\+';\nconst QMARK_LITERAL = '\\\\?';\nconst SLASH_LITERAL = '\\\\/';\nconst ONE_CHAR = '(?=.)';\nconst QMARK = '[^/]';\nconst END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;\nconst START_ANCHOR = `(?:^|${SLASH_LITERAL})`;\nconst DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;\nconst NO_DOT = `(?!${DOT_LITERAL})`;\nconst NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;\nconst NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;\nconst NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;\nconst QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;\nconst STAR = `${QMARK}*?`;\n\nconst POSIX_CHARS = {\n  DOT_LITERAL,\n  PLUS_LITERAL,\n  QMARK_LITERAL,\n  SLASH_LITERAL,\n  ONE_CHAR,\n  QMARK,\n  END_ANCHOR,\n  DOTS_SLASH,\n  NO_DOT,\n  NO_DOTS,\n  NO_DOT_SLASH,\n  NO_DOTS_SLASH,\n  QMARK_NO_DOT,\n  STAR,\n  START_ANCHOR\n};\n\n/**\n * Windows glob regex\n */\n\nconst WINDOWS_CHARS = {\n  ...POSIX_CHARS,\n\n  SLASH_LITERAL: `[${WIN_SLASH}]`,\n  QMARK: WIN_NO_SLASH,\n  STAR: `${WIN_NO_SLASH}*?`,\n  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,\n  NO_DOT: `(?!${DOT_LITERAL})`,\n  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,\n  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,\n  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,\n  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`\n};\n\n/**\n * POSIX Bracket Regex\n */\n\nconst POSIX_REGEX_SOURCE$1 = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  ascii: '\\\\x00-\\\\x7F',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E ',\n  punct: '\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word: 'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9'\n};\n\nvar constants$2 = {\n  MAX_LENGTH: 1024 * 64,\n  POSIX_REGEX_SOURCE: POSIX_REGEX_SOURCE$1,\n\n  // regular expressions\n  REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\n  REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\n  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\n  REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\n  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\n  REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\n\n  // Replace globs with equivalent patterns to reduce parsing time.\n  REPLACEMENTS: {\n    '***': '*',\n    '**/**': '**',\n    '**/**/**': '**'\n  },\n\n  // Digits\n  CHAR_0: 48, /* 0 */\n  CHAR_9: 57, /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 65, /* A */\n  CHAR_LOWERCASE_A: 97, /* a */\n  CHAR_UPPERCASE_Z: 90, /* Z */\n  CHAR_LOWERCASE_Z: 122, /* z */\n\n  CHAR_LEFT_PARENTHESES: 40, /* ( */\n  CHAR_RIGHT_PARENTHESES: 41, /* ) */\n\n  CHAR_ASTERISK: 42, /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: 38, /* & */\n  CHAR_AT: 64, /* @ */\n  CHAR_BACKWARD_SLASH: 92, /* \\ */\n  CHAR_CARRIAGE_RETURN: 13, /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */\n  CHAR_COLON: 58, /* : */\n  CHAR_COMMA: 44, /* , */\n  CHAR_DOT: 46, /* . */\n  CHAR_DOUBLE_QUOTE: 34, /* \" */\n  CHAR_EQUAL: 61, /* = */\n  CHAR_EXCLAMATION_MARK: 33, /* ! */\n  CHAR_FORM_FEED: 12, /* \\f */\n  CHAR_FORWARD_SLASH: 47, /* / */\n  CHAR_GRAVE_ACCENT: 96, /* ` */\n  CHAR_HASH: 35, /* # */\n  CHAR_HYPHEN_MINUS: 45, /* - */\n  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */\n  CHAR_LEFT_CURLY_BRACE: 123, /* { */\n  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */\n  CHAR_LINE_FEED: 10, /* \\n */\n  CHAR_NO_BREAK_SPACE: 160, /* \\u00A0 */\n  CHAR_PERCENT: 37, /* % */\n  CHAR_PLUS: 43, /* + */\n  CHAR_QUESTION_MARK: 63, /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */\n  CHAR_RIGHT_CURLY_BRACE: 125, /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */\n  CHAR_SEMICOLON: 59, /* ; */\n  CHAR_SINGLE_QUOTE: 39, /* ' */\n  CHAR_SPACE: 32, /*   */\n  CHAR_TAB: 9, /* \\t */\n  CHAR_UNDERSCORE: 95, /* _ */\n  CHAR_VERTICAL_LINE: 124, /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \\uFEFF */\n\n  SEP: path$1.sep,\n\n  /**\n   * Create EXTGLOB_CHARS\n   */\n\n  extglobChars(chars) {\n    return {\n      '!': { type: 'negate', open: '(?:(?!(?:', close: `))${chars.STAR})` },\n      '?': { type: 'qmark', open: '(?:', close: ')?' },\n      '+': { type: 'plus', open: '(?:', close: ')+' },\n      '*': { type: 'star', open: '(?:', close: ')*' },\n      '@': { type: 'at', open: '(?:', close: ')' }\n    };\n  },\n\n  /**\n   * Create GLOB_CHARS\n   */\n\n  globChars(win32) {\n    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;\n  }\n};\n\n(function (exports) {\n\n\tconst path = require$$0$1;\n\tconst win32 = process.platform === 'win32';\n\tconst {\n\t  REGEX_BACKSLASH,\n\t  REGEX_REMOVE_BACKSLASH,\n\t  REGEX_SPECIAL_CHARS,\n\t  REGEX_SPECIAL_CHARS_GLOBAL\n\t} = constants$2;\n\n\texports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\n\texports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\n\texports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\n\texports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\n\texports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\n\n\texports.removeBackslashes = str => {\n\t  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\n\t    return match === '\\\\' ? '' : match;\n\t  });\n\t};\n\n\texports.supportsLookbehinds = () => {\n\t  const segs = process.version.slice(1).split('.').map(Number);\n\t  if (segs.length === 3 && segs[0] >= 9 || (segs[0] === 8 && segs[1] >= 10)) {\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\n\texports.isWindows = options => {\n\t  if (options && typeof options.windows === 'boolean') {\n\t    return options.windows;\n\t  }\n\t  return win32 === true || path.sep === '\\\\';\n\t};\n\n\texports.escapeLast = (input, char, lastIdx) => {\n\t  const idx = input.lastIndexOf(char, lastIdx);\n\t  if (idx === -1) return input;\n\t  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\n\t  return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\n\t};\n\n\texports.removePrefix = (input, state = {}) => {\n\t  let output = input;\n\t  if (output.startsWith('./')) {\n\t    output = output.slice(2);\n\t    state.prefix = './';\n\t  }\n\t  return output;\n\t};\n\n\texports.wrapOutput = (input, state = {}, options = {}) => {\n\t  const prepend = options.contains ? '' : '^';\n\t  const append = options.contains ? '' : '$';\n\n\t  let output = `${prepend}(?:${input})${append}`;\n\t  if (state.negated === true) {\n\t    output = `(?:^(?!${output}).*$)`;\n\t  }\n\t  return output;\n\t};\n} (utils$3));\n\nconst utils$2 = utils$3;\nconst {\n  CHAR_ASTERISK,             /* * */\n  CHAR_AT,                   /* @ */\n  CHAR_BACKWARD_SLASH,       /* \\ */\n  CHAR_COMMA,                /* , */\n  CHAR_DOT,                  /* . */\n  CHAR_EXCLAMATION_MARK,     /* ! */\n  CHAR_FORWARD_SLASH,        /* / */\n  CHAR_LEFT_CURLY_BRACE,     /* { */\n  CHAR_LEFT_PARENTHESES,     /* ( */\n  CHAR_LEFT_SQUARE_BRACKET,  /* [ */\n  CHAR_PLUS,                 /* + */\n  CHAR_QUESTION_MARK,        /* ? */\n  CHAR_RIGHT_CURLY_BRACE,    /* } */\n  CHAR_RIGHT_PARENTHESES,    /* ) */\n  CHAR_RIGHT_SQUARE_BRACKET  /* ] */\n} = constants$2;\n\nconst isPathSeparator = code => {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n};\n\nconst depth = token => {\n  if (token.isPrefix !== true) {\n    token.depth = token.isGlobstar ? Infinity : 1;\n  }\n};\n\n/**\n * Quickly scans a glob pattern and returns an object with a handful of\n * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),\n * `glob` (the actual pattern), `negated` (true if the path starts with `!` but not\n * with `!(`) and `negatedExtglob` (true if the path starts with `!(`).\n *\n * ```js\n * const pm = require('picomatch');\n * console.log(pm.scan('foo/bar/*.js'));\n * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {Object} Returns an object with tokens and regex source string.\n * @api public\n */\n\nconst scan$1 = (input, options) => {\n  const opts = options || {};\n\n  const length = input.length - 1;\n  const scanToEnd = opts.parts === true || opts.scanToEnd === true;\n  const slashes = [];\n  const tokens = [];\n  const parts = [];\n\n  let str = input;\n  let index = -1;\n  let start = 0;\n  let lastIndex = 0;\n  let isBrace = false;\n  let isBracket = false;\n  let isGlob = false;\n  let isExtglob = false;\n  let isGlobstar = false;\n  let braceEscaped = false;\n  let backslashes = false;\n  let negated = false;\n  let negatedExtglob = false;\n  let finished = false;\n  let braces = 0;\n  let prev;\n  let code;\n  let token = { value: '', depth: 0, isGlob: false };\n\n  const eos = () => index >= length;\n  const peek = () => str.charCodeAt(index + 1);\n  const advance = () => {\n    prev = code;\n    return str.charCodeAt(++index);\n  };\n\n  while (index < length) {\n    code = advance();\n    let next;\n\n    if (code === CHAR_BACKWARD_SLASH) {\n      backslashes = token.backslashes = true;\n      code = advance();\n\n      if (code === CHAR_LEFT_CURLY_BRACE) {\n        braceEscaped = true;\n      }\n      continue;\n    }\n\n    if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE) {\n      braces++;\n\n      while (eos() !== true && (code = advance())) {\n        if (code === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (code === CHAR_LEFT_CURLY_BRACE) {\n          braces++;\n          continue;\n        }\n\n        if (braceEscaped !== true && code === CHAR_DOT && (code = advance()) === CHAR_DOT) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (braceEscaped !== true && code === CHAR_COMMA) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (code === CHAR_RIGHT_CURLY_BRACE) {\n          braces--;\n\n          if (braces === 0) {\n            braceEscaped = false;\n            isBrace = token.isBrace = true;\n            finished = true;\n            break;\n          }\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (code === CHAR_FORWARD_SLASH) {\n      slashes.push(index);\n      tokens.push(token);\n      token = { value: '', depth: 0, isGlob: false };\n\n      if (finished === true) continue;\n      if (prev === CHAR_DOT && index === (start + 1)) {\n        start += 2;\n        continue;\n      }\n\n      lastIndex = index + 1;\n      continue;\n    }\n\n    if (opts.noext !== true) {\n      const isExtglobChar = code === CHAR_PLUS\n        || code === CHAR_AT\n        || code === CHAR_ASTERISK\n        || code === CHAR_QUESTION_MARK\n        || code === CHAR_EXCLAMATION_MARK;\n\n      if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES) {\n        isGlob = token.isGlob = true;\n        isExtglob = token.isExtglob = true;\n        finished = true;\n        if (code === CHAR_EXCLAMATION_MARK && index === start) {\n          negatedExtglob = true;\n        }\n\n        if (scanToEnd === true) {\n          while (eos() !== true && (code = advance())) {\n            if (code === CHAR_BACKWARD_SLASH) {\n              backslashes = token.backslashes = true;\n              code = advance();\n              continue;\n            }\n\n            if (code === CHAR_RIGHT_PARENTHESES) {\n              isGlob = token.isGlob = true;\n              finished = true;\n              break;\n            }\n          }\n          continue;\n        }\n        break;\n      }\n    }\n\n    if (code === CHAR_ASTERISK) {\n      if (prev === CHAR_ASTERISK) isGlobstar = token.isGlobstar = true;\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_QUESTION_MARK) {\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_LEFT_SQUARE_BRACKET) {\n      while (eos() !== true && (next = advance())) {\n        if (next === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          isBracket = token.isBracket = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n          break;\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {\n      negated = token.negated = true;\n      start++;\n      continue;\n    }\n\n    if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES) {\n      isGlob = token.isGlob = true;\n\n      if (scanToEnd === true) {\n        while (eos() !== true && (code = advance())) {\n          if (code === CHAR_LEFT_PARENTHESES) {\n            backslashes = token.backslashes = true;\n            code = advance();\n            continue;\n          }\n\n          if (code === CHAR_RIGHT_PARENTHESES) {\n            finished = true;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    if (isGlob === true) {\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n  }\n\n  if (opts.noext === true) {\n    isExtglob = false;\n    isGlob = false;\n  }\n\n  let base = str;\n  let prefix = '';\n  let glob = '';\n\n  if (start > 0) {\n    prefix = str.slice(0, start);\n    str = str.slice(start);\n    lastIndex -= start;\n  }\n\n  if (base && isGlob === true && lastIndex > 0) {\n    base = str.slice(0, lastIndex);\n    glob = str.slice(lastIndex);\n  } else if (isGlob === true) {\n    base = '';\n    glob = str;\n  } else {\n    base = str;\n  }\n\n  if (base && base !== '' && base !== '/' && base !== str) {\n    if (isPathSeparator(base.charCodeAt(base.length - 1))) {\n      base = base.slice(0, -1);\n    }\n  }\n\n  if (opts.unescape === true) {\n    if (glob) glob = utils$2.removeBackslashes(glob);\n\n    if (base && backslashes === true) {\n      base = utils$2.removeBackslashes(base);\n    }\n  }\n\n  const state = {\n    prefix,\n    input,\n    start,\n    base,\n    glob,\n    isBrace,\n    isBracket,\n    isGlob,\n    isExtglob,\n    isGlobstar,\n    negated,\n    negatedExtglob\n  };\n\n  if (opts.tokens === true) {\n    state.maxDepth = 0;\n    if (!isPathSeparator(code)) {\n      tokens.push(token);\n    }\n    state.tokens = tokens;\n  }\n\n  if (opts.parts === true || opts.tokens === true) {\n    let prevIndex;\n\n    for (let idx = 0; idx < slashes.length; idx++) {\n      const n = prevIndex ? prevIndex + 1 : start;\n      const i = slashes[idx];\n      const value = input.slice(n, i);\n      if (opts.tokens) {\n        if (idx === 0 && start !== 0) {\n          tokens[idx].isPrefix = true;\n          tokens[idx].value = prefix;\n        } else {\n          tokens[idx].value = value;\n        }\n        depth(tokens[idx]);\n        state.maxDepth += tokens[idx].depth;\n      }\n      if (idx !== 0 || value !== '') {\n        parts.push(value);\n      }\n      prevIndex = i;\n    }\n\n    if (prevIndex && prevIndex + 1 < input.length) {\n      const value = input.slice(prevIndex + 1);\n      parts.push(value);\n\n      if (opts.tokens) {\n        tokens[tokens.length - 1].value = value;\n        depth(tokens[tokens.length - 1]);\n        state.maxDepth += tokens[tokens.length - 1].depth;\n      }\n    }\n\n    state.slashes = slashes;\n    state.parts = parts;\n  }\n\n  return state;\n};\n\nvar scan_1 = scan$1;\n\nconst constants$1 = constants$2;\nconst utils$1 = utils$3;\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  POSIX_REGEX_SOURCE,\n  REGEX_NON_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_BACKREF,\n  REPLACEMENTS\n} = constants$1;\n\n/**\n * Helpers\n */\n\nconst expandRange = (args, options) => {\n  if (typeof options.expandRange === 'function') {\n    return options.expandRange(...args, options);\n  }\n\n  args.sort();\n  const value = `[${args.join('-')}]`;\n\n  return value;\n};\n\n/**\n * Create the message for a syntax error\n */\n\nconst syntaxError = (type, char) => {\n  return `Missing ${type}: \"${char}\" - use \"\\\\\\\\${char}\" to match literal characters`;\n};\n\n/**\n * Parse the given input string.\n * @param {String} input\n * @param {Object} options\n * @return {Object}\n */\n\nconst parse$2 = (input, options) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n\n  let len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  const bos = { type: 'bos', value: '', output: opts.prepend || '' };\n  const tokens = [bos];\n\n  const capture = opts.capture ? '' : '?:';\n  const win32 = utils$1.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const PLATFORM_CHARS = constants$1.globChars(win32);\n  const EXTGLOB_CHARS = constants$1.extglobChars(PLATFORM_CHARS);\n\n  const {\n    DOT_LITERAL,\n    PLUS_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOT_SLASH,\n    NO_DOTS_SLASH,\n    QMARK,\n    QMARK_NO_DOT,\n    STAR,\n    START_ANCHOR\n  } = PLATFORM_CHARS;\n\n  const globstar = opts => {\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const nodot = opts.dot ? '' : NO_DOT;\n  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;\n  let star = opts.bash === true ? globstar(opts) : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  // minimatch options support\n  if (typeof opts.noext === 'boolean') {\n    opts.noextglob = opts.noext;\n  }\n\n  const state = {\n    input,\n    index: -1,\n    start: 0,\n    dot: opts.dot === true,\n    consumed: '',\n    output: '',\n    prefix: '',\n    backtrack: false,\n    negated: false,\n    brackets: 0,\n    braces: 0,\n    parens: 0,\n    quotes: 0,\n    globstar: false,\n    tokens\n  };\n\n  input = utils$1.removePrefix(input, state);\n  len = input.length;\n\n  const extglobs = [];\n  const braces = [];\n  const stack = [];\n  let prev = bos;\n  let value;\n\n  /**\n   * Tokenizing helpers\n   */\n\n  const eos = () => state.index === len - 1;\n  const peek = state.peek = (n = 1) => input[state.index + n];\n  const advance = state.advance = () => input[++state.index] || '';\n  const remaining = () => input.slice(state.index + 1);\n  const consume = (value = '', num = 0) => {\n    state.consumed += value;\n    state.index += num;\n  };\n\n  const append = token => {\n    state.output += token.output != null ? token.output : token.value;\n    consume(token.value);\n  };\n\n  const negate = () => {\n    let count = 1;\n\n    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {\n      advance();\n      state.start++;\n      count++;\n    }\n\n    if (count % 2 === 0) {\n      return false;\n    }\n\n    state.negated = true;\n    state.start++;\n    return true;\n  };\n\n  const increment = type => {\n    state[type]++;\n    stack.push(type);\n  };\n\n  const decrement = type => {\n    state[type]--;\n    stack.pop();\n  };\n\n  /**\n   * Push tokens onto the tokens array. This helper speeds up\n   * tokenizing by 1) helping us avoid backtracking as much as possible,\n   * and 2) helping us avoid creating extra tokens when consecutive\n   * characters are plain text. This improves performance and simplifies\n   * lookbehinds.\n   */\n\n  const push = tok => {\n    if (prev.type === 'globstar') {\n      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');\n      const isExtglob = tok.extglob === true || (extglobs.length && (tok.type === 'pipe' || tok.type === 'paren'));\n\n      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {\n        state.output = state.output.slice(0, -prev.output.length);\n        prev.type = 'star';\n        prev.value = '*';\n        prev.output = star;\n        state.output += prev.output;\n      }\n    }\n\n    if (extglobs.length && tok.type !== 'paren') {\n      extglobs[extglobs.length - 1].inner += tok.value;\n    }\n\n    if (tok.value || tok.output) append(tok);\n    if (prev && prev.type === 'text' && tok.type === 'text') {\n      prev.value += tok.value;\n      prev.output = (prev.output || '') + tok.value;\n      return;\n    }\n\n    tok.prev = prev;\n    tokens.push(tok);\n    prev = tok;\n  };\n\n  const extglobOpen = (type, value) => {\n    const token = { ...EXTGLOB_CHARS[value], conditions: 1, inner: '' };\n\n    token.prev = prev;\n    token.parens = state.parens;\n    token.output = state.output;\n    const output = (opts.capture ? '(' : '') + token.open;\n\n    increment('parens');\n    push({ type, value, output: state.output ? '' : ONE_CHAR });\n    push({ type: 'paren', extglob: true, value: advance(), output });\n    extglobs.push(token);\n  };\n\n  const extglobClose = token => {\n    let output = token.close + (opts.capture ? ')' : '');\n    let rest;\n\n    if (token.type === 'negate') {\n      let extglobStar = star;\n\n      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {\n        extglobStar = globstar(opts);\n      }\n\n      if (extglobStar !== star || eos() || /^\\)+$/.test(remaining())) {\n        output = token.close = `)$))${extglobStar}`;\n      }\n\n      if (token.inner.includes('*') && (rest = remaining()) && /^\\.[^\\\\/.]+$/.test(rest)) {\n        // Any non-magical string (`.ts`) or even nested expression (`.{ts,tsx}`) can follow after the closing parenthesis.\n        // In this case, we need to parse the string and use it in the output of the original pattern.\n        // Suitable patterns: `/!(*.d).ts`, `/!(*.d).{ts,tsx}`, `**/!(*-dbg).@(js)`.\n        //\n        // Disabling the `fastpaths` option due to a problem with parsing strings as `.ts` in the pattern like `**/!(*.d).ts`.\n        const expression = parse$2(rest, { ...options, fastpaths: false }).output;\n\n        output = token.close = `)${expression})${extglobStar})`;\n      }\n\n      if (token.prev.type === 'bos') {\n        state.negatedExtglob = true;\n      }\n    }\n\n    push({ type: 'paren', extglob: true, value, output });\n    decrement('parens');\n  };\n\n  /**\n   * Fast paths\n   */\n\n  if (opts.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(input)) {\n    let backslashes = false;\n\n    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {\n      if (first === '\\\\') {\n        backslashes = true;\n        return m;\n      }\n\n      if (first === '?') {\n        if (esc) {\n          return esc + first + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        if (index === 0) {\n          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        return QMARK.repeat(chars.length);\n      }\n\n      if (first === '.') {\n        return DOT_LITERAL.repeat(chars.length);\n      }\n\n      if (first === '*') {\n        if (esc) {\n          return esc + first + (rest ? star : '');\n        }\n        return star;\n      }\n      return esc ? m : `\\\\${m}`;\n    });\n\n    if (backslashes === true) {\n      if (opts.unescape === true) {\n        output = output.replace(/\\\\/g, '');\n      } else {\n        output = output.replace(/\\\\+/g, m => {\n          return m.length % 2 === 0 ? '\\\\\\\\' : (m ? '\\\\' : '');\n        });\n      }\n    }\n\n    if (output === input && opts.contains === true) {\n      state.output = input;\n      return state;\n    }\n\n    state.output = utils$1.wrapOutput(output, state, options);\n    return state;\n  }\n\n  /**\n   * Tokenize input until we reach end-of-string\n   */\n\n  while (!eos()) {\n    value = advance();\n\n    if (value === '\\u0000') {\n      continue;\n    }\n\n    /**\n     * Escaped characters\n     */\n\n    if (value === '\\\\') {\n      const next = peek();\n\n      if (next === '/' && opts.bash !== true) {\n        continue;\n      }\n\n      if (next === '.' || next === ';') {\n        continue;\n      }\n\n      if (!next) {\n        value += '\\\\';\n        push({ type: 'text', value });\n        continue;\n      }\n\n      // collapse slashes to reduce potential for exploits\n      const match = /^\\\\+/.exec(remaining());\n      let slashes = 0;\n\n      if (match && match[0].length > 2) {\n        slashes = match[0].length;\n        state.index += slashes;\n        if (slashes % 2 !== 0) {\n          value += '\\\\';\n        }\n      }\n\n      if (opts.unescape === true) {\n        value = advance();\n      } else {\n        value += advance();\n      }\n\n      if (state.brackets === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n    }\n\n    /**\n     * If we're inside a regex character class, continue\n     * until we reach the closing bracket.\n     */\n\n    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {\n      if (opts.posix !== false && value === ':') {\n        const inner = prev.value.slice(1);\n        if (inner.includes('[')) {\n          prev.posix = true;\n\n          if (inner.includes(':')) {\n            const idx = prev.value.lastIndexOf('[');\n            const pre = prev.value.slice(0, idx);\n            const rest = prev.value.slice(idx + 2);\n            const posix = POSIX_REGEX_SOURCE[rest];\n            if (posix) {\n              prev.value = pre + posix;\n              state.backtrack = true;\n              advance();\n\n              if (!bos.output && tokens.indexOf(prev) === 1) {\n                bos.output = ONE_CHAR;\n              }\n              continue;\n            }\n          }\n        }\n      }\n\n      if ((value === '[' && peek() !== ':') || (value === '-' && peek() === ']')) {\n        value = `\\\\${value}`;\n      }\n\n      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {\n        value = `\\\\${value}`;\n      }\n\n      if (opts.posix === true && value === '!' && prev.value === '[') {\n        value = '^';\n      }\n\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * If we're inside a quoted string, continue\n     * until we reach the closing double quote.\n     */\n\n    if (state.quotes === 1 && value !== '\"') {\n      value = utils$1.escapeRegex(value);\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * Double quotes\n     */\n\n    if (value === '\"') {\n      state.quotes = state.quotes === 1 ? 0 : 1;\n      if (opts.keepQuotes === true) {\n        push({ type: 'text', value });\n      }\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === '(') {\n      increment('parens');\n      push({ type: 'paren', value });\n      continue;\n    }\n\n    if (value === ')') {\n      if (state.parens === 0 && opts.strictBrackets === true) {\n        throw new SyntaxError(syntaxError('opening', '('));\n      }\n\n      const extglob = extglobs[extglobs.length - 1];\n      if (extglob && state.parens === extglob.parens + 1) {\n        extglobClose(extglobs.pop());\n        continue;\n      }\n\n      push({ type: 'paren', value, output: state.parens ? ')' : '\\\\)' });\n      decrement('parens');\n      continue;\n    }\n\n    /**\n     * Square brackets\n     */\n\n    if (value === '[') {\n      if (opts.nobracket === true || !remaining().includes(']')) {\n        if (opts.nobracket !== true && opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('closing', ']'));\n        }\n\n        value = `\\\\${value}`;\n      } else {\n        increment('brackets');\n      }\n\n      push({ type: 'bracket', value });\n      continue;\n    }\n\n    if (value === ']') {\n      if (opts.nobracket === true || (prev && prev.type === 'bracket' && prev.value.length === 1)) {\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      if (state.brackets === 0) {\n        if (opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('opening', '['));\n        }\n\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      decrement('brackets');\n\n      const prevValue = prev.value.slice(1);\n      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {\n        value = `/${value}`;\n      }\n\n      prev.value += value;\n      append({ value });\n\n      // when literal brackets are explicitly disabled\n      // assume we should match with a regex character class\n      if (opts.literalBrackets === false || utils$1.hasRegexChars(prevValue)) {\n        continue;\n      }\n\n      const escaped = utils$1.escapeRegex(prev.value);\n      state.output = state.output.slice(0, -prev.value.length);\n\n      // when literal brackets are explicitly enabled\n      // assume we should escape the brackets to match literal characters\n      if (opts.literalBrackets === true) {\n        state.output += escaped;\n        prev.value = escaped;\n        continue;\n      }\n\n      // when the user specifies nothing, try to match both\n      prev.value = `(${capture}${escaped}|${prev.value})`;\n      state.output += prev.value;\n      continue;\n    }\n\n    /**\n     * Braces\n     */\n\n    if (value === '{' && opts.nobrace !== true) {\n      increment('braces');\n\n      const open = {\n        type: 'brace',\n        value,\n        output: '(',\n        outputIndex: state.output.length,\n        tokensIndex: state.tokens.length\n      };\n\n      braces.push(open);\n      push(open);\n      continue;\n    }\n\n    if (value === '}') {\n      const brace = braces[braces.length - 1];\n\n      if (opts.nobrace === true || !brace) {\n        push({ type: 'text', value, output: value });\n        continue;\n      }\n\n      let output = ')';\n\n      if (brace.dots === true) {\n        const arr = tokens.slice();\n        const range = [];\n\n        for (let i = arr.length - 1; i >= 0; i--) {\n          tokens.pop();\n          if (arr[i].type === 'brace') {\n            break;\n          }\n          if (arr[i].type !== 'dots') {\n            range.unshift(arr[i].value);\n          }\n        }\n\n        output = expandRange(range, opts);\n        state.backtrack = true;\n      }\n\n      if (brace.comma !== true && brace.dots !== true) {\n        const out = state.output.slice(0, brace.outputIndex);\n        const toks = state.tokens.slice(brace.tokensIndex);\n        brace.value = brace.output = '\\\\{';\n        value = output = '\\\\}';\n        state.output = out;\n        for (const t of toks) {\n          state.output += (t.output || t.value);\n        }\n      }\n\n      push({ type: 'brace', value, output });\n      decrement('braces');\n      braces.pop();\n      continue;\n    }\n\n    /**\n     * Pipes\n     */\n\n    if (value === '|') {\n      if (extglobs.length > 0) {\n        extglobs[extglobs.length - 1].conditions++;\n      }\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Commas\n     */\n\n    if (value === ',') {\n      let output = value;\n\n      const brace = braces[braces.length - 1];\n      if (brace && stack[stack.length - 1] === 'braces') {\n        brace.comma = true;\n        output = '|';\n      }\n\n      push({ type: 'comma', value, output });\n      continue;\n    }\n\n    /**\n     * Slashes\n     */\n\n    if (value === '/') {\n      // if the beginning of the glob is \"./\", advance the start\n      // to the current index, and don't add the \"./\" characters\n      // to the state. This greatly simplifies lookbehinds when\n      // checking for BOS characters like \"!\" and \".\" (not \"./\")\n      if (prev.type === 'dot' && state.index === state.start + 1) {\n        state.start = state.index + 1;\n        state.consumed = '';\n        state.output = '';\n        tokens.pop();\n        prev = bos; // reset \"prev\" to the first token\n        continue;\n      }\n\n      push({ type: 'slash', value, output: SLASH_LITERAL });\n      continue;\n    }\n\n    /**\n     * Dots\n     */\n\n    if (value === '.') {\n      if (state.braces > 0 && prev.type === 'dot') {\n        if (prev.value === '.') prev.output = DOT_LITERAL;\n        const brace = braces[braces.length - 1];\n        prev.type = 'dots';\n        prev.output += value;\n        prev.value += value;\n        brace.dots = true;\n        continue;\n      }\n\n      if ((state.braces + state.parens) === 0 && prev.type !== 'bos' && prev.type !== 'slash') {\n        push({ type: 'text', value, output: DOT_LITERAL });\n        continue;\n      }\n\n      push({ type: 'dot', value, output: DOT_LITERAL });\n      continue;\n    }\n\n    /**\n     * Question marks\n     */\n\n    if (value === '?') {\n      const isGroup = prev && prev.value === '(';\n      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('qmark', value);\n        continue;\n      }\n\n      if (prev && prev.type === 'paren') {\n        const next = peek();\n        let output = value;\n\n        if (next === '<' && !utils$1.supportsLookbehinds()) {\n          throw new Error('Node.js v10 or higher is required for regex lookbehinds');\n        }\n\n        if ((prev.value === '(' && !/[!=<:]/.test(next)) || (next === '<' && !/<([!=]|\\w+>)/.test(remaining()))) {\n          output = `\\\\${value}`;\n        }\n\n        push({ type: 'text', value, output });\n        continue;\n      }\n\n      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {\n        push({ type: 'qmark', value, output: QMARK_NO_DOT });\n        continue;\n      }\n\n      push({ type: 'qmark', value, output: QMARK });\n      continue;\n    }\n\n    /**\n     * Exclamation\n     */\n\n    if (value === '!') {\n      if (opts.noextglob !== true && peek() === '(') {\n        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {\n          extglobOpen('negate', value);\n          continue;\n        }\n      }\n\n      if (opts.nonegate !== true && state.index === 0) {\n        negate();\n        continue;\n      }\n    }\n\n    /**\n     * Plus\n     */\n\n    if (value === '+') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('plus', value);\n        continue;\n      }\n\n      if ((prev && prev.value === '(') || opts.regex === false) {\n        push({ type: 'plus', value, output: PLUS_LITERAL });\n        continue;\n      }\n\n      if ((prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace')) || state.parens > 0) {\n        push({ type: 'plus', value });\n        continue;\n      }\n\n      push({ type: 'plus', value: PLUS_LITERAL });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value === '@') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        push({ type: 'at', extglob: true, value, output: '' });\n        continue;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value !== '*') {\n      if (value === '$' || value === '^') {\n        value = `\\\\${value}`;\n      }\n\n      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());\n      if (match) {\n        value += match[0];\n        state.index += match[0].length;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Stars\n     */\n\n    if (prev && (prev.type === 'globstar' || prev.star === true)) {\n      prev.type = 'star';\n      prev.star = true;\n      prev.value += value;\n      prev.output = star;\n      state.backtrack = true;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    let rest = remaining();\n    if (opts.noextglob !== true && /^\\([^?]/.test(rest)) {\n      extglobOpen('star', value);\n      continue;\n    }\n\n    if (prev.type === 'star') {\n      if (opts.noglobstar === true) {\n        consume(value);\n        continue;\n      }\n\n      const prior = prev.prev;\n      const before = prior.prev;\n      const isStart = prior.type === 'slash' || prior.type === 'bos';\n      const afterStar = before && (before.type === 'star' || before.type === 'globstar');\n\n      if (opts.bash === true && (!isStart || (rest[0] && rest[0] !== '/'))) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');\n      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');\n      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      // strip consecutive `/**/`\n      while (rest.slice(0, 3) === '/**') {\n        const after = input[state.index + 4];\n        if (after && after !== '/') {\n          break;\n        }\n        rest = rest.slice(3);\n        consume('/**', 3);\n      }\n\n      if (prior.type === 'bos' && eos()) {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = globstar(opts);\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');\n        prev.value += value;\n        state.globstar = true;\n        state.output += prior.output + prev.output;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {\n        const end = rest[1] !== void 0 ? '|$' : '';\n\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;\n        prev.value += value;\n\n        state.output += prior.output + prev.output;\n        state.globstar = true;\n\n        consume(value + advance());\n\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      if (prior.type === 'bos' && rest[0] === '/') {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value + advance());\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      // remove single star from output\n      state.output = state.output.slice(0, -prev.output.length);\n\n      // reset previous token to globstar\n      prev.type = 'globstar';\n      prev.output = globstar(opts);\n      prev.value += value;\n\n      // reset output with globstar\n      state.output += prev.output;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    const token = { type: 'star', value, output: star };\n\n    if (opts.bash === true) {\n      token.output = '.*?';\n      if (prev.type === 'bos' || prev.type === 'slash') {\n        token.output = nodot + token.output;\n      }\n      push(token);\n      continue;\n    }\n\n    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {\n      token.output = value;\n      push(token);\n      continue;\n    }\n\n    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {\n      if (prev.type === 'dot') {\n        state.output += NO_DOT_SLASH;\n        prev.output += NO_DOT_SLASH;\n\n      } else if (opts.dot === true) {\n        state.output += NO_DOTS_SLASH;\n        prev.output += NO_DOTS_SLASH;\n\n      } else {\n        state.output += nodot;\n        prev.output += nodot;\n      }\n\n      if (peek() !== '*') {\n        state.output += ONE_CHAR;\n        prev.output += ONE_CHAR;\n      }\n    }\n\n    push(token);\n  }\n\n  while (state.brackets > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ']'));\n    state.output = utils$1.escapeLast(state.output, '[');\n    decrement('brackets');\n  }\n\n  while (state.parens > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ')'));\n    state.output = utils$1.escapeLast(state.output, '(');\n    decrement('parens');\n  }\n\n  while (state.braces > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', '}'));\n    state.output = utils$1.escapeLast(state.output, '{');\n    decrement('braces');\n  }\n\n  if (opts.strictSlashes !== true && (prev.type === 'star' || prev.type === 'bracket')) {\n    push({ type: 'maybe_slash', value: '', output: `${SLASH_LITERAL}?` });\n  }\n\n  // rebuild the output if we had to backtrack at any point\n  if (state.backtrack === true) {\n    state.output = '';\n\n    for (const token of state.tokens) {\n      state.output += token.output != null ? token.output : token.value;\n\n      if (token.suffix) {\n        state.output += token.suffix;\n      }\n    }\n  }\n\n  return state;\n};\n\n/**\n * Fast paths for creating regular expressions for common glob patterns.\n * This can significantly speed up processing and has very little downside\n * impact when none of the fast paths match.\n */\n\nparse$2.fastpaths = (input, options) => {\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  const len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  input = REPLACEMENTS[input] || input;\n  const win32 = utils$1.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const {\n    DOT_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOTS,\n    NO_DOTS_SLASH,\n    STAR,\n    START_ANCHOR\n  } = constants$1.globChars(win32);\n\n  const nodot = opts.dot ? NO_DOTS : NO_DOT;\n  const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;\n  const capture = opts.capture ? '' : '?:';\n  const state = { negated: false, prefix: '' };\n  let star = opts.bash === true ? '.*?' : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  const globstar = opts => {\n    if (opts.noglobstar === true) return star;\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const create = str => {\n    switch (str) {\n      case '*':\n        return `${nodot}${ONE_CHAR}${star}`;\n\n      case '.*':\n        return `${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*.*':\n        return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*/*':\n        return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;\n\n      case '**':\n        return nodot + globstar(opts);\n\n      case '**/*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;\n\n      case '**/*.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '**/.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      default: {\n        const match = /^(.*?)\\.(\\w+)$/.exec(str);\n        if (!match) return;\n\n        const source = create(match[1]);\n        if (!source) return;\n\n        return source + DOT_LITERAL + match[2];\n      }\n    }\n  };\n\n  const output = utils$1.removePrefix(input, state);\n  let source = create(output);\n\n  if (source && opts.strictSlashes !== true) {\n    source += `${SLASH_LITERAL}?`;\n  }\n\n  return source;\n};\n\nvar parse_1 = parse$2;\n\nconst path = require$$0$1;\nconst scan = scan_1;\nconst parse$1 = parse_1;\nconst utils = utils$3;\nconst constants = constants$2;\nconst isObject = val => val && typeof val === 'object' && !Array.isArray(val);\n\n/**\n * Creates a matcher function from one or more glob patterns. The\n * returned function takes a string to match as its first argument,\n * and returns true if the string is a match. The returned matcher\n * function also takes a boolean as the second argument that, when true,\n * returns an object with additional information.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch(glob[, options]);\n *\n * const isMatch = picomatch('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @name picomatch\n * @param {String|Array} `globs` One or more glob patterns.\n * @param {Object=} `options`\n * @return {Function=} Returns a matcher function.\n * @api public\n */\n\nconst picomatch = (glob, options, returnState = false) => {\n  if (Array.isArray(glob)) {\n    const fns = glob.map(input => picomatch(input, options, returnState));\n    const arrayMatcher = str => {\n      for (const isMatch of fns) {\n        const state = isMatch(str);\n        if (state) return state;\n      }\n      return false;\n    };\n    return arrayMatcher;\n  }\n\n  const isState = isObject(glob) && glob.tokens && glob.input;\n\n  if (glob === '' || (typeof glob !== 'string' && !isState)) {\n    throw new TypeError('Expected pattern to be a non-empty string');\n  }\n\n  const opts = options || {};\n  const posix = utils.isWindows(options);\n  const regex = isState\n    ? picomatch.compileRe(glob, options)\n    : picomatch.makeRe(glob, options, false, true);\n\n  const state = regex.state;\n  delete regex.state;\n\n  let isIgnored = () => false;\n  if (opts.ignore) {\n    const ignoreOpts = { ...options, ignore: null, onMatch: null, onResult: null };\n    isIgnored = picomatch(opts.ignore, ignoreOpts, returnState);\n  }\n\n  const matcher = (input, returnObject = false) => {\n    const { isMatch, match, output } = picomatch.test(input, regex, options, { glob, posix });\n    const result = { glob, state, regex, posix, input, output, match, isMatch };\n\n    if (typeof opts.onResult === 'function') {\n      opts.onResult(result);\n    }\n\n    if (isMatch === false) {\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (isIgnored(input)) {\n      if (typeof opts.onIgnore === 'function') {\n        opts.onIgnore(result);\n      }\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (typeof opts.onMatch === 'function') {\n      opts.onMatch(result);\n    }\n    return returnObject ? result : true;\n  };\n\n  if (returnState) {\n    matcher.state = state;\n  }\n\n  return matcher;\n};\n\n/**\n * Test `input` with the given `regex`. This is used by the main\n * `picomatch()` function to test the input string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.test(input, regex[, options]);\n *\n * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\n * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp} `regex`\n * @return {Object} Returns an object with matching info.\n * @api public\n */\n\npicomatch.test = (input, regex, options, { glob, posix } = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected input to be a string');\n  }\n\n  if (input === '') {\n    return { isMatch: false, output: '' };\n  }\n\n  const opts = options || {};\n  const format = opts.format || (posix ? utils.toPosixSlashes : null);\n  let match = input === glob;\n  let output = (match && format) ? format(input) : input;\n\n  if (match === false) {\n    output = format ? format(input) : input;\n    match = output === glob;\n  }\n\n  if (match === false || opts.capture === true) {\n    if (opts.matchBase === true || opts.basename === true) {\n      match = picomatch.matchBase(input, regex, options, posix);\n    } else {\n      match = regex.exec(output);\n    }\n  }\n\n  return { isMatch: Boolean(match), match, output };\n};\n\n/**\n * Match the basename of a filepath.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.matchBase(input, glob[, options]);\n * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).\n * @return {Boolean}\n * @api public\n */\n\npicomatch.matchBase = (input, glob, options, posix = utils.isWindows(options)) => {\n  const regex = glob instanceof RegExp ? glob : picomatch.makeRe(glob, options);\n  return regex.test(path.basename(input));\n};\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.isMatch(string, patterns[, options]);\n *\n * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String|Array} str The string to test.\n * @param {String|Array} patterns One or more glob patterns to use for matching.\n * @param {Object} [options] See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\npicomatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const result = picomatch.parse(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as a regex source string.\n * @api public\n */\n\npicomatch.parse = (pattern, options) => {\n  if (Array.isArray(pattern)) return pattern.map(p => picomatch.parse(p, options));\n  return parse$1(pattern, { ...options, fastpaths: false });\n};\n\n/**\n * Scan a glob pattern to separate the pattern into segments.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.scan(input[, options]);\n *\n * const result = picomatch.scan('!./foo/*.js');\n * console.log(result);\n * { prefix: '!./',\n *   input: '!./foo/*.js',\n *   start: 3,\n *   base: 'foo',\n *   glob: '*.js',\n *   isBrace: false,\n *   isBracket: false,\n *   isGlob: true,\n *   isExtglob: false,\n *   isGlobstar: false,\n *   negated: true }\n * ```\n * @param {String} `input` Glob pattern to scan.\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\npicomatch.scan = (input, options) => scan(input, options);\n\n/**\n * Compile a regular expression from the `state` object returned by the\n * [parse()](#parse) method.\n *\n * @param {Object} `state`\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Intended for implementors, this argument allows you to return the raw output from the parser.\n * @param {Boolean} `returnState` Adds the state to a `state` property on the returned regex. Useful for implementors and debugging.\n * @return {RegExp}\n * @api public\n */\n\npicomatch.compileRe = (state, options, returnOutput = false, returnState = false) => {\n  if (returnOutput === true) {\n    return state.output;\n  }\n\n  const opts = options || {};\n  const prepend = opts.contains ? '' : '^';\n  const append = opts.contains ? '' : '$';\n\n  let source = `${prepend}(?:${state.output})${append}`;\n  if (state && state.negated === true) {\n    source = `^(?!${source}).*$`;\n  }\n\n  const regex = picomatch.toRegex(source, options);\n  if (returnState === true) {\n    regex.state = state;\n  }\n\n  return regex;\n};\n\n/**\n * Create a regular expression from a parsed glob pattern.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const state = picomatch.parse('*.js');\n * // picomatch.compileRe(state[, options]);\n *\n * console.log(picomatch.compileRe(state));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `state` The object returned from the `.parse` method.\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result.\n * @param {Boolean} `returnState` Implementors may use this argument to return the state from the parsed glob with the returned regular expression.\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\npicomatch.makeRe = (input, options = {}, returnOutput = false, returnState = false) => {\n  if (!input || typeof input !== 'string') {\n    throw new TypeError('Expected a non-empty string');\n  }\n\n  let parsed = { negated: false, fastpaths: true };\n\n  if (options.fastpaths !== false && (input[0] === '.' || input[0] === '*')) {\n    parsed.output = parse$1.fastpaths(input, options);\n  }\n\n  if (!parsed.output) {\n    parsed = parse$1(input, options);\n  }\n\n  return picomatch.compileRe(parsed, options, returnOutput, returnState);\n};\n\n/**\n * Create a regular expression from the given regex source string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.toRegex(source[, options]);\n *\n * const { output } = picomatch.parse('*.js');\n * console.log(picomatch.toRegex(output));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `source` Regular expression source string.\n * @param {Object} `options`\n * @return {RegExp}\n * @api public\n */\n\npicomatch.toRegex = (source, options) => {\n  try {\n    const opts = options || {};\n    return new RegExp(source, opts.flags || (opts.nocase ? 'i' : ''));\n  } catch (err) {\n    if (options && options.debug === true) throw err;\n    return /$^/;\n  }\n};\n\n/**\n * Picomatch constants.\n * @return {Object}\n */\n\npicomatch.constants = constants;\n\n/**\n * Expose \"picomatch\"\n */\n\nvar picomatch_1 = picomatch;\n\n(function (module) {\n\n\tmodule.exports = picomatch_1;\n} (picomatch$1));\n\nconst pm = /*@__PURE__*/getDefaultExportFromCjs(picomatchExports);\n\nconst extractors = {\n    ArrayPattern(names, param) {\n        for (const element of param.elements) {\n            if (element)\n                extractors[element.type](names, element);\n        }\n    },\n    AssignmentPattern(names, param) {\n        extractors[param.left.type](names, param.left);\n    },\n    Identifier(names, param) {\n        names.push(param.name);\n    },\n    MemberExpression() { },\n    ObjectPattern(names, param) {\n        for (const prop of param.properties) {\n            // @ts-ignore Typescript reports that this is not a valid type\n            if (prop.type === 'RestElement') {\n                extractors.RestElement(names, prop);\n            }\n            else {\n                extractors[prop.value.type](names, prop.value);\n            }\n        }\n    },\n    RestElement(names, param) {\n        extractors[param.argument.type](names, param.argument);\n    }\n};\nconst extractAssignedNames = function extractAssignedNames(param) {\n    const names = [];\n    extractors[param.type](names, param);\n    return names;\n};\n\n// Helper since Typescript can't detect readonly arrays with Array.isArray\nfunction isArray$1(arg) {\n    return Array.isArray(arg);\n}\nfunction ensureArray$1(thing) {\n    if (isArray$1(thing))\n        return thing;\n    if (thing == null)\n        return [];\n    return [thing];\n}\n\nconst normalizePath = function normalizePath(filename) {\n    return filename.split(win32.sep).join(posix.sep);\n};\n\nfunction getMatcherString(id, resolutionBase) {\n    if (resolutionBase === false || isAbsolute$1(id) || id.startsWith('*')) {\n        return normalizePath(id);\n    }\n    // resolve('') is valid and will default to process.cwd()\n    const basePath = normalizePath(resolve$1(resolutionBase || ''))\n        // escape all possible (posix + win) path characters that might interfere with regex\n        .replace(/[-^$*+?.()|[\\]{}]/g, '\\\\$&');\n    // Note that we use posix.join because:\n    // 1. the basePath has been normalized to use /\n    // 2. the incoming glob (id) matcher, also uses /\n    // otherwise Node will force backslash (\\) on windows\n    return posix.join(basePath, normalizePath(id));\n}\nconst createFilter = function createFilter(include, exclude, options) {\n    const resolutionBase = options && options.resolve;\n    const getMatcher = (id) => id instanceof RegExp\n        ? id\n        : {\n            test: (what) => {\n                // this refactor is a tad overly verbose but makes for easy debugging\n                const pattern = getMatcherString(id, resolutionBase);\n                const fn = pm(pattern, { dot: true });\n                const result = fn(what);\n                return result;\n            }\n        };\n    const includeMatchers = ensureArray$1(include).map(getMatcher);\n    const excludeMatchers = ensureArray$1(exclude).map(getMatcher);\n    return function result(id) {\n        if (typeof id !== 'string')\n            return false;\n        if (/\\0/.test(id))\n            return false;\n        const pathId = normalizePath(id);\n        for (let i = 0; i < excludeMatchers.length; ++i) {\n            const matcher = excludeMatchers[i];\n            if (matcher.test(pathId))\n                return false;\n        }\n        for (let i = 0; i < includeMatchers.length; ++i) {\n            const matcher = includeMatchers[i];\n            if (matcher.test(pathId))\n                return true;\n        }\n        return !includeMatchers.length;\n    };\n};\n\nconst reservedWords$1 = 'break case class catch const continue debugger default delete do else export extends finally for function if import in instanceof let new return super switch this throw try typeof var void while with yield enum await implements package protected static interface private public';\nconst builtins = 'arguments Infinity NaN undefined null true false eval uneval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape Object Function Boolean Symbol Error EvalError InternalError RangeError ReferenceError SyntaxError TypeError URIError Number Math Date String RegExp Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array Map Set WeakMap WeakSet SIMD ArrayBuffer DataView JSON Promise Generator GeneratorFunction Reflect Proxy Intl';\nconst forbiddenIdentifiers = new Set(`${reservedWords$1} ${builtins}`.split(' '));\nforbiddenIdentifiers.add('');\n\nconst BROKEN_FLOW_NONE = 0;\nconst BROKEN_FLOW_BREAK_CONTINUE = 1;\nconst BROKEN_FLOW_ERROR_RETURN_LABEL = 2;\nfunction createInclusionContext() {\n    return {\n        brokenFlow: BROKEN_FLOW_NONE,\n        includedCallArguments: new Set(),\n        includedLabels: new Set()\n    };\n}\nfunction createHasEffectsContext() {\n    return {\n        accessed: new PathTracker(),\n        assigned: new PathTracker(),\n        brokenFlow: BROKEN_FLOW_NONE,\n        called: new DiscriminatedPathTracker(),\n        ignore: {\n            breaks: false,\n            continues: false,\n            labels: new Set(),\n            returnYield: false,\n            this: false\n        },\n        includedLabels: new Set(),\n        instantiated: new DiscriminatedPathTracker(),\n        replacedVariableInits: new Map()\n    };\n}\n\nfunction assembleMemberDescriptions(memberDescriptions, inheritedDescriptions = null) {\n    return Object.create(inheritedDescriptions, memberDescriptions);\n}\nconst UNDEFINED_EXPRESSION = new (class UndefinedExpression extends ExpressionEntity {\n    getLiteralValueAtPath() {\n        return undefined;\n    }\n})();\nconst returnsUnknown = {\n    value: {\n        hasEffectsWhenCalled: null,\n        returns: UNKNOWN_EXPRESSION\n    }\n};\nconst UNKNOWN_LITERAL_BOOLEAN = new (class UnknownBoolean extends ExpressionEntity {\n    getReturnExpressionWhenCalledAtPath(path) {\n        if (path.length === 1) {\n            return getMemberReturnExpressionWhenCalled(literalBooleanMembers, path[0]);\n        }\n        return UNKNOWN_RETURN_EXPRESSION;\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        if (interaction.type === INTERACTION_ACCESSED) {\n            return path.length > 1;\n        }\n        if (interaction.type === INTERACTION_CALLED && path.length === 1) {\n            return hasMemberEffectWhenCalled(literalBooleanMembers, path[0], interaction, context);\n        }\n        return true;\n    }\n})();\nconst returnsBoolean = {\n    value: {\n        hasEffectsWhenCalled: null,\n        returns: UNKNOWN_LITERAL_BOOLEAN\n    }\n};\nconst UNKNOWN_LITERAL_NUMBER = new (class UnknownNumber extends ExpressionEntity {\n    getReturnExpressionWhenCalledAtPath(path) {\n        if (path.length === 1) {\n            return getMemberReturnExpressionWhenCalled(literalNumberMembers, path[0]);\n        }\n        return UNKNOWN_RETURN_EXPRESSION;\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        if (interaction.type === INTERACTION_ACCESSED) {\n            return path.length > 1;\n        }\n        if (interaction.type === INTERACTION_CALLED && path.length === 1) {\n            return hasMemberEffectWhenCalled(literalNumberMembers, path[0], interaction, context);\n        }\n        return true;\n    }\n})();\nconst returnsNumber = {\n    value: {\n        hasEffectsWhenCalled: null,\n        returns: UNKNOWN_LITERAL_NUMBER\n    }\n};\nconst UNKNOWN_LITERAL_STRING = new (class UnknownString extends ExpressionEntity {\n    getReturnExpressionWhenCalledAtPath(path) {\n        if (path.length === 1) {\n            return getMemberReturnExpressionWhenCalled(literalStringMembers, path[0]);\n        }\n        return UNKNOWN_RETURN_EXPRESSION;\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        if (interaction.type === INTERACTION_ACCESSED) {\n            return path.length > 1;\n        }\n        if (interaction.type === INTERACTION_CALLED && path.length === 1) {\n            return hasMemberEffectWhenCalled(literalStringMembers, path[0], interaction, context);\n        }\n        return true;\n    }\n})();\nconst returnsString = {\n    value: {\n        hasEffectsWhenCalled: null,\n        returns: UNKNOWN_LITERAL_STRING\n    }\n};\nconst stringReplace = {\n    value: {\n        hasEffectsWhenCalled({ args }, context) {\n            const argument1 = args[1];\n            return (args.length < 2 ||\n                (typeof argument1.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, {\n                    deoptimizeCache() { }\n                }) === 'symbol' &&\n                    argument1.hasEffectsOnInteractionAtPath(EMPTY_PATH, NODE_INTERACTION_UNKNOWN_CALL, context)));\n        },\n        returns: UNKNOWN_LITERAL_STRING\n    }\n};\nconst objectMembers = assembleMemberDescriptions({\n    hasOwnProperty: returnsBoolean,\n    isPrototypeOf: returnsBoolean,\n    propertyIsEnumerable: returnsBoolean,\n    toLocaleString: returnsString,\n    toString: returnsString,\n    valueOf: returnsUnknown\n});\nconst literalBooleanMembers = assembleMemberDescriptions({\n    valueOf: returnsBoolean\n}, objectMembers);\nconst literalNumberMembers = assembleMemberDescriptions({\n    toExponential: returnsString,\n    toFixed: returnsString,\n    toLocaleString: returnsString,\n    toPrecision: returnsString,\n    valueOf: returnsNumber\n}, objectMembers);\n/**\n * RegExp are stateful when they have the global or sticky flags set.\n * But if we actually don't use them, the side effect does not matter.\n * the check logic in `hasEffectsOnInteractionAtPath`.\n */\nconst literalRegExpMembers = assembleMemberDescriptions({\n    exec: returnsUnknown,\n    test: returnsBoolean\n}, objectMembers);\nconst literalStringMembers = assembleMemberDescriptions({\n    anchor: returnsString,\n    at: returnsUnknown,\n    big: returnsString,\n    blink: returnsString,\n    bold: returnsString,\n    charAt: returnsString,\n    charCodeAt: returnsNumber,\n    codePointAt: returnsUnknown,\n    concat: returnsString,\n    endsWith: returnsBoolean,\n    fixed: returnsString,\n    fontcolor: returnsString,\n    fontsize: returnsString,\n    includes: returnsBoolean,\n    indexOf: returnsNumber,\n    italics: returnsString,\n    lastIndexOf: returnsNumber,\n    link: returnsString,\n    localeCompare: returnsNumber,\n    match: returnsUnknown,\n    matchAll: returnsUnknown,\n    normalize: returnsString,\n    padEnd: returnsString,\n    padStart: returnsString,\n    repeat: returnsString,\n    replace: stringReplace,\n    replaceAll: stringReplace,\n    search: returnsNumber,\n    slice: returnsString,\n    small: returnsString,\n    split: returnsUnknown,\n    startsWith: returnsBoolean,\n    strike: returnsString,\n    sub: returnsString,\n    substr: returnsString,\n    substring: returnsString,\n    sup: returnsString,\n    toLocaleLowerCase: returnsString,\n    toLocaleUpperCase: returnsString,\n    toLowerCase: returnsString,\n    toString: returnsString,\n    toUpperCase: returnsString,\n    trim: returnsString,\n    trimEnd: returnsString,\n    trimLeft: returnsString,\n    trimRight: returnsString,\n    trimStart: returnsString,\n    valueOf: returnsString\n}, objectMembers);\nfunction getLiteralMembersForValue(value) {\n    if (value instanceof RegExp) {\n        return literalRegExpMembers;\n    }\n    switch (typeof value) {\n        case 'boolean': {\n            return literalBooleanMembers;\n        }\n        case 'number': {\n            return literalNumberMembers;\n        }\n        case 'string': {\n            return literalStringMembers;\n        }\n    }\n    return Object.create(null);\n}\nfunction hasMemberEffectWhenCalled(members, memberName, interaction, context) {\n    if (typeof memberName !== 'string' || !members[memberName]) {\n        return true;\n    }\n    return members[memberName].hasEffectsWhenCalled?.(interaction, context) || false;\n}\nfunction getMemberReturnExpressionWhenCalled(members, memberName) {\n    if (typeof memberName !== 'string' || !members[memberName])\n        return UNKNOWN_RETURN_EXPRESSION;\n    return [members[memberName].returns, false];\n}\n\n// AST walker module for Mozilla Parser API compatible trees\n\nfunction skipThrough(node, st, c) { c(node, st); }\nfunction ignore(_node, _st, _c) {}\n\n// Node walkers.\n\nvar base$1 = {};\n\nbase$1.Program = base$1.BlockStatement = base$1.StaticBlock = function (node, st, c) {\n  for (var i = 0, list = node.body; i < list.length; i += 1)\n    {\n    var stmt = list[i];\n\n    c(stmt, st, \"Statement\");\n  }\n};\nbase$1.Statement = skipThrough;\nbase$1.EmptyStatement = ignore;\nbase$1.ExpressionStatement = base$1.ParenthesizedExpression = base$1.ChainExpression =\n  function (node, st, c) { return c(node.expression, st, \"Expression\"); };\nbase$1.IfStatement = function (node, st, c) {\n  c(node.test, st, \"Expression\");\n  c(node.consequent, st, \"Statement\");\n  if (node.alternate) { c(node.alternate, st, \"Statement\"); }\n};\nbase$1.LabeledStatement = function (node, st, c) { return c(node.body, st, \"Statement\"); };\nbase$1.BreakStatement = base$1.ContinueStatement = ignore;\nbase$1.WithStatement = function (node, st, c) {\n  c(node.object, st, \"Expression\");\n  c(node.body, st, \"Statement\");\n};\nbase$1.SwitchStatement = function (node, st, c) {\n  c(node.discriminant, st, \"Expression\");\n  for (var i$1 = 0, list$1 = node.cases; i$1 < list$1.length; i$1 += 1) {\n    var cs = list$1[i$1];\n\n    if (cs.test) { c(cs.test, st, \"Expression\"); }\n    for (var i = 0, list = cs.consequent; i < list.length; i += 1)\n      {\n      var cons = list[i];\n\n      c(cons, st, \"Statement\");\n    }\n  }\n};\nbase$1.SwitchCase = function (node, st, c) {\n  if (node.test) { c(node.test, st, \"Expression\"); }\n  for (var i = 0, list = node.consequent; i < list.length; i += 1)\n    {\n    var cons = list[i];\n\n    c(cons, st, \"Statement\");\n  }\n};\nbase$1.ReturnStatement = base$1.YieldExpression = base$1.AwaitExpression = function (node, st, c) {\n  if (node.argument) { c(node.argument, st, \"Expression\"); }\n};\nbase$1.ThrowStatement = base$1.SpreadElement =\n  function (node, st, c) { return c(node.argument, st, \"Expression\"); };\nbase$1.TryStatement = function (node, st, c) {\n  c(node.block, st, \"Statement\");\n  if (node.handler) { c(node.handler, st); }\n  if (node.finalizer) { c(node.finalizer, st, \"Statement\"); }\n};\nbase$1.CatchClause = function (node, st, c) {\n  if (node.param) { c(node.param, st, \"Pattern\"); }\n  c(node.body, st, \"Statement\");\n};\nbase$1.WhileStatement = base$1.DoWhileStatement = function (node, st, c) {\n  c(node.test, st, \"Expression\");\n  c(node.body, st, \"Statement\");\n};\nbase$1.ForStatement = function (node, st, c) {\n  if (node.init) { c(node.init, st, \"ForInit\"); }\n  if (node.test) { c(node.test, st, \"Expression\"); }\n  if (node.update) { c(node.update, st, \"Expression\"); }\n  c(node.body, st, \"Statement\");\n};\nbase$1.ForInStatement = base$1.ForOfStatement = function (node, st, c) {\n  c(node.left, st, \"ForInit\");\n  c(node.right, st, \"Expression\");\n  c(node.body, st, \"Statement\");\n};\nbase$1.ForInit = function (node, st, c) {\n  if (node.type === \"VariableDeclaration\") { c(node, st); }\n  else { c(node, st, \"Expression\"); }\n};\nbase$1.DebuggerStatement = ignore;\n\nbase$1.FunctionDeclaration = function (node, st, c) { return c(node, st, \"Function\"); };\nbase$1.VariableDeclaration = function (node, st, c) {\n  for (var i = 0, list = node.declarations; i < list.length; i += 1)\n    {\n    var decl = list[i];\n\n    c(decl, st);\n  }\n};\nbase$1.VariableDeclarator = function (node, st, c) {\n  c(node.id, st, \"Pattern\");\n  if (node.init) { c(node.init, st, \"Expression\"); }\n};\n\nbase$1.Function = function (node, st, c) {\n  if (node.id) { c(node.id, st, \"Pattern\"); }\n  for (var i = 0, list = node.params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    c(param, st, \"Pattern\");\n  }\n  c(node.body, st, node.expression ? \"Expression\" : \"Statement\");\n};\n\nbase$1.Pattern = function (node, st, c) {\n  if (node.type === \"Identifier\")\n    { c(node, st, \"VariablePattern\"); }\n  else if (node.type === \"MemberExpression\")\n    { c(node, st, \"MemberPattern\"); }\n  else\n    { c(node, st); }\n};\nbase$1.VariablePattern = ignore;\nbase$1.MemberPattern = skipThrough;\nbase$1.RestElement = function (node, st, c) { return c(node.argument, st, \"Pattern\"); };\nbase$1.ArrayPattern = function (node, st, c) {\n  for (var i = 0, list = node.elements; i < list.length; i += 1) {\n    var elt = list[i];\n\n    if (elt) { c(elt, st, \"Pattern\"); }\n  }\n};\nbase$1.ObjectPattern = function (node, st, c) {\n  for (var i = 0, list = node.properties; i < list.length; i += 1) {\n    var prop = list[i];\n\n    if (prop.type === \"Property\") {\n      if (prop.computed) { c(prop.key, st, \"Expression\"); }\n      c(prop.value, st, \"Pattern\");\n    } else if (prop.type === \"RestElement\") {\n      c(prop.argument, st, \"Pattern\");\n    }\n  }\n};\n\nbase$1.Expression = skipThrough;\nbase$1.ThisExpression = base$1.Super = base$1.MetaProperty = ignore;\nbase$1.ArrayExpression = function (node, st, c) {\n  for (var i = 0, list = node.elements; i < list.length; i += 1) {\n    var elt = list[i];\n\n    if (elt) { c(elt, st, \"Expression\"); }\n  }\n};\nbase$1.ObjectExpression = function (node, st, c) {\n  for (var i = 0, list = node.properties; i < list.length; i += 1)\n    {\n    var prop = list[i];\n\n    c(prop, st);\n  }\n};\nbase$1.FunctionExpression = base$1.ArrowFunctionExpression = base$1.FunctionDeclaration;\nbase$1.SequenceExpression = function (node, st, c) {\n  for (var i = 0, list = node.expressions; i < list.length; i += 1)\n    {\n    var expr = list[i];\n\n    c(expr, st, \"Expression\");\n  }\n};\nbase$1.TemplateLiteral = function (node, st, c) {\n  for (var i = 0, list = node.quasis; i < list.length; i += 1)\n    {\n    var quasi = list[i];\n\n    c(quasi, st);\n  }\n\n  for (var i$1 = 0, list$1 = node.expressions; i$1 < list$1.length; i$1 += 1)\n    {\n    var expr = list$1[i$1];\n\n    c(expr, st, \"Expression\");\n  }\n};\nbase$1.TemplateElement = ignore;\nbase$1.UnaryExpression = base$1.UpdateExpression = function (node, st, c) {\n  c(node.argument, st, \"Expression\");\n};\nbase$1.BinaryExpression = base$1.LogicalExpression = function (node, st, c) {\n  c(node.left, st, \"Expression\");\n  c(node.right, st, \"Expression\");\n};\nbase$1.AssignmentExpression = base$1.AssignmentPattern = function (node, st, c) {\n  c(node.left, st, \"Pattern\");\n  c(node.right, st, \"Expression\");\n};\nbase$1.ConditionalExpression = function (node, st, c) {\n  c(node.test, st, \"Expression\");\n  c(node.consequent, st, \"Expression\");\n  c(node.alternate, st, \"Expression\");\n};\nbase$1.NewExpression = base$1.CallExpression = function (node, st, c) {\n  c(node.callee, st, \"Expression\");\n  if (node.arguments)\n    { for (var i = 0, list = node.arguments; i < list.length; i += 1)\n      {\n        var arg = list[i];\n\n        c(arg, st, \"Expression\");\n      } }\n};\nbase$1.MemberExpression = function (node, st, c) {\n  c(node.object, st, \"Expression\");\n  if (node.computed) { c(node.property, st, \"Expression\"); }\n};\nbase$1.ExportNamedDeclaration = base$1.ExportDefaultDeclaration = function (node, st, c) {\n  if (node.declaration)\n    { c(node.declaration, st, node.type === \"ExportNamedDeclaration\" || node.declaration.id ? \"Statement\" : \"Expression\"); }\n  if (node.source) { c(node.source, st, \"Expression\"); }\n};\nbase$1.ExportAllDeclaration = function (node, st, c) {\n  if (node.exported)\n    { c(node.exported, st); }\n  c(node.source, st, \"Expression\");\n};\nbase$1.ImportDeclaration = function (node, st, c) {\n  for (var i = 0, list = node.specifiers; i < list.length; i += 1)\n    {\n    var spec = list[i];\n\n    c(spec, st);\n  }\n  c(node.source, st, \"Expression\");\n};\nbase$1.ImportExpression = function (node, st, c) {\n  c(node.source, st, \"Expression\");\n};\nbase$1.ImportSpecifier = base$1.ImportDefaultSpecifier = base$1.ImportNamespaceSpecifier = base$1.Identifier = base$1.PrivateIdentifier = base$1.Literal = ignore;\n\nbase$1.TaggedTemplateExpression = function (node, st, c) {\n  c(node.tag, st, \"Expression\");\n  c(node.quasi, st, \"Expression\");\n};\nbase$1.ClassDeclaration = base$1.ClassExpression = function (node, st, c) { return c(node, st, \"Class\"); };\nbase$1.Class = function (node, st, c) {\n  if (node.id) { c(node.id, st, \"Pattern\"); }\n  if (node.superClass) { c(node.superClass, st, \"Expression\"); }\n  c(node.body, st);\n};\nbase$1.ClassBody = function (node, st, c) {\n  for (var i = 0, list = node.body; i < list.length; i += 1)\n    {\n    var elt = list[i];\n\n    c(elt, st);\n  }\n};\nbase$1.MethodDefinition = base$1.PropertyDefinition = base$1.Property = function (node, st, c) {\n  if (node.computed) { c(node.key, st, \"Expression\"); }\n  if (node.value) { c(node.value, st, \"Expression\"); }\n};\n\nconst ArrowFunctionExpression$1 = 'ArrowFunctionExpression';\nconst BinaryExpression$1 = 'BinaryExpression';\nconst BlockStatement$1 = 'BlockStatement';\nconst CallExpression$1 = 'CallExpression';\nconst ChainExpression$1 = 'ChainExpression';\nconst ConditionalExpression$1 = 'ConditionalExpression';\nconst ExpressionStatement$1 = 'ExpressionStatement';\nconst Identifier$1 = 'Identifier';\nconst LogicalExpression$1 = 'LogicalExpression';\nconst NewExpression$1 = 'NewExpression';\nconst Program$1 = 'Program';\nconst Property$1 = 'Property';\nconst ReturnStatement$1 = 'ReturnStatement';\nconst SequenceExpression$1 = 'SequenceExpression';\n\n// this looks ridiculous, but it prevents sourcemap tooling from mistaking\n// this for an actual sourceMappingURL\nlet SOURCEMAPPING_URL = 'sourceMa';\nSOURCEMAPPING_URL += 'ppingURL';\nconst whiteSpaceNoNewline = '[ \\\\f\\\\r\\\\t\\\\v\\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]';\nconst SOURCEMAPPING_URL_RE = new RegExp(`^#${whiteSpaceNoNewline}+${SOURCEMAPPING_URL}=.+`);\n\nconst ANNOTATION_KEY = '_rollupAnnotations';\nconst INVALID_COMMENT_KEY = '_rollupRemoved';\nfunction handlePureAnnotationsOfNode(node, state, type = node.type) {\n    const { annotations, code } = state;\n    // eslint-disable-next-line unicorn/consistent-destructuring\n    let comment = annotations[state.annotationIndex];\n    while (comment && node.start >= comment.end) {\n        markPureNode(node, comment, code);\n        comment = annotations[++state.annotationIndex];\n    }\n    if (comment && comment.end <= node.end) {\n        base$1[type](node, state, handlePureAnnotationsOfNode);\n        // eslint-disable-next-line unicorn/consistent-destructuring\n        while ((comment = annotations[state.annotationIndex]) && comment.end <= node.end) {\n            ++state.annotationIndex;\n            annotateNode(node, comment, false);\n        }\n    }\n}\nconst neitherWithespaceNorBrackets = /[^\\s(]/g;\nconst noWhitespace = /\\S/g;\nfunction markPureNode(node, comment, code) {\n    const annotatedNodes = [];\n    let invalidAnnotation;\n    const codeInBetween = code.slice(comment.end, node.start);\n    if (doesNotMatchOutsideComment(codeInBetween, neitherWithespaceNorBrackets)) {\n        const parentStart = node.start;\n        while (true) {\n            annotatedNodes.push(node);\n            switch (node.type) {\n                case ExpressionStatement$1:\n                case ChainExpression$1: {\n                    node = node.expression;\n                    continue;\n                }\n                case SequenceExpression$1: {\n                    // if there are parentheses, the annotation would apply to the entire expression\n                    if (doesNotMatchOutsideComment(code.slice(parentStart, node.start), noWhitespace)) {\n                        node = node.expressions[0];\n                        continue;\n                    }\n                    invalidAnnotation = true;\n                    break;\n                }\n                case ConditionalExpression$1: {\n                    // if there are parentheses, the annotation would apply to the entire expression\n                    if (doesNotMatchOutsideComment(code.slice(parentStart, node.start), noWhitespace)) {\n                        node = node.test;\n                        continue;\n                    }\n                    invalidAnnotation = true;\n                    break;\n                }\n                case LogicalExpression$1:\n                case BinaryExpression$1: {\n                    // if there are parentheses, the annotation would apply to the entire expression\n                    if (doesNotMatchOutsideComment(code.slice(parentStart, node.start), noWhitespace)) {\n                        node = node.left;\n                        continue;\n                    }\n                    invalidAnnotation = true;\n                    break;\n                }\n                case CallExpression$1:\n                case NewExpression$1: {\n                    break;\n                }\n                default: {\n                    invalidAnnotation = true;\n                }\n            }\n            break;\n        }\n    }\n    else {\n        invalidAnnotation = true;\n    }\n    if (invalidAnnotation) {\n        annotateNode(node, comment, false);\n    }\n    else {\n        for (const node of annotatedNodes) {\n            annotateNode(node, comment, true);\n        }\n    }\n}\nfunction doesNotMatchOutsideComment(code, forbiddenChars) {\n    let nextMatch;\n    while ((nextMatch = forbiddenChars.exec(code)) !== null) {\n        if (nextMatch[0] === '/') {\n            const charCodeAfterSlash = code.charCodeAt(forbiddenChars.lastIndex);\n            if (charCodeAfterSlash === 42 /*\"*\"*/) {\n                forbiddenChars.lastIndex = code.indexOf('*/', forbiddenChars.lastIndex + 1) + 2;\n                continue;\n            }\n            else if (charCodeAfterSlash === 47 /*\"/\"*/) {\n                forbiddenChars.lastIndex = code.indexOf('\\n', forbiddenChars.lastIndex + 1) + 1;\n                continue;\n            }\n        }\n        forbiddenChars.lastIndex = 0;\n        return false;\n    }\n    return true;\n}\nconst pureCommentRegex = /[#@]__PURE__/;\nfunction addAnnotations(comments, esTreeAst, code) {\n    const annotations = [];\n    const sourceMappingComments = [];\n    for (const comment of comments) {\n        if (pureCommentRegex.test(comment.value)) {\n            annotations.push(comment);\n        }\n        else if (SOURCEMAPPING_URL_RE.test(comment.value)) {\n            sourceMappingComments.push(comment);\n        }\n    }\n    for (const comment of sourceMappingComments) {\n        annotateNode(esTreeAst, comment, false);\n    }\n    handlePureAnnotationsOfNode(esTreeAst, {\n        annotationIndex: 0,\n        annotations,\n        code\n    });\n}\nfunction annotateNode(node, comment, valid) {\n    const key = valid ? ANNOTATION_KEY : INVALID_COMMENT_KEY;\n    const property = node[key];\n    if (property) {\n        property.push(comment);\n    }\n    else {\n        node[key] = [comment];\n    }\n}\n\nconst keys = {\n    // TODO this should be removed once ImportExpression follows official ESTree\n    //  specs with \"null\" as default\n    ImportExpression: ['arguments'],\n    Literal: [],\n    Program: ['body']\n};\nfunction getAndCreateKeys(esTreeNode) {\n    keys[esTreeNode.type] = Object.keys(esTreeNode).filter(key => typeof esTreeNode[key] === 'object' && key.charCodeAt(0) !== 95 /* _ */);\n    return keys[esTreeNode.type];\n}\n\nconst INCLUDE_PARAMETERS = 'variables';\nclass NodeBase extends ExpressionEntity {\n    constructor(esTreeNode, parent, parentScope, keepEsTreeNode = false) {\n        super();\n        /**\n         * Nodes can apply custom deoptimizations once they become part of the\n         * executed code. To do this, they must initialize this as false, implement\n         * applyDeoptimizations and call this from include and hasEffects if they have\n         * custom handlers\n         */\n        this.deoptimized = false;\n        // Nodes can opt-in to keep the AST if needed during the build pipeline.\n        // Avoid true when possible as large AST takes up memory.\n        this.esTreeNode = keepEsTreeNode ? esTreeNode : null;\n        this.keys = keys[esTreeNode.type] || getAndCreateKeys(esTreeNode);\n        this.parent = parent;\n        this.context = parent.context;\n        this.createScope(parentScope);\n        this.parseNode(esTreeNode);\n        this.initialise();\n        this.context.magicString.addSourcemapLocation(this.start);\n        this.context.magicString.addSourcemapLocation(this.end);\n    }\n    addExportedVariables(_variables, _exportNamesByVariable) { }\n    /**\n     * Override this to bind assignments to variables and do any initialisations\n     * that require the scopes to be populated with variables.\n     */\n    bind() {\n        for (const key of this.keys) {\n            const value = this[key];\n            if (Array.isArray(value)) {\n                for (const child of value) {\n                    child?.bind();\n                }\n            }\n            else if (value) {\n                value.bind();\n            }\n        }\n    }\n    /**\n     * Override if this node should receive a different scope than the parent\n     * scope.\n     */\n    createScope(parentScope) {\n        this.scope = parentScope;\n    }\n    hasEffects(context) {\n        if (!this.deoptimized)\n            this.applyDeoptimizations();\n        for (const key of this.keys) {\n            const value = this[key];\n            if (value === null)\n                continue;\n            if (Array.isArray(value)) {\n                for (const child of value) {\n                    if (child?.hasEffects(context))\n                        return true;\n                }\n            }\n            else if (value.hasEffects(context))\n                return true;\n        }\n        return false;\n    }\n    hasEffectsAsAssignmentTarget(context, _checkAccess) {\n        return (this.hasEffects(context) ||\n            this.hasEffectsOnInteractionAtPath(EMPTY_PATH, this.assignmentInteraction, context));\n    }\n    include(context, includeChildrenRecursively, _options) {\n        if (!this.deoptimized)\n            this.applyDeoptimizations();\n        this.included = true;\n        for (const key of this.keys) {\n            const value = this[key];\n            if (value === null)\n                continue;\n            if (Array.isArray(value)) {\n                for (const child of value) {\n                    child?.include(context, includeChildrenRecursively);\n                }\n            }\n            else {\n                value.include(context, includeChildrenRecursively);\n            }\n        }\n    }\n    includeAsAssignmentTarget(context, includeChildrenRecursively, _deoptimizeAccess) {\n        this.include(context, includeChildrenRecursively);\n    }\n    /**\n     * Override to perform special initialisation steps after the scope is\n     * initialised\n     */\n    initialise() { }\n    insertSemicolon(code) {\n        if (code.original[this.end - 1] !== ';') {\n            code.appendLeft(this.end, ';');\n        }\n    }\n    parseNode(esTreeNode, keepEsTreeNodeKeys) {\n        for (const [key, value] of Object.entries(esTreeNode)) {\n            // That way, we can override this function to add custom initialisation and then call super.parseNode\n            if (this.hasOwnProperty(key))\n                continue;\n            if (key.charCodeAt(0) === 95 /* _ */) {\n                if (key === ANNOTATION_KEY) {\n                    this.annotations = value;\n                }\n                else if (key === INVALID_COMMENT_KEY) {\n                    for (const { start, end } of value)\n                        this.context.magicString.remove(start, end);\n                }\n            }\n            else if (typeof value !== 'object' || value === null) {\n                this[key] = value;\n            }\n            else if (Array.isArray(value)) {\n                this[key] = [];\n                for (const child of value) {\n                    this[key].push(child === null\n                        ? null\n                        : new (this.context.getNodeConstructor(child.type))(child, this, this.scope, keepEsTreeNodeKeys?.includes(key)));\n                }\n            }\n            else {\n                this[key] = new (this.context.getNodeConstructor(value.type))(value, this, this.scope, keepEsTreeNodeKeys?.includes(key));\n            }\n        }\n    }\n    render(code, options) {\n        for (const key of this.keys) {\n            const value = this[key];\n            if (value === null)\n                continue;\n            if (Array.isArray(value)) {\n                for (const child of value) {\n                    child?.render(code, options);\n                }\n            }\n            else {\n                value.render(code, options);\n            }\n        }\n    }\n    setAssignedValue(value) {\n        this.assignmentInteraction = { args: [value], thisArg: null, type: INTERACTION_ASSIGNED };\n    }\n    shouldBeIncluded(context) {\n        return this.included || (!context.brokenFlow && this.hasEffects(createHasEffectsContext()));\n    }\n    /**\n     * Just deoptimize everything by default so that when e.g. we do not track\n     * something properly, it is deoptimized.\n     * @protected\n     */\n    applyDeoptimizations() {\n        this.deoptimized = true;\n        for (const key of this.keys) {\n            const value = this[key];\n            if (value === null)\n                continue;\n            if (Array.isArray(value)) {\n                for (const child of value) {\n                    child?.deoptimizePath(UNKNOWN_PATH);\n                }\n            }\n            else {\n                value.deoptimizePath(UNKNOWN_PATH);\n            }\n        }\n        this.context.requestTreeshakingPass();\n    }\n}\n\nclass SpreadElement extends NodeBase {\n    deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n        if (path.length > 0) {\n            this.argument.deoptimizeThisOnInteractionAtPath(interaction, [UnknownKey, ...path], recursionTracker);\n        }\n    }\n    hasEffects(context) {\n        if (!this.deoptimized)\n            this.applyDeoptimizations();\n        const { propertyReadSideEffects } = this.context.options\n            .treeshake;\n        return (this.argument.hasEffects(context) ||\n            (propertyReadSideEffects &&\n                (propertyReadSideEffects === 'always' ||\n                    this.argument.hasEffectsOnInteractionAtPath(UNKNOWN_PATH, NODE_INTERACTION_UNKNOWN_ACCESS, context))));\n    }\n    applyDeoptimizations() {\n        this.deoptimized = true;\n        // Only properties of properties of the argument could become subject to reassignment\n        // This will also reassign the return values of iterators\n        this.argument.deoptimizePath([UnknownKey, UnknownKey]);\n        this.context.requestTreeshakingPass();\n    }\n}\n\nclass Method extends ExpressionEntity {\n    constructor(description) {\n        super();\n        this.description = description;\n    }\n    deoptimizeThisOnInteractionAtPath({ type, thisArg }, path) {\n        if (type === INTERACTION_CALLED && path.length === 0 && this.description.mutatesSelfAsArray) {\n            thisArg.deoptimizePath(UNKNOWN_INTEGER_PATH);\n        }\n    }\n    getReturnExpressionWhenCalledAtPath(path, { thisArg }) {\n        if (path.length > 0) {\n            return UNKNOWN_RETURN_EXPRESSION;\n        }\n        return [\n            this.description.returnsPrimitive ||\n                (this.description.returns === 'self'\n                    ? thisArg || UNKNOWN_EXPRESSION\n                    : this.description.returns()),\n            false\n        ];\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        const { type } = interaction;\n        if (path.length > (type === INTERACTION_ACCESSED ? 1 : 0)) {\n            return true;\n        }\n        if (type === INTERACTION_CALLED) {\n            const { args, thisArg } = interaction;\n            if (this.description.mutatesSelfAsArray === true &&\n                thisArg?.hasEffectsOnInteractionAtPath(UNKNOWN_INTEGER_PATH, NODE_INTERACTION_UNKNOWN_ASSIGNMENT, context)) {\n                return true;\n            }\n            if (this.description.callsArgs) {\n                for (const argumentIndex of this.description.callsArgs) {\n                    if (args[argumentIndex]?.hasEffectsOnInteractionAtPath(EMPTY_PATH, NODE_INTERACTION_UNKNOWN_CALL, context)) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n}\nconst METHOD_RETURNS_BOOLEAN = [\n    new Method({\n        callsArgs: null,\n        mutatesSelfAsArray: false,\n        returns: null,\n        returnsPrimitive: UNKNOWN_LITERAL_BOOLEAN\n    })\n];\nconst METHOD_RETURNS_STRING = [\n    new Method({\n        callsArgs: null,\n        mutatesSelfAsArray: false,\n        returns: null,\n        returnsPrimitive: UNKNOWN_LITERAL_STRING\n    })\n];\nconst METHOD_RETURNS_NUMBER = [\n    new Method({\n        callsArgs: null,\n        mutatesSelfAsArray: false,\n        returns: null,\n        returnsPrimitive: UNKNOWN_LITERAL_NUMBER\n    })\n];\nconst METHOD_RETURNS_UNKNOWN = [\n    new Method({\n        callsArgs: null,\n        mutatesSelfAsArray: false,\n        returns: null,\n        returnsPrimitive: UNKNOWN_EXPRESSION\n    })\n];\n\nconst INTEGER_REG_EXP = /^\\d+$/;\nclass ObjectEntity extends ExpressionEntity {\n    // If a PropertyMap is used, this will be taken as propertiesAndGettersByKey\n    // and we assume there are no setters or getters\n    constructor(properties, prototypeExpression, immutable = false) {\n        super();\n        this.prototypeExpression = prototypeExpression;\n        this.immutable = immutable;\n        this.allProperties = [];\n        this.deoptimizedPaths = Object.create(null);\n        this.expressionsToBeDeoptimizedByKey = Object.create(null);\n        this.gettersByKey = Object.create(null);\n        this.hasLostTrack = false;\n        this.hasUnknownDeoptimizedInteger = false;\n        this.hasUnknownDeoptimizedProperty = false;\n        this.propertiesAndGettersByKey = Object.create(null);\n        this.propertiesAndSettersByKey = Object.create(null);\n        this.settersByKey = Object.create(null);\n        this.thisParametersToBeDeoptimized = new Set();\n        this.unknownIntegerProps = [];\n        this.unmatchableGetters = [];\n        this.unmatchablePropertiesAndGetters = [];\n        this.unmatchableSetters = [];\n        if (Array.isArray(properties)) {\n            this.buildPropertyMaps(properties);\n        }\n        else {\n            this.propertiesAndGettersByKey = this.propertiesAndSettersByKey = properties;\n            for (const propertiesForKey of Object.values(properties)) {\n                this.allProperties.push(...propertiesForKey);\n            }\n        }\n    }\n    deoptimizeAllProperties(noAccessors) {\n        const isDeoptimized = this.hasLostTrack || this.hasUnknownDeoptimizedProperty;\n        if (noAccessors) {\n            this.hasUnknownDeoptimizedProperty = true;\n        }\n        else {\n            this.hasLostTrack = true;\n        }\n        if (isDeoptimized) {\n            return;\n        }\n        for (const properties of [\n            ...Object.values(this.propertiesAndGettersByKey),\n            ...Object.values(this.settersByKey)\n        ]) {\n            for (const property of properties) {\n                property.deoptimizePath(UNKNOWN_PATH);\n            }\n        }\n        // While the prototype itself cannot be mutated, each property can\n        this.prototypeExpression?.deoptimizePath([UnknownKey, UnknownKey]);\n        this.deoptimizeCachedEntities();\n    }\n    deoptimizeIntegerProperties() {\n        if (this.hasLostTrack ||\n            this.hasUnknownDeoptimizedProperty ||\n            this.hasUnknownDeoptimizedInteger) {\n            return;\n        }\n        this.hasUnknownDeoptimizedInteger = true;\n        for (const [key, propertiesAndGetters] of Object.entries(this.propertiesAndGettersByKey)) {\n            if (INTEGER_REG_EXP.test(key)) {\n                for (const property of propertiesAndGetters) {\n                    property.deoptimizePath(UNKNOWN_PATH);\n                }\n            }\n        }\n        this.deoptimizeCachedIntegerEntities();\n    }\n    // Assumption: If only a specific path is deoptimized, no accessors are created\n    deoptimizePath(path) {\n        if (this.hasLostTrack || this.immutable) {\n            return;\n        }\n        const key = path[0];\n        if (path.length === 1) {\n            if (typeof key !== 'string') {\n                if (key === UnknownInteger) {\n                    return this.deoptimizeIntegerProperties();\n                }\n                return this.deoptimizeAllProperties(key === UnknownNonAccessorKey);\n            }\n            if (!this.deoptimizedPaths[key]) {\n                this.deoptimizedPaths[key] = true;\n                // we only deoptimizeCache exact matches as in all other cases,\n                // we do not return a literal value or return expression\n                const expressionsToBeDeoptimized = this.expressionsToBeDeoptimizedByKey[key];\n                if (expressionsToBeDeoptimized) {\n                    for (const expression of expressionsToBeDeoptimized) {\n                        expression.deoptimizeCache();\n                    }\n                }\n            }\n        }\n        const subPath = path.length === 1 ? UNKNOWN_PATH : path.slice(1);\n        for (const property of typeof key === 'string'\n            ? [\n                ...(this.propertiesAndGettersByKey[key] || this.unmatchablePropertiesAndGetters),\n                ...(this.settersByKey[key] || this.unmatchableSetters)\n            ]\n            : this.allProperties) {\n            property.deoptimizePath(subPath);\n        }\n        this.prototypeExpression?.deoptimizePath(path.length === 1 ? [...path, UnknownKey] : path);\n    }\n    deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n        const [key, ...subPath] = path;\n        if (this.hasLostTrack ||\n            // single paths that are deoptimized will not become getters or setters\n            ((interaction.type === INTERACTION_CALLED || path.length > 1) &&\n                (this.hasUnknownDeoptimizedProperty ||\n                    (typeof key === 'string' && this.deoptimizedPaths[key])))) {\n            interaction.thisArg.deoptimizePath(UNKNOWN_PATH);\n            return;\n        }\n        const [propertiesForExactMatchByKey, relevantPropertiesByKey, relevantUnmatchableProperties] = interaction.type === INTERACTION_CALLED || path.length > 1\n            ? [\n                this.propertiesAndGettersByKey,\n                this.propertiesAndGettersByKey,\n                this.unmatchablePropertiesAndGetters\n            ]\n            : interaction.type === INTERACTION_ACCESSED\n                ? [this.propertiesAndGettersByKey, this.gettersByKey, this.unmatchableGetters]\n                : [this.propertiesAndSettersByKey, this.settersByKey, this.unmatchableSetters];\n        if (typeof key === 'string') {\n            if (propertiesForExactMatchByKey[key]) {\n                const properties = relevantPropertiesByKey[key];\n                if (properties) {\n                    for (const property of properties) {\n                        property.deoptimizeThisOnInteractionAtPath(interaction, subPath, recursionTracker);\n                    }\n                }\n                if (!this.immutable) {\n                    this.thisParametersToBeDeoptimized.add(interaction.thisArg);\n                }\n                return;\n            }\n            for (const property of relevantUnmatchableProperties) {\n                property.deoptimizeThisOnInteractionAtPath(interaction, subPath, recursionTracker);\n            }\n            if (INTEGER_REG_EXP.test(key)) {\n                for (const property of this.unknownIntegerProps) {\n                    property.deoptimizeThisOnInteractionAtPath(interaction, subPath, recursionTracker);\n                }\n            }\n        }\n        else {\n            for (const properties of [\n                ...Object.values(relevantPropertiesByKey),\n                relevantUnmatchableProperties\n            ]) {\n                for (const property of properties) {\n                    property.deoptimizeThisOnInteractionAtPath(interaction, subPath, recursionTracker);\n                }\n            }\n            for (const property of this.unknownIntegerProps) {\n                property.deoptimizeThisOnInteractionAtPath(interaction, subPath, recursionTracker);\n            }\n        }\n        if (!this.immutable) {\n            this.thisParametersToBeDeoptimized.add(interaction.thisArg);\n        }\n        this.prototypeExpression?.deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n    }\n    getLiteralValueAtPath(path, recursionTracker, origin) {\n        if (path.length === 0) {\n            return UnknownTruthyValue;\n        }\n        const key = path[0];\n        const expressionAtPath = this.getMemberExpressionAndTrackDeopt(key, origin);\n        if (expressionAtPath) {\n            return expressionAtPath.getLiteralValueAtPath(path.slice(1), recursionTracker, origin);\n        }\n        if (this.prototypeExpression) {\n            return this.prototypeExpression.getLiteralValueAtPath(path, recursionTracker, origin);\n        }\n        if (path.length === 1) {\n            return undefined;\n        }\n        return UnknownValue;\n    }\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n        if (path.length === 0) {\n            return UNKNOWN_RETURN_EXPRESSION;\n        }\n        const [key, ...subPath] = path;\n        const expressionAtPath = this.getMemberExpressionAndTrackDeopt(key, origin);\n        if (expressionAtPath) {\n            return expressionAtPath.getReturnExpressionWhenCalledAtPath(subPath, interaction, recursionTracker, origin);\n        }\n        if (this.prototypeExpression) {\n            return this.prototypeExpression.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\n        }\n        return UNKNOWN_RETURN_EXPRESSION;\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        const [key, ...subPath] = path;\n        if (subPath.length > 0 || interaction.type === INTERACTION_CALLED) {\n            const expressionAtPath = this.getMemberExpression(key);\n            if (expressionAtPath) {\n                return expressionAtPath.hasEffectsOnInteractionAtPath(subPath, interaction, context);\n            }\n            if (this.prototypeExpression) {\n                return this.prototypeExpression.hasEffectsOnInteractionAtPath(path, interaction, context);\n            }\n            return true;\n        }\n        if (key === UnknownNonAccessorKey)\n            return false;\n        if (this.hasLostTrack)\n            return true;\n        const [propertiesAndAccessorsByKey, accessorsByKey, unmatchableAccessors] = interaction.type === INTERACTION_ACCESSED\n            ? [this.propertiesAndGettersByKey, this.gettersByKey, this.unmatchableGetters]\n            : [this.propertiesAndSettersByKey, this.settersByKey, this.unmatchableSetters];\n        if (typeof key === 'string') {\n            if (propertiesAndAccessorsByKey[key]) {\n                const accessors = accessorsByKey[key];\n                if (accessors) {\n                    for (const accessor of accessors) {\n                        if (accessor.hasEffectsOnInteractionAtPath(subPath, interaction, context))\n                            return true;\n                    }\n                }\n                return false;\n            }\n            for (const accessor of unmatchableAccessors) {\n                if (accessor.hasEffectsOnInteractionAtPath(subPath, interaction, context)) {\n                    return true;\n                }\n            }\n        }\n        else {\n            for (const accessors of [...Object.values(accessorsByKey), unmatchableAccessors]) {\n                for (const accessor of accessors) {\n                    if (accessor.hasEffectsOnInteractionAtPath(subPath, interaction, context))\n                        return true;\n                }\n            }\n        }\n        if (this.prototypeExpression) {\n            return this.prototypeExpression.hasEffectsOnInteractionAtPath(path, interaction, context);\n        }\n        return false;\n    }\n    buildPropertyMaps(properties) {\n        const { allProperties, propertiesAndGettersByKey, propertiesAndSettersByKey, settersByKey, gettersByKey, unknownIntegerProps, unmatchablePropertiesAndGetters, unmatchableGetters, unmatchableSetters } = this;\n        const unmatchablePropertiesAndSetters = [];\n        for (let index = properties.length - 1; index >= 0; index--) {\n            const { key, kind, property } = properties[index];\n            allProperties.push(property);\n            if (typeof key === 'string') {\n                if (kind === 'set') {\n                    if (!propertiesAndSettersByKey[key]) {\n                        propertiesAndSettersByKey[key] = [property, ...unmatchablePropertiesAndSetters];\n                        settersByKey[key] = [property, ...unmatchableSetters];\n                    }\n                }\n                else if (kind === 'get') {\n                    if (!propertiesAndGettersByKey[key]) {\n                        propertiesAndGettersByKey[key] = [property, ...unmatchablePropertiesAndGetters];\n                        gettersByKey[key] = [property, ...unmatchableGetters];\n                    }\n                }\n                else {\n                    if (!propertiesAndSettersByKey[key]) {\n                        propertiesAndSettersByKey[key] = [property, ...unmatchablePropertiesAndSetters];\n                    }\n                    if (!propertiesAndGettersByKey[key]) {\n                        propertiesAndGettersByKey[key] = [property, ...unmatchablePropertiesAndGetters];\n                    }\n                }\n            }\n            else {\n                if (key === UnknownInteger) {\n                    unknownIntegerProps.push(property);\n                    continue;\n                }\n                if (kind === 'set')\n                    unmatchableSetters.push(property);\n                if (kind === 'get')\n                    unmatchableGetters.push(property);\n                if (kind !== 'get')\n                    unmatchablePropertiesAndSetters.push(property);\n                if (kind !== 'set')\n                    unmatchablePropertiesAndGetters.push(property);\n            }\n        }\n    }\n    deoptimizeCachedEntities() {\n        for (const expressionsToBeDeoptimized of Object.values(this.expressionsToBeDeoptimizedByKey)) {\n            for (const expression of expressionsToBeDeoptimized) {\n                expression.deoptimizeCache();\n            }\n        }\n        for (const expression of this.thisParametersToBeDeoptimized) {\n            expression.deoptimizePath(UNKNOWN_PATH);\n        }\n    }\n    deoptimizeCachedIntegerEntities() {\n        for (const [key, expressionsToBeDeoptimized] of Object.entries(this.expressionsToBeDeoptimizedByKey)) {\n            if (INTEGER_REG_EXP.test(key)) {\n                for (const expression of expressionsToBeDeoptimized) {\n                    expression.deoptimizeCache();\n                }\n            }\n        }\n        for (const expression of this.thisParametersToBeDeoptimized) {\n            expression.deoptimizePath(UNKNOWN_INTEGER_PATH);\n        }\n    }\n    getMemberExpression(key) {\n        if (this.hasLostTrack ||\n            this.hasUnknownDeoptimizedProperty ||\n            typeof key !== 'string' ||\n            (this.hasUnknownDeoptimizedInteger && INTEGER_REG_EXP.test(key)) ||\n            this.deoptimizedPaths[key]) {\n            return UNKNOWN_EXPRESSION;\n        }\n        const properties = this.propertiesAndGettersByKey[key];\n        if (properties?.length === 1) {\n            return properties[0];\n        }\n        if (properties ||\n            this.unmatchablePropertiesAndGetters.length > 0 ||\n            (this.unknownIntegerProps.length > 0 && INTEGER_REG_EXP.test(key))) {\n            return UNKNOWN_EXPRESSION;\n        }\n        return null;\n    }\n    getMemberExpressionAndTrackDeopt(key, origin) {\n        if (typeof key !== 'string') {\n            return UNKNOWN_EXPRESSION;\n        }\n        const expression = this.getMemberExpression(key);\n        if (!(expression === UNKNOWN_EXPRESSION || this.immutable)) {\n            const expressionsToBeDeoptimized = (this.expressionsToBeDeoptimizedByKey[key] =\n                this.expressionsToBeDeoptimizedByKey[key] || []);\n            expressionsToBeDeoptimized.push(origin);\n        }\n        return expression;\n    }\n}\n\nconst isInteger = (property) => typeof property === 'string' && /^\\d+$/.test(property);\n// This makes sure unknown properties are not handled as \"undefined\" but as\n// \"unknown\" but without access side effects. An exception is done for numeric\n// properties as we do not expect new builtin properties to be numbers, this\n// will improve tree-shaking for out-of-bounds array properties\nconst OBJECT_PROTOTYPE_FALLBACK = new (class ObjectPrototypeFallbackExpression extends ExpressionEntity {\n    deoptimizeThisOnInteractionAtPath({ type, thisArg }, path) {\n        if (type === INTERACTION_CALLED && path.length === 1 && !isInteger(path[0])) {\n            thisArg.deoptimizePath(UNKNOWN_PATH);\n        }\n    }\n    getLiteralValueAtPath(path) {\n        // We ignore number properties as we do not expect new properties to be\n        // numbers and also want to keep handling out-of-bound array elements as\n        // \"undefined\"\n        return path.length === 1 && isInteger(path[0]) ? undefined : UnknownValue;\n    }\n    hasEffectsOnInteractionAtPath(path, { type }) {\n        return path.length > 1 || type === INTERACTION_CALLED;\n    }\n})();\nconst OBJECT_PROTOTYPE = new ObjectEntity({\n    __proto__: null,\n    hasOwnProperty: METHOD_RETURNS_BOOLEAN,\n    isPrototypeOf: METHOD_RETURNS_BOOLEAN,\n    propertyIsEnumerable: METHOD_RETURNS_BOOLEAN,\n    toLocaleString: METHOD_RETURNS_STRING,\n    toString: METHOD_RETURNS_STRING,\n    valueOf: METHOD_RETURNS_UNKNOWN\n}, OBJECT_PROTOTYPE_FALLBACK, true);\n\nconst NEW_ARRAY_PROPERTIES = [\n    { key: UnknownInteger, kind: 'init', property: UNKNOWN_EXPRESSION },\n    { key: 'length', kind: 'init', property: UNKNOWN_LITERAL_NUMBER }\n];\nconst METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_BOOLEAN = [\n    new Method({\n        callsArgs: [0],\n        mutatesSelfAsArray: 'deopt-only',\n        returns: null,\n        returnsPrimitive: UNKNOWN_LITERAL_BOOLEAN\n    })\n];\nconst METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NUMBER = [\n    new Method({\n        callsArgs: [0],\n        mutatesSelfAsArray: 'deopt-only',\n        returns: null,\n        returnsPrimitive: UNKNOWN_LITERAL_NUMBER\n    })\n];\nconst METHOD_MUTATES_SELF_RETURNS_NEW_ARRAY = [\n    new Method({\n        callsArgs: null,\n        mutatesSelfAsArray: true,\n        returns: () => new ObjectEntity(NEW_ARRAY_PROPERTIES, ARRAY_PROTOTYPE),\n        returnsPrimitive: null\n    })\n];\nconst METHOD_DEOPTS_SELF_RETURNS_NEW_ARRAY = [\n    new Method({\n        callsArgs: null,\n        mutatesSelfAsArray: 'deopt-only',\n        returns: () => new ObjectEntity(NEW_ARRAY_PROPERTIES, ARRAY_PROTOTYPE),\n        returnsPrimitive: null\n    })\n];\nconst METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NEW_ARRAY = [\n    new Method({\n        callsArgs: [0],\n        mutatesSelfAsArray: 'deopt-only',\n        returns: () => new ObjectEntity(NEW_ARRAY_PROPERTIES, ARRAY_PROTOTYPE),\n        returnsPrimitive: null\n    })\n];\nconst METHOD_MUTATES_SELF_RETURNS_NUMBER = [\n    new Method({\n        callsArgs: null,\n        mutatesSelfAsArray: true,\n        returns: null,\n        returnsPrimitive: UNKNOWN_LITERAL_NUMBER\n    })\n];\nconst METHOD_MUTATES_SELF_RETURNS_UNKNOWN = [\n    new Method({\n        callsArgs: null,\n        mutatesSelfAsArray: true,\n        returns: null,\n        returnsPrimitive: UNKNOWN_EXPRESSION\n    })\n];\nconst METHOD_DEOPTS_SELF_RETURNS_UNKNOWN = [\n    new Method({\n        callsArgs: null,\n        mutatesSelfAsArray: 'deopt-only',\n        returns: null,\n        returnsPrimitive: UNKNOWN_EXPRESSION\n    })\n];\nconst METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_UNKNOWN = [\n    new Method({\n        callsArgs: [0],\n        mutatesSelfAsArray: 'deopt-only',\n        returns: null,\n        returnsPrimitive: UNKNOWN_EXPRESSION\n    })\n];\nconst METHOD_MUTATES_SELF_RETURNS_SELF = [\n    new Method({\n        callsArgs: null,\n        mutatesSelfAsArray: true,\n        returns: 'self',\n        returnsPrimitive: null\n    })\n];\nconst METHOD_CALLS_ARG_MUTATES_SELF_RETURNS_SELF = [\n    new Method({\n        callsArgs: [0],\n        mutatesSelfAsArray: true,\n        returns: 'self',\n        returnsPrimitive: null\n    })\n];\nconst ARRAY_PROTOTYPE = new ObjectEntity({\n    __proto__: null,\n    // We assume that accessors have effects as we do not track the accessed value afterwards\n    at: METHOD_DEOPTS_SELF_RETURNS_UNKNOWN,\n    concat: METHOD_DEOPTS_SELF_RETURNS_NEW_ARRAY,\n    copyWithin: METHOD_MUTATES_SELF_RETURNS_SELF,\n    entries: METHOD_DEOPTS_SELF_RETURNS_NEW_ARRAY,\n    every: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_BOOLEAN,\n    fill: METHOD_MUTATES_SELF_RETURNS_SELF,\n    filter: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NEW_ARRAY,\n    find: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_UNKNOWN,\n    findIndex: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NUMBER,\n    findLast: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_UNKNOWN,\n    findLastIndex: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NUMBER,\n    flat: METHOD_DEOPTS_SELF_RETURNS_NEW_ARRAY,\n    flatMap: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NEW_ARRAY,\n    forEach: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_UNKNOWN,\n    includes: METHOD_RETURNS_BOOLEAN,\n    indexOf: METHOD_RETURNS_NUMBER,\n    join: METHOD_RETURNS_STRING,\n    keys: METHOD_RETURNS_UNKNOWN,\n    lastIndexOf: METHOD_RETURNS_NUMBER,\n    map: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NEW_ARRAY,\n    pop: METHOD_MUTATES_SELF_RETURNS_UNKNOWN,\n    push: METHOD_MUTATES_SELF_RETURNS_NUMBER,\n    reduce: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_UNKNOWN,\n    reduceRight: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_UNKNOWN,\n    reverse: METHOD_MUTATES_SELF_RETURNS_SELF,\n    shift: METHOD_MUTATES_SELF_RETURNS_UNKNOWN,\n    slice: METHOD_DEOPTS_SELF_RETURNS_NEW_ARRAY,\n    some: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_BOOLEAN,\n    sort: METHOD_CALLS_ARG_MUTATES_SELF_RETURNS_SELF,\n    splice: METHOD_MUTATES_SELF_RETURNS_NEW_ARRAY,\n    toLocaleString: METHOD_RETURNS_STRING,\n    toString: METHOD_RETURNS_STRING,\n    unshift: METHOD_MUTATES_SELF_RETURNS_NUMBER,\n    values: METHOD_DEOPTS_SELF_RETURNS_UNKNOWN\n}, OBJECT_PROTOTYPE, true);\n\nclass ArrayExpression extends NodeBase {\n    constructor() {\n        super(...arguments);\n        this.objectEntity = null;\n    }\n    deoptimizePath(path) {\n        this.getObjectEntity().deoptimizePath(path);\n    }\n    deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n        this.getObjectEntity().deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n    }\n    getLiteralValueAtPath(path, recursionTracker, origin) {\n        return this.getObjectEntity().getLiteralValueAtPath(path, recursionTracker, origin);\n    }\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n        return this.getObjectEntity().getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        return this.getObjectEntity().hasEffectsOnInteractionAtPath(path, interaction, context);\n    }\n    applyDeoptimizations() {\n        this.deoptimized = true;\n        let hasSpread = false;\n        for (let index = 0; index < this.elements.length; index++) {\n            const element = this.elements[index];\n            if (element && (hasSpread || element instanceof SpreadElement)) {\n                hasSpread = true;\n                element.deoptimizePath(UNKNOWN_PATH);\n            }\n        }\n        this.context.requestTreeshakingPass();\n    }\n    getObjectEntity() {\n        if (this.objectEntity !== null) {\n            return this.objectEntity;\n        }\n        const properties = [\n            { key: 'length', kind: 'init', property: UNKNOWN_LITERAL_NUMBER }\n        ];\n        let hasSpread = false;\n        for (let index = 0; index < this.elements.length; index++) {\n            const element = this.elements[index];\n            if (hasSpread || element instanceof SpreadElement) {\n                if (element) {\n                    hasSpread = true;\n                    properties.unshift({ key: UnknownInteger, kind: 'init', property: element });\n                }\n            }\n            else if (element) {\n                properties.push({ key: String(index), kind: 'init', property: element });\n            }\n            else {\n                properties.push({ key: String(index), kind: 'init', property: UNDEFINED_EXPRESSION });\n            }\n        }\n        return (this.objectEntity = new ObjectEntity(properties, ARRAY_PROTOTYPE));\n    }\n}\n\nclass ArrayPattern extends NodeBase {\n    addExportedVariables(variables, exportNamesByVariable) {\n        for (const element of this.elements) {\n            element?.addExportedVariables(variables, exportNamesByVariable);\n        }\n    }\n    declare(kind) {\n        const variables = [];\n        for (const element of this.elements) {\n            if (element !== null) {\n                variables.push(...element.declare(kind, UNKNOWN_EXPRESSION));\n            }\n        }\n        return variables;\n    }\n    // Patterns can only be deoptimized at the empty path at the moment\n    deoptimizePath() {\n        for (const element of this.elements) {\n            element?.deoptimizePath(EMPTY_PATH);\n        }\n    }\n    // Patterns are only checked at the emtpy path at the moment\n    hasEffectsOnInteractionAtPath(_path, interaction, context) {\n        for (const element of this.elements) {\n            if (element?.hasEffectsOnInteractionAtPath(EMPTY_PATH, interaction, context))\n                return true;\n        }\n        return false;\n    }\n    markDeclarationReached() {\n        for (const element of this.elements) {\n            element?.markDeclarationReached();\n        }\n    }\n}\n\nclass LocalVariable extends Variable {\n    constructor(name, declarator, init, context) {\n        super(name);\n        this.calledFromTryStatement = false;\n        this.additionalInitializers = null;\n        this.expressionsToBeDeoptimized = [];\n        this.declarations = declarator ? [declarator] : [];\n        this.init = init;\n        this.deoptimizationTracker = context.deoptimizationTracker;\n        this.module = context.module;\n    }\n    addDeclaration(identifier, init) {\n        this.declarations.push(identifier);\n        const additionalInitializers = this.markInitializersForDeoptimization();\n        if (init !== null) {\n            additionalInitializers.push(init);\n        }\n    }\n    consolidateInitializers() {\n        if (this.additionalInitializers !== null) {\n            for (const initializer of this.additionalInitializers) {\n                initializer.deoptimizePath(UNKNOWN_PATH);\n            }\n            this.additionalInitializers = null;\n        }\n    }\n    deoptimizePath(path) {\n        if (this.isReassigned ||\n            this.deoptimizationTracker.trackEntityAtPathAndGetIfTracked(path, this)) {\n            return;\n        }\n        if (path.length === 0) {\n            if (!this.isReassigned) {\n                this.isReassigned = true;\n                const expressionsToBeDeoptimized = this.expressionsToBeDeoptimized;\n                this.expressionsToBeDeoptimized = [];\n                for (const expression of expressionsToBeDeoptimized) {\n                    expression.deoptimizeCache();\n                }\n                this.init?.deoptimizePath(UNKNOWN_PATH);\n            }\n        }\n        else {\n            this.init?.deoptimizePath(path);\n        }\n    }\n    deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n        if (this.isReassigned || !this.init) {\n            return interaction.thisArg.deoptimizePath(UNKNOWN_PATH);\n        }\n        recursionTracker.withTrackedEntityAtPath(path, this.init, () => this.init.deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker), undefined);\n    }\n    getLiteralValueAtPath(path, recursionTracker, origin) {\n        if (this.isReassigned || !this.init) {\n            return UnknownValue;\n        }\n        return recursionTracker.withTrackedEntityAtPath(path, this.init, () => {\n            this.expressionsToBeDeoptimized.push(origin);\n            return this.init.getLiteralValueAtPath(path, recursionTracker, origin);\n        }, UnknownValue);\n    }\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n        if (this.isReassigned || !this.init) {\n            return UNKNOWN_RETURN_EXPRESSION;\n        }\n        return recursionTracker.withTrackedEntityAtPath(path, this.init, () => {\n            this.expressionsToBeDeoptimized.push(origin);\n            return this.init.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\n        }, UNKNOWN_RETURN_EXPRESSION);\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        switch (interaction.type) {\n            case INTERACTION_ACCESSED: {\n                if (this.isReassigned)\n                    return true;\n                return !!(this.init &&\n                    !context.accessed.trackEntityAtPathAndGetIfTracked(path, this) &&\n                    this.init.hasEffectsOnInteractionAtPath(path, interaction, context));\n            }\n            case INTERACTION_ASSIGNED: {\n                if (this.included)\n                    return true;\n                if (path.length === 0)\n                    return false;\n                if (this.isReassigned)\n                    return true;\n                return !!(this.init &&\n                    !context.assigned.trackEntityAtPathAndGetIfTracked(path, this) &&\n                    this.init.hasEffectsOnInteractionAtPath(path, interaction, context));\n            }\n            case INTERACTION_CALLED: {\n                if (this.isReassigned)\n                    return true;\n                return !!(this.init &&\n                    !(interaction.withNew ? context.instantiated : context.called).trackEntityAtPathAndGetIfTracked(path, interaction.args, this) &&\n                    this.init.hasEffectsOnInteractionAtPath(path, interaction, context));\n            }\n        }\n    }\n    include() {\n        if (!this.included) {\n            this.included = true;\n            for (const declaration of this.declarations) {\n                // If node is a default export, it can save a tree-shaking run to include the full declaration now\n                if (!declaration.included)\n                    declaration.include(createInclusionContext(), false);\n                let node = declaration.parent;\n                while (!node.included) {\n                    // We do not want to properly include parents in case they are part of a dead branch\n                    // in which case .include() might pull in more dead code\n                    node.included = true;\n                    if (node.type === Program$1)\n                        break;\n                    node = node.parent;\n                }\n            }\n        }\n    }\n    includeCallArguments(context, parameters) {\n        if (this.isReassigned || (this.init && context.includedCallArguments.has(this.init))) {\n            for (const argument of parameters) {\n                argument.include(context, false);\n            }\n        }\n        else if (this.init) {\n            context.includedCallArguments.add(this.init);\n            this.init.includeCallArguments(context, parameters);\n            context.includedCallArguments.delete(this.init);\n        }\n    }\n    markCalledFromTryStatement() {\n        this.calledFromTryStatement = true;\n    }\n    markInitializersForDeoptimization() {\n        if (this.additionalInitializers === null) {\n            this.additionalInitializers = this.init === null ? [] : [this.init];\n            this.init = UNKNOWN_EXPRESSION;\n            this.isReassigned = true;\n        }\n        return this.additionalInitializers;\n    }\n}\n\nconst chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_$';\nconst base = 64;\nfunction toBase64(value) {\n    let outString = '';\n    do {\n        const currentDigit = value % base;\n        value = (value / base) | 0;\n        outString = chars[currentDigit] + outString;\n    } while (value !== 0);\n    return outString;\n}\n\nfunction getSafeName(baseName, usedNames, forbiddenNames) {\n    let safeName = baseName;\n    let count = 1;\n    while (usedNames.has(safeName) || RESERVED_NAMES$1.has(safeName) || forbiddenNames?.has(safeName)) {\n        safeName = `${baseName}$${toBase64(count++)}`;\n    }\n    usedNames.add(safeName);\n    return safeName;\n}\n\nlet Scope$1 = class Scope {\n    constructor() {\n        this.children = [];\n        this.variables = new Map();\n    }\n    addDeclaration(identifier, context, init, _isHoisted) {\n        const name = identifier.name;\n        let variable = this.variables.get(name);\n        if (variable) {\n            variable.addDeclaration(identifier, init);\n        }\n        else {\n            variable = new LocalVariable(identifier.name, identifier, init || UNDEFINED_EXPRESSION, context);\n            this.variables.set(name, variable);\n        }\n        return variable;\n    }\n    contains(name) {\n        return this.variables.has(name);\n    }\n    findVariable(_name) {\n        throw new Error('Internal Error: findVariable needs to be implemented by a subclass');\n    }\n};\n\nclass ChildScope extends Scope$1 {\n    constructor(parent) {\n        super();\n        this.accessedOutsideVariables = new Map();\n        this.parent = parent;\n        parent.children.push(this);\n    }\n    addAccessedDynamicImport(importExpression) {\n        (this.accessedDynamicImports || (this.accessedDynamicImports = new Set())).add(importExpression);\n        if (this.parent instanceof ChildScope) {\n            this.parent.addAccessedDynamicImport(importExpression);\n        }\n    }\n    addAccessedGlobals(globals, accessedGlobalsByScope) {\n        const accessedGlobals = accessedGlobalsByScope.get(this) || new Set();\n        for (const name of globals) {\n            accessedGlobals.add(name);\n        }\n        accessedGlobalsByScope.set(this, accessedGlobals);\n        if (this.parent instanceof ChildScope) {\n            this.parent.addAccessedGlobals(globals, accessedGlobalsByScope);\n        }\n    }\n    addNamespaceMemberAccess(name, variable) {\n        this.accessedOutsideVariables.set(name, variable);\n        this.parent.addNamespaceMemberAccess(name, variable);\n    }\n    addReturnExpression(expression) {\n        this.parent instanceof ChildScope && this.parent.addReturnExpression(expression);\n    }\n    addUsedOutsideNames(usedNames, format, exportNamesByVariable, accessedGlobalsByScope) {\n        for (const variable of this.accessedOutsideVariables.values()) {\n            if (variable.included) {\n                usedNames.add(variable.getBaseVariableName());\n                if (format === 'system' && exportNamesByVariable.has(variable)) {\n                    usedNames.add('exports');\n                }\n            }\n        }\n        const accessedGlobals = accessedGlobalsByScope.get(this);\n        if (accessedGlobals) {\n            for (const name of accessedGlobals) {\n                usedNames.add(name);\n            }\n        }\n    }\n    contains(name) {\n        return this.variables.has(name) || this.parent.contains(name);\n    }\n    deconflict(format, exportNamesByVariable, accessedGlobalsByScope) {\n        const usedNames = new Set();\n        this.addUsedOutsideNames(usedNames, format, exportNamesByVariable, accessedGlobalsByScope);\n        if (this.accessedDynamicImports) {\n            for (const importExpression of this.accessedDynamicImports) {\n                if (importExpression.inlineNamespace) {\n                    usedNames.add(importExpression.inlineNamespace.getBaseVariableName());\n                }\n            }\n        }\n        for (const [name, variable] of this.variables) {\n            if (variable.included || variable.alwaysRendered) {\n                variable.setRenderNames(null, getSafeName(name, usedNames, variable.forbiddenNames));\n            }\n        }\n        for (const scope of this.children) {\n            scope.deconflict(format, exportNamesByVariable, accessedGlobalsByScope);\n        }\n    }\n    findLexicalBoundary() {\n        return this.parent.findLexicalBoundary();\n    }\n    findVariable(name) {\n        const knownVariable = this.variables.get(name) || this.accessedOutsideVariables.get(name);\n        if (knownVariable) {\n            return knownVariable;\n        }\n        const variable = this.parent.findVariable(name);\n        this.accessedOutsideVariables.set(name, variable);\n        return variable;\n    }\n}\n\nclass ParameterScope extends ChildScope {\n    constructor(parent, context) {\n        super(parent);\n        this.parameters = [];\n        this.hasRest = false;\n        this.context = context;\n        this.hoistedBodyVarScope = new ChildScope(this);\n    }\n    /**\n     * Adds a parameter to this scope. Parameters must be added in the correct\n     * order, e.g. from left to right.\n     */\n    addParameterDeclaration(identifier) {\n        const name = identifier.name;\n        let variable = this.hoistedBodyVarScope.variables.get(name);\n        if (variable) {\n            variable.addDeclaration(identifier, null);\n        }\n        else {\n            variable = new LocalVariable(name, identifier, UNKNOWN_EXPRESSION, this.context);\n        }\n        this.variables.set(name, variable);\n        return variable;\n    }\n    addParameterVariables(parameters, hasRest) {\n        this.parameters = parameters;\n        for (const parameterList of parameters) {\n            for (const parameter of parameterList) {\n                parameter.alwaysRendered = true;\n            }\n        }\n        this.hasRest = hasRest;\n    }\n    includeCallArguments(context, parameters) {\n        let calledFromTryStatement = false;\n        let argumentIncluded = false;\n        const restParameter = this.hasRest && this.parameters[this.parameters.length - 1];\n        for (const checkedArgument of parameters) {\n            if (checkedArgument instanceof SpreadElement) {\n                for (const argument of parameters) {\n                    argument.include(context, false);\n                }\n                break;\n            }\n        }\n        for (let index = parameters.length - 1; index >= 0; index--) {\n            const parameterVariables = this.parameters[index] || restParameter;\n            const argument = parameters[index];\n            if (parameterVariables) {\n                calledFromTryStatement = false;\n                if (parameterVariables.length === 0) {\n                    // handle empty destructuring\n                    argumentIncluded = true;\n                }\n                else {\n                    for (const variable of parameterVariables) {\n                        if (variable.included) {\n                            argumentIncluded = true;\n                        }\n                        if (variable.calledFromTryStatement) {\n                            calledFromTryStatement = true;\n                        }\n                    }\n                }\n            }\n            if (!argumentIncluded && argument.shouldBeIncluded(context)) {\n                argumentIncluded = true;\n            }\n            if (argumentIncluded) {\n                argument.include(context, calledFromTryStatement);\n            }\n        }\n    }\n}\n\nclass ReturnValueScope extends ParameterScope {\n    constructor() {\n        super(...arguments);\n        this.returnExpression = null;\n        this.returnExpressions = [];\n    }\n    addReturnExpression(expression) {\n        this.returnExpressions.push(expression);\n    }\n    getReturnExpression() {\n        if (this.returnExpression === null)\n            this.updateReturnExpression();\n        return this.returnExpression;\n    }\n    updateReturnExpression() {\n        if (this.returnExpressions.length === 1) {\n            this.returnExpression = this.returnExpressions[0];\n        }\n        else {\n            this.returnExpression = UNKNOWN_EXPRESSION;\n            for (const expression of this.returnExpressions) {\n                expression.deoptimizePath(UNKNOWN_PATH);\n            }\n        }\n    }\n}\n\n/** @typedef { import('estree').Node} Node */\n/** @typedef {Node | {\n *   type: 'PropertyDefinition';\n *   computed: boolean;\n *   value: Node\n * }} NodeWithPropertyDefinition */\n\n/**\n *\n * @param {NodeWithPropertyDefinition} node\n * @param {NodeWithPropertyDefinition} parent\n * @returns {boolean}\n */\nfunction is_reference (node, parent) {\n\tif (node.type === 'MemberExpression') {\n\t\treturn !node.computed && is_reference(node.object, node);\n\t}\n\n\tif (node.type === 'Identifier') {\n\t\tif (!parent) return true;\n\n\t\tswitch (parent.type) {\n\t\t\t// disregard `bar` in `foo.bar`\n\t\t\tcase 'MemberExpression': return parent.computed || node === parent.object;\n\n\t\t\t// disregard the `foo` in `class {foo(){}}` but keep it in `class {[foo](){}}`\n\t\t\tcase 'MethodDefinition': return parent.computed;\n\n\t\t\t// disregard the `foo` in `class {foo=bar}` but keep it in `class {[foo]=bar}` and `class {bar=foo}`\n\t\t\tcase 'PropertyDefinition': return parent.computed || node === parent.value;\n\n\t\t\t// disregard the `bar` in `{ bar: foo }`, but keep it in `{ [bar]: foo }`\n\t\t\tcase 'Property': return parent.computed || node === parent.value;\n\n\t\t\t// disregard the `bar` in `export { foo as bar }` or\n\t\t\t// the foo in `import { foo as bar }`\n\t\t\tcase 'ExportSpecifier':\n\t\t\tcase 'ImportSpecifier': return node === parent.local;\n\n\t\t\t// disregard the `foo` in `foo: while (...) { ... break foo; ... continue foo;}`\n\t\t\tcase 'LabeledStatement':\n\t\t\tcase 'BreakStatement':\n\t\t\tcase 'ContinueStatement': return false;\n\t\t\tdefault: return true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nconst PureFunctionKey = Symbol('PureFunction');\nconst getPureFunctions = ({ treeshake }) => {\n    const pureFunctions = Object.create(null);\n    for (const functionName of treeshake ? treeshake.manualPureFunctions : []) {\n        let currentFunctions = pureFunctions;\n        for (const pathSegment of functionName.split('.')) {\n            currentFunctions = currentFunctions[pathSegment] || (currentFunctions[pathSegment] = Object.create(null));\n        }\n        currentFunctions[PureFunctionKey] = true;\n    }\n    return pureFunctions;\n};\n\n/* eslint sort-keys: \"off\" */\nconst ValueProperties = Symbol('Value Properties');\nconst getTruthyLiteralValue = () => UnknownTruthyValue;\nconst returnFalse = () => false;\nconst returnTrue = () => true;\nconst PURE = {\n    getLiteralValue: getTruthyLiteralValue,\n    hasEffectsWhenCalled: returnFalse\n};\nconst IMPURE = {\n    getLiteralValue: getTruthyLiteralValue,\n    hasEffectsWhenCalled: returnTrue\n};\n// We use shortened variables to reduce file size here\n/* OBJECT */\nconst O = {\n    __proto__: null,\n    [ValueProperties]: IMPURE\n};\n/* PURE FUNCTION */\nconst PF = {\n    __proto__: null,\n    [ValueProperties]: PURE\n};\n/* FUNCTION THAT MUTATES FIRST ARG WITHOUT TRIGGERING ACCESSORS */\nconst MUTATES_ARG_WITHOUT_ACCESSOR = {\n    __proto__: null,\n    [ValueProperties]: {\n        getLiteralValue: getTruthyLiteralValue,\n        hasEffectsWhenCalled({ args }, context) {\n            return (args.length === 0 ||\n                args[0].hasEffectsOnInteractionAtPath(UNKNOWN_NON_ACCESSOR_PATH, NODE_INTERACTION_UNKNOWN_ASSIGNMENT, context));\n        }\n    }\n};\n/* CONSTRUCTOR */\nconst C = {\n    __proto__: null,\n    [ValueProperties]: IMPURE,\n    prototype: O\n};\n/* PURE CONSTRUCTOR */\nconst PC = {\n    __proto__: null,\n    [ValueProperties]: PURE,\n    prototype: O\n};\nconst ARRAY_TYPE = {\n    __proto__: null,\n    [ValueProperties]: PURE,\n    from: PF,\n    of: PF,\n    prototype: O\n};\nconst INTL_MEMBER = {\n    __proto__: null,\n    [ValueProperties]: PURE,\n    supportedLocalesOf: PC\n};\nconst knownGlobals = {\n    // Placeholders for global objects to avoid shape mutations\n    global: O,\n    globalThis: O,\n    self: O,\n    window: O,\n    // Common globals\n    __proto__: null,\n    [ValueProperties]: IMPURE,\n    Array: {\n        __proto__: null,\n        [ValueProperties]: IMPURE,\n        from: O,\n        isArray: PF,\n        of: PF,\n        prototype: O\n    },\n    ArrayBuffer: {\n        __proto__: null,\n        [ValueProperties]: PURE,\n        isView: PF,\n        prototype: O\n    },\n    Atomics: O,\n    BigInt: C,\n    BigInt64Array: C,\n    BigUint64Array: C,\n    Boolean: PC,\n    constructor: C,\n    DataView: PC,\n    Date: {\n        __proto__: null,\n        [ValueProperties]: PURE,\n        now: PF,\n        parse: PF,\n        prototype: O,\n        UTC: PF\n    },\n    decodeURI: PF,\n    decodeURIComponent: PF,\n    encodeURI: PF,\n    encodeURIComponent: PF,\n    Error: PC,\n    escape: PF,\n    eval: O,\n    EvalError: PC,\n    Float32Array: ARRAY_TYPE,\n    Float64Array: ARRAY_TYPE,\n    Function: C,\n    hasOwnProperty: O,\n    Infinity: O,\n    Int16Array: ARRAY_TYPE,\n    Int32Array: ARRAY_TYPE,\n    Int8Array: ARRAY_TYPE,\n    isFinite: PF,\n    isNaN: PF,\n    isPrototypeOf: O,\n    JSON: O,\n    Map: PC,\n    Math: {\n        __proto__: null,\n        [ValueProperties]: IMPURE,\n        abs: PF,\n        acos: PF,\n        acosh: PF,\n        asin: PF,\n        asinh: PF,\n        atan: PF,\n        atan2: PF,\n        atanh: PF,\n        cbrt: PF,\n        ceil: PF,\n        clz32: PF,\n        cos: PF,\n        cosh: PF,\n        exp: PF,\n        expm1: PF,\n        floor: PF,\n        fround: PF,\n        hypot: PF,\n        imul: PF,\n        log: PF,\n        log10: PF,\n        log1p: PF,\n        log2: PF,\n        max: PF,\n        min: PF,\n        pow: PF,\n        random: PF,\n        round: PF,\n        sign: PF,\n        sin: PF,\n        sinh: PF,\n        sqrt: PF,\n        tan: PF,\n        tanh: PF,\n        trunc: PF\n    },\n    NaN: O,\n    Number: {\n        __proto__: null,\n        [ValueProperties]: PURE,\n        isFinite: PF,\n        isInteger: PF,\n        isNaN: PF,\n        isSafeInteger: PF,\n        parseFloat: PF,\n        parseInt: PF,\n        prototype: O\n    },\n    Object: {\n        __proto__: null,\n        [ValueProperties]: PURE,\n        create: PF,\n        // Technically those can throw in certain situations, but we ignore this as\n        // code that relies on this will hopefully wrap this in a try-catch, which\n        // deoptimizes everything anyway\n        defineProperty: MUTATES_ARG_WITHOUT_ACCESSOR,\n        defineProperties: MUTATES_ARG_WITHOUT_ACCESSOR,\n        freeze: MUTATES_ARG_WITHOUT_ACCESSOR,\n        getOwnPropertyDescriptor: PF,\n        getOwnPropertyDescriptors: PF,\n        getOwnPropertyNames: PF,\n        getOwnPropertySymbols: PF,\n        getPrototypeOf: PF,\n        hasOwn: PF,\n        is: PF,\n        isExtensible: PF,\n        isFrozen: PF,\n        isSealed: PF,\n        keys: PF,\n        fromEntries: PF,\n        entries: PF,\n        prototype: O\n    },\n    parseFloat: PF,\n    parseInt: PF,\n    Promise: {\n        __proto__: null,\n        [ValueProperties]: IMPURE,\n        all: O,\n        allSettled: O,\n        any: O,\n        prototype: O,\n        race: O,\n        reject: O,\n        resolve: O\n    },\n    propertyIsEnumerable: O,\n    Proxy: O,\n    RangeError: PC,\n    ReferenceError: PC,\n    Reflect: O,\n    RegExp: PC,\n    Set: PC,\n    SharedArrayBuffer: C,\n    String: {\n        __proto__: null,\n        [ValueProperties]: PURE,\n        fromCharCode: PF,\n        fromCodePoint: PF,\n        prototype: O,\n        raw: PF\n    },\n    Symbol: {\n        __proto__: null,\n        [ValueProperties]: PURE,\n        for: PF,\n        keyFor: PF,\n        prototype: O,\n        toStringTag: {\n            __proto__: null,\n            [ValueProperties]: {\n                getLiteralValue() {\n                    return SymbolToStringTag;\n                },\n                hasEffectsWhenCalled: returnTrue\n            }\n        }\n    },\n    SyntaxError: PC,\n    toLocaleString: O,\n    toString: O,\n    TypeError: PC,\n    Uint16Array: ARRAY_TYPE,\n    Uint32Array: ARRAY_TYPE,\n    Uint8Array: ARRAY_TYPE,\n    Uint8ClampedArray: ARRAY_TYPE,\n    // Technically, this is a global, but it needs special handling\n    // undefined: ?,\n    unescape: PF,\n    URIError: PC,\n    valueOf: O,\n    WeakMap: PC,\n    WeakSet: PC,\n    // Additional globals shared by Node and Browser that are not strictly part of the language\n    clearInterval: C,\n    clearTimeout: C,\n    console: O,\n    Intl: {\n        __proto__: null,\n        [ValueProperties]: IMPURE,\n        Collator: INTL_MEMBER,\n        DateTimeFormat: INTL_MEMBER,\n        ListFormat: INTL_MEMBER,\n        NumberFormat: INTL_MEMBER,\n        PluralRules: INTL_MEMBER,\n        RelativeTimeFormat: INTL_MEMBER\n    },\n    setInterval: C,\n    setTimeout: C,\n    TextDecoder: C,\n    TextEncoder: C,\n    URL: C,\n    URLSearchParams: C,\n    // Browser specific globals\n    AbortController: C,\n    AbortSignal: C,\n    addEventListener: O,\n    alert: O,\n    AnalyserNode: C,\n    Animation: C,\n    AnimationEvent: C,\n    applicationCache: O,\n    ApplicationCache: C,\n    ApplicationCacheErrorEvent: C,\n    atob: O,\n    Attr: C,\n    Audio: C,\n    AudioBuffer: C,\n    AudioBufferSourceNode: C,\n    AudioContext: C,\n    AudioDestinationNode: C,\n    AudioListener: C,\n    AudioNode: C,\n    AudioParam: C,\n    AudioProcessingEvent: C,\n    AudioScheduledSourceNode: C,\n    AudioWorkletNode: C,\n    BarProp: C,\n    BaseAudioContext: C,\n    BatteryManager: C,\n    BeforeUnloadEvent: C,\n    BiquadFilterNode: C,\n    Blob: C,\n    BlobEvent: C,\n    blur: O,\n    BroadcastChannel: C,\n    btoa: O,\n    ByteLengthQueuingStrategy: C,\n    Cache: C,\n    caches: O,\n    CacheStorage: C,\n    cancelAnimationFrame: O,\n    cancelIdleCallback: O,\n    CanvasCaptureMediaStreamTrack: C,\n    CanvasGradient: C,\n    CanvasPattern: C,\n    CanvasRenderingContext2D: C,\n    ChannelMergerNode: C,\n    ChannelSplitterNode: C,\n    CharacterData: C,\n    clientInformation: O,\n    ClipboardEvent: C,\n    close: O,\n    closed: O,\n    CloseEvent: C,\n    Comment: C,\n    CompositionEvent: C,\n    confirm: O,\n    ConstantSourceNode: C,\n    ConvolverNode: C,\n    CountQueuingStrategy: C,\n    createImageBitmap: O,\n    Credential: C,\n    CredentialsContainer: C,\n    crypto: O,\n    Crypto: C,\n    CryptoKey: C,\n    CSS: C,\n    CSSConditionRule: C,\n    CSSFontFaceRule: C,\n    CSSGroupingRule: C,\n    CSSImportRule: C,\n    CSSKeyframeRule: C,\n    CSSKeyframesRule: C,\n    CSSMediaRule: C,\n    CSSNamespaceRule: C,\n    CSSPageRule: C,\n    CSSRule: C,\n    CSSRuleList: C,\n    CSSStyleDeclaration: C,\n    CSSStyleRule: C,\n    CSSStyleSheet: C,\n    CSSSupportsRule: C,\n    CustomElementRegistry: C,\n    customElements: O,\n    CustomEvent: C,\n    DataTransfer: C,\n    DataTransferItem: C,\n    DataTransferItemList: C,\n    defaultstatus: O,\n    defaultStatus: O,\n    DelayNode: C,\n    DeviceMotionEvent: C,\n    DeviceOrientationEvent: C,\n    devicePixelRatio: O,\n    dispatchEvent: O,\n    document: O,\n    Document: C,\n    DocumentFragment: C,\n    DocumentType: C,\n    DOMError: C,\n    DOMException: C,\n    DOMImplementation: C,\n    DOMMatrix: C,\n    DOMMatrixReadOnly: C,\n    DOMParser: C,\n    DOMPoint: C,\n    DOMPointReadOnly: C,\n    DOMQuad: C,\n    DOMRect: C,\n    DOMRectReadOnly: C,\n    DOMStringList: C,\n    DOMStringMap: C,\n    DOMTokenList: C,\n    DragEvent: C,\n    DynamicsCompressorNode: C,\n    Element: C,\n    ErrorEvent: C,\n    Event: C,\n    EventSource: C,\n    EventTarget: C,\n    external: O,\n    fetch: O,\n    File: C,\n    FileList: C,\n    FileReader: C,\n    find: O,\n    focus: O,\n    FocusEvent: C,\n    FontFace: C,\n    FontFaceSetLoadEvent: C,\n    FormData: C,\n    frames: O,\n    GainNode: C,\n    Gamepad: C,\n    GamepadButton: C,\n    GamepadEvent: C,\n    getComputedStyle: O,\n    getSelection: O,\n    HashChangeEvent: C,\n    Headers: C,\n    history: O,\n    History: C,\n    HTMLAllCollection: C,\n    HTMLAnchorElement: C,\n    HTMLAreaElement: C,\n    HTMLAudioElement: C,\n    HTMLBaseElement: C,\n    HTMLBodyElement: C,\n    HTMLBRElement: C,\n    HTMLButtonElement: C,\n    HTMLCanvasElement: C,\n    HTMLCollection: C,\n    HTMLContentElement: C,\n    HTMLDataElement: C,\n    HTMLDataListElement: C,\n    HTMLDetailsElement: C,\n    HTMLDialogElement: C,\n    HTMLDirectoryElement: C,\n    HTMLDivElement: C,\n    HTMLDListElement: C,\n    HTMLDocument: C,\n    HTMLElement: C,\n    HTMLEmbedElement: C,\n    HTMLFieldSetElement: C,\n    HTMLFontElement: C,\n    HTMLFormControlsCollection: C,\n    HTMLFormElement: C,\n    HTMLFrameElement: C,\n    HTMLFrameSetElement: C,\n    HTMLHeadElement: C,\n    HTMLHeadingElement: C,\n    HTMLHRElement: C,\n    HTMLHtmlElement: C,\n    HTMLIFrameElement: C,\n    HTMLImageElement: C,\n    HTMLInputElement: C,\n    HTMLLabelElement: C,\n    HTMLLegendElement: C,\n    HTMLLIElement: C,\n    HTMLLinkElement: C,\n    HTMLMapElement: C,\n    HTMLMarqueeElement: C,\n    HTMLMediaElement: C,\n    HTMLMenuElement: C,\n    HTMLMetaElement: C,\n    HTMLMeterElement: C,\n    HTMLModElement: C,\n    HTMLObjectElement: C,\n    HTMLOListElement: C,\n    HTMLOptGroupElement: C,\n    HTMLOptionElement: C,\n    HTMLOptionsCollection: C,\n    HTMLOutputElement: C,\n    HTMLParagraphElement: C,\n    HTMLParamElement: C,\n    HTMLPictureElement: C,\n    HTMLPreElement: C,\n    HTMLProgressElement: C,\n    HTMLQuoteElement: C,\n    HTMLScriptElement: C,\n    HTMLSelectElement: C,\n    HTMLShadowElement: C,\n    HTMLSlotElement: C,\n    HTMLSourceElement: C,\n    HTMLSpanElement: C,\n    HTMLStyleElement: C,\n    HTMLTableCaptionElement: C,\n    HTMLTableCellElement: C,\n    HTMLTableColElement: C,\n    HTMLTableElement: C,\n    HTMLTableRowElement: C,\n    HTMLTableSectionElement: C,\n    HTMLTemplateElement: C,\n    HTMLTextAreaElement: C,\n    HTMLTimeElement: C,\n    HTMLTitleElement: C,\n    HTMLTrackElement: C,\n    HTMLUListElement: C,\n    HTMLUnknownElement: C,\n    HTMLVideoElement: C,\n    IDBCursor: C,\n    IDBCursorWithValue: C,\n    IDBDatabase: C,\n    IDBFactory: C,\n    IDBIndex: C,\n    IDBKeyRange: C,\n    IDBObjectStore: C,\n    IDBOpenDBRequest: C,\n    IDBRequest: C,\n    IDBTransaction: C,\n    IDBVersionChangeEvent: C,\n    IdleDeadline: C,\n    IIRFilterNode: C,\n    Image: C,\n    ImageBitmap: C,\n    ImageBitmapRenderingContext: C,\n    ImageCapture: C,\n    ImageData: C,\n    indexedDB: O,\n    innerHeight: O,\n    innerWidth: O,\n    InputEvent: C,\n    IntersectionObserver: C,\n    IntersectionObserverEntry: C,\n    isSecureContext: O,\n    KeyboardEvent: C,\n    KeyframeEffect: C,\n    length: O,\n    localStorage: O,\n    location: O,\n    Location: C,\n    locationbar: O,\n    matchMedia: O,\n    MediaDeviceInfo: C,\n    MediaDevices: C,\n    MediaElementAudioSourceNode: C,\n    MediaEncryptedEvent: C,\n    MediaError: C,\n    MediaKeyMessageEvent: C,\n    MediaKeySession: C,\n    MediaKeyStatusMap: C,\n    MediaKeySystemAccess: C,\n    MediaList: C,\n    MediaQueryList: C,\n    MediaQueryListEvent: C,\n    MediaRecorder: C,\n    MediaSettingsRange: C,\n    MediaSource: C,\n    MediaStream: C,\n    MediaStreamAudioDestinationNode: C,\n    MediaStreamAudioSourceNode: C,\n    MediaStreamEvent: C,\n    MediaStreamTrack: C,\n    MediaStreamTrackEvent: C,\n    menubar: O,\n    MessageChannel: C,\n    MessageEvent: C,\n    MessagePort: C,\n    MIDIAccess: C,\n    MIDIConnectionEvent: C,\n    MIDIInput: C,\n    MIDIInputMap: C,\n    MIDIMessageEvent: C,\n    MIDIOutput: C,\n    MIDIOutputMap: C,\n    MIDIPort: C,\n    MimeType: C,\n    MimeTypeArray: C,\n    MouseEvent: C,\n    moveBy: O,\n    moveTo: O,\n    MutationEvent: C,\n    MutationObserver: C,\n    MutationRecord: C,\n    name: O,\n    NamedNodeMap: C,\n    NavigationPreloadManager: C,\n    navigator: O,\n    Navigator: C,\n    NetworkInformation: C,\n    Node: C,\n    NodeFilter: O,\n    NodeIterator: C,\n    NodeList: C,\n    Notification: C,\n    OfflineAudioCompletionEvent: C,\n    OfflineAudioContext: C,\n    offscreenBuffering: O,\n    OffscreenCanvas: C,\n    open: O,\n    openDatabase: O,\n    Option: C,\n    origin: O,\n    OscillatorNode: C,\n    outerHeight: O,\n    outerWidth: O,\n    PageTransitionEvent: C,\n    pageXOffset: O,\n    pageYOffset: O,\n    PannerNode: C,\n    parent: O,\n    Path2D: C,\n    PaymentAddress: C,\n    PaymentRequest: C,\n    PaymentRequestUpdateEvent: C,\n    PaymentResponse: C,\n    performance: O,\n    Performance: C,\n    PerformanceEntry: C,\n    PerformanceLongTaskTiming: C,\n    PerformanceMark: C,\n    PerformanceMeasure: C,\n    PerformanceNavigation: C,\n    PerformanceNavigationTiming: C,\n    PerformanceObserver: C,\n    PerformanceObserverEntryList: C,\n    PerformancePaintTiming: C,\n    PerformanceResourceTiming: C,\n    PerformanceTiming: C,\n    PeriodicWave: C,\n    Permissions: C,\n    PermissionStatus: C,\n    personalbar: O,\n    PhotoCapabilities: C,\n    Plugin: C,\n    PluginArray: C,\n    PointerEvent: C,\n    PopStateEvent: C,\n    postMessage: O,\n    Presentation: C,\n    PresentationAvailability: C,\n    PresentationConnection: C,\n    PresentationConnectionAvailableEvent: C,\n    PresentationConnectionCloseEvent: C,\n    PresentationConnectionList: C,\n    PresentationReceiver: C,\n    PresentationRequest: C,\n    print: O,\n    ProcessingInstruction: C,\n    ProgressEvent: C,\n    PromiseRejectionEvent: C,\n    prompt: O,\n    PushManager: C,\n    PushSubscription: C,\n    PushSubscriptionOptions: C,\n    queueMicrotask: O,\n    RadioNodeList: C,\n    Range: C,\n    ReadableStream: C,\n    RemotePlayback: C,\n    removeEventListener: O,\n    Request: C,\n    requestAnimationFrame: O,\n    requestIdleCallback: O,\n    resizeBy: O,\n    ResizeObserver: C,\n    ResizeObserverEntry: C,\n    resizeTo: O,\n    Response: C,\n    RTCCertificate: C,\n    RTCDataChannel: C,\n    RTCDataChannelEvent: C,\n    RTCDtlsTransport: C,\n    RTCIceCandidate: C,\n    RTCIceTransport: C,\n    RTCPeerConnection: C,\n    RTCPeerConnectionIceEvent: C,\n    RTCRtpReceiver: C,\n    RTCRtpSender: C,\n    RTCSctpTransport: C,\n    RTCSessionDescription: C,\n    RTCStatsReport: C,\n    RTCTrackEvent: C,\n    screen: O,\n    Screen: C,\n    screenLeft: O,\n    ScreenOrientation: C,\n    screenTop: O,\n    screenX: O,\n    screenY: O,\n    ScriptProcessorNode: C,\n    scroll: O,\n    scrollbars: O,\n    scrollBy: O,\n    scrollTo: O,\n    scrollX: O,\n    scrollY: O,\n    SecurityPolicyViolationEvent: C,\n    Selection: C,\n    ServiceWorker: C,\n    ServiceWorkerContainer: C,\n    ServiceWorkerRegistration: C,\n    sessionStorage: O,\n    ShadowRoot: C,\n    SharedWorker: C,\n    SourceBuffer: C,\n    SourceBufferList: C,\n    speechSynthesis: O,\n    SpeechSynthesisEvent: C,\n    SpeechSynthesisUtterance: C,\n    StaticRange: C,\n    status: O,\n    statusbar: O,\n    StereoPannerNode: C,\n    stop: O,\n    Storage: C,\n    StorageEvent: C,\n    StorageManager: C,\n    styleMedia: O,\n    StyleSheet: C,\n    StyleSheetList: C,\n    SubtleCrypto: C,\n    SVGAElement: C,\n    SVGAngle: C,\n    SVGAnimatedAngle: C,\n    SVGAnimatedBoolean: C,\n    SVGAnimatedEnumeration: C,\n    SVGAnimatedInteger: C,\n    SVGAnimatedLength: C,\n    SVGAnimatedLengthList: C,\n    SVGAnimatedNumber: C,\n    SVGAnimatedNumberList: C,\n    SVGAnimatedPreserveAspectRatio: C,\n    SVGAnimatedRect: C,\n    SVGAnimatedString: C,\n    SVGAnimatedTransformList: C,\n    SVGAnimateElement: C,\n    SVGAnimateMotionElement: C,\n    SVGAnimateTransformElement: C,\n    SVGAnimationElement: C,\n    SVGCircleElement: C,\n    SVGClipPathElement: C,\n    SVGComponentTransferFunctionElement: C,\n    SVGDefsElement: C,\n    SVGDescElement: C,\n    SVGDiscardElement: C,\n    SVGElement: C,\n    SVGEllipseElement: C,\n    SVGFEBlendElement: C,\n    SVGFEColorMatrixElement: C,\n    SVGFEComponentTransferElement: C,\n    SVGFECompositeElement: C,\n    SVGFEConvolveMatrixElement: C,\n    SVGFEDiffuseLightingElement: C,\n    SVGFEDisplacementMapElement: C,\n    SVGFEDistantLightElement: C,\n    SVGFEDropShadowElement: C,\n    SVGFEFloodElement: C,\n    SVGFEFuncAElement: C,\n    SVGFEFuncBElement: C,\n    SVGFEFuncGElement: C,\n    SVGFEFuncRElement: C,\n    SVGFEGaussianBlurElement: C,\n    SVGFEImageElement: C,\n    SVGFEMergeElement: C,\n    SVGFEMergeNodeElement: C,\n    SVGFEMorphologyElement: C,\n    SVGFEOffsetElement: C,\n    SVGFEPointLightElement: C,\n    SVGFESpecularLightingElement: C,\n    SVGFESpotLightElement: C,\n    SVGFETileElement: C,\n    SVGFETurbulenceElement: C,\n    SVGFilterElement: C,\n    SVGForeignObjectElement: C,\n    SVGGElement: C,\n    SVGGeometryElement: C,\n    SVGGradientElement: C,\n    SVGGraphicsElement: C,\n    SVGImageElement: C,\n    SVGLength: C,\n    SVGLengthList: C,\n    SVGLinearGradientElement: C,\n    SVGLineElement: C,\n    SVGMarkerElement: C,\n    SVGMaskElement: C,\n    SVGMatrix: C,\n    SVGMetadataElement: C,\n    SVGMPathElement: C,\n    SVGNumber: C,\n    SVGNumberList: C,\n    SVGPathElement: C,\n    SVGPatternElement: C,\n    SVGPoint: C,\n    SVGPointList: C,\n    SVGPolygonElement: C,\n    SVGPolylineElement: C,\n    SVGPreserveAspectRatio: C,\n    SVGRadialGradientElement: C,\n    SVGRect: C,\n    SVGRectElement: C,\n    SVGScriptElement: C,\n    SVGSetElement: C,\n    SVGStopElement: C,\n    SVGStringList: C,\n    SVGStyleElement: C,\n    SVGSVGElement: C,\n    SVGSwitchElement: C,\n    SVGSymbolElement: C,\n    SVGTextContentElement: C,\n    SVGTextElement: C,\n    SVGTextPathElement: C,\n    SVGTextPositioningElement: C,\n    SVGTitleElement: C,\n    SVGTransform: C,\n    SVGTransformList: C,\n    SVGTSpanElement: C,\n    SVGUnitTypes: C,\n    SVGUseElement: C,\n    SVGViewElement: C,\n    TaskAttributionTiming: C,\n    Text: C,\n    TextEvent: C,\n    TextMetrics: C,\n    TextTrack: C,\n    TextTrackCue: C,\n    TextTrackCueList: C,\n    TextTrackList: C,\n    TimeRanges: C,\n    toolbar: O,\n    top: O,\n    Touch: C,\n    TouchEvent: C,\n    TouchList: C,\n    TrackEvent: C,\n    TransitionEvent: C,\n    TreeWalker: C,\n    UIEvent: C,\n    ValidityState: C,\n    visualViewport: O,\n    VisualViewport: C,\n    VTTCue: C,\n    WaveShaperNode: C,\n    WebAssembly: O,\n    WebGL2RenderingContext: C,\n    WebGLActiveInfo: C,\n    WebGLBuffer: C,\n    WebGLContextEvent: C,\n    WebGLFramebuffer: C,\n    WebGLProgram: C,\n    WebGLQuery: C,\n    WebGLRenderbuffer: C,\n    WebGLRenderingContext: C,\n    WebGLSampler: C,\n    WebGLShader: C,\n    WebGLShaderPrecisionFormat: C,\n    WebGLSync: C,\n    WebGLTexture: C,\n    WebGLTransformFeedback: C,\n    WebGLUniformLocation: C,\n    WebGLVertexArrayObject: C,\n    WebSocket: C,\n    WheelEvent: C,\n    Window: C,\n    Worker: C,\n    WritableStream: C,\n    XMLDocument: C,\n    XMLHttpRequest: C,\n    XMLHttpRequestEventTarget: C,\n    XMLHttpRequestUpload: C,\n    XMLSerializer: C,\n    XPathEvaluator: C,\n    XPathExpression: C,\n    XPathResult: C,\n    XSLTProcessor: C\n};\nfor (const global of ['window', 'global', 'self', 'globalThis']) {\n    knownGlobals[global] = knownGlobals;\n}\nfunction getGlobalAtPath(path) {\n    let currentGlobal = knownGlobals;\n    for (const pathSegment of path) {\n        if (typeof pathSegment !== 'string') {\n            return null;\n        }\n        currentGlobal = currentGlobal[pathSegment];\n        if (!currentGlobal) {\n            return null;\n        }\n    }\n    return currentGlobal[ValueProperties];\n}\n\nclass GlobalVariable extends Variable {\n    constructor() {\n        super(...arguments);\n        // Ensure we use live-bindings for globals as we do not know if they have\n        // been reassigned\n        this.isReassigned = true;\n    }\n    getLiteralValueAtPath(path, _recursionTracker, _origin) {\n        const globalAtPath = getGlobalAtPath([this.name, ...path]);\n        return globalAtPath ? globalAtPath.getLiteralValue() : UnknownValue;\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        switch (interaction.type) {\n            case INTERACTION_ACCESSED: {\n                if (path.length === 0) {\n                    // Technically, \"undefined\" is a global variable of sorts\n                    return this.name !== 'undefined' && !getGlobalAtPath([this.name]);\n                }\n                return !getGlobalAtPath([this.name, ...path].slice(0, -1));\n            }\n            case INTERACTION_ASSIGNED: {\n                return true;\n            }\n            case INTERACTION_CALLED: {\n                const globalAtPath = getGlobalAtPath([this.name, ...path]);\n                return !globalAtPath || globalAtPath.hasEffectsWhenCalled(interaction, context);\n            }\n        }\n    }\n}\n\nconst tdzVariableKinds = {\n    __proto__: null,\n    class: true,\n    const: true,\n    let: true,\n    var: true\n};\nclass Identifier extends NodeBase {\n    constructor() {\n        super(...arguments);\n        this.variable = null;\n        this.isTDZAccess = null;\n    }\n    addExportedVariables(variables, exportNamesByVariable) {\n        if (exportNamesByVariable.has(this.variable)) {\n            variables.push(this.variable);\n        }\n    }\n    bind() {\n        if (!this.variable && is_reference(this, this.parent)) {\n            this.variable = this.scope.findVariable(this.name);\n            this.variable.addReference(this);\n        }\n    }\n    declare(kind, init) {\n        let variable;\n        const { treeshake } = this.context.options;\n        switch (kind) {\n            case 'var': {\n                variable = this.scope.addDeclaration(this, this.context, init, true);\n                if (treeshake && treeshake.correctVarValueBeforeDeclaration) {\n                    // Necessary to make sure the init is deoptimized. We cannot call deoptimizePath here.\n                    variable.markInitializersForDeoptimization();\n                }\n                break;\n            }\n            case 'function': {\n                // in strict mode, functions are only hoisted within a scope but not across block scopes\n                variable = this.scope.addDeclaration(this, this.context, init, false);\n                break;\n            }\n            case 'let':\n            case 'const':\n            case 'class': {\n                variable = this.scope.addDeclaration(this, this.context, init, false);\n                break;\n            }\n            case 'parameter': {\n                variable = this.scope.addParameterDeclaration(this);\n                break;\n            }\n            /* istanbul ignore next */\n            default: {\n                /* istanbul ignore next */\n                throw new Error(`Internal Error: Unexpected identifier kind ${kind}.`);\n            }\n        }\n        variable.kind = kind;\n        return [(this.variable = variable)];\n    }\n    deoptimizePath(path) {\n        if (path.length === 0 && !this.scope.contains(this.name)) {\n            this.disallowImportReassignment();\n        }\n        // We keep conditional chaining because an unknown Node could have an\n        // Identifier as property that might be deoptimized by default\n        this.variable?.deoptimizePath(path);\n    }\n    deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n        this.variable.deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n    }\n    getLiteralValueAtPath(path, recursionTracker, origin) {\n        return this.getVariableRespectingTDZ().getLiteralValueAtPath(path, recursionTracker, origin);\n    }\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n        const [expression, isPure] = this.getVariableRespectingTDZ().getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\n        return [expression, isPure || this.isPureFunction(path)];\n    }\n    hasEffects(context) {\n        if (!this.deoptimized)\n            this.applyDeoptimizations();\n        if (this.isPossibleTDZ() && this.variable.kind !== 'var') {\n            return true;\n        }\n        return (this.context.options.treeshake.unknownGlobalSideEffects &&\n            this.variable instanceof GlobalVariable &&\n            !this.isPureFunction(EMPTY_PATH) &&\n            this.variable.hasEffectsOnInteractionAtPath(EMPTY_PATH, NODE_INTERACTION_UNKNOWN_ACCESS, context));\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        switch (interaction.type) {\n            case INTERACTION_ACCESSED: {\n                return (this.variable !== null &&\n                    !this.isPureFunction(path) &&\n                    this.getVariableRespectingTDZ().hasEffectsOnInteractionAtPath(path, interaction, context));\n            }\n            case INTERACTION_ASSIGNED: {\n                return (path.length > 0 ? this.getVariableRespectingTDZ() : this.variable).hasEffectsOnInteractionAtPath(path, interaction, context);\n            }\n            case INTERACTION_CALLED: {\n                return (!this.isPureFunction(path) &&\n                    this.getVariableRespectingTDZ().hasEffectsOnInteractionAtPath(path, interaction, context));\n            }\n        }\n    }\n    include() {\n        if (!this.deoptimized)\n            this.applyDeoptimizations();\n        if (!this.included) {\n            this.included = true;\n            if (this.variable !== null) {\n                this.context.includeVariableInModule(this.variable);\n            }\n        }\n    }\n    includeCallArguments(context, parameters) {\n        this.variable.includeCallArguments(context, parameters);\n    }\n    isPossibleTDZ() {\n        // return cached value to avoid issues with the next tree-shaking pass\n        if (this.isTDZAccess !== null)\n            return this.isTDZAccess;\n        if (!(this.variable instanceof LocalVariable &&\n            this.variable.kind &&\n            this.variable.kind in tdzVariableKinds &&\n            // we ignore possible TDZs due to circular module dependencies as\n            // otherwise we get many false positives\n            this.variable.module === this.context.module)) {\n            return (this.isTDZAccess = false);\n        }\n        let decl_id;\n        if (this.variable.declarations &&\n            this.variable.declarations.length === 1 &&\n            (decl_id = this.variable.declarations[0]) &&\n            this.start < decl_id.start &&\n            closestParentFunctionOrProgram(this) === closestParentFunctionOrProgram(decl_id)) {\n            // a variable accessed before its declaration\n            // in the same function or at top level of module\n            return (this.isTDZAccess = true);\n        }\n        if (!this.variable.initReached) {\n            // Either a const/let TDZ violation or\n            // var use before declaration was encountered.\n            return (this.isTDZAccess = true);\n        }\n        return (this.isTDZAccess = false);\n    }\n    markDeclarationReached() {\n        this.variable.initReached = true;\n    }\n    render(code, { snippets: { getPropertyAccess }, useOriginalName }, { renderedParentType, isCalleeOfRenderedParent, isShorthandProperty } = BLANK) {\n        if (this.variable) {\n            const name = this.variable.getName(getPropertyAccess, useOriginalName);\n            if (name !== this.name) {\n                code.overwrite(this.start, this.end, name, {\n                    contentOnly: true,\n                    storeName: true\n                });\n                if (isShorthandProperty) {\n                    code.prependRight(this.start, `${this.name}: `);\n                }\n            }\n            // In strict mode, any variable named \"eval\" must be the actual \"eval\" function\n            if (name === 'eval' &&\n                renderedParentType === CallExpression$1 &&\n                isCalleeOfRenderedParent) {\n                code.appendRight(this.start, '0, ');\n            }\n        }\n    }\n    applyDeoptimizations() {\n        this.deoptimized = true;\n        if (this.variable instanceof LocalVariable) {\n            this.variable.consolidateInitializers();\n            this.context.requestTreeshakingPass();\n        }\n    }\n    disallowImportReassignment() {\n        return this.context.error(errorIllegalImportReassignment(this.name, this.context.module.id), this.start);\n    }\n    getVariableRespectingTDZ() {\n        if (this.isPossibleTDZ()) {\n            return UNKNOWN_EXPRESSION;\n        }\n        return this.variable;\n    }\n    isPureFunction(path) {\n        let currentPureFunction = this.context.manualPureFunctions[this.name];\n        for (const segment of path) {\n            if (currentPureFunction) {\n                if (currentPureFunction[PureFunctionKey]) {\n                    return true;\n                }\n                currentPureFunction = currentPureFunction[segment];\n            }\n            else {\n                return false;\n            }\n        }\n        return currentPureFunction?.[PureFunctionKey];\n    }\n}\nfunction closestParentFunctionOrProgram(node) {\n    while (node && !/^Program|Function/.test(node.type)) {\n        node = node.parent;\n    }\n    // one of: ArrowFunctionExpression, FunctionDeclaration, FunctionExpression or Program\n    return node;\n}\n\nfunction treeshakeNode(node, code, start, end) {\n    code.remove(start, end);\n    if (node.annotations) {\n        for (const annotation of node.annotations) {\n            if (annotation.start < start) {\n                code.remove(annotation.start, annotation.end);\n            }\n            else {\n                return;\n            }\n        }\n    }\n}\nfunction removeAnnotations(node, code) {\n    if (!node.annotations && node.parent.type === ExpressionStatement$1) {\n        node = node.parent;\n    }\n    if (node.annotations) {\n        for (const annotation of node.annotations) {\n            code.remove(annotation.start, annotation.end);\n        }\n    }\n}\n\nconst NO_SEMICOLON = { isNoStatement: true };\n// This assumes there are only white-space and comments between start and the string we are looking for\nfunction findFirstOccurrenceOutsideComment(code, searchString, start = 0) {\n    let searchPos, charCodeAfterSlash;\n    searchPos = code.indexOf(searchString, start);\n    while (true) {\n        start = code.indexOf('/', start);\n        if (start === -1 || start >= searchPos)\n            return searchPos;\n        charCodeAfterSlash = code.charCodeAt(++start);\n        ++start;\n        // With our assumption, '/' always starts a comment. Determine comment type:\n        start =\n            charCodeAfterSlash === 47 /*\"/\"*/\n                ? code.indexOf('\\n', start) + 1\n                : code.indexOf('*/', start) + 2;\n        if (start > searchPos) {\n            searchPos = code.indexOf(searchString, start);\n        }\n    }\n}\nconst NON_WHITESPACE = /\\S/g;\nfunction findNonWhiteSpace(code, index) {\n    NON_WHITESPACE.lastIndex = index;\n    const result = NON_WHITESPACE.exec(code);\n    return result.index;\n}\n// This assumes \"code\" only contains white-space and comments\n// Returns position of line-comment if applicable\nfunction findFirstLineBreakOutsideComment(code) {\n    let lineBreakPos, charCodeAfterSlash, start = 0;\n    lineBreakPos = code.indexOf('\\n', start);\n    while (true) {\n        start = code.indexOf('/', start);\n        if (start === -1 || start > lineBreakPos)\n            return [lineBreakPos, lineBreakPos + 1];\n        // With our assumption, '/' always starts a comment. Determine comment type:\n        charCodeAfterSlash = code.charCodeAt(start + 1);\n        if (charCodeAfterSlash === 47 /*\"/\"*/)\n            return [start, lineBreakPos + 1];\n        start = code.indexOf('*/', start + 3) + 2;\n        if (start > lineBreakPos) {\n            lineBreakPos = code.indexOf('\\n', start);\n        }\n    }\n}\nfunction renderStatementList(statements, code, start, end, options) {\n    let currentNode, currentNodeStart, currentNodeNeedsBoundaries, nextNodeStart;\n    let nextNode = statements[0];\n    let nextNodeNeedsBoundaries = !nextNode.included || nextNode.needsBoundaries;\n    if (nextNodeNeedsBoundaries) {\n        nextNodeStart =\n            start + findFirstLineBreakOutsideComment(code.original.slice(start, nextNode.start))[1];\n    }\n    for (let nextIndex = 1; nextIndex <= statements.length; nextIndex++) {\n        currentNode = nextNode;\n        currentNodeStart = nextNodeStart;\n        currentNodeNeedsBoundaries = nextNodeNeedsBoundaries;\n        nextNode = statements[nextIndex];\n        nextNodeNeedsBoundaries =\n            nextNode === undefined ? false : !nextNode.included || nextNode.needsBoundaries;\n        if (currentNodeNeedsBoundaries || nextNodeNeedsBoundaries) {\n            nextNodeStart =\n                currentNode.end +\n                    findFirstLineBreakOutsideComment(code.original.slice(currentNode.end, nextNode === undefined ? end : nextNode.start))[1];\n            if (currentNode.included) {\n                currentNodeNeedsBoundaries\n                    ? currentNode.render(code, options, {\n                        end: nextNodeStart,\n                        start: currentNodeStart\n                    })\n                    : currentNode.render(code, options);\n            }\n            else {\n                treeshakeNode(currentNode, code, currentNodeStart, nextNodeStart);\n            }\n        }\n        else {\n            currentNode.render(code, options);\n        }\n    }\n}\n// This assumes that the first character is not part of the first node\nfunction getCommaSeparatedNodesWithBoundaries(nodes, code, start, end) {\n    const splitUpNodes = [];\n    let node, nextNodeStart, contentEnd, char;\n    let separator = start - 1;\n    for (const nextNode of nodes) {\n        if (node !== undefined) {\n            separator =\n                node.end +\n                    findFirstOccurrenceOutsideComment(code.original.slice(node.end, nextNode.start), ',');\n        }\n        nextNodeStart = contentEnd =\n            separator +\n                1 +\n                findFirstLineBreakOutsideComment(code.original.slice(separator + 1, nextNode.start))[1];\n        while (((char = code.original.charCodeAt(nextNodeStart)),\n            char === 32 /*\" \"*/ || char === 9 /*\"\\t\"*/ || char === 10 /*\"\\n\"*/ || char === 13) /*\"\\r\"*/)\n            nextNodeStart++;\n        if (node !== undefined) {\n            splitUpNodes.push({\n                contentEnd,\n                end: nextNodeStart,\n                node,\n                separator,\n                start\n            });\n        }\n        node = nextNode;\n        start = nextNodeStart;\n    }\n    splitUpNodes.push({\n        contentEnd: end,\n        end,\n        node: node,\n        separator: null,\n        start\n    });\n    return splitUpNodes;\n}\n// This assumes there are only white-space and comments between start and end\nfunction removeLineBreaks(code, start, end) {\n    while (true) {\n        const [removeStart, removeEnd] = findFirstLineBreakOutsideComment(code.original.slice(start, end));\n        if (removeStart === -1) {\n            break;\n        }\n        code.remove(start + removeStart, (start += removeEnd));\n    }\n}\n\nclass BlockScope extends ChildScope {\n    addDeclaration(identifier, context, init, isHoisted) {\n        if (isHoisted) {\n            const variable = this.parent.addDeclaration(identifier, context, init, isHoisted);\n            // Necessary to make sure the init is deoptimized for conditional declarations.\n            // We cannot call deoptimizePath here.\n            variable.markInitializersForDeoptimization();\n            return variable;\n        }\n        else {\n            return super.addDeclaration(identifier, context, init, false);\n        }\n    }\n}\n\nclass ExpressionStatement extends NodeBase {\n    initialise() {\n        if (this.directive &&\n            this.directive !== 'use strict' &&\n            this.parent.type === Program$1) {\n            this.context.warn(\n            // This is necessary, because either way (deleting or not) can lead to errors.\n            errorModuleLevelDirective(this.directive, this.context.module.id), this.start);\n        }\n    }\n    render(code, options) {\n        super.render(code, options);\n        if (this.included)\n            this.insertSemicolon(code);\n    }\n    shouldBeIncluded(context) {\n        if (this.directive && this.directive !== 'use strict')\n            return this.parent.type !== Program$1;\n        return super.shouldBeIncluded(context);\n    }\n    applyDeoptimizations() { }\n}\n\nclass BlockStatement extends NodeBase {\n    constructor() {\n        super(...arguments);\n        this.directlyIncluded = false;\n    }\n    addImplicitReturnExpressionToScope() {\n        const lastStatement = this.body[this.body.length - 1];\n        if (!lastStatement || lastStatement.type !== ReturnStatement$1) {\n            this.scope.addReturnExpression(UNKNOWN_EXPRESSION);\n        }\n    }\n    createScope(parentScope) {\n        this.scope = this.parent.preventChildBlockScope\n            ? parentScope\n            : new BlockScope(parentScope);\n    }\n    hasEffects(context) {\n        if (this.deoptimizeBody)\n            return true;\n        for (const node of this.body) {\n            if (context.brokenFlow)\n                break;\n            if (node.hasEffects(context))\n                return true;\n        }\n        return false;\n    }\n    include(context, includeChildrenRecursively) {\n        if (!(this.deoptimizeBody && this.directlyIncluded)) {\n            this.included = true;\n            this.directlyIncluded = true;\n            if (this.deoptimizeBody)\n                includeChildrenRecursively = true;\n            for (const node of this.body) {\n                if (includeChildrenRecursively || node.shouldBeIncluded(context))\n                    node.include(context, includeChildrenRecursively);\n            }\n        }\n    }\n    initialise() {\n        const firstBodyStatement = this.body[0];\n        this.deoptimizeBody =\n            firstBodyStatement instanceof ExpressionStatement &&\n                firstBodyStatement.directive === 'use asm';\n    }\n    render(code, options) {\n        if (this.body.length > 0) {\n            renderStatementList(this.body, code, this.start + 1, this.end - 1, options);\n        }\n        else {\n            super.render(code, options);\n        }\n    }\n}\n\nclass RestElement extends NodeBase {\n    constructor() {\n        super(...arguments);\n        this.declarationInit = null;\n    }\n    addExportedVariables(variables, exportNamesByVariable) {\n        this.argument.addExportedVariables(variables, exportNamesByVariable);\n    }\n    declare(kind, init) {\n        this.declarationInit = init;\n        return this.argument.declare(kind, UNKNOWN_EXPRESSION);\n    }\n    deoptimizePath(path) {\n        path.length === 0 && this.argument.deoptimizePath(EMPTY_PATH);\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        return (path.length > 0 ||\n            this.argument.hasEffectsOnInteractionAtPath(EMPTY_PATH, interaction, context));\n    }\n    markDeclarationReached() {\n        this.argument.markDeclarationReached();\n    }\n    applyDeoptimizations() {\n        this.deoptimized = true;\n        if (this.declarationInit !== null) {\n            this.declarationInit.deoptimizePath([UnknownKey, UnknownKey]);\n            this.context.requestTreeshakingPass();\n        }\n    }\n}\n\nclass FunctionBase extends NodeBase {\n    constructor() {\n        super(...arguments);\n        this.objectEntity = null;\n        this.deoptimizedReturn = false;\n    }\n    deoptimizePath(path) {\n        this.getObjectEntity().deoptimizePath(path);\n        if (path.length === 1 && path[0] === UnknownKey) {\n            // A reassignment of UNKNOWN_PATH is considered equivalent to having lost track\n            // which means the return expression needs to be reassigned\n            this.scope.getReturnExpression().deoptimizePath(UNKNOWN_PATH);\n        }\n    }\n    deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n        if (path.length > 0) {\n            this.getObjectEntity().deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n        }\n    }\n    getLiteralValueAtPath(path, recursionTracker, origin) {\n        return this.getObjectEntity().getLiteralValueAtPath(path, recursionTracker, origin);\n    }\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n        if (path.length > 0) {\n            return this.getObjectEntity().getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\n        }\n        if (this.async) {\n            if (!this.deoptimizedReturn) {\n                this.deoptimizedReturn = true;\n                this.scope.getReturnExpression().deoptimizePath(UNKNOWN_PATH);\n                this.context.requestTreeshakingPass();\n            }\n            return UNKNOWN_RETURN_EXPRESSION;\n        }\n        return [this.scope.getReturnExpression(), false];\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        if (path.length > 0 || interaction.type !== INTERACTION_CALLED) {\n            return this.getObjectEntity().hasEffectsOnInteractionAtPath(path, interaction, context);\n        }\n        if (this.async) {\n            const { propertyReadSideEffects } = this.context.options\n                .treeshake;\n            const returnExpression = this.scope.getReturnExpression();\n            if (returnExpression.hasEffectsOnInteractionAtPath(['then'], NODE_INTERACTION_UNKNOWN_CALL, context) ||\n                (propertyReadSideEffects &&\n                    (propertyReadSideEffects === 'always' ||\n                        returnExpression.hasEffectsOnInteractionAtPath(['then'], NODE_INTERACTION_UNKNOWN_ACCESS, context)))) {\n                return true;\n            }\n        }\n        for (const parameter of this.params) {\n            if (parameter.hasEffects(context))\n                return true;\n        }\n        return false;\n    }\n    include(context, includeChildrenRecursively) {\n        if (!this.deoptimized)\n            this.applyDeoptimizations();\n        this.included = true;\n        const { brokenFlow } = context;\n        context.brokenFlow = BROKEN_FLOW_NONE;\n        this.body.include(context, includeChildrenRecursively);\n        context.brokenFlow = brokenFlow;\n    }\n    includeCallArguments(context, parameters) {\n        this.scope.includeCallArguments(context, parameters);\n    }\n    initialise() {\n        this.scope.addParameterVariables(this.params.map(parameter => parameter.declare('parameter', UNKNOWN_EXPRESSION)), this.params[this.params.length - 1] instanceof RestElement);\n        if (this.body instanceof BlockStatement) {\n            this.body.addImplicitReturnExpressionToScope();\n        }\n        else {\n            this.scope.addReturnExpression(this.body);\n        }\n    }\n    parseNode(esTreeNode) {\n        if (esTreeNode.body.type === BlockStatement$1) {\n            this.body = new BlockStatement(esTreeNode.body, this, this.scope.hoistedBodyVarScope);\n        }\n        super.parseNode(esTreeNode);\n    }\n    applyDeoptimizations() { }\n}\nFunctionBase.prototype.preventChildBlockScope = true;\n\nclass ArrowFunctionExpression extends FunctionBase {\n    constructor() {\n        super(...arguments);\n        this.objectEntity = null;\n    }\n    createScope(parentScope) {\n        this.scope = new ReturnValueScope(parentScope, this.context);\n    }\n    hasEffects() {\n        if (!this.deoptimized)\n            this.applyDeoptimizations();\n        return false;\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        if (super.hasEffectsOnInteractionAtPath(path, interaction, context))\n            return true;\n        if (interaction.type === INTERACTION_CALLED) {\n            const { ignore, brokenFlow } = context;\n            context.ignore = {\n                breaks: false,\n                continues: false,\n                labels: new Set(),\n                returnYield: true,\n                this: false\n            };\n            if (this.body.hasEffects(context))\n                return true;\n            context.ignore = ignore;\n            context.brokenFlow = brokenFlow;\n        }\n        return false;\n    }\n    include(context, includeChildrenRecursively) {\n        super.include(context, includeChildrenRecursively);\n        for (const parameter of this.params) {\n            if (!(parameter instanceof Identifier)) {\n                parameter.include(context, includeChildrenRecursively);\n            }\n        }\n    }\n    getObjectEntity() {\n        if (this.objectEntity !== null) {\n            return this.objectEntity;\n        }\n        return (this.objectEntity = new ObjectEntity([], OBJECT_PROTOTYPE));\n    }\n}\n\nfunction getSystemExportStatement(exportedVariables, { exportNamesByVariable, snippets: { _, getObject, getPropertyAccess } }, modifier = '') {\n    if (exportedVariables.length === 1 &&\n        exportNamesByVariable.get(exportedVariables[0]).length === 1) {\n        const variable = exportedVariables[0];\n        return `exports('${exportNamesByVariable.get(variable)}',${_}${variable.getName(getPropertyAccess)}${modifier})`;\n    }\n    else {\n        const fields = [];\n        for (const variable of exportedVariables) {\n            for (const exportName of exportNamesByVariable.get(variable)) {\n                fields.push([exportName, variable.getName(getPropertyAccess) + modifier]);\n            }\n        }\n        return `exports(${getObject(fields, { lineBreakIndent: null })})`;\n    }\n}\nfunction renderSystemExportExpression(exportedVariable, expressionStart, expressionEnd, code, { exportNamesByVariable, snippets: { _ } }) {\n    code.prependRight(expressionStart, `exports('${exportNamesByVariable.get(exportedVariable)}',${_}`);\n    code.appendLeft(expressionEnd, ')');\n}\nfunction renderSystemExportFunction(exportedVariables, expressionStart, expressionEnd, needsParens, code, options) {\n    const { _, getDirectReturnIifeLeft } = options.snippets;\n    code.prependRight(expressionStart, getDirectReturnIifeLeft(['v'], `${getSystemExportStatement(exportedVariables, options)},${_}v`, { needsArrowReturnParens: true, needsWrappedFunction: needsParens }));\n    code.appendLeft(expressionEnd, ')');\n}\nfunction renderSystemExportSequenceAfterExpression(exportedVariable, expressionStart, expressionEnd, needsParens, code, options) {\n    const { _, getPropertyAccess } = options.snippets;\n    code.appendLeft(expressionEnd, `,${_}${getSystemExportStatement([exportedVariable], options)},${_}${exportedVariable.getName(getPropertyAccess)}`);\n    if (needsParens) {\n        code.prependRight(expressionStart, '(');\n        code.appendLeft(expressionEnd, ')');\n    }\n}\nfunction renderSystemExportSequenceBeforeExpression(exportedVariable, expressionStart, expressionEnd, needsParens, code, options, modifier) {\n    const { _ } = options.snippets;\n    code.prependRight(expressionStart, `${getSystemExportStatement([exportedVariable], options, modifier)},${_}`);\n    if (needsParens) {\n        code.prependRight(expressionStart, '(');\n        code.appendLeft(expressionEnd, ')');\n    }\n}\n\nclass ObjectPattern extends NodeBase {\n    addExportedVariables(variables, exportNamesByVariable) {\n        for (const property of this.properties) {\n            if (property.type === Property$1) {\n                property.value.addExportedVariables(variables, exportNamesByVariable);\n            }\n            else {\n                property.argument.addExportedVariables(variables, exportNamesByVariable);\n            }\n        }\n    }\n    declare(kind, init) {\n        const variables = [];\n        for (const property of this.properties) {\n            variables.push(...property.declare(kind, init));\n        }\n        return variables;\n    }\n    deoptimizePath(path) {\n        if (path.length === 0) {\n            for (const property of this.properties) {\n                property.deoptimizePath(path);\n            }\n        }\n    }\n    hasEffectsOnInteractionAtPath(\n    // At the moment, this is only triggered for assignment left-hand sides,\n    // where the path is empty\n    _path, interaction, context) {\n        for (const property of this.properties) {\n            if (property.hasEffectsOnInteractionAtPath(EMPTY_PATH, interaction, context))\n                return true;\n        }\n        return false;\n    }\n    markDeclarationReached() {\n        for (const property of this.properties) {\n            property.markDeclarationReached();\n        }\n    }\n}\n\nclass AssignmentExpression extends NodeBase {\n    hasEffects(context) {\n        const { deoptimized, left, operator, right } = this;\n        if (!deoptimized)\n            this.applyDeoptimizations();\n        // MemberExpressions do not access the property before assignments if the\n        // operator is '='.\n        return (right.hasEffects(context) || left.hasEffectsAsAssignmentTarget(context, operator !== '='));\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        return this.right.hasEffectsOnInteractionAtPath(path, interaction, context);\n    }\n    include(context, includeChildrenRecursively) {\n        const { deoptimized, left, right, operator } = this;\n        if (!deoptimized)\n            this.applyDeoptimizations();\n        this.included = true;\n        if (includeChildrenRecursively ||\n            operator !== '=' ||\n            left.included ||\n            left.hasEffectsAsAssignmentTarget(createHasEffectsContext(), false)) {\n            left.includeAsAssignmentTarget(context, includeChildrenRecursively, operator !== '=');\n        }\n        right.include(context, includeChildrenRecursively);\n    }\n    initialise() {\n        this.left.setAssignedValue(this.right);\n    }\n    render(code, options, { preventASI, renderedParentType, renderedSurroundingElement } = BLANK) {\n        const { left, right, start, end, parent } = this;\n        if (left.included) {\n            left.render(code, options);\n            right.render(code, options);\n        }\n        else {\n            const inclusionStart = findNonWhiteSpace(code.original, findFirstOccurrenceOutsideComment(code.original, '=', left.end) + 1);\n            code.remove(start, inclusionStart);\n            if (preventASI) {\n                removeLineBreaks(code, inclusionStart, right.start);\n            }\n            right.render(code, options, {\n                renderedParentType: renderedParentType || parent.type,\n                renderedSurroundingElement: renderedSurroundingElement || parent.type\n            });\n        }\n        if (options.format === 'system') {\n            if (left instanceof Identifier) {\n                const variable = left.variable;\n                const exportNames = options.exportNamesByVariable.get(variable);\n                if (exportNames) {\n                    if (exportNames.length === 1) {\n                        renderSystemExportExpression(variable, start, end, code, options);\n                    }\n                    else {\n                        renderSystemExportSequenceAfterExpression(variable, start, end, parent.type !== ExpressionStatement$1, code, options);\n                    }\n                    return;\n                }\n            }\n            else {\n                const systemPatternExports = [];\n                left.addExportedVariables(systemPatternExports, options.exportNamesByVariable);\n                if (systemPatternExports.length > 0) {\n                    renderSystemExportFunction(systemPatternExports, start, end, renderedSurroundingElement === ExpressionStatement$1, code, options);\n                    return;\n                }\n            }\n        }\n        if (left.included &&\n            left instanceof ObjectPattern &&\n            (renderedSurroundingElement === ExpressionStatement$1 ||\n                renderedSurroundingElement === ArrowFunctionExpression$1)) {\n            code.appendRight(start, '(');\n            code.prependLeft(end, ')');\n        }\n    }\n    applyDeoptimizations() {\n        this.deoptimized = true;\n        this.left.deoptimizePath(EMPTY_PATH);\n        this.right.deoptimizePath(UNKNOWN_PATH);\n        this.context.requestTreeshakingPass();\n    }\n}\n\nclass AssignmentPattern extends NodeBase {\n    addExportedVariables(variables, exportNamesByVariable) {\n        this.left.addExportedVariables(variables, exportNamesByVariable);\n    }\n    declare(kind, init) {\n        return this.left.declare(kind, init);\n    }\n    deoptimizePath(path) {\n        path.length === 0 && this.left.deoptimizePath(path);\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        return (path.length > 0 || this.left.hasEffectsOnInteractionAtPath(EMPTY_PATH, interaction, context));\n    }\n    markDeclarationReached() {\n        this.left.markDeclarationReached();\n    }\n    render(code, options, { isShorthandProperty } = BLANK) {\n        this.left.render(code, options, { isShorthandProperty });\n        this.right.render(code, options);\n    }\n    applyDeoptimizations() {\n        this.deoptimized = true;\n        this.left.deoptimizePath(EMPTY_PATH);\n        this.right.deoptimizePath(UNKNOWN_PATH);\n        this.context.requestTreeshakingPass();\n    }\n}\n\nclass ArgumentsVariable extends LocalVariable {\n    constructor(context) {\n        super('arguments', null, UNKNOWN_EXPRESSION, context);\n    }\n    hasEffectsOnInteractionAtPath(path, { type }) {\n        return type !== INTERACTION_ACCESSED || path.length > 1;\n    }\n}\n\nclass ThisVariable extends LocalVariable {\n    constructor(context) {\n        super('this', null, null, context);\n        this.deoptimizedPaths = [];\n        this.entitiesToBeDeoptimized = new Set();\n        this.thisDeoptimizationList = [];\n        this.thisDeoptimizations = new DiscriminatedPathTracker();\n    }\n    addEntityToBeDeoptimized(entity) {\n        for (const path of this.deoptimizedPaths) {\n            entity.deoptimizePath(path);\n        }\n        for (const { interaction, path } of this.thisDeoptimizationList) {\n            entity.deoptimizeThisOnInteractionAtPath(interaction, path, SHARED_RECURSION_TRACKER);\n        }\n        this.entitiesToBeDeoptimized.add(entity);\n    }\n    deoptimizePath(path) {\n        if (path.length === 0 ||\n            this.deoptimizationTracker.trackEntityAtPathAndGetIfTracked(path, this)) {\n            return;\n        }\n        this.deoptimizedPaths.push(path);\n        for (const entity of this.entitiesToBeDeoptimized) {\n            entity.deoptimizePath(path);\n        }\n    }\n    deoptimizeThisOnInteractionAtPath(interaction, path) {\n        const thisDeoptimization = {\n            interaction,\n            path\n        };\n        if (!this.thisDeoptimizations.trackEntityAtPathAndGetIfTracked(path, interaction.type, interaction.thisArg)) {\n            for (const entity of this.entitiesToBeDeoptimized) {\n                entity.deoptimizeThisOnInteractionAtPath(interaction, path, SHARED_RECURSION_TRACKER);\n            }\n            this.thisDeoptimizationList.push(thisDeoptimization);\n        }\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        const replacedVariableInit = context.replacedVariableInits.get(this);\n        if (replacedVariableInit) {\n            return (replacedVariableInit.hasEffectsOnInteractionAtPath(path, interaction, context) ||\n                // If the surrounding function is included, all mutations of \"this\" must\n                // be counted as side effects, which is what this second line does.\n                (!context.ignore.this && super.hasEffectsOnInteractionAtPath(path, interaction, context)));\n        }\n        return UNKNOWN_EXPRESSION.hasEffectsOnInteractionAtPath(path, interaction, context);\n    }\n}\n\nclass FunctionScope extends ReturnValueScope {\n    constructor(parent, context) {\n        super(parent, context);\n        this.variables.set('arguments', (this.argumentsVariable = new ArgumentsVariable(context)));\n        this.variables.set('this', (this.thisVariable = new ThisVariable(context)));\n    }\n    findLexicalBoundary() {\n        return this;\n    }\n    includeCallArguments(context, parameters) {\n        super.includeCallArguments(context, parameters);\n        if (this.argumentsVariable.included) {\n            for (const argument of parameters) {\n                if (!argument.included) {\n                    argument.include(context, false);\n                }\n            }\n        }\n    }\n}\n\nclass FunctionNode extends FunctionBase {\n    constructor() {\n        super(...arguments);\n        this.objectEntity = null;\n    }\n    createScope(parentScope) {\n        this.scope = new FunctionScope(parentScope, this.context);\n        this.constructedEntity = new ObjectEntity(Object.create(null), OBJECT_PROTOTYPE);\n        // This makes sure that all deoptimizations of \"this\" are applied to the\n        // constructed entity.\n        this.scope.thisVariable.addEntityToBeDeoptimized(this.constructedEntity);\n    }\n    deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n        super.deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n        if (interaction.type === INTERACTION_CALLED && path.length === 0) {\n            this.scope.thisVariable.addEntityToBeDeoptimized(interaction.thisArg);\n        }\n    }\n    hasEffects(context) {\n        if (!this.deoptimized)\n            this.applyDeoptimizations();\n        return !!this.id?.hasEffects(context);\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        if (super.hasEffectsOnInteractionAtPath(path, interaction, context))\n            return true;\n        if (interaction.type === INTERACTION_CALLED) {\n            const thisInit = context.replacedVariableInits.get(this.scope.thisVariable);\n            context.replacedVariableInits.set(this.scope.thisVariable, interaction.withNew ? this.constructedEntity : UNKNOWN_EXPRESSION);\n            const { brokenFlow, ignore, replacedVariableInits } = context;\n            context.ignore = {\n                breaks: false,\n                continues: false,\n                labels: new Set(),\n                returnYield: true,\n                this: interaction.withNew\n            };\n            if (this.body.hasEffects(context))\n                return true;\n            context.brokenFlow = brokenFlow;\n            if (thisInit) {\n                replacedVariableInits.set(this.scope.thisVariable, thisInit);\n            }\n            else {\n                replacedVariableInits.delete(this.scope.thisVariable);\n            }\n            context.ignore = ignore;\n        }\n        return false;\n    }\n    include(context, includeChildrenRecursively) {\n        super.include(context, includeChildrenRecursively);\n        this.id?.include();\n        const hasArguments = this.scope.argumentsVariable.included;\n        for (const parameter of this.params) {\n            if (!(parameter instanceof Identifier) || hasArguments) {\n                parameter.include(context, includeChildrenRecursively);\n            }\n        }\n    }\n    initialise() {\n        super.initialise();\n        this.id?.declare('function', this);\n    }\n    getObjectEntity() {\n        if (this.objectEntity !== null) {\n            return this.objectEntity;\n        }\n        return (this.objectEntity = new ObjectEntity([\n            {\n                key: 'prototype',\n                kind: 'init',\n                property: new ObjectEntity([], OBJECT_PROTOTYPE)\n            }\n        ], OBJECT_PROTOTYPE));\n    }\n}\n\nclass AwaitExpression extends NodeBase {\n    hasEffects() {\n        if (!this.deoptimized)\n            this.applyDeoptimizations();\n        return true;\n    }\n    include(context, includeChildrenRecursively) {\n        if (!this.deoptimized)\n            this.applyDeoptimizations();\n        if (!this.included) {\n            this.included = true;\n            checkTopLevelAwait: if (!this.context.usesTopLevelAwait) {\n                let parent = this.parent;\n                do {\n                    if (parent instanceof FunctionNode || parent instanceof ArrowFunctionExpression)\n                        break checkTopLevelAwait;\n                } while ((parent = parent.parent));\n                this.context.usesTopLevelAwait = true;\n            }\n        }\n        this.argument.include(context, includeChildrenRecursively);\n    }\n}\n\nconst binaryOperators = {\n    '!=': (left, right) => left != right,\n    '!==': (left, right) => left !== right,\n    '%': (left, right) => left % right,\n    '&': (left, right) => left & right,\n    '*': (left, right) => left * right,\n    // At the moment, \"**\" will be transpiled to Math.pow\n    '**': (left, right) => left ** right,\n    '+': (left, right) => left + right,\n    '-': (left, right) => left - right,\n    '/': (left, right) => left / right,\n    '<': (left, right) => left < right,\n    '<<': (left, right) => left << right,\n    '<=': (left, right) => left <= right,\n    '==': (left, right) => left == right,\n    '===': (left, right) => left === right,\n    '>': (left, right) => left > right,\n    '>=': (left, right) => left >= right,\n    '>>': (left, right) => left >> right,\n    '>>>': (left, right) => left >>> right,\n    '^': (left, right) => left ^ right,\n    '|': (left, right) => left | right\n    // We use the fallback for cases where we return something unknown\n    // in: () => UnknownValue,\n    // instanceof: () => UnknownValue,\n};\nclass BinaryExpression extends NodeBase {\n    deoptimizeCache() { }\n    getLiteralValueAtPath(path, recursionTracker, origin) {\n        if (path.length > 0)\n            return UnknownValue;\n        const leftValue = this.left.getLiteralValueAtPath(EMPTY_PATH, recursionTracker, origin);\n        if (typeof leftValue === 'symbol')\n            return UnknownValue;\n        const rightValue = this.right.getLiteralValueAtPath(EMPTY_PATH, recursionTracker, origin);\n        if (typeof rightValue === 'symbol')\n            return UnknownValue;\n        const operatorFunction = binaryOperators[this.operator];\n        if (!operatorFunction)\n            return UnknownValue;\n        return operatorFunction(leftValue, rightValue);\n    }\n    hasEffects(context) {\n        // support some implicit type coercion runtime errors\n        if (this.operator === '+' &&\n            this.parent instanceof ExpressionStatement &&\n            this.left.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, this) === '') {\n            return true;\n        }\n        return super.hasEffects(context);\n    }\n    hasEffectsOnInteractionAtPath(path, { type }) {\n        return type !== INTERACTION_ACCESSED || path.length > 1;\n    }\n    render(code, options, { renderedSurroundingElement } = BLANK) {\n        this.left.render(code, options, { renderedSurroundingElement });\n        this.right.render(code, options);\n    }\n}\n\nclass BreakStatement extends NodeBase {\n    hasEffects(context) {\n        if (this.label) {\n            if (!context.ignore.labels.has(this.label.name))\n                return true;\n            context.includedLabels.add(this.label.name);\n            context.brokenFlow = BROKEN_FLOW_ERROR_RETURN_LABEL;\n        }\n        else {\n            if (!context.ignore.breaks)\n                return true;\n            context.brokenFlow = BROKEN_FLOW_BREAK_CONTINUE;\n        }\n        return false;\n    }\n    include(context) {\n        this.included = true;\n        if (this.label) {\n            this.label.include();\n            context.includedLabels.add(this.label.name);\n        }\n        context.brokenFlow = this.label ? BROKEN_FLOW_ERROR_RETURN_LABEL : BROKEN_FLOW_BREAK_CONTINUE;\n    }\n}\n\nfunction renderCallArguments(code, options, node) {\n    if (node.arguments.length > 0) {\n        if (node.arguments[node.arguments.length - 1].included) {\n            for (const argument of node.arguments) {\n                argument.render(code, options);\n            }\n        }\n        else {\n            let lastIncludedIndex = node.arguments.length - 2;\n            while (lastIncludedIndex >= 0 && !node.arguments[lastIncludedIndex].included) {\n                lastIncludedIndex--;\n            }\n            if (lastIncludedIndex >= 0) {\n                for (let index = 0; index <= lastIncludedIndex; index++) {\n                    node.arguments[index].render(code, options);\n                }\n                code.remove(findFirstOccurrenceOutsideComment(code.original, ',', node.arguments[lastIncludedIndex].end), node.end - 1);\n            }\n            else {\n                code.remove(findFirstOccurrenceOutsideComment(code.original, '(', node.callee.end) + 1, node.end - 1);\n            }\n        }\n    }\n}\n\nclass Literal extends NodeBase {\n    deoptimizeThisOnInteractionAtPath() { }\n    getLiteralValueAtPath(path) {\n        if (path.length > 0 ||\n            // unknown literals can also be null but do not start with an \"n\"\n            (this.value === null && this.context.code.charCodeAt(this.start) !== 110) ||\n            typeof this.value === 'bigint' ||\n            // to support shims for regular expressions\n            this.context.code.charCodeAt(this.start) === 47) {\n            return UnknownValue;\n        }\n        return this.value;\n    }\n    getReturnExpressionWhenCalledAtPath(path) {\n        if (path.length !== 1)\n            return UNKNOWN_RETURN_EXPRESSION;\n        return getMemberReturnExpressionWhenCalled(this.members, path[0]);\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        switch (interaction.type) {\n            case INTERACTION_ACCESSED: {\n                return path.length > (this.value === null ? 0 : 1);\n            }\n            case INTERACTION_ASSIGNED: {\n                return true;\n            }\n            case INTERACTION_CALLED: {\n                if (this.included &&\n                    this.value instanceof RegExp &&\n                    (this.value.global || this.value.sticky)) {\n                    return true;\n                }\n                return (path.length !== 1 ||\n                    hasMemberEffectWhenCalled(this.members, path[0], interaction, context));\n            }\n        }\n    }\n    initialise() {\n        this.members = getLiteralMembersForValue(this.value);\n    }\n    parseNode(esTreeNode) {\n        this.value = esTreeNode.value;\n        this.regex = esTreeNode.regex;\n        super.parseNode(esTreeNode);\n    }\n    render(code) {\n        if (typeof this.value === 'string') {\n            code.indentExclusionRanges.push([this.start + 1, this.end - 1]);\n        }\n    }\n}\n\n// To avoid infinite recursions\nconst MAX_PATH_DEPTH = 7;\nfunction getResolvablePropertyKey(memberExpression) {\n    return memberExpression.computed\n        ? getResolvableComputedPropertyKey(memberExpression.property)\n        : memberExpression.property.name;\n}\nfunction getResolvableComputedPropertyKey(propertyKey) {\n    if (propertyKey instanceof Literal) {\n        return String(propertyKey.value);\n    }\n    return null;\n}\nfunction getPathIfNotComputed(memberExpression) {\n    const nextPathKey = memberExpression.propertyKey;\n    const object = memberExpression.object;\n    if (typeof nextPathKey === 'string') {\n        if (object instanceof Identifier) {\n            return [\n                { key: object.name, pos: object.start },\n                { key: nextPathKey, pos: memberExpression.property.start }\n            ];\n        }\n        if (object instanceof MemberExpression) {\n            const parentPath = getPathIfNotComputed(object);\n            return (parentPath && [...parentPath, { key: nextPathKey, pos: memberExpression.property.start }]);\n        }\n    }\n    return null;\n}\nfunction getStringFromPath(path) {\n    let pathString = path[0].key;\n    for (let index = 1; index < path.length; index++) {\n        pathString += '.' + path[index].key;\n    }\n    return pathString;\n}\nclass MemberExpression extends NodeBase {\n    constructor() {\n        super(...arguments);\n        this.variable = null;\n        this.assignmentDeoptimized = false;\n        this.bound = false;\n        this.expressionsToBeDeoptimized = [];\n        this.isUndefined = false;\n    }\n    bind() {\n        this.bound = true;\n        const path = getPathIfNotComputed(this);\n        const baseVariable = path && this.scope.findVariable(path[0].key);\n        if (baseVariable?.isNamespace) {\n            const resolvedVariable = resolveNamespaceVariables(baseVariable, path.slice(1), this.context);\n            if (!resolvedVariable) {\n                super.bind();\n            }\n            else if (resolvedVariable === 'undefined') {\n                this.isUndefined = true;\n            }\n            else {\n                this.variable = resolvedVariable;\n                this.scope.addNamespaceMemberAccess(getStringFromPath(path), resolvedVariable);\n            }\n        }\n        else {\n            super.bind();\n        }\n    }\n    deoptimizeCache() {\n        const expressionsToBeDeoptimized = this.expressionsToBeDeoptimized;\n        this.expressionsToBeDeoptimized = [];\n        this.propertyKey = UnknownKey;\n        this.object.deoptimizePath(UNKNOWN_PATH);\n        for (const expression of expressionsToBeDeoptimized) {\n            expression.deoptimizeCache();\n        }\n    }\n    deoptimizePath(path) {\n        if (path.length === 0)\n            this.disallowNamespaceReassignment();\n        if (this.variable) {\n            this.variable.deoptimizePath(path);\n        }\n        else if (!this.isUndefined && path.length < MAX_PATH_DEPTH) {\n            const propertyKey = this.getPropertyKey();\n            this.object.deoptimizePath([\n                propertyKey === UnknownKey ? UnknownNonAccessorKey : propertyKey,\n                ...path\n            ]);\n        }\n    }\n    deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n        if (this.variable) {\n            this.variable.deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n        }\n        else if (!this.isUndefined) {\n            if (path.length < MAX_PATH_DEPTH) {\n                this.object.deoptimizeThisOnInteractionAtPath(interaction, [this.getPropertyKey(), ...path], recursionTracker);\n            }\n            else {\n                interaction.thisArg.deoptimizePath(UNKNOWN_PATH);\n            }\n        }\n    }\n    getLiteralValueAtPath(path, recursionTracker, origin) {\n        if (this.variable) {\n            return this.variable.getLiteralValueAtPath(path, recursionTracker, origin);\n        }\n        if (this.isUndefined) {\n            return undefined;\n        }\n        this.expressionsToBeDeoptimized.push(origin);\n        if (path.length < MAX_PATH_DEPTH) {\n            return this.object.getLiteralValueAtPath([this.getPropertyKey(), ...path], recursionTracker, origin);\n        }\n        return UnknownValue;\n    }\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n        if (this.variable) {\n            return this.variable.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\n        }\n        if (this.isUndefined) {\n            return [UNDEFINED_EXPRESSION, false];\n        }\n        this.expressionsToBeDeoptimized.push(origin);\n        if (path.length < MAX_PATH_DEPTH) {\n            return this.object.getReturnExpressionWhenCalledAtPath([this.getPropertyKey(), ...path], interaction, recursionTracker, origin);\n        }\n        return UNKNOWN_RETURN_EXPRESSION;\n    }\n    hasEffects(context) {\n        if (!this.deoptimized)\n            this.applyDeoptimizations();\n        return (this.property.hasEffects(context) ||\n            this.object.hasEffects(context) ||\n            this.hasAccessEffect(context));\n    }\n    hasEffectsAsAssignmentTarget(context, checkAccess) {\n        if (checkAccess && !this.deoptimized)\n            this.applyDeoptimizations();\n        if (!this.assignmentDeoptimized)\n            this.applyAssignmentDeoptimization();\n        return (this.property.hasEffects(context) ||\n            this.object.hasEffects(context) ||\n            (checkAccess && this.hasAccessEffect(context)) ||\n            this.hasEffectsOnInteractionAtPath(EMPTY_PATH, this.assignmentInteraction, context));\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        if (this.variable) {\n            return this.variable.hasEffectsOnInteractionAtPath(path, interaction, context);\n        }\n        if (this.isUndefined) {\n            return true;\n        }\n        if (path.length < MAX_PATH_DEPTH) {\n            return this.object.hasEffectsOnInteractionAtPath([this.getPropertyKey(), ...path], interaction, context);\n        }\n        return true;\n    }\n    include(context, includeChildrenRecursively) {\n        if (!this.deoptimized)\n            this.applyDeoptimizations();\n        this.includeProperties(context, includeChildrenRecursively);\n    }\n    includeAsAssignmentTarget(context, includeChildrenRecursively, deoptimizeAccess) {\n        if (!this.assignmentDeoptimized)\n            this.applyAssignmentDeoptimization();\n        if (deoptimizeAccess) {\n            this.include(context, includeChildrenRecursively);\n        }\n        else {\n            this.includeProperties(context, includeChildrenRecursively);\n        }\n    }\n    includeCallArguments(context, parameters) {\n        if (this.variable) {\n            this.variable.includeCallArguments(context, parameters);\n        }\n        else {\n            super.includeCallArguments(context, parameters);\n        }\n    }\n    initialise() {\n        this.propertyKey = getResolvablePropertyKey(this);\n        this.accessInteraction = { thisArg: this.object, type: INTERACTION_ACCESSED };\n    }\n    isSkippedAsOptional(origin) {\n        return (!this.variable &&\n            !this.isUndefined &&\n            (this.object.isSkippedAsOptional?.(origin) ||\n                (this.optional &&\n                    this.object.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, origin) == null)));\n    }\n    render(code, options, { renderedParentType, isCalleeOfRenderedParent, renderedSurroundingElement } = BLANK) {\n        if (this.variable || this.isUndefined) {\n            const { snippets: { getPropertyAccess } } = options;\n            let replacement = this.variable ? this.variable.getName(getPropertyAccess) : 'undefined';\n            if (renderedParentType && isCalleeOfRenderedParent)\n                replacement = '0, ' + replacement;\n            code.overwrite(this.start, this.end, replacement, {\n                contentOnly: true,\n                storeName: true\n            });\n        }\n        else {\n            if (renderedParentType && isCalleeOfRenderedParent) {\n                code.appendRight(this.start, '0, ');\n            }\n            this.object.render(code, options, { renderedSurroundingElement });\n            this.property.render(code, options);\n        }\n    }\n    setAssignedValue(value) {\n        this.assignmentInteraction = {\n            args: [value],\n            thisArg: this.object,\n            type: INTERACTION_ASSIGNED\n        };\n    }\n    applyDeoptimizations() {\n        this.deoptimized = true;\n        const { propertyReadSideEffects } = this.context.options\n            .treeshake;\n        if (\n        // Namespaces are not bound and should not be deoptimized\n        this.bound &&\n            propertyReadSideEffects &&\n            !(this.variable || this.isUndefined)) {\n            const propertyKey = this.getPropertyKey();\n            this.object.deoptimizeThisOnInteractionAtPath(this.accessInteraction, [propertyKey], SHARED_RECURSION_TRACKER);\n            this.context.requestTreeshakingPass();\n        }\n    }\n    applyAssignmentDeoptimization() {\n        this.assignmentDeoptimized = true;\n        const { propertyReadSideEffects } = this.context.options\n            .treeshake;\n        if (\n        // Namespaces are not bound and should not be deoptimized\n        this.bound &&\n            propertyReadSideEffects &&\n            !(this.variable || this.isUndefined)) {\n            this.object.deoptimizeThisOnInteractionAtPath(this.assignmentInteraction, [this.getPropertyKey()], SHARED_RECURSION_TRACKER);\n            this.context.requestTreeshakingPass();\n        }\n    }\n    disallowNamespaceReassignment() {\n        if (this.object instanceof Identifier) {\n            const variable = this.scope.findVariable(this.object.name);\n            if (variable.isNamespace) {\n                if (this.variable) {\n                    this.context.includeVariableInModule(this.variable);\n                }\n                this.context.warn(errorIllegalImportReassignment(this.object.name, this.context.module.id), this.start);\n            }\n        }\n    }\n    getPropertyKey() {\n        if (this.propertyKey === null) {\n            this.propertyKey = UnknownKey;\n            const value = this.property.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, this);\n            return (this.propertyKey =\n                value === SymbolToStringTag\n                    ? value\n                    : typeof value === 'symbol'\n                        ? UnknownKey\n                        : String(value));\n        }\n        return this.propertyKey;\n    }\n    hasAccessEffect(context) {\n        const { propertyReadSideEffects } = this.context.options\n            .treeshake;\n        return (!(this.variable || this.isUndefined) &&\n            propertyReadSideEffects &&\n            (propertyReadSideEffects === 'always' ||\n                this.object.hasEffectsOnInteractionAtPath([this.getPropertyKey()], this.accessInteraction, context)));\n    }\n    includeProperties(context, includeChildrenRecursively) {\n        if (!this.included) {\n            this.included = true;\n            if (this.variable) {\n                this.context.includeVariableInModule(this.variable);\n            }\n        }\n        this.object.include(context, includeChildrenRecursively);\n        this.property.include(context, includeChildrenRecursively);\n    }\n}\nfunction resolveNamespaceVariables(baseVariable, path, astContext) {\n    if (path.length === 0)\n        return baseVariable;\n    if (!baseVariable.isNamespace || baseVariable instanceof ExternalVariable)\n        return null;\n    const exportName = path[0].key;\n    const variable = baseVariable.context.traceExport(exportName);\n    if (!variable) {\n        if (path.length === 1) {\n            const fileName = baseVariable.context.fileName;\n            astContext.warn(errorMissingExport(exportName, astContext.module.id, fileName), path[0].pos);\n            return 'undefined';\n        }\n        return null;\n    }\n    return resolveNamespaceVariables(variable, path.slice(1), astContext);\n}\n\nclass CallExpressionBase extends NodeBase {\n    constructor() {\n        super(...arguments);\n        this.returnExpression = null;\n        this.deoptimizableDependentExpressions = [];\n        this.expressionsToBeDeoptimized = new Set();\n    }\n    deoptimizeCache() {\n        if (this.returnExpression?.[0] !== UNKNOWN_EXPRESSION) {\n            this.returnExpression = UNKNOWN_RETURN_EXPRESSION;\n            for (const expression of this.deoptimizableDependentExpressions) {\n                expression.deoptimizeCache();\n            }\n            for (const expression of this.expressionsToBeDeoptimized) {\n                expression.deoptimizePath(UNKNOWN_PATH);\n            }\n        }\n    }\n    deoptimizePath(path) {\n        if (path.length === 0 ||\n            this.context.deoptimizationTracker.trackEntityAtPathAndGetIfTracked(path, this)) {\n            return;\n        }\n        const [returnExpression] = this.getReturnExpression();\n        if (returnExpression !== UNKNOWN_EXPRESSION) {\n            returnExpression.deoptimizePath(path);\n        }\n    }\n    deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n        const [returnExpression, isPure] = this.getReturnExpression(recursionTracker);\n        if (isPure)\n            return;\n        if (returnExpression === UNKNOWN_EXPRESSION) {\n            interaction.thisArg.deoptimizePath(UNKNOWN_PATH);\n        }\n        else {\n            recursionTracker.withTrackedEntityAtPath(path, returnExpression, () => {\n                this.expressionsToBeDeoptimized.add(interaction.thisArg);\n                returnExpression.deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n            }, null);\n        }\n    }\n    getLiteralValueAtPath(path, recursionTracker, origin) {\n        const [returnExpression] = this.getReturnExpression(recursionTracker);\n        if (returnExpression === UNKNOWN_EXPRESSION) {\n            return UnknownValue;\n        }\n        return recursionTracker.withTrackedEntityAtPath(path, returnExpression, () => {\n            this.deoptimizableDependentExpressions.push(origin);\n            return returnExpression.getLiteralValueAtPath(path, recursionTracker, origin);\n        }, UnknownValue);\n    }\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n        const returnExpression = this.getReturnExpression(recursionTracker);\n        if (returnExpression[0] === UNKNOWN_EXPRESSION) {\n            return returnExpression;\n        }\n        return recursionTracker.withTrackedEntityAtPath(path, returnExpression, () => {\n            this.deoptimizableDependentExpressions.push(origin);\n            const [expression, isPure] = returnExpression[0].getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\n            return [expression, isPure || returnExpression[1]];\n        }, UNKNOWN_RETURN_EXPRESSION);\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        const { type } = interaction;\n        if (type === INTERACTION_CALLED) {\n            const { args, withNew } = interaction;\n            if ((withNew ? context.instantiated : context.called).trackEntityAtPathAndGetIfTracked(path, args, this)) {\n                return false;\n            }\n        }\n        else if ((type === INTERACTION_ASSIGNED\n            ? context.assigned\n            : context.accessed).trackEntityAtPathAndGetIfTracked(path, this)) {\n            return false;\n        }\n        const [returnExpression, isPure] = this.getReturnExpression();\n        return ((type === INTERACTION_ASSIGNED || !isPure) &&\n            returnExpression.hasEffectsOnInteractionAtPath(path, interaction, context));\n    }\n}\n\nclass CallExpression extends CallExpressionBase {\n    bind() {\n        super.bind();\n        if (this.callee instanceof Identifier) {\n            const variable = this.scope.findVariable(this.callee.name);\n            if (variable.isNamespace) {\n                this.context.warn(errorCannotCallNamespace(this.callee.name), this.start);\n            }\n            if (this.callee.name === 'eval') {\n                this.context.warn(errorEval(this.context.module.id), this.start);\n            }\n        }\n        this.interaction = {\n            args: this.arguments,\n            thisArg: this.callee instanceof MemberExpression && !this.callee.variable\n                ? this.callee.object\n                : null,\n            type: INTERACTION_CALLED,\n            withNew: false\n        };\n    }\n    hasEffects(context) {\n        try {\n            for (const argument of this.arguments) {\n                if (argument.hasEffects(context))\n                    return true;\n            }\n            if (this.context.options.treeshake.annotations &&\n                this.annotations)\n                return false;\n            return (this.callee.hasEffects(context) ||\n                this.callee.hasEffectsOnInteractionAtPath(EMPTY_PATH, this.interaction, context));\n        }\n        finally {\n            if (!this.deoptimized)\n                this.applyDeoptimizations();\n        }\n    }\n    include(context, includeChildrenRecursively) {\n        if (!this.deoptimized)\n            this.applyDeoptimizations();\n        if (includeChildrenRecursively) {\n            super.include(context, includeChildrenRecursively);\n            if (includeChildrenRecursively === INCLUDE_PARAMETERS &&\n                this.callee instanceof Identifier &&\n                this.callee.variable) {\n                this.callee.variable.markCalledFromTryStatement();\n            }\n        }\n        else {\n            this.included = true;\n            this.callee.include(context, false);\n        }\n        this.callee.includeCallArguments(context, this.arguments);\n    }\n    isSkippedAsOptional(origin) {\n        return (this.callee.isSkippedAsOptional?.(origin) ||\n            (this.optional &&\n                this.callee.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, origin) == null));\n    }\n    render(code, options, { renderedSurroundingElement } = BLANK) {\n        this.callee.render(code, options, {\n            isCalleeOfRenderedParent: true,\n            renderedSurroundingElement\n        });\n        renderCallArguments(code, options, this);\n    }\n    applyDeoptimizations() {\n        this.deoptimized = true;\n        if (this.interaction.thisArg) {\n            this.callee.deoptimizeThisOnInteractionAtPath(this.interaction, EMPTY_PATH, SHARED_RECURSION_TRACKER);\n        }\n        for (const argument of this.arguments) {\n            // This will make sure all properties of parameters behave as \"unknown\"\n            argument.deoptimizePath(UNKNOWN_PATH);\n        }\n        this.context.requestTreeshakingPass();\n    }\n    getReturnExpression(recursionTracker = SHARED_RECURSION_TRACKER) {\n        if (this.returnExpression === null) {\n            this.returnExpression = UNKNOWN_RETURN_EXPRESSION;\n            return (this.returnExpression = this.callee.getReturnExpressionWhenCalledAtPath(EMPTY_PATH, this.interaction, recursionTracker, this));\n        }\n        return this.returnExpression;\n    }\n}\n\nclass CatchScope extends ParameterScope {\n    addDeclaration(identifier, context, init, isHoisted) {\n        const existingParameter = this.variables.get(identifier.name);\n        if (existingParameter) {\n            // While we still create a hoisted declaration, the initializer goes to\n            // the parameter. Note that technically, the declaration now belongs to\n            // two variables, which is not correct but should not cause issues.\n            this.parent.addDeclaration(identifier, context, UNDEFINED_EXPRESSION, isHoisted);\n            existingParameter.addDeclaration(identifier, init);\n            return existingParameter;\n        }\n        return this.parent.addDeclaration(identifier, context, init, isHoisted);\n    }\n}\n\nclass CatchClause extends NodeBase {\n    createScope(parentScope) {\n        this.scope = new CatchScope(parentScope, this.context);\n    }\n    parseNode(esTreeNode) {\n        // Parameters need to be declared first as the logic is that initializers\n        // of hoisted body variables are associated with parameters of the same\n        // name instead of the variable\n        const { param } = esTreeNode;\n        if (param) {\n            this.param = new (this.context.getNodeConstructor(param.type))(param, this, this.scope);\n            this.param.declare('parameter', UNKNOWN_EXPRESSION);\n        }\n        super.parseNode(esTreeNode);\n    }\n}\n\nclass ChainExpression extends NodeBase {\n    // deoptimizations are not relevant as we are not caching values\n    deoptimizeCache() { }\n    getLiteralValueAtPath(path, recursionTracker, origin) {\n        if (this.expression.isSkippedAsOptional(origin))\n            return undefined;\n        return this.expression.getLiteralValueAtPath(path, recursionTracker, origin);\n    }\n    hasEffects(context) {\n        if (this.expression.isSkippedAsOptional(this))\n            return false;\n        return this.expression.hasEffects(context);\n    }\n}\n\nclass ClassBodyScope extends ChildScope {\n    constructor(parent, classNode, context) {\n        super(parent);\n        this.variables.set('this', (this.thisVariable = new LocalVariable('this', null, classNode, context)));\n        this.instanceScope = new ChildScope(this);\n        this.instanceScope.variables.set('this', new ThisVariable(context));\n    }\n    findLexicalBoundary() {\n        return this;\n    }\n}\n\nclass ClassBody extends NodeBase {\n    createScope(parentScope) {\n        this.scope = new ClassBodyScope(parentScope, this.parent, this.context);\n    }\n    include(context, includeChildrenRecursively) {\n        this.included = true;\n        this.context.includeVariableInModule(this.scope.thisVariable);\n        for (const definition of this.body) {\n            definition.include(context, includeChildrenRecursively);\n        }\n    }\n    parseNode(esTreeNode) {\n        const body = (this.body = []);\n        for (const definition of esTreeNode.body) {\n            body.push(new (this.context.getNodeConstructor(definition.type))(definition, this, definition.static ? this.scope : this.scope.instanceScope));\n        }\n        super.parseNode(esTreeNode);\n    }\n    applyDeoptimizations() { }\n}\n\nclass MethodBase extends NodeBase {\n    constructor() {\n        super(...arguments);\n        this.accessedValue = null;\n    }\n    // As getter properties directly receive their values from fixed function\n    // expressions, there is no known situation where a getter is deoptimized.\n    deoptimizeCache() { }\n    deoptimizePath(path) {\n        this.getAccessedValue()[0].deoptimizePath(path);\n    }\n    deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n        if (interaction.type === INTERACTION_ACCESSED && this.kind === 'get' && path.length === 0) {\n            return this.value.deoptimizeThisOnInteractionAtPath({\n                args: NO_ARGS,\n                thisArg: interaction.thisArg,\n                type: INTERACTION_CALLED,\n                withNew: false\n            }, EMPTY_PATH, recursionTracker);\n        }\n        if (interaction.type === INTERACTION_ASSIGNED && this.kind === 'set' && path.length === 0) {\n            return this.value.deoptimizeThisOnInteractionAtPath({\n                args: interaction.args,\n                thisArg: interaction.thisArg,\n                type: INTERACTION_CALLED,\n                withNew: false\n            }, EMPTY_PATH, recursionTracker);\n        }\n        this.getAccessedValue()[0].deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n    }\n    getLiteralValueAtPath(path, recursionTracker, origin) {\n        return this.getAccessedValue()[0].getLiteralValueAtPath(path, recursionTracker, origin);\n    }\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n        return this.getAccessedValue()[0].getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\n    }\n    hasEffects(context) {\n        return this.key.hasEffects(context);\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        if (this.kind === 'get' && interaction.type === INTERACTION_ACCESSED && path.length === 0) {\n            return this.value.hasEffectsOnInteractionAtPath(EMPTY_PATH, {\n                args: NO_ARGS,\n                thisArg: interaction.thisArg,\n                type: INTERACTION_CALLED,\n                withNew: false\n            }, context);\n        }\n        // setters are only called for empty paths\n        if (this.kind === 'set' && interaction.type === INTERACTION_ASSIGNED) {\n            return this.value.hasEffectsOnInteractionAtPath(EMPTY_PATH, {\n                args: interaction.args,\n                thisArg: interaction.thisArg,\n                type: INTERACTION_CALLED,\n                withNew: false\n            }, context);\n        }\n        return this.getAccessedValue()[0].hasEffectsOnInteractionAtPath(path, interaction, context);\n    }\n    applyDeoptimizations() { }\n    getAccessedValue() {\n        if (this.accessedValue === null) {\n            if (this.kind === 'get') {\n                this.accessedValue = UNKNOWN_RETURN_EXPRESSION;\n                return (this.accessedValue = this.value.getReturnExpressionWhenCalledAtPath(EMPTY_PATH, NODE_INTERACTION_UNKNOWN_CALL, SHARED_RECURSION_TRACKER, this));\n            }\n            else {\n                return (this.accessedValue = [this.value, false]);\n            }\n        }\n        return this.accessedValue;\n    }\n}\n\nclass MethodDefinition extends MethodBase {\n    applyDeoptimizations() { }\n}\n\nclass ObjectMember extends ExpressionEntity {\n    constructor(object, key) {\n        super();\n        this.object = object;\n        this.key = key;\n    }\n    deoptimizePath(path) {\n        this.object.deoptimizePath([this.key, ...path]);\n    }\n    deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n        this.object.deoptimizeThisOnInteractionAtPath(interaction, [this.key, ...path], recursionTracker);\n    }\n    getLiteralValueAtPath(path, recursionTracker, origin) {\n        return this.object.getLiteralValueAtPath([this.key, ...path], recursionTracker, origin);\n    }\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n        return this.object.getReturnExpressionWhenCalledAtPath([this.key, ...path], interaction, recursionTracker, origin);\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        return this.object.hasEffectsOnInteractionAtPath([this.key, ...path], interaction, context);\n    }\n}\n\nclass ClassNode extends NodeBase {\n    constructor() {\n        super(...arguments);\n        this.objectEntity = null;\n    }\n    createScope(parentScope) {\n        this.scope = new ChildScope(parentScope);\n    }\n    deoptimizeCache() {\n        this.getObjectEntity().deoptimizeAllProperties();\n    }\n    deoptimizePath(path) {\n        this.getObjectEntity().deoptimizePath(path);\n    }\n    deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n        this.getObjectEntity().deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n    }\n    getLiteralValueAtPath(path, recursionTracker, origin) {\n        return this.getObjectEntity().getLiteralValueAtPath(path, recursionTracker, origin);\n    }\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n        return this.getObjectEntity().getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\n    }\n    hasEffects(context) {\n        if (!this.deoptimized)\n            this.applyDeoptimizations();\n        const initEffect = this.superClass?.hasEffects(context) || this.body.hasEffects(context);\n        this.id?.markDeclarationReached();\n        return initEffect || super.hasEffects(context);\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        return interaction.type === INTERACTION_CALLED && path.length === 0\n            ? !interaction.withNew ||\n                (this.classConstructor === null\n                    ? this.superClass?.hasEffectsOnInteractionAtPath(path, interaction, context)\n                    : this.classConstructor.hasEffectsOnInteractionAtPath(path, interaction, context)) ||\n                false\n            : this.getObjectEntity().hasEffectsOnInteractionAtPath(path, interaction, context);\n    }\n    include(context, includeChildrenRecursively) {\n        if (!this.deoptimized)\n            this.applyDeoptimizations();\n        this.included = true;\n        this.superClass?.include(context, includeChildrenRecursively);\n        this.body.include(context, includeChildrenRecursively);\n        if (this.id) {\n            this.id.markDeclarationReached();\n            this.id.include();\n        }\n    }\n    initialise() {\n        this.id?.declare('class', this);\n        for (const method of this.body.body) {\n            if (method instanceof MethodDefinition && method.kind === 'constructor') {\n                this.classConstructor = method;\n                return;\n            }\n        }\n        this.classConstructor = null;\n    }\n    applyDeoptimizations() {\n        this.deoptimized = true;\n        for (const definition of this.body.body) {\n            if (!(definition.static ||\n                (definition instanceof MethodDefinition && definition.kind === 'constructor'))) {\n                // Calls to methods are not tracked, ensure that the return value is deoptimized\n                definition.deoptimizePath(UNKNOWN_PATH);\n            }\n        }\n        this.context.requestTreeshakingPass();\n    }\n    getObjectEntity() {\n        if (this.objectEntity !== null) {\n            return this.objectEntity;\n        }\n        const staticProperties = [];\n        const dynamicMethods = [];\n        for (const definition of this.body.body) {\n            const properties = definition.static ? staticProperties : dynamicMethods;\n            const definitionKind = definition.kind;\n            // Note that class fields do not end up on the prototype\n            if (properties === dynamicMethods && !definitionKind)\n                continue;\n            const kind = definitionKind === 'set' || definitionKind === 'get' ? definitionKind : 'init';\n            let key;\n            if (definition.computed) {\n                const keyValue = definition.key.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, this);\n                if (typeof keyValue === 'symbol') {\n                    properties.push({ key: UnknownKey, kind, property: definition });\n                    continue;\n                }\n                else {\n                    key = String(keyValue);\n                }\n            }\n            else {\n                key =\n                    definition.key instanceof Identifier\n                        ? definition.key.name\n                        : String(definition.key.value);\n            }\n            properties.push({ key, kind, property: definition });\n        }\n        staticProperties.unshift({\n            key: 'prototype',\n            kind: 'init',\n            property: new ObjectEntity(dynamicMethods, this.superClass ? new ObjectMember(this.superClass, 'prototype') : OBJECT_PROTOTYPE)\n        });\n        return (this.objectEntity = new ObjectEntity(staticProperties, this.superClass || OBJECT_PROTOTYPE));\n    }\n}\n\nclass ClassDeclaration extends ClassNode {\n    initialise() {\n        super.initialise();\n        if (this.id !== null) {\n            this.id.variable.isId = true;\n        }\n    }\n    parseNode(esTreeNode) {\n        if (esTreeNode.id !== null) {\n            this.id = new Identifier(esTreeNode.id, this, this.scope.parent);\n        }\n        super.parseNode(esTreeNode);\n    }\n    render(code, options) {\n        const { exportNamesByVariable, format, snippets: { _, getPropertyAccess } } = options;\n        if (this.id) {\n            const { variable, name } = this.id;\n            if (format === 'system' && exportNamesByVariable.has(variable)) {\n                code.appendLeft(this.end, `${_}${getSystemExportStatement([variable], options)};`);\n            }\n            const renderedVariable = variable.getName(getPropertyAccess);\n            if (renderedVariable !== name) {\n                this.superClass?.render(code, options);\n                this.body.render(code, {\n                    ...options,\n                    useOriginalName: (_variable) => _variable === variable\n                });\n                code.prependRight(this.start, `let ${renderedVariable}${_}=${_}`);\n                code.prependLeft(this.end, ';');\n                return;\n            }\n        }\n        super.render(code, options);\n    }\n    applyDeoptimizations() {\n        super.applyDeoptimizations();\n        const { id, scope } = this;\n        if (id) {\n            const { name, variable } = id;\n            for (const accessedVariable of scope.accessedOutsideVariables.values()) {\n                if (accessedVariable !== variable) {\n                    accessedVariable.forbidName(name);\n                }\n            }\n        }\n    }\n}\n\nclass ClassExpression extends ClassNode {\n    render(code, options, { renderedSurroundingElement } = BLANK) {\n        super.render(code, options);\n        if (renderedSurroundingElement === ExpressionStatement$1) {\n            code.appendRight(this.start, '(');\n            code.prependLeft(this.end, ')');\n        }\n    }\n}\n\nclass MultiExpression extends ExpressionEntity {\n    constructor(expressions) {\n        super();\n        this.expressions = expressions;\n        this.included = false;\n    }\n    deoptimizePath(path) {\n        for (const expression of this.expressions) {\n            expression.deoptimizePath(path);\n        }\n    }\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n        return [\n            new MultiExpression(this.expressions.map(expression => expression.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin)[0])),\n            false\n        ];\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        for (const expression of this.expressions) {\n            if (expression.hasEffectsOnInteractionAtPath(path, interaction, context))\n                return true;\n        }\n        return false;\n    }\n}\n\nclass ConditionalExpression extends NodeBase {\n    constructor() {\n        super(...arguments);\n        this.expressionsToBeDeoptimized = [];\n        this.isBranchResolutionAnalysed = false;\n        this.usedBranch = null;\n    }\n    deoptimizeCache() {\n        if (this.usedBranch !== null) {\n            const unusedBranch = this.usedBranch === this.consequent ? this.alternate : this.consequent;\n            this.usedBranch = null;\n            unusedBranch.deoptimizePath(UNKNOWN_PATH);\n            for (const expression of this.expressionsToBeDeoptimized) {\n                expression.deoptimizeCache();\n            }\n        }\n    }\n    deoptimizePath(path) {\n        const usedBranch = this.getUsedBranch();\n        if (usedBranch) {\n            usedBranch.deoptimizePath(path);\n        }\n        else {\n            this.consequent.deoptimizePath(path);\n            this.alternate.deoptimizePath(path);\n        }\n    }\n    deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n        this.consequent.deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n        this.alternate.deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n    }\n    getLiteralValueAtPath(path, recursionTracker, origin) {\n        const usedBranch = this.getUsedBranch();\n        if (!usedBranch)\n            return UnknownValue;\n        this.expressionsToBeDeoptimized.push(origin);\n        return usedBranch.getLiteralValueAtPath(path, recursionTracker, origin);\n    }\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n        const usedBranch = this.getUsedBranch();\n        if (!usedBranch)\n            return [\n                new MultiExpression([\n                    this.consequent.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin)[0],\n                    this.alternate.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin)[0]\n                ]),\n                false\n            ];\n        this.expressionsToBeDeoptimized.push(origin);\n        return usedBranch.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\n    }\n    hasEffects(context) {\n        if (this.test.hasEffects(context))\n            return true;\n        const usedBranch = this.getUsedBranch();\n        if (!usedBranch) {\n            return this.consequent.hasEffects(context) || this.alternate.hasEffects(context);\n        }\n        return usedBranch.hasEffects(context);\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        const usedBranch = this.getUsedBranch();\n        if (!usedBranch) {\n            return (this.consequent.hasEffectsOnInteractionAtPath(path, interaction, context) ||\n                this.alternate.hasEffectsOnInteractionAtPath(path, interaction, context));\n        }\n        return usedBranch.hasEffectsOnInteractionAtPath(path, interaction, context);\n    }\n    include(context, includeChildrenRecursively) {\n        this.included = true;\n        const usedBranch = this.getUsedBranch();\n        if (includeChildrenRecursively || this.test.shouldBeIncluded(context) || usedBranch === null) {\n            this.test.include(context, includeChildrenRecursively);\n            this.consequent.include(context, includeChildrenRecursively);\n            this.alternate.include(context, includeChildrenRecursively);\n        }\n        else {\n            usedBranch.include(context, includeChildrenRecursively);\n        }\n    }\n    includeCallArguments(context, parameters) {\n        const usedBranch = this.getUsedBranch();\n        if (usedBranch) {\n            usedBranch.includeCallArguments(context, parameters);\n        }\n        else {\n            this.consequent.includeCallArguments(context, parameters);\n            this.alternate.includeCallArguments(context, parameters);\n        }\n    }\n    render(code, options, { isCalleeOfRenderedParent, preventASI, renderedParentType, renderedSurroundingElement } = BLANK) {\n        const usedBranch = this.getUsedBranch();\n        if (this.test.included) {\n            this.test.render(code, options, { renderedSurroundingElement });\n            this.consequent.render(code, options);\n            this.alternate.render(code, options);\n        }\n        else {\n            const colonPos = findFirstOccurrenceOutsideComment(code.original, ':', this.consequent.end);\n            const inclusionStart = findNonWhiteSpace(code.original, (this.consequent.included\n                ? findFirstOccurrenceOutsideComment(code.original, '?', this.test.end)\n                : colonPos) + 1);\n            if (preventASI) {\n                removeLineBreaks(code, inclusionStart, usedBranch.start);\n            }\n            code.remove(this.start, inclusionStart);\n            if (this.consequent.included) {\n                code.remove(colonPos, this.end);\n            }\n            removeAnnotations(this, code);\n            usedBranch.render(code, options, {\n                isCalleeOfRenderedParent,\n                preventASI: true,\n                renderedParentType: renderedParentType || this.parent.type,\n                renderedSurroundingElement: renderedSurroundingElement || this.parent.type\n            });\n        }\n    }\n    getUsedBranch() {\n        if (this.isBranchResolutionAnalysed) {\n            return this.usedBranch;\n        }\n        this.isBranchResolutionAnalysed = true;\n        const testValue = this.test.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, this);\n        return typeof testValue === 'symbol'\n            ? null\n            : (this.usedBranch = testValue ? this.consequent : this.alternate);\n    }\n}\n\nclass ContinueStatement extends NodeBase {\n    hasEffects(context) {\n        if (this.label) {\n            if (!context.ignore.labels.has(this.label.name))\n                return true;\n            context.includedLabels.add(this.label.name);\n            context.brokenFlow = BROKEN_FLOW_ERROR_RETURN_LABEL;\n        }\n        else {\n            if (!context.ignore.continues)\n                return true;\n            context.brokenFlow = BROKEN_FLOW_BREAK_CONTINUE;\n        }\n        return false;\n    }\n    include(context) {\n        this.included = true;\n        if (this.label) {\n            this.label.include();\n            context.includedLabels.add(this.label.name);\n        }\n        context.brokenFlow = this.label ? BROKEN_FLOW_ERROR_RETURN_LABEL : BROKEN_FLOW_BREAK_CONTINUE;\n    }\n}\n\nclass DoWhileStatement extends NodeBase {\n    hasEffects(context) {\n        if (this.test.hasEffects(context))\n            return true;\n        const { brokenFlow, ignore } = context;\n        const { breaks, continues } = ignore;\n        ignore.breaks = true;\n        ignore.continues = true;\n        if (this.body.hasEffects(context))\n            return true;\n        ignore.breaks = breaks;\n        ignore.continues = continues;\n        context.brokenFlow = brokenFlow;\n        return false;\n    }\n    include(context, includeChildrenRecursively) {\n        this.included = true;\n        this.test.include(context, includeChildrenRecursively);\n        const { brokenFlow } = context;\n        this.body.include(context, includeChildrenRecursively, { asSingleStatement: true });\n        context.brokenFlow = brokenFlow;\n    }\n}\n\nclass EmptyStatement extends NodeBase {\n    hasEffects() {\n        return false;\n    }\n}\n\nclass ExportAllDeclaration extends NodeBase {\n    hasEffects() {\n        return false;\n    }\n    initialise() {\n        this.context.addExport(this);\n    }\n    render(code, _options, nodeRenderOptions) {\n        code.remove(nodeRenderOptions.start, nodeRenderOptions.end);\n    }\n    applyDeoptimizations() { }\n}\nExportAllDeclaration.prototype.needsBoundaries = true;\n\nclass FunctionDeclaration extends FunctionNode {\n    initialise() {\n        super.initialise();\n        if (this.id !== null) {\n            this.id.variable.isId = true;\n        }\n    }\n    parseNode(esTreeNode) {\n        if (esTreeNode.id !== null) {\n            this.id = new Identifier(esTreeNode.id, this, this.scope.parent);\n        }\n        super.parseNode(esTreeNode);\n    }\n}\n\n// The header ends at the first non-white-space after \"default\"\nfunction getDeclarationStart(code, start) {\n    return findNonWhiteSpace(code, findFirstOccurrenceOutsideComment(code, 'default', start) + 7);\n}\nfunction getIdInsertPosition(code, declarationKeyword, endMarker, start) {\n    const declarationEnd = findFirstOccurrenceOutsideComment(code, declarationKeyword, start) + declarationKeyword.length;\n    code = code.slice(declarationEnd, findFirstOccurrenceOutsideComment(code, endMarker, declarationEnd));\n    const generatorStarPos = findFirstOccurrenceOutsideComment(code, '*');\n    if (generatorStarPos === -1) {\n        return declarationEnd;\n    }\n    return declarationEnd + generatorStarPos + 1;\n}\nclass ExportDefaultDeclaration extends NodeBase {\n    include(context, includeChildrenRecursively) {\n        super.include(context, includeChildrenRecursively);\n        if (includeChildrenRecursively) {\n            this.context.includeVariableInModule(this.variable);\n        }\n    }\n    initialise() {\n        const declaration = this.declaration;\n        this.declarationName =\n            (declaration.id && declaration.id.name) || this.declaration.name;\n        this.variable = this.scope.addExportDefaultDeclaration(this.declarationName || this.context.getModuleName(), this, this.context);\n        this.context.addExport(this);\n    }\n    render(code, options, nodeRenderOptions) {\n        const { start, end } = nodeRenderOptions;\n        const declarationStart = getDeclarationStart(code.original, this.start);\n        if (this.declaration instanceof FunctionDeclaration) {\n            this.renderNamedDeclaration(code, declarationStart, 'function', '(', this.declaration.id === null, options);\n        }\n        else if (this.declaration instanceof ClassDeclaration) {\n            this.renderNamedDeclaration(code, declarationStart, 'class', '{', this.declaration.id === null, options);\n        }\n        else if (this.variable.getOriginalVariable() !== this.variable) {\n            // Remove altogether to prevent re-declaring the same variable\n            treeshakeNode(this, code, start, end);\n            return;\n        }\n        else if (this.variable.included) {\n            this.renderVariableDeclaration(code, declarationStart, options);\n        }\n        else {\n            code.remove(this.start, declarationStart);\n            this.declaration.render(code, options, {\n                renderedSurroundingElement: ExpressionStatement$1\n            });\n            if (code.original[this.end - 1] !== ';') {\n                code.appendLeft(this.end, ';');\n            }\n            return;\n        }\n        this.declaration.render(code, options);\n    }\n    applyDeoptimizations() { }\n    renderNamedDeclaration(code, declarationStart, declarationKeyword, endMarker, needsId, options) {\n        const { exportNamesByVariable, format, snippets: { getPropertyAccess } } = options;\n        const name = this.variable.getName(getPropertyAccess);\n        // Remove `export default`\n        code.remove(this.start, declarationStart);\n        if (needsId) {\n            code.appendLeft(getIdInsertPosition(code.original, declarationKeyword, endMarker, declarationStart), ` ${name}`);\n        }\n        if (format === 'system' &&\n            this.declaration instanceof ClassDeclaration &&\n            exportNamesByVariable.has(this.variable)) {\n            code.appendLeft(this.end, ` ${getSystemExportStatement([this.variable], options)};`);\n        }\n    }\n    renderVariableDeclaration(code, declarationStart, { format, exportNamesByVariable, snippets: { cnst, getPropertyAccess } }) {\n        const hasTrailingSemicolon = code.original.charCodeAt(this.end - 1) === 59; /*\";\"*/\n        const systemExportNames = format === 'system' && exportNamesByVariable.get(this.variable);\n        if (systemExportNames) {\n            code.overwrite(this.start, declarationStart, `${cnst} ${this.variable.getName(getPropertyAccess)} = exports('${systemExportNames[0]}', `);\n            code.appendRight(hasTrailingSemicolon ? this.end - 1 : this.end, ')' + (hasTrailingSemicolon ? '' : ';'));\n        }\n        else {\n            code.overwrite(this.start, declarationStart, `${cnst} ${this.variable.getName(getPropertyAccess)} = `);\n            if (!hasTrailingSemicolon) {\n                code.appendLeft(this.end, ';');\n            }\n        }\n    }\n}\nExportDefaultDeclaration.prototype.needsBoundaries = true;\n\nclass ExportNamedDeclaration extends NodeBase {\n    bind() {\n        // Do not bind specifiers\n        this.declaration?.bind();\n    }\n    hasEffects(context) {\n        return !!this.declaration?.hasEffects(context);\n    }\n    initialise() {\n        this.context.addExport(this);\n    }\n    render(code, options, nodeRenderOptions) {\n        const { start, end } = nodeRenderOptions;\n        if (this.declaration === null) {\n            code.remove(start, end);\n        }\n        else {\n            code.remove(this.start, this.declaration.start);\n            this.declaration.render(code, options, { end, start });\n        }\n    }\n    applyDeoptimizations() { }\n}\nExportNamedDeclaration.prototype.needsBoundaries = true;\n\nclass ExportSpecifier extends NodeBase {\n    applyDeoptimizations() { }\n}\n\nclass ForInStatement extends NodeBase {\n    createScope(parentScope) {\n        this.scope = new BlockScope(parentScope);\n    }\n    hasEffects(context) {\n        const { body, deoptimized, left, right } = this;\n        if (!deoptimized)\n            this.applyDeoptimizations();\n        if (left.hasEffectsAsAssignmentTarget(context, false) || right.hasEffects(context))\n            return true;\n        const { brokenFlow, ignore } = context;\n        const { breaks, continues } = ignore;\n        ignore.breaks = true;\n        ignore.continues = true;\n        if (body.hasEffects(context))\n            return true;\n        ignore.breaks = breaks;\n        ignore.continues = continues;\n        context.brokenFlow = brokenFlow;\n        return false;\n    }\n    include(context, includeChildrenRecursively) {\n        const { body, deoptimized, left, right } = this;\n        if (!deoptimized)\n            this.applyDeoptimizations();\n        this.included = true;\n        left.includeAsAssignmentTarget(context, includeChildrenRecursively || true, false);\n        right.include(context, includeChildrenRecursively);\n        const { brokenFlow } = context;\n        body.include(context, includeChildrenRecursively, { asSingleStatement: true });\n        context.brokenFlow = brokenFlow;\n    }\n    initialise() {\n        this.left.setAssignedValue(UNKNOWN_EXPRESSION);\n    }\n    render(code, options) {\n        this.left.render(code, options, NO_SEMICOLON);\n        this.right.render(code, options, NO_SEMICOLON);\n        // handle no space between \"in\" and the right side\n        if (code.original.charCodeAt(this.right.start - 1) === 110 /* n */) {\n            code.prependLeft(this.right.start, ' ');\n        }\n        this.body.render(code, options);\n    }\n    applyDeoptimizations() {\n        this.deoptimized = true;\n        this.left.deoptimizePath(EMPTY_PATH);\n        this.context.requestTreeshakingPass();\n    }\n}\n\nclass ForOfStatement extends NodeBase {\n    createScope(parentScope) {\n        this.scope = new BlockScope(parentScope);\n    }\n    hasEffects() {\n        if (!this.deoptimized)\n            this.applyDeoptimizations();\n        // Placeholder until proper Symbol.Iterator support\n        return true;\n    }\n    include(context, includeChildrenRecursively) {\n        const { body, deoptimized, left, right } = this;\n        if (!deoptimized)\n            this.applyDeoptimizations();\n        this.included = true;\n        left.includeAsAssignmentTarget(context, includeChildrenRecursively || true, false);\n        right.include(context, includeChildrenRecursively);\n        const { brokenFlow } = context;\n        body.include(context, includeChildrenRecursively, { asSingleStatement: true });\n        context.brokenFlow = brokenFlow;\n    }\n    initialise() {\n        this.left.setAssignedValue(UNKNOWN_EXPRESSION);\n    }\n    render(code, options) {\n        this.left.render(code, options, NO_SEMICOLON);\n        this.right.render(code, options, NO_SEMICOLON);\n        // handle no space between \"of\" and the right side\n        if (code.original.charCodeAt(this.right.start - 1) === 102 /* f */) {\n            code.prependLeft(this.right.start, ' ');\n        }\n        this.body.render(code, options);\n    }\n    applyDeoptimizations() {\n        this.deoptimized = true;\n        this.left.deoptimizePath(EMPTY_PATH);\n        this.context.requestTreeshakingPass();\n    }\n}\n\nclass ForStatement extends NodeBase {\n    createScope(parentScope) {\n        this.scope = new BlockScope(parentScope);\n    }\n    hasEffects(context) {\n        if (this.init?.hasEffects(context) ||\n            this.test?.hasEffects(context) ||\n            this.update?.hasEffects(context))\n            return true;\n        const { brokenFlow, ignore } = context;\n        const { breaks, continues } = ignore;\n        ignore.breaks = true;\n        ignore.continues = true;\n        if (this.body.hasEffects(context))\n            return true;\n        ignore.breaks = breaks;\n        ignore.continues = continues;\n        context.brokenFlow = brokenFlow;\n        return false;\n    }\n    include(context, includeChildrenRecursively) {\n        this.included = true;\n        this.init?.include(context, includeChildrenRecursively, { asSingleStatement: true });\n        this.test?.include(context, includeChildrenRecursively);\n        const { brokenFlow } = context;\n        this.update?.include(context, includeChildrenRecursively);\n        this.body.include(context, includeChildrenRecursively, { asSingleStatement: true });\n        context.brokenFlow = brokenFlow;\n    }\n    render(code, options) {\n        this.init?.render(code, options, NO_SEMICOLON);\n        this.test?.render(code, options, NO_SEMICOLON);\n        this.update?.render(code, options, NO_SEMICOLON);\n        this.body.render(code, options);\n    }\n}\n\nclass FunctionExpression extends FunctionNode {\n    render(code, options, { renderedSurroundingElement } = BLANK) {\n        super.render(code, options);\n        if (renderedSurroundingElement === ExpressionStatement$1) {\n            code.appendRight(this.start, '(');\n            code.prependLeft(this.end, ')');\n        }\n    }\n}\n\nclass TrackingScope extends BlockScope {\n    constructor() {\n        super(...arguments);\n        this.hoistedDeclarations = [];\n    }\n    addDeclaration(identifier, context, init, isHoisted) {\n        this.hoistedDeclarations.push(identifier);\n        return super.addDeclaration(identifier, context, init, isHoisted);\n    }\n}\n\nconst unset = Symbol('unset');\nclass IfStatement extends NodeBase {\n    constructor() {\n        super(...arguments);\n        this.testValue = unset;\n    }\n    deoptimizeCache() {\n        this.testValue = UnknownValue;\n    }\n    hasEffects(context) {\n        if (this.test.hasEffects(context)) {\n            return true;\n        }\n        const testValue = this.getTestValue();\n        if (typeof testValue === 'symbol') {\n            const { brokenFlow } = context;\n            if (this.consequent.hasEffects(context))\n                return true;\n            // eslint-disable-next-line unicorn/consistent-destructuring\n            const consequentBrokenFlow = context.brokenFlow;\n            context.brokenFlow = brokenFlow;\n            if (this.alternate === null)\n                return false;\n            if (this.alternate.hasEffects(context))\n                return true;\n            context.brokenFlow =\n                // eslint-disable-next-line unicorn/consistent-destructuring\n                context.brokenFlow < consequentBrokenFlow ? context.brokenFlow : consequentBrokenFlow;\n            return false;\n        }\n        return testValue ? this.consequent.hasEffects(context) : !!this.alternate?.hasEffects(context);\n    }\n    include(context, includeChildrenRecursively) {\n        this.included = true;\n        if (includeChildrenRecursively) {\n            this.includeRecursively(includeChildrenRecursively, context);\n        }\n        else {\n            const testValue = this.getTestValue();\n            if (typeof testValue === 'symbol') {\n                this.includeUnknownTest(context);\n            }\n            else {\n                this.includeKnownTest(context, testValue);\n            }\n        }\n    }\n    parseNode(esTreeNode) {\n        this.consequentScope = new TrackingScope(this.scope);\n        this.consequent = new (this.context.getNodeConstructor(esTreeNode.consequent.type))(esTreeNode.consequent, this, this.consequentScope);\n        if (esTreeNode.alternate) {\n            this.alternateScope = new TrackingScope(this.scope);\n            this.alternate = new (this.context.getNodeConstructor(esTreeNode.alternate.type))(esTreeNode.alternate, this, this.alternateScope);\n        }\n        super.parseNode(esTreeNode);\n    }\n    render(code, options) {\n        const { snippets: { getPropertyAccess } } = options;\n        // Note that unknown test values are always included\n        const testValue = this.getTestValue();\n        const hoistedDeclarations = [];\n        const includesIfElse = this.test.included;\n        const noTreeshake = !this.context.options.treeshake;\n        if (includesIfElse) {\n            this.test.render(code, options);\n        }\n        else {\n            code.remove(this.start, this.consequent.start);\n        }\n        if (this.consequent.included && (noTreeshake || typeof testValue === 'symbol' || testValue)) {\n            this.consequent.render(code, options);\n        }\n        else {\n            code.overwrite(this.consequent.start, this.consequent.end, includesIfElse ? ';' : '');\n            hoistedDeclarations.push(...this.consequentScope.hoistedDeclarations);\n        }\n        if (this.alternate) {\n            if (this.alternate.included && (noTreeshake || typeof testValue === 'symbol' || !testValue)) {\n                if (includesIfElse) {\n                    if (code.original.charCodeAt(this.alternate.start - 1) === 101) {\n                        code.prependLeft(this.alternate.start, ' ');\n                    }\n                }\n                else {\n                    code.remove(this.consequent.end, this.alternate.start);\n                }\n                this.alternate.render(code, options);\n            }\n            else {\n                if (includesIfElse && this.shouldKeepAlternateBranch()) {\n                    code.overwrite(this.alternate.start, this.end, ';');\n                }\n                else {\n                    code.remove(this.consequent.end, this.end);\n                }\n                hoistedDeclarations.push(...this.alternateScope.hoistedDeclarations);\n            }\n        }\n        this.renderHoistedDeclarations(hoistedDeclarations, code, getPropertyAccess);\n    }\n    applyDeoptimizations() { }\n    getTestValue() {\n        if (this.testValue === unset) {\n            return (this.testValue = this.test.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, this));\n        }\n        return this.testValue;\n    }\n    includeKnownTest(context, testValue) {\n        if (this.test.shouldBeIncluded(context)) {\n            this.test.include(context, false);\n        }\n        if (testValue && this.consequent.shouldBeIncluded(context)) {\n            this.consequent.include(context, false, { asSingleStatement: true });\n        }\n        if (!testValue && this.alternate?.shouldBeIncluded(context)) {\n            this.alternate.include(context, false, { asSingleStatement: true });\n        }\n    }\n    includeRecursively(includeChildrenRecursively, context) {\n        this.test.include(context, includeChildrenRecursively);\n        this.consequent.include(context, includeChildrenRecursively);\n        this.alternate?.include(context, includeChildrenRecursively);\n    }\n    includeUnknownTest(context) {\n        this.test.include(context, false);\n        const { brokenFlow } = context;\n        let consequentBrokenFlow = BROKEN_FLOW_NONE;\n        if (this.consequent.shouldBeIncluded(context)) {\n            this.consequent.include(context, false, { asSingleStatement: true });\n            // eslint-disable-next-line unicorn/consistent-destructuring\n            consequentBrokenFlow = context.brokenFlow;\n            context.brokenFlow = brokenFlow;\n        }\n        if (this.alternate?.shouldBeIncluded(context)) {\n            this.alternate.include(context, false, { asSingleStatement: true });\n            context.brokenFlow =\n                // eslint-disable-next-line unicorn/consistent-destructuring\n                context.brokenFlow < consequentBrokenFlow ? context.brokenFlow : consequentBrokenFlow;\n        }\n    }\n    renderHoistedDeclarations(hoistedDeclarations, code, getPropertyAccess) {\n        const hoistedVariables = [\n            ...new Set(hoistedDeclarations.map(identifier => {\n                const variable = identifier.variable;\n                return variable.included ? variable.getName(getPropertyAccess) : '';\n            }))\n        ]\n            .filter(Boolean)\n            .join(', ');\n        if (hoistedVariables) {\n            const parentType = this.parent.type;\n            const needsBraces = parentType !== Program$1 && parentType !== BlockStatement$1;\n            code.prependRight(this.start, `${needsBraces ? '{ ' : ''}var ${hoistedVariables}; `);\n            if (needsBraces) {\n                code.appendLeft(this.end, ` }`);\n            }\n        }\n    }\n    shouldKeepAlternateBranch() {\n        let currentParent = this.parent;\n        do {\n            if (currentParent instanceof IfStatement && currentParent.alternate) {\n                return true;\n            }\n            if (currentParent instanceof BlockStatement) {\n                return false;\n            }\n            currentParent = currentParent.parent;\n        } while (currentParent);\n        return false;\n    }\n}\n\nclass ImportAttribute extends NodeBase {\n}\n\nclass ImportDeclaration extends NodeBase {\n    // Do not bind specifiers or assertions\n    bind() { }\n    hasEffects() {\n        return false;\n    }\n    initialise() {\n        this.context.addImport(this);\n    }\n    render(code, _options, nodeRenderOptions) {\n        code.remove(nodeRenderOptions.start, nodeRenderOptions.end);\n    }\n    applyDeoptimizations() { }\n}\nImportDeclaration.prototype.needsBoundaries = true;\n\nclass ImportDefaultSpecifier extends NodeBase {\n    applyDeoptimizations() { }\n}\n\nconst INTEROP_DEFAULT_VARIABLE = '_interopDefault';\nconst INTEROP_DEFAULT_COMPAT_VARIABLE = '_interopDefaultCompat';\nconst INTEROP_NAMESPACE_VARIABLE = '_interopNamespace';\nconst INTEROP_NAMESPACE_COMPAT_VARIABLE = '_interopNamespaceCompat';\nconst INTEROP_NAMESPACE_DEFAULT_VARIABLE = '_interopNamespaceDefault';\nconst INTEROP_NAMESPACE_DEFAULT_ONLY_VARIABLE = '_interopNamespaceDefaultOnly';\nconst MERGE_NAMESPACES_VARIABLE = '_mergeNamespaces';\nconst defaultInteropHelpersByInteropType = {\n    auto: INTEROP_DEFAULT_VARIABLE,\n    compat: INTEROP_DEFAULT_COMPAT_VARIABLE,\n    default: null,\n    defaultOnly: null,\n    esModule: null\n};\nconst isDefaultAProperty = (interopType, externalLiveBindings) => interopType === 'esModule' ||\n    (externalLiveBindings && (interopType === 'auto' || interopType === 'compat'));\nconst namespaceInteropHelpersByInteropType = {\n    auto: INTEROP_NAMESPACE_VARIABLE,\n    compat: INTEROP_NAMESPACE_COMPAT_VARIABLE,\n    default: INTEROP_NAMESPACE_DEFAULT_VARIABLE,\n    defaultOnly: INTEROP_NAMESPACE_DEFAULT_ONLY_VARIABLE,\n    esModule: null\n};\nconst canDefaultBeTakenFromNamespace = (interopType, externalLiveBindings) => interopType !== 'esModule' && isDefaultAProperty(interopType, externalLiveBindings);\nconst getHelpersBlock = (additionalHelpers, accessedGlobals, indent, snippets, liveBindings, freeze, namespaceToStringTag) => {\n    const usedHelpers = new Set(additionalHelpers);\n    for (const variable of HELPER_NAMES) {\n        if (accessedGlobals.has(variable)) {\n            usedHelpers.add(variable);\n        }\n    }\n    return HELPER_NAMES.map(variable => usedHelpers.has(variable)\n        ? HELPER_GENERATORS[variable](indent, snippets, liveBindings, freeze, namespaceToStringTag, usedHelpers)\n        : '').join('');\n};\nconst HELPER_GENERATORS = {\n    [INTEROP_DEFAULT_COMPAT_VARIABLE](_t, snippets, liveBindings) {\n        const { _, getDirectReturnFunction, n } = snippets;\n        const [left, right] = getDirectReturnFunction(['e'], {\n            functionReturn: true,\n            lineBreakIndent: null,\n            name: INTEROP_DEFAULT_COMPAT_VARIABLE\n        });\n        return (`${left}${getIsCompatNamespace(snippets)}${_}?${_}` +\n            `${liveBindings ? getDefaultLiveBinding(snippets) : getDefaultStatic(snippets)}${right}${n}${n}`);\n    },\n    [INTEROP_DEFAULT_VARIABLE](_t, snippets, liveBindings) {\n        const { _, getDirectReturnFunction, n } = snippets;\n        const [left, right] = getDirectReturnFunction(['e'], {\n            functionReturn: true,\n            lineBreakIndent: null,\n            name: INTEROP_DEFAULT_VARIABLE\n        });\n        return (`${left}e${_}&&${_}e.__esModule${_}?${_}` +\n            `${liveBindings ? getDefaultLiveBinding(snippets) : getDefaultStatic(snippets)}${right}${n}${n}`);\n    },\n    [INTEROP_NAMESPACE_COMPAT_VARIABLE](t, snippets, liveBindings, freeze, namespaceToStringTag, usedHelpers) {\n        const { _, getDirectReturnFunction, n } = snippets;\n        if (usedHelpers.has(INTEROP_NAMESPACE_DEFAULT_VARIABLE)) {\n            const [left, right] = getDirectReturnFunction(['e'], {\n                functionReturn: true,\n                lineBreakIndent: null,\n                name: INTEROP_NAMESPACE_COMPAT_VARIABLE\n            });\n            return `${left}${getIsCompatNamespace(snippets)}${_}?${_}e${_}:${_}${INTEROP_NAMESPACE_DEFAULT_VARIABLE}(e)${right}${n}${n}`;\n        }\n        return (`function ${INTEROP_NAMESPACE_COMPAT_VARIABLE}(e)${_}{${n}` +\n            `${t}if${_}(${getIsCompatNamespace(snippets)})${_}return e;${n}` +\n            createNamespaceObject(t, t, snippets, liveBindings, freeze, namespaceToStringTag) +\n            `}${n}${n}`);\n    },\n    [INTEROP_NAMESPACE_DEFAULT_ONLY_VARIABLE](_t, snippets, _liveBindings, freeze, namespaceToStringTag) {\n        const { getDirectReturnFunction, getObject, n } = snippets;\n        const [left, right] = getDirectReturnFunction(['e'], {\n            functionReturn: true,\n            lineBreakIndent: null,\n            name: INTEROP_NAMESPACE_DEFAULT_ONLY_VARIABLE\n        });\n        return `${left}${getFrozen(freeze, getWithToStringTag(namespaceToStringTag, getObject([\n            ['__proto__', 'null'],\n            ['default', 'e']\n        ], { lineBreakIndent: null }), snippets))}${right}${n}${n}`;\n    },\n    [INTEROP_NAMESPACE_DEFAULT_VARIABLE](t, snippets, liveBindings, freeze, namespaceToStringTag) {\n        const { _, n } = snippets;\n        return (`function ${INTEROP_NAMESPACE_DEFAULT_VARIABLE}(e)${_}{${n}` +\n            createNamespaceObject(t, t, snippets, liveBindings, freeze, namespaceToStringTag) +\n            `}${n}${n}`);\n    },\n    [INTEROP_NAMESPACE_VARIABLE](t, snippets, liveBindings, freeze, namespaceToStringTag, usedHelpers) {\n        const { _, getDirectReturnFunction, n } = snippets;\n        if (usedHelpers.has(INTEROP_NAMESPACE_DEFAULT_VARIABLE)) {\n            const [left, right] = getDirectReturnFunction(['e'], {\n                functionReturn: true,\n                lineBreakIndent: null,\n                name: INTEROP_NAMESPACE_VARIABLE\n            });\n            return `${left}e${_}&&${_}e.__esModule${_}?${_}e${_}:${_}${INTEROP_NAMESPACE_DEFAULT_VARIABLE}(e)${right}${n}${n}`;\n        }\n        return (`function ${INTEROP_NAMESPACE_VARIABLE}(e)${_}{${n}` +\n            `${t}if${_}(e${_}&&${_}e.__esModule)${_}return e;${n}` +\n            createNamespaceObject(t, t, snippets, liveBindings, freeze, namespaceToStringTag) +\n            `}${n}${n}`);\n    },\n    [MERGE_NAMESPACES_VARIABLE](t, snippets, liveBindings, freeze, namespaceToStringTag) {\n        const { _, cnst, n } = snippets;\n        const useForEach = cnst === 'var' && liveBindings;\n        return (`function ${MERGE_NAMESPACES_VARIABLE}(n, m)${_}{${n}` +\n            `${t}${loopOverNamespaces(`{${n}` +\n                `${t}${t}${t}if${_}(k${_}!==${_}'default'${_}&&${_}!(k in n))${_}{${n}` +\n                (liveBindings\n                    ? useForEach\n                        ? copyOwnPropertyLiveBinding\n                        : copyPropertyLiveBinding\n                    : copyPropertyStatic)(t, t + t + t + t, snippets) +\n                `${t}${t}${t}}${n}` +\n                `${t}${t}}`, useForEach, t, snippets)}${n}` +\n            `${t}return ${getFrozen(freeze, getWithToStringTag(namespaceToStringTag, 'n', snippets))};${n}` +\n            `}${n}${n}`);\n    }\n};\nconst getDefaultLiveBinding = ({ _, getObject }) => `e${_}:${_}${getObject([['default', 'e']], { lineBreakIndent: null })}`;\nconst getDefaultStatic = ({ _, getPropertyAccess }) => `e${getPropertyAccess('default')}${_}:${_}e`;\nconst getIsCompatNamespace = ({ _ }) => `e${_}&&${_}typeof e${_}===${_}'object'${_}&&${_}'default'${_}in e`;\nconst createNamespaceObject = (t, index, snippets, liveBindings, freeze, namespaceToStringTag) => {\n    const { _, cnst, getObject, getPropertyAccess, n, s } = snippets;\n    const copyProperty = `{${n}` +\n        (liveBindings ? copyNonDefaultOwnPropertyLiveBinding : copyPropertyStatic)(t, index + t + t, snippets) +\n        `${index}${t}}`;\n    return (`${index}${cnst} n${_}=${_}Object.create(null${namespaceToStringTag\n        ? `,${_}{${_}[Symbol.toStringTag]:${_}${getToStringTagValue(getObject)}${_}}`\n        : ''});${n}` +\n        `${index}if${_}(e)${_}{${n}` +\n        `${index}${t}${loopOverKeys(copyProperty, !liveBindings, snippets)}${n}` +\n        `${index}}${n}` +\n        `${index}n${getPropertyAccess('default')}${_}=${_}e;${n}` +\n        `${index}return ${getFrozen(freeze, 'n')}${s}${n}`);\n};\nconst loopOverKeys = (body, allowVariableLoopVariable, { _, cnst, getFunctionIntro, s }) => cnst !== 'var' || allowVariableLoopVariable\n    ? `for${_}(${cnst} k in e)${_}${body}`\n    : `Object.keys(e).forEach(${getFunctionIntro(['k'], {\n        isAsync: false,\n        name: null\n    })}${body})${s}`;\nconst loopOverNamespaces = (body, useForEach, t, { _, cnst, getDirectReturnFunction, getFunctionIntro, n }) => {\n    if (useForEach) {\n        const [left, right] = getDirectReturnFunction(['e'], {\n            functionReturn: false,\n            lineBreakIndent: { base: t, t },\n            name: null\n        });\n        return (`m.forEach(${left}` +\n            `e${_}&&${_}typeof e${_}!==${_}'string'${_}&&${_}!Array.isArray(e)${_}&&${_}Object.keys(e).forEach(${getFunctionIntro(['k'], {\n                isAsync: false,\n                name: null\n            })}${body})${right});`);\n    }\n    return (`for${_}(var i${_}=${_}0;${_}i${_}<${_}m.length;${_}i++)${_}{${n}` +\n        `${t}${t}${cnst} e${_}=${_}m[i];${n}` +\n        `${t}${t}if${_}(typeof e${_}!==${_}'string'${_}&&${_}!Array.isArray(e))${_}{${_}for${_}(${cnst} k in e)${_}${body}${_}}${n}${t}}`);\n};\nconst copyNonDefaultOwnPropertyLiveBinding = (t, index, snippets) => {\n    const { _, n } = snippets;\n    return (`${index}if${_}(k${_}!==${_}'default')${_}{${n}` +\n        copyOwnPropertyLiveBinding(t, index + t, snippets) +\n        `${index}}${n}`);\n};\nconst copyOwnPropertyLiveBinding = (t, index, { _, cnst, getDirectReturnFunction, n }) => {\n    const [left, right] = getDirectReturnFunction([], {\n        functionReturn: true,\n        lineBreakIndent: null,\n        name: null\n    });\n    return (`${index}${cnst} d${_}=${_}Object.getOwnPropertyDescriptor(e,${_}k);${n}` +\n        `${index}Object.defineProperty(n,${_}k,${_}d.get${_}?${_}d${_}:${_}{${n}` +\n        `${index}${t}enumerable:${_}true,${n}` +\n        `${index}${t}get:${_}${left}e[k]${right}${n}` +\n        `${index}});${n}`);\n};\nconst copyPropertyLiveBinding = (t, index, { _, cnst, getDirectReturnFunction, n }) => {\n    const [left, right] = getDirectReturnFunction([], {\n        functionReturn: true,\n        lineBreakIndent: null,\n        name: null\n    });\n    return (`${index}${cnst} d${_}=${_}Object.getOwnPropertyDescriptor(e,${_}k);${n}` +\n        `${index}if${_}(d)${_}{${n}` +\n        `${index}${t}Object.defineProperty(n,${_}k,${_}d.get${_}?${_}d${_}:${_}{${n}` +\n        `${index}${t}${t}enumerable:${_}true,${n}` +\n        `${index}${t}${t}get:${_}${left}e[k]${right}${n}` +\n        `${index}${t}});${n}` +\n        `${index}}${n}`);\n};\nconst copyPropertyStatic = (_t, index, { _, n }) => `${index}n[k]${_}=${_}e[k];${n}`;\nconst getFrozen = (freeze, fragment) => freeze ? `Object.freeze(${fragment})` : fragment;\nconst getWithToStringTag = (namespaceToStringTag, fragment, { _, getObject }) => namespaceToStringTag\n    ? `Object.defineProperty(${fragment},${_}Symbol.toStringTag,${_}${getToStringTagValue(getObject)})`\n    : fragment;\nconst HELPER_NAMES = Object.keys(HELPER_GENERATORS);\nfunction getToStringTagValue(getObject) {\n    return getObject([['value', \"'Module'\"]], {\n        lineBreakIndent: null\n    });\n}\n\n// TODO once ImportExpression follows official ESTree specs with \"null\" as\n//  default, keys.ts should be updated\nclass ImportExpression extends NodeBase {\n    constructor() {\n        super(...arguments);\n        this.inlineNamespace = null;\n        this.assertions = null;\n        this.mechanism = null;\n        this.namespaceExportName = undefined;\n        this.resolution = null;\n        this.resolutionString = null;\n    }\n    // Do not bind assertions\n    bind() {\n        this.source.bind();\n    }\n    hasEffects() {\n        return true;\n    }\n    include(context, includeChildrenRecursively) {\n        if (!this.included) {\n            this.included = true;\n            this.context.includeDynamicImport(this);\n            this.scope.addAccessedDynamicImport(this);\n        }\n        this.source.include(context, includeChildrenRecursively);\n    }\n    initialise() {\n        this.context.addDynamicImport(this);\n    }\n    parseNode(esTreeNode) {\n        // Keep the source AST to be used by renderDynamicImport\n        super.parseNode(esTreeNode, ['source']);\n    }\n    render(code, options) {\n        const { snippets: { _, getDirectReturnFunction, getObject, getPropertyAccess } } = options;\n        if (this.inlineNamespace) {\n            const [left, right] = getDirectReturnFunction([], {\n                functionReturn: true,\n                lineBreakIndent: null,\n                name: null\n            });\n            code.overwrite(this.start, this.end, `Promise.resolve().then(${left}${this.inlineNamespace.getName(getPropertyAccess)}${right})`);\n            return;\n        }\n        if (this.mechanism) {\n            code.overwrite(this.start, findFirstOccurrenceOutsideComment(code.original, '(', this.start + 6) + 1, this.mechanism.left);\n            code.overwrite(this.end - 1, this.end, this.mechanism.right);\n        }\n        if (this.resolutionString) {\n            code.overwrite(this.source.start, this.source.end, this.resolutionString);\n            if (this.namespaceExportName) {\n                const [left, right] = getDirectReturnFunction(['n'], {\n                    functionReturn: true,\n                    lineBreakIndent: null,\n                    name: null\n                });\n                code.prependLeft(this.end, `.then(${left}n.${this.namespaceExportName}${right})`);\n            }\n        }\n        else {\n            this.source.render(code, options);\n        }\n        if (this.assertions !== true) {\n            if (this.arguments) {\n                code.overwrite(this.source.end, this.end - 1, '', { contentOnly: true });\n            }\n            if (this.assertions) {\n                code.appendLeft(this.end - 1, `,${_}${getObject([['assert', this.assertions]], {\n                    lineBreakIndent: null\n                })}`);\n            }\n        }\n    }\n    setExternalResolution(exportMode, resolution, options, snippets, pluginDriver, accessedGlobalsByScope, resolutionString, namespaceExportName, assertions) {\n        const { format } = options;\n        this.inlineNamespace = null;\n        this.resolution = resolution;\n        this.resolutionString = resolutionString;\n        this.namespaceExportName = namespaceExportName;\n        this.assertions = assertions;\n        const accessedGlobals = [...(accessedImportGlobals[format] || [])];\n        let helper;\n        ({ helper, mechanism: this.mechanism } = this.getDynamicImportMechanismAndHelper(resolution, exportMode, options, snippets, pluginDriver));\n        if (helper) {\n            accessedGlobals.push(helper);\n        }\n        if (accessedGlobals.length > 0) {\n            this.scope.addAccessedGlobals(accessedGlobals, accessedGlobalsByScope);\n        }\n    }\n    setInternalResolution(inlineNamespace) {\n        this.inlineNamespace = inlineNamespace;\n    }\n    applyDeoptimizations() { }\n    getDynamicImportMechanismAndHelper(resolution, exportMode, { compact, dynamicImportFunction, dynamicImportInCjs, format, generatedCode: { arrowFunctions }, interop }, { _, getDirectReturnFunction, getDirectReturnIifeLeft }, pluginDriver) {\n        const mechanism = pluginDriver.hookFirstSync('renderDynamicImport', [\n            {\n                customResolution: typeof this.resolution === 'string' ? this.resolution : null,\n                format,\n                moduleId: this.context.module.id,\n                targetModuleId: this.resolution && typeof this.resolution !== 'string' ? this.resolution.id : null\n            }\n        ]);\n        if (mechanism) {\n            return { helper: null, mechanism };\n        }\n        const hasDynamicTarget = !this.resolution || typeof this.resolution === 'string';\n        switch (format) {\n            case 'cjs': {\n                if (dynamicImportInCjs &&\n                    (!resolution || typeof resolution === 'string' || resolution instanceof ExternalModule)) {\n                    return { helper: null, mechanism: null };\n                }\n                const helper = getInteropHelper(resolution, exportMode, interop);\n                let left = `require(`;\n                let right = `)`;\n                if (helper) {\n                    left = `/*#__PURE__*/${helper}(${left}`;\n                    right += ')';\n                }\n                const [functionLeft, functionRight] = getDirectReturnFunction([], {\n                    functionReturn: true,\n                    lineBreakIndent: null,\n                    name: null\n                });\n                left = `Promise.resolve().then(${functionLeft}${left}`;\n                right += `${functionRight})`;\n                if (!arrowFunctions && hasDynamicTarget) {\n                    left = getDirectReturnIifeLeft(['t'], `${left}t${right}`, {\n                        needsArrowReturnParens: false,\n                        needsWrappedFunction: true\n                    });\n                    right = ')';\n                }\n                return {\n                    helper,\n                    mechanism: { left, right }\n                };\n            }\n            case 'amd': {\n                const resolve = compact ? 'c' : 'resolve';\n                const reject = compact ? 'e' : 'reject';\n                const helper = getInteropHelper(resolution, exportMode, interop);\n                const [resolveLeft, resolveRight] = getDirectReturnFunction(['m'], {\n                    functionReturn: false,\n                    lineBreakIndent: null,\n                    name: null\n                });\n                const resolveNamespace = helper\n                    ? `${resolveLeft}${resolve}(/*#__PURE__*/${helper}(m))${resolveRight}`\n                    : resolve;\n                const [handlerLeft, handlerRight] = getDirectReturnFunction([resolve, reject], {\n                    functionReturn: false,\n                    lineBreakIndent: null,\n                    name: null\n                });\n                let left = `new Promise(${handlerLeft}require([`;\n                let right = `],${_}${resolveNamespace},${_}${reject})${handlerRight})`;\n                if (!arrowFunctions && hasDynamicTarget) {\n                    left = getDirectReturnIifeLeft(['t'], `${left}t${right}`, {\n                        needsArrowReturnParens: false,\n                        needsWrappedFunction: true\n                    });\n                    right = ')';\n                }\n                return {\n                    helper,\n                    mechanism: { left, right }\n                };\n            }\n            case 'system': {\n                return {\n                    helper: null,\n                    mechanism: {\n                        left: 'module.import(',\n                        right: ')'\n                    }\n                };\n            }\n            case 'es': {\n                if (dynamicImportFunction) {\n                    return {\n                        helper: null,\n                        mechanism: {\n                            left: `${dynamicImportFunction}(`,\n                            right: ')'\n                        }\n                    };\n                }\n            }\n        }\n        return { helper: null, mechanism: null };\n    }\n}\nfunction getInteropHelper(resolution, exportMode, interop) {\n    return exportMode === 'external'\n        ? namespaceInteropHelpersByInteropType[interop(resolution instanceof ExternalModule ? resolution.id : null)]\n        : exportMode === 'default'\n            ? INTEROP_NAMESPACE_DEFAULT_ONLY_VARIABLE\n            : null;\n}\nconst accessedImportGlobals = {\n    amd: ['require'],\n    cjs: ['require'],\n    system: ['module']\n};\n\nclass ImportNamespaceSpecifier extends NodeBase {\n    applyDeoptimizations() { }\n}\n\nclass ImportSpecifier extends NodeBase {\n    applyDeoptimizations() { }\n}\n\nclass LabeledStatement extends NodeBase {\n    hasEffects(context) {\n        const brokenFlow = context.brokenFlow;\n        context.ignore.labels.add(this.label.name);\n        if (this.body.hasEffects(context))\n            return true;\n        context.ignore.labels.delete(this.label.name);\n        if (context.includedLabels.has(this.label.name)) {\n            context.includedLabels.delete(this.label.name);\n            context.brokenFlow = brokenFlow;\n        }\n        return false;\n    }\n    include(context, includeChildrenRecursively) {\n        this.included = true;\n        const brokenFlow = context.brokenFlow;\n        this.body.include(context, includeChildrenRecursively);\n        if (includeChildrenRecursively || context.includedLabels.has(this.label.name)) {\n            this.label.include();\n            context.includedLabels.delete(this.label.name);\n            context.brokenFlow = brokenFlow;\n        }\n    }\n    render(code, options) {\n        if (this.label.included) {\n            this.label.render(code, options);\n        }\n        else {\n            code.remove(this.start, findNonWhiteSpace(code.original, findFirstOccurrenceOutsideComment(code.original, ':', this.label.end) + 1));\n        }\n        this.body.render(code, options);\n    }\n}\n\nclass LogicalExpression extends NodeBase {\n    constructor() {\n        super(...arguments);\n        // We collect deoptimization information if usedBranch !== null\n        this.expressionsToBeDeoptimized = [];\n        this.isBranchResolutionAnalysed = false;\n        this.usedBranch = null;\n    }\n    deoptimizeCache() {\n        if (this.usedBranch) {\n            const unusedBranch = this.usedBranch === this.left ? this.right : this.left;\n            this.usedBranch = null;\n            unusedBranch.deoptimizePath(UNKNOWN_PATH);\n            for (const expression of this.expressionsToBeDeoptimized) {\n                expression.deoptimizeCache();\n            }\n            // Request another pass because we need to ensure \"include\" runs again if\n            // it is rendered\n            this.context.requestTreeshakingPass();\n        }\n    }\n    deoptimizePath(path) {\n        const usedBranch = this.getUsedBranch();\n        if (usedBranch) {\n            usedBranch.deoptimizePath(path);\n        }\n        else {\n            this.left.deoptimizePath(path);\n            this.right.deoptimizePath(path);\n        }\n    }\n    deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n        this.left.deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n        this.right.deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n    }\n    getLiteralValueAtPath(path, recursionTracker, origin) {\n        const usedBranch = this.getUsedBranch();\n        if (!usedBranch)\n            return UnknownValue;\n        this.expressionsToBeDeoptimized.push(origin);\n        return usedBranch.getLiteralValueAtPath(path, recursionTracker, origin);\n    }\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n        const usedBranch = this.getUsedBranch();\n        if (!usedBranch)\n            return [\n                new MultiExpression([\n                    this.left.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin)[0],\n                    this.right.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin)[0]\n                ]),\n                false\n            ];\n        this.expressionsToBeDeoptimized.push(origin);\n        return usedBranch.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\n    }\n    hasEffects(context) {\n        if (this.left.hasEffects(context)) {\n            return true;\n        }\n        if (this.getUsedBranch() !== this.left) {\n            return this.right.hasEffects(context);\n        }\n        return false;\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        const usedBranch = this.getUsedBranch();\n        if (!usedBranch) {\n            return (this.left.hasEffectsOnInteractionAtPath(path, interaction, context) ||\n                this.right.hasEffectsOnInteractionAtPath(path, interaction, context));\n        }\n        return usedBranch.hasEffectsOnInteractionAtPath(path, interaction, context);\n    }\n    include(context, includeChildrenRecursively) {\n        this.included = true;\n        const usedBranch = this.getUsedBranch();\n        if (includeChildrenRecursively ||\n            (usedBranch === this.right && this.left.shouldBeIncluded(context)) ||\n            !usedBranch) {\n            this.left.include(context, includeChildrenRecursively);\n            this.right.include(context, includeChildrenRecursively);\n        }\n        else {\n            usedBranch.include(context, includeChildrenRecursively);\n        }\n    }\n    render(code, options, { isCalleeOfRenderedParent, preventASI, renderedParentType, renderedSurroundingElement } = BLANK) {\n        if (!this.left.included || !this.right.included) {\n            const operatorPos = findFirstOccurrenceOutsideComment(code.original, this.operator, this.left.end);\n            if (this.right.included) {\n                const removePos = findNonWhiteSpace(code.original, operatorPos + 2);\n                code.remove(this.start, removePos);\n                if (preventASI) {\n                    removeLineBreaks(code, removePos, this.right.start);\n                }\n            }\n            else {\n                code.remove(operatorPos, this.end);\n            }\n            removeAnnotations(this, code);\n            this.getUsedBranch().render(code, options, {\n                isCalleeOfRenderedParent,\n                preventASI,\n                renderedParentType: renderedParentType || this.parent.type,\n                renderedSurroundingElement: renderedSurroundingElement || this.parent.type\n            });\n        }\n        else {\n            this.left.render(code, options, {\n                preventASI,\n                renderedSurroundingElement\n            });\n            this.right.render(code, options);\n        }\n    }\n    getUsedBranch() {\n        if (!this.isBranchResolutionAnalysed) {\n            this.isBranchResolutionAnalysed = true;\n            const leftValue = this.left.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, this);\n            if (typeof leftValue === 'symbol') {\n                return null;\n            }\n            else {\n                this.usedBranch =\n                    (this.operator === '||' && leftValue) ||\n                        (this.operator === '&&' && !leftValue) ||\n                        (this.operator === '??' && leftValue != null)\n                        ? this.left\n                        : this.right;\n            }\n        }\n        return this.usedBranch;\n    }\n}\n\nconst FILE_PREFIX = 'ROLLUP_FILE_URL_';\nconst IMPORT = 'import';\nclass MetaProperty extends NodeBase {\n    constructor() {\n        super(...arguments);\n        this.metaProperty = null;\n        this.preliminaryChunkId = null;\n        this.referenceId = null;\n    }\n    getReferencedFileName(outputPluginDriver) {\n        const { meta: { name }, metaProperty } = this;\n        if (name === IMPORT && metaProperty?.startsWith(FILE_PREFIX)) {\n            return outputPluginDriver.getFileName(metaProperty.slice(FILE_PREFIX.length));\n        }\n        return null;\n    }\n    hasEffects() {\n        return false;\n    }\n    hasEffectsOnInteractionAtPath(path, { type }) {\n        return path.length > 1 || type !== INTERACTION_ACCESSED;\n    }\n    include() {\n        if (!this.included) {\n            this.included = true;\n            if (this.meta.name === IMPORT) {\n                this.context.addImportMeta(this);\n                const parent = this.parent;\n                const metaProperty = (this.metaProperty =\n                    parent instanceof MemberExpression && typeof parent.propertyKey === 'string'\n                        ? parent.propertyKey\n                        : null);\n                if (metaProperty?.startsWith(FILE_PREFIX)) {\n                    this.referenceId = metaProperty.slice(FILE_PREFIX.length);\n                }\n            }\n        }\n    }\n    render(code, { format, pluginDriver, snippets }) {\n        const { context: { module: { id: moduleId } }, meta: { name }, metaProperty, parent, preliminaryChunkId, referenceId, start, end } = this;\n        if (name !== IMPORT)\n            return;\n        const chunkId = preliminaryChunkId;\n        if (referenceId) {\n            const fileName = pluginDriver.getFileName(referenceId);\n            const relativePath = normalize(relative$1(dirname(chunkId), fileName));\n            const replacement = pluginDriver.hookFirstSync('resolveFileUrl', [\n                { chunkId, fileName, format, moduleId, referenceId, relativePath }\n            ]) || relativeUrlMechanisms[format](relativePath);\n            code.overwrite(parent.start, parent.end, replacement, { contentOnly: true });\n            return;\n        }\n        const replacement = pluginDriver.hookFirstSync('resolveImportMeta', [\n            metaProperty,\n            { chunkId, format, moduleId }\n        ]) || importMetaMechanisms[format]?.(metaProperty, { chunkId, snippets });\n        if (typeof replacement === 'string') {\n            if (parent instanceof MemberExpression) {\n                code.overwrite(parent.start, parent.end, replacement, { contentOnly: true });\n            }\n            else {\n                code.overwrite(start, end, replacement, { contentOnly: true });\n            }\n        }\n    }\n    setResolution(format, accessedGlobalsByScope, preliminaryChunkId) {\n        this.preliminaryChunkId = preliminaryChunkId;\n        const accessedGlobals = (this.metaProperty?.startsWith(FILE_PREFIX) ? accessedFileUrlGlobals : accessedMetaUrlGlobals)[format];\n        if (accessedGlobals.length > 0) {\n            this.scope.addAccessedGlobals(accessedGlobals, accessedGlobalsByScope);\n        }\n    }\n}\nconst accessedMetaUrlGlobals = {\n    amd: ['document', 'module', 'URL'],\n    cjs: ['document', 'require', 'URL'],\n    es: [],\n    iife: ['document', 'URL'],\n    system: ['module'],\n    umd: ['document', 'require', 'URL']\n};\nconst accessedFileUrlGlobals = {\n    amd: ['document', 'require', 'URL'],\n    cjs: ['document', 'require', 'URL'],\n    es: [],\n    iife: ['document', 'URL'],\n    system: ['module', 'URL'],\n    umd: ['document', 'require', 'URL']\n};\nconst getResolveUrl = (path, URL = 'URL') => `new ${URL}(${path}).href`;\nconst getRelativeUrlFromDocument = (relativePath, umd = false) => getResolveUrl(`'${escapeId(relativePath)}', ${umd ? `typeof document === 'undefined' ? location.href : ` : ''}document.currentScript && document.currentScript.src || document.baseURI`);\nconst getGenericImportMetaMechanism = (getUrl) => (property, { chunkId }) => {\n    const urlMechanism = getUrl(chunkId);\n    return property === null\n        ? `({ url: ${urlMechanism} })`\n        : property === 'url'\n            ? urlMechanism\n            : 'undefined';\n};\nconst getFileUrlFromFullPath = (path) => `require('u' + 'rl').pathToFileURL(${path}).href`;\nconst getFileUrlFromRelativePath = (path) => getFileUrlFromFullPath(`__dirname + '/${path}'`);\nconst getUrlFromDocument = (chunkId, umd = false) => `${umd ? `typeof document === 'undefined' ? location.href : ` : ''}(document.currentScript && document.currentScript.src || new URL('${escapeId(chunkId)}', document.baseURI).href)`;\nconst relativeUrlMechanisms = {\n    amd: relativePath => {\n        if (relativePath[0] !== '.')\n            relativePath = './' + relativePath;\n        return getResolveUrl(`require.toUrl('${relativePath}'), document.baseURI`);\n    },\n    cjs: relativePath => `(typeof document === 'undefined' ? ${getFileUrlFromRelativePath(relativePath)} : ${getRelativeUrlFromDocument(relativePath)})`,\n    es: relativePath => getResolveUrl(`'${relativePath}', import.meta.url`),\n    iife: relativePath => getRelativeUrlFromDocument(relativePath),\n    system: relativePath => getResolveUrl(`'${relativePath}', module.meta.url`),\n    umd: relativePath => `(typeof document === 'undefined' && typeof location === 'undefined' ? ${getFileUrlFromRelativePath(relativePath)} : ${getRelativeUrlFromDocument(relativePath, true)})`\n};\nconst importMetaMechanisms = {\n    amd: getGenericImportMetaMechanism(() => getResolveUrl(`module.uri, document.baseURI`)),\n    cjs: getGenericImportMetaMechanism(chunkId => `(typeof document === 'undefined' ? ${getFileUrlFromFullPath('__filename')} : ${getUrlFromDocument(chunkId)})`),\n    iife: getGenericImportMetaMechanism(chunkId => getUrlFromDocument(chunkId)),\n    system: (property, { snippets: { getPropertyAccess } }) => property === null ? `module.meta` : `module.meta${getPropertyAccess(property)}`,\n    umd: getGenericImportMetaMechanism(chunkId => `(typeof document === 'undefined' && typeof location === 'undefined' ? ${getFileUrlFromFullPath('__filename')} : ${getUrlFromDocument(chunkId, true)})`)\n};\n\nclass NewExpression extends NodeBase {\n    hasEffects(context) {\n        try {\n            for (const argument of this.arguments) {\n                if (argument.hasEffects(context))\n                    return true;\n            }\n            if (this.context.options.treeshake.annotations &&\n                this.annotations) {\n                return false;\n            }\n            return (this.callee.hasEffects(context) ||\n                this.callee.hasEffectsOnInteractionAtPath(EMPTY_PATH, this.interaction, context));\n        }\n        finally {\n            if (!this.deoptimized)\n                this.applyDeoptimizations();\n        }\n    }\n    hasEffectsOnInteractionAtPath(path, { type }) {\n        return path.length > 0 || type !== INTERACTION_ACCESSED;\n    }\n    include(context, includeChildrenRecursively) {\n        if (!this.deoptimized)\n            this.applyDeoptimizations();\n        if (includeChildrenRecursively) {\n            super.include(context, includeChildrenRecursively);\n        }\n        else {\n            this.included = true;\n            this.callee.include(context, false);\n        }\n        this.callee.includeCallArguments(context, this.arguments);\n    }\n    initialise() {\n        this.interaction = {\n            args: this.arguments,\n            thisArg: null,\n            type: INTERACTION_CALLED,\n            withNew: true\n        };\n    }\n    render(code, options) {\n        this.callee.render(code, options);\n        renderCallArguments(code, options, this);\n    }\n    applyDeoptimizations() {\n        this.deoptimized = true;\n        for (const argument of this.arguments) {\n            // This will make sure all properties of parameters behave as \"unknown\"\n            argument.deoptimizePath(UNKNOWN_PATH);\n        }\n        this.context.requestTreeshakingPass();\n    }\n}\n\nclass ObjectExpression extends NodeBase {\n    constructor() {\n        super(...arguments);\n        this.objectEntity = null;\n    }\n    deoptimizeCache() {\n        this.getObjectEntity().deoptimizeAllProperties();\n    }\n    deoptimizePath(path) {\n        this.getObjectEntity().deoptimizePath(path);\n    }\n    deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n        this.getObjectEntity().deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n    }\n    getLiteralValueAtPath(path, recursionTracker, origin) {\n        return this.getObjectEntity().getLiteralValueAtPath(path, recursionTracker, origin);\n    }\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n        return this.getObjectEntity().getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        return this.getObjectEntity().hasEffectsOnInteractionAtPath(path, interaction, context);\n    }\n    render(code, options, { renderedSurroundingElement } = BLANK) {\n        super.render(code, options);\n        if (renderedSurroundingElement === ExpressionStatement$1 ||\n            renderedSurroundingElement === ArrowFunctionExpression$1) {\n            code.appendRight(this.start, '(');\n            code.prependLeft(this.end, ')');\n        }\n    }\n    applyDeoptimizations() { }\n    getObjectEntity() {\n        if (this.objectEntity !== null) {\n            return this.objectEntity;\n        }\n        let prototype = OBJECT_PROTOTYPE;\n        const properties = [];\n        for (const property of this.properties) {\n            if (property instanceof SpreadElement) {\n                properties.push({ key: UnknownKey, kind: 'init', property });\n                continue;\n            }\n            let key;\n            if (property.computed) {\n                const keyValue = property.key.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, this);\n                if (typeof keyValue === 'symbol') {\n                    properties.push({ key: UnknownKey, kind: property.kind, property });\n                    continue;\n                }\n                else {\n                    key = String(keyValue);\n                }\n            }\n            else {\n                key =\n                    property.key instanceof Identifier\n                        ? property.key.name\n                        : String(property.key.value);\n                if (key === '__proto__' && property.kind === 'init') {\n                    prototype =\n                        property.value instanceof Literal && property.value.value === null\n                            ? null\n                            : property.value;\n                    continue;\n                }\n            }\n            properties.push({ key, kind: property.kind, property });\n        }\n        return (this.objectEntity = new ObjectEntity(properties, prototype));\n    }\n}\n\nclass PrivateIdentifier extends NodeBase {\n}\n\nfunction getOriginalLocation(sourcemapChain, location) {\n    const filteredSourcemapChain = sourcemapChain.filter((sourcemap) => !!sourcemap.mappings);\n    traceSourcemap: while (filteredSourcemapChain.length > 0) {\n        const sourcemap = filteredSourcemapChain.pop();\n        const line = sourcemap.mappings[location.line - 1];\n        if (line) {\n            const filteredLine = line.filter((segment) => segment.length > 1);\n            const lastSegment = filteredLine[filteredLine.length - 1];\n            for (const segment of filteredLine) {\n                if (segment[0] >= location.column || segment === lastSegment) {\n                    location = {\n                        column: segment[3],\n                        line: segment[2] + 1\n                    };\n                    continue traceSourcemap;\n                }\n            }\n        }\n        throw new Error(\"Can't resolve original location of error.\");\n    }\n    return location;\n}\n\nclass Program extends NodeBase {\n    constructor() {\n        super(...arguments);\n        this.hasCachedEffect = null;\n        this.hasLoggedEffect = false;\n    }\n    hasCachedEffects() {\n        return this.hasCachedEffect === null\n            ? (this.hasCachedEffect = this.hasEffects(createHasEffectsContext()))\n            : this.hasCachedEffect;\n    }\n    hasEffects(context) {\n        for (const node of this.body) {\n            if (node.hasEffects(context)) {\n                if (this.context.options.experimentalLogSideEffects && !this.hasLoggedEffect) {\n                    this.hasLoggedEffect = true;\n                    const { code, module } = this.context;\n                    const { line, column } = locate(code, node.start, { offsetLine: 1 });\n                    console.log(`First side effect in ${relativeId(module.id)} is at (${line}:${column})\\n${getCodeFrame(code, line, column)}`);\n                    try {\n                        const { column: originalColumn, line: originalLine } = getOriginalLocation(module.sourcemapChain, { column, line });\n                        if (originalLine !== line) {\n                            console.log(`Original location is at (${originalLine}:${originalColumn})\\n${getCodeFrame(module.originalCode, originalLine, originalColumn)}\\n`);\n                        }\n                    }\n                    catch {\n                        /* ignored */\n                    }\n                    console.log();\n                }\n                return (this.hasCachedEffect = true);\n            }\n        }\n        return false;\n    }\n    include(context, includeChildrenRecursively) {\n        this.included = true;\n        for (const node of this.body) {\n            if (includeChildrenRecursively || node.shouldBeIncluded(context)) {\n                node.include(context, includeChildrenRecursively);\n            }\n        }\n    }\n    render(code, options) {\n        let start = this.start;\n        if (code.original.startsWith('#!')) {\n            start = Math.min(code.original.indexOf('\\n') + 1, this.end);\n            code.remove(0, start);\n        }\n        if (this.body.length > 0) {\n            renderStatementList(this.body, code, start, this.end, options);\n        }\n        else {\n            super.render(code, options);\n        }\n    }\n    applyDeoptimizations() { }\n}\n\nclass Property extends MethodBase {\n    constructor() {\n        super(...arguments);\n        this.declarationInit = null;\n    }\n    declare(kind, init) {\n        this.declarationInit = init;\n        return this.value.declare(kind, UNKNOWN_EXPRESSION);\n    }\n    hasEffects(context) {\n        if (!this.deoptimized)\n            this.applyDeoptimizations();\n        const propertyReadSideEffects = this.context.options.treeshake\n            .propertyReadSideEffects;\n        return ((this.parent.type === 'ObjectPattern' && propertyReadSideEffects === 'always') ||\n            this.key.hasEffects(context) ||\n            this.value.hasEffects(context));\n    }\n    markDeclarationReached() {\n        this.value.markDeclarationReached();\n    }\n    render(code, options) {\n        if (!this.shorthand) {\n            this.key.render(code, options);\n        }\n        this.value.render(code, options, { isShorthandProperty: this.shorthand });\n    }\n    applyDeoptimizations() {\n        this.deoptimized = true;\n        if (this.declarationInit !== null) {\n            this.declarationInit.deoptimizePath([UnknownKey, UnknownKey]);\n            this.context.requestTreeshakingPass();\n        }\n    }\n}\n\nclass PropertyDefinition extends NodeBase {\n    deoptimizePath(path) {\n        this.value?.deoptimizePath(path);\n    }\n    deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n        this.value?.deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n    }\n    getLiteralValueAtPath(path, recursionTracker, origin) {\n        return this.value\n            ? this.value.getLiteralValueAtPath(path, recursionTracker, origin)\n            : UnknownValue;\n    }\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\n        return this.value\n            ? this.value.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin)\n            : UNKNOWN_RETURN_EXPRESSION;\n    }\n    hasEffects(context) {\n        return this.key.hasEffects(context) || (this.static && !!this.value?.hasEffects(context));\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        return !this.value || this.value.hasEffectsOnInteractionAtPath(path, interaction, context);\n    }\n    applyDeoptimizations() { }\n}\n\nclass ReturnStatement extends NodeBase {\n    hasEffects(context) {\n        if (!context.ignore.returnYield || this.argument?.hasEffects(context))\n            return true;\n        context.brokenFlow = BROKEN_FLOW_ERROR_RETURN_LABEL;\n        return false;\n    }\n    include(context, includeChildrenRecursively) {\n        this.included = true;\n        this.argument?.include(context, includeChildrenRecursively);\n        context.brokenFlow = BROKEN_FLOW_ERROR_RETURN_LABEL;\n    }\n    initialise() {\n        this.scope.addReturnExpression(this.argument || UNKNOWN_EXPRESSION);\n    }\n    render(code, options) {\n        if (this.argument) {\n            this.argument.render(code, options, { preventASI: true });\n            if (this.argument.start === this.start + 6 /* 'return'.length */) {\n                code.prependLeft(this.start + 6, ' ');\n            }\n        }\n    }\n}\n\nclass SequenceExpression extends NodeBase {\n    deoptimizePath(path) {\n        this.expressions[this.expressions.length - 1].deoptimizePath(path);\n    }\n    deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n        this.expressions[this.expressions.length - 1].deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n    }\n    getLiteralValueAtPath(path, recursionTracker, origin) {\n        return this.expressions[this.expressions.length - 1].getLiteralValueAtPath(path, recursionTracker, origin);\n    }\n    hasEffects(context) {\n        for (const expression of this.expressions) {\n            if (expression.hasEffects(context))\n                return true;\n        }\n        return false;\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        return this.expressions[this.expressions.length - 1].hasEffectsOnInteractionAtPath(path, interaction, context);\n    }\n    include(context, includeChildrenRecursively) {\n        this.included = true;\n        const lastExpression = this.expressions[this.expressions.length - 1];\n        for (const expression of this.expressions) {\n            if (includeChildrenRecursively ||\n                (expression === lastExpression && !(this.parent instanceof ExpressionStatement)) ||\n                expression.shouldBeIncluded(context))\n                expression.include(context, includeChildrenRecursively);\n        }\n    }\n    render(code, options, { renderedParentType, isCalleeOfRenderedParent, preventASI } = BLANK) {\n        let includedNodes = 0;\n        let lastSeparatorPos = null;\n        const lastNode = this.expressions[this.expressions.length - 1];\n        for (const { node, separator, start, end } of getCommaSeparatedNodesWithBoundaries(this.expressions, code, this.start, this.end)) {\n            if (!node.included) {\n                treeshakeNode(node, code, start, end);\n                continue;\n            }\n            includedNodes++;\n            lastSeparatorPos = separator;\n            if (includedNodes === 1 && preventASI) {\n                removeLineBreaks(code, start, node.start);\n            }\n            if (includedNodes === 1) {\n                const parentType = renderedParentType || this.parent.type;\n                node.render(code, options, {\n                    isCalleeOfRenderedParent: isCalleeOfRenderedParent && node === lastNode,\n                    renderedParentType: parentType,\n                    renderedSurroundingElement: parentType\n                });\n            }\n            else {\n                node.render(code, options);\n            }\n        }\n        if (lastSeparatorPos) {\n            code.remove(lastSeparatorPos, this.end);\n        }\n    }\n}\n\nclass StaticBlock extends NodeBase {\n    createScope(parentScope) {\n        this.scope = new BlockScope(parentScope);\n    }\n    hasEffects(context) {\n        for (const node of this.body) {\n            if (node.hasEffects(context))\n                return true;\n        }\n        return false;\n    }\n    include(context, includeChildrenRecursively) {\n        this.included = true;\n        for (const node of this.body) {\n            if (includeChildrenRecursively || node.shouldBeIncluded(context))\n                node.include(context, includeChildrenRecursively);\n        }\n    }\n    render(code, options) {\n        if (this.body.length > 0) {\n            renderStatementList(this.body, code, this.start + 1, this.end - 1, options);\n        }\n        else {\n            super.render(code, options);\n        }\n    }\n}\n\nclass Super extends NodeBase {\n    bind() {\n        this.variable = this.scope.findVariable('this');\n    }\n    deoptimizePath(path) {\n        this.variable.deoptimizePath(path);\n    }\n    deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n        this.variable.deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker);\n    }\n    include() {\n        if (!this.included) {\n            this.included = true;\n            this.context.includeVariableInModule(this.variable);\n        }\n    }\n}\n\nclass SwitchCase extends NodeBase {\n    hasEffects(context) {\n        if (this.test?.hasEffects(context))\n            return true;\n        for (const node of this.consequent) {\n            if (context.brokenFlow)\n                break;\n            if (node.hasEffects(context))\n                return true;\n        }\n        return false;\n    }\n    include(context, includeChildrenRecursively) {\n        this.included = true;\n        this.test?.include(context, includeChildrenRecursively);\n        for (const node of this.consequent) {\n            if (includeChildrenRecursively || node.shouldBeIncluded(context))\n                node.include(context, includeChildrenRecursively);\n        }\n    }\n    render(code, options, nodeRenderOptions) {\n        if (this.consequent.length > 0) {\n            this.test && this.test.render(code, options);\n            const testEnd = this.test\n                ? this.test.end\n                : findFirstOccurrenceOutsideComment(code.original, 'default', this.start) + 7;\n            const consequentStart = findFirstOccurrenceOutsideComment(code.original, ':', testEnd) + 1;\n            renderStatementList(this.consequent, code, consequentStart, nodeRenderOptions.end, options);\n        }\n        else {\n            super.render(code, options);\n        }\n    }\n}\nSwitchCase.prototype.needsBoundaries = true;\n\nclass SwitchStatement extends NodeBase {\n    createScope(parentScope) {\n        this.scope = new BlockScope(parentScope);\n    }\n    hasEffects(context) {\n        if (this.discriminant.hasEffects(context))\n            return true;\n        const { brokenFlow, ignore } = context;\n        const { breaks } = ignore;\n        let minBrokenFlow = Infinity;\n        ignore.breaks = true;\n        for (const switchCase of this.cases) {\n            if (switchCase.hasEffects(context))\n                return true;\n            // eslint-disable-next-line unicorn/consistent-destructuring\n            minBrokenFlow = context.brokenFlow < minBrokenFlow ? context.brokenFlow : minBrokenFlow;\n            context.brokenFlow = brokenFlow;\n        }\n        if (this.defaultCase !== null && !(minBrokenFlow === BROKEN_FLOW_BREAK_CONTINUE)) {\n            context.brokenFlow = minBrokenFlow;\n        }\n        ignore.breaks = breaks;\n        return false;\n    }\n    include(context, includeChildrenRecursively) {\n        this.included = true;\n        this.discriminant.include(context, includeChildrenRecursively);\n        const { brokenFlow } = context;\n        let minBrokenFlow = Infinity;\n        let isCaseIncluded = includeChildrenRecursively ||\n            (this.defaultCase !== null && this.defaultCase < this.cases.length - 1);\n        for (let caseIndex = this.cases.length - 1; caseIndex >= 0; caseIndex--) {\n            const switchCase = this.cases[caseIndex];\n            if (switchCase.included) {\n                isCaseIncluded = true;\n            }\n            if (!isCaseIncluded) {\n                const hasEffectsContext = createHasEffectsContext();\n                hasEffectsContext.ignore.breaks = true;\n                isCaseIncluded = switchCase.hasEffects(hasEffectsContext);\n            }\n            if (isCaseIncluded) {\n                switchCase.include(context, includeChildrenRecursively);\n                // eslint-disable-next-line unicorn/consistent-destructuring\n                minBrokenFlow = minBrokenFlow < context.brokenFlow ? minBrokenFlow : context.brokenFlow;\n                context.brokenFlow = brokenFlow;\n            }\n            else {\n                minBrokenFlow = brokenFlow;\n            }\n        }\n        if (isCaseIncluded &&\n            this.defaultCase !== null &&\n            !(minBrokenFlow === BROKEN_FLOW_BREAK_CONTINUE)) {\n            context.brokenFlow = minBrokenFlow;\n        }\n    }\n    initialise() {\n        for (let caseIndex = 0; caseIndex < this.cases.length; caseIndex++) {\n            if (this.cases[caseIndex].test === null) {\n                this.defaultCase = caseIndex;\n                return;\n            }\n        }\n        this.defaultCase = null;\n    }\n    render(code, options) {\n        this.discriminant.render(code, options);\n        if (this.cases.length > 0) {\n            renderStatementList(this.cases, code, this.cases[0].start, this.end - 1, options);\n        }\n    }\n}\n\nclass TaggedTemplateExpression extends CallExpressionBase {\n    bind() {\n        super.bind();\n        if (this.tag.type === Identifier$1) {\n            const name = this.tag.name;\n            const variable = this.scope.findVariable(name);\n            if (variable.isNamespace) {\n                this.context.warn(errorCannotCallNamespace(name), this.start);\n            }\n        }\n    }\n    hasEffects(context) {\n        try {\n            for (const argument of this.quasi.expressions) {\n                if (argument.hasEffects(context))\n                    return true;\n            }\n            return (this.tag.hasEffects(context) ||\n                this.tag.hasEffectsOnInteractionAtPath(EMPTY_PATH, this.interaction, context));\n        }\n        finally {\n            if (!this.deoptimized)\n                this.applyDeoptimizations();\n        }\n    }\n    include(context, includeChildrenRecursively) {\n        if (!this.deoptimized)\n            this.applyDeoptimizations();\n        if (includeChildrenRecursively) {\n            super.include(context, includeChildrenRecursively);\n        }\n        else {\n            this.included = true;\n            this.tag.include(context, includeChildrenRecursively);\n            this.quasi.include(context, includeChildrenRecursively);\n        }\n        this.tag.includeCallArguments(context, this.interaction.args);\n        const [returnExpression] = this.getReturnExpression();\n        if (!returnExpression.included) {\n            returnExpression.include(context, false);\n        }\n    }\n    initialise() {\n        this.interaction = {\n            args: [UNKNOWN_EXPRESSION, ...this.quasi.expressions],\n            thisArg: this.tag instanceof MemberExpression && !this.tag.variable ? this.tag.object : null,\n            type: INTERACTION_CALLED,\n            withNew: false\n        };\n    }\n    render(code, options) {\n        this.tag.render(code, options, { isCalleeOfRenderedParent: true });\n        this.quasi.render(code, options);\n    }\n    applyDeoptimizations() {\n        this.deoptimized = true;\n        if (this.interaction.thisArg) {\n            this.tag.deoptimizeThisOnInteractionAtPath(this.interaction, EMPTY_PATH, SHARED_RECURSION_TRACKER);\n        }\n        for (const argument of this.quasi.expressions) {\n            // This will make sure all properties of parameters behave as \"unknown\"\n            argument.deoptimizePath(UNKNOWN_PATH);\n        }\n        this.context.requestTreeshakingPass();\n    }\n    getReturnExpression(recursionTracker = SHARED_RECURSION_TRACKER) {\n        if (this.returnExpression === null) {\n            this.returnExpression = UNKNOWN_RETURN_EXPRESSION;\n            return (this.returnExpression = this.tag.getReturnExpressionWhenCalledAtPath(EMPTY_PATH, this.interaction, recursionTracker, this));\n        }\n        return this.returnExpression;\n    }\n}\n\nclass TemplateElement extends NodeBase {\n    // Do not try to bind value\n    bind() { }\n    hasEffects() {\n        return false;\n    }\n    include() {\n        this.included = true;\n    }\n    parseNode(esTreeNode) {\n        this.value = esTreeNode.value;\n        super.parseNode(esTreeNode);\n    }\n    render() { }\n}\n\nclass TemplateLiteral extends NodeBase {\n    deoptimizeThisOnInteractionAtPath() { }\n    getLiteralValueAtPath(path) {\n        if (path.length > 0 || this.quasis.length !== 1) {\n            return UnknownValue;\n        }\n        return this.quasis[0].value.cooked;\n    }\n    getReturnExpressionWhenCalledAtPath(path) {\n        if (path.length !== 1) {\n            return UNKNOWN_RETURN_EXPRESSION;\n        }\n        return getMemberReturnExpressionWhenCalled(literalStringMembers, path[0]);\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        if (interaction.type === INTERACTION_ACCESSED) {\n            return path.length > 1;\n        }\n        if (interaction.type === INTERACTION_CALLED && path.length === 1) {\n            return hasMemberEffectWhenCalled(literalStringMembers, path[0], interaction, context);\n        }\n        return true;\n    }\n    render(code, options) {\n        code.indentExclusionRanges.push([this.start, this.end]);\n        super.render(code, options);\n    }\n}\n\nclass UndefinedVariable extends Variable {\n    constructor() {\n        super('undefined');\n    }\n    getLiteralValueAtPath() {\n        return undefined;\n    }\n}\n\nclass ExportDefaultVariable extends LocalVariable {\n    constructor(name, exportDefaultDeclaration, context) {\n        super(name, exportDefaultDeclaration, exportDefaultDeclaration.declaration, context);\n        this.hasId = false;\n        this.originalId = null;\n        this.originalVariable = null;\n        const declaration = exportDefaultDeclaration.declaration;\n        if ((declaration instanceof FunctionDeclaration || declaration instanceof ClassDeclaration) &&\n            declaration.id) {\n            this.hasId = true;\n            this.originalId = declaration.id;\n        }\n        else if (declaration instanceof Identifier) {\n            this.originalId = declaration;\n        }\n    }\n    addReference(identifier) {\n        if (!this.hasId) {\n            this.name = identifier.name;\n        }\n    }\n    forbidName(name) {\n        const original = this.getOriginalVariable();\n        if (original === this) {\n            super.forbidName(name);\n        }\n        else {\n            original.forbidName(name);\n        }\n    }\n    getAssignedVariableName() {\n        return (this.originalId && this.originalId.name) || null;\n    }\n    getBaseVariableName() {\n        const original = this.getOriginalVariable();\n        return original === this ? super.getBaseVariableName() : original.getBaseVariableName();\n    }\n    getDirectOriginalVariable() {\n        return this.originalId &&\n            (this.hasId ||\n                !(this.originalId.isPossibleTDZ() ||\n                    this.originalId.variable.isReassigned ||\n                    this.originalId.variable instanceof UndefinedVariable ||\n                    // this avoids a circular dependency\n                    'syntheticNamespace' in this.originalId.variable))\n            ? this.originalId.variable\n            : null;\n    }\n    getName(getPropertyAccess) {\n        const original = this.getOriginalVariable();\n        return original === this\n            ? super.getName(getPropertyAccess)\n            : original.getName(getPropertyAccess);\n    }\n    getOriginalVariable() {\n        if (this.originalVariable)\n            return this.originalVariable;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let original = this;\n        let currentVariable;\n        const checkedVariables = new Set();\n        do {\n            checkedVariables.add(original);\n            currentVariable = original;\n            original = currentVariable.getDirectOriginalVariable();\n        } while (original instanceof ExportDefaultVariable && !checkedVariables.has(original));\n        return (this.originalVariable = original || currentVariable);\n    }\n}\n\nclass ModuleScope extends ChildScope {\n    constructor(parent, context) {\n        super(parent);\n        this.context = context;\n        this.variables.set('this', new LocalVariable('this', null, UNDEFINED_EXPRESSION, context));\n    }\n    addExportDefaultDeclaration(name, exportDefaultDeclaration, context) {\n        const variable = new ExportDefaultVariable(name, exportDefaultDeclaration, context);\n        this.variables.set('default', variable);\n        return variable;\n    }\n    addNamespaceMemberAccess() { }\n    deconflict(format, exportNamesByVariable, accessedGlobalsByScope) {\n        // all module level variables are already deconflicted when deconflicting the chunk\n        for (const scope of this.children)\n            scope.deconflict(format, exportNamesByVariable, accessedGlobalsByScope);\n    }\n    findLexicalBoundary() {\n        return this;\n    }\n    findVariable(name) {\n        const knownVariable = this.variables.get(name) || this.accessedOutsideVariables.get(name);\n        if (knownVariable) {\n            return knownVariable;\n        }\n        const variable = this.context.traceVariable(name) || this.parent.findVariable(name);\n        if (variable instanceof GlobalVariable) {\n            this.accessedOutsideVariables.set(name, variable);\n        }\n        return variable;\n    }\n}\n\nclass ThisExpression extends NodeBase {\n    bind() {\n        this.variable = this.scope.findVariable('this');\n    }\n    deoptimizePath(path) {\n        this.variable.deoptimizePath(path);\n    }\n    deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n        // We rewrite the parameter so that a ThisVariable can detect self-mutations\n        this.variable.deoptimizeThisOnInteractionAtPath(interaction.thisArg === this ? { ...interaction, thisArg: this.variable } : interaction, path, recursionTracker);\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        if (path.length === 0) {\n            return interaction.type !== INTERACTION_ACCESSED;\n        }\n        return this.variable.hasEffectsOnInteractionAtPath(path, interaction, context);\n    }\n    include() {\n        if (!this.included) {\n            this.included = true;\n            this.context.includeVariableInModule(this.variable);\n        }\n    }\n    initialise() {\n        this.alias =\n            this.scope.findLexicalBoundary() instanceof ModuleScope ? this.context.moduleContext : null;\n        if (this.alias === 'undefined') {\n            this.context.warn(errorThisIsUndefined(), this.start);\n        }\n    }\n    render(code) {\n        if (this.alias !== null) {\n            code.overwrite(this.start, this.end, this.alias, {\n                contentOnly: false,\n                storeName: true\n            });\n        }\n    }\n}\n\nclass ThrowStatement extends NodeBase {\n    hasEffects() {\n        return true;\n    }\n    include(context, includeChildrenRecursively) {\n        this.included = true;\n        this.argument.include(context, includeChildrenRecursively);\n        context.brokenFlow = BROKEN_FLOW_ERROR_RETURN_LABEL;\n    }\n    render(code, options) {\n        this.argument.render(code, options, { preventASI: true });\n        if (this.argument.start === this.start + 5 /* 'throw'.length */) {\n            code.prependLeft(this.start + 5, ' ');\n        }\n    }\n}\n\nclass TryStatement extends NodeBase {\n    constructor() {\n        super(...arguments);\n        this.directlyIncluded = false;\n        this.includedLabelsAfterBlock = null;\n    }\n    hasEffects(context) {\n        return ((this.context.options.treeshake.tryCatchDeoptimization\n            ? this.block.body.length > 0\n            : this.block.hasEffects(context)) || !!this.finalizer?.hasEffects(context));\n    }\n    include(context, includeChildrenRecursively) {\n        const tryCatchDeoptimization = this.context.options.treeshake\n            ?.tryCatchDeoptimization;\n        const { brokenFlow, includedLabels } = context;\n        if (!this.directlyIncluded || !tryCatchDeoptimization) {\n            this.included = true;\n            this.directlyIncluded = true;\n            this.block.include(context, tryCatchDeoptimization ? INCLUDE_PARAMETERS : includeChildrenRecursively);\n            if (includedLabels.size > 0) {\n                this.includedLabelsAfterBlock = [...includedLabels];\n            }\n            context.brokenFlow = brokenFlow;\n        }\n        else if (this.includedLabelsAfterBlock) {\n            for (const label of this.includedLabelsAfterBlock) {\n                includedLabels.add(label);\n            }\n        }\n        if (this.handler !== null) {\n            this.handler.include(context, includeChildrenRecursively);\n            context.brokenFlow = brokenFlow;\n        }\n        this.finalizer?.include(context, includeChildrenRecursively);\n    }\n}\n\nconst unaryOperators = {\n    '!': value => !value,\n    '+': value => +value,\n    '-': value => -value,\n    delete: () => UnknownValue,\n    typeof: value => typeof value,\n    void: () => undefined,\n    '~': value => ~value\n};\nclass UnaryExpression extends NodeBase {\n    getLiteralValueAtPath(path, recursionTracker, origin) {\n        if (path.length > 0)\n            return UnknownValue;\n        const argumentValue = this.argument.getLiteralValueAtPath(EMPTY_PATH, recursionTracker, origin);\n        if (typeof argumentValue === 'symbol')\n            return UnknownValue;\n        return unaryOperators[this.operator](argumentValue);\n    }\n    hasEffects(context) {\n        if (!this.deoptimized)\n            this.applyDeoptimizations();\n        if (this.operator === 'typeof' && this.argument instanceof Identifier)\n            return false;\n        return (this.argument.hasEffects(context) ||\n            (this.operator === 'delete' &&\n                this.argument.hasEffectsOnInteractionAtPath(EMPTY_PATH, NODE_INTERACTION_UNKNOWN_ASSIGNMENT, context)));\n    }\n    hasEffectsOnInteractionAtPath(path, { type }) {\n        return type !== INTERACTION_ACCESSED || path.length > (this.operator === 'void' ? 0 : 1);\n    }\n    applyDeoptimizations() {\n        this.deoptimized = true;\n        if (this.operator === 'delete') {\n            this.argument.deoptimizePath(EMPTY_PATH);\n            this.context.requestTreeshakingPass();\n        }\n    }\n}\n\nclass UnknownNode extends NodeBase {\n    hasEffects() {\n        return true;\n    }\n    include(context) {\n        super.include(context, true);\n    }\n}\n\nclass UpdateExpression extends NodeBase {\n    hasEffects(context) {\n        if (!this.deoptimized)\n            this.applyDeoptimizations();\n        return this.argument.hasEffectsAsAssignmentTarget(context, true);\n    }\n    hasEffectsOnInteractionAtPath(path, { type }) {\n        return path.length > 1 || type !== INTERACTION_ACCESSED;\n    }\n    include(context, includeChildrenRecursively) {\n        if (!this.deoptimized)\n            this.applyDeoptimizations();\n        this.included = true;\n        this.argument.includeAsAssignmentTarget(context, includeChildrenRecursively, true);\n    }\n    initialise() {\n        this.argument.setAssignedValue(UNKNOWN_EXPRESSION);\n    }\n    render(code, options) {\n        const { exportNamesByVariable, format, snippets: { _ } } = options;\n        this.argument.render(code, options);\n        if (format === 'system') {\n            const variable = this.argument.variable;\n            const exportNames = exportNamesByVariable.get(variable);\n            if (exportNames) {\n                if (this.prefix) {\n                    if (exportNames.length === 1) {\n                        renderSystemExportExpression(variable, this.start, this.end, code, options);\n                    }\n                    else {\n                        renderSystemExportSequenceAfterExpression(variable, this.start, this.end, this.parent.type !== ExpressionStatement$1, code, options);\n                    }\n                }\n                else {\n                    const operator = this.operator[0];\n                    renderSystemExportSequenceBeforeExpression(variable, this.start, this.end, this.parent.type !== ExpressionStatement$1, code, options, `${_}${operator}${_}1`);\n                }\n            }\n        }\n    }\n    applyDeoptimizations() {\n        this.deoptimized = true;\n        this.argument.deoptimizePath(EMPTY_PATH);\n        if (this.argument instanceof Identifier) {\n            const variable = this.scope.findVariable(this.argument.name);\n            variable.isReassigned = true;\n        }\n        this.context.requestTreeshakingPass();\n    }\n}\n\nfunction isReassignedExportsMember(variable, exportNamesByVariable) {\n    return (variable.renderBaseName !== null && exportNamesByVariable.has(variable) && variable.isReassigned);\n}\n\nfunction areAllDeclarationsIncludedAndNotExported(declarations, exportNamesByVariable) {\n    for (const declarator of declarations) {\n        if (!declarator.id.included)\n            return false;\n        if (declarator.id.type === Identifier$1) {\n            if (exportNamesByVariable.has(declarator.id.variable))\n                return false;\n        }\n        else {\n            const exportedVariables = [];\n            declarator.id.addExportedVariables(exportedVariables, exportNamesByVariable);\n            if (exportedVariables.length > 0)\n                return false;\n        }\n    }\n    return true;\n}\nclass VariableDeclaration extends NodeBase {\n    deoptimizePath() {\n        for (const declarator of this.declarations) {\n            declarator.deoptimizePath(EMPTY_PATH);\n        }\n    }\n    hasEffectsOnInteractionAtPath() {\n        return false;\n    }\n    include(context, includeChildrenRecursively, { asSingleStatement } = BLANK) {\n        this.included = true;\n        for (const declarator of this.declarations) {\n            if (includeChildrenRecursively || declarator.shouldBeIncluded(context))\n                declarator.include(context, includeChildrenRecursively);\n            const { id, init } = declarator;\n            if (asSingleStatement) {\n                id.include(context, includeChildrenRecursively);\n            }\n            if (init &&\n                id.included &&\n                !init.included &&\n                (id instanceof ObjectPattern || id instanceof ArrayPattern)) {\n                init.include(context, includeChildrenRecursively);\n            }\n        }\n    }\n    initialise() {\n        for (const declarator of this.declarations) {\n            declarator.declareDeclarator(this.kind);\n        }\n    }\n    render(code, options, nodeRenderOptions = BLANK) {\n        if (areAllDeclarationsIncludedAndNotExported(this.declarations, options.exportNamesByVariable)) {\n            for (const declarator of this.declarations) {\n                declarator.render(code, options);\n            }\n            if (!nodeRenderOptions.isNoStatement &&\n                code.original.charCodeAt(this.end - 1) !== 59 /*\";\"*/) {\n                code.appendLeft(this.end, ';');\n            }\n        }\n        else {\n            this.renderReplacedDeclarations(code, options);\n        }\n    }\n    applyDeoptimizations() { }\n    renderDeclarationEnd(code, separatorString, lastSeparatorPos, actualContentEnd, renderedContentEnd, systemPatternExports, options) {\n        if (code.original.charCodeAt(this.end - 1) === 59 /*\";\"*/) {\n            code.remove(this.end - 1, this.end);\n        }\n        separatorString += ';';\n        if (lastSeparatorPos === null) {\n            code.appendLeft(renderedContentEnd, separatorString);\n        }\n        else {\n            if (code.original.charCodeAt(actualContentEnd - 1) === 10 /*\"\\n\"*/ &&\n                (code.original.charCodeAt(this.end) === 10 /*\"\\n\"*/ ||\n                    code.original.charCodeAt(this.end) === 13) /*\"\\r\"*/) {\n                actualContentEnd--;\n                if (code.original.charCodeAt(actualContentEnd) === 13 /*\"\\r\"*/) {\n                    actualContentEnd--;\n                }\n            }\n            if (actualContentEnd === lastSeparatorPos + 1) {\n                code.overwrite(lastSeparatorPos, renderedContentEnd, separatorString);\n            }\n            else {\n                code.overwrite(lastSeparatorPos, lastSeparatorPos + 1, separatorString);\n                code.remove(actualContentEnd, renderedContentEnd);\n            }\n        }\n        if (systemPatternExports.length > 0) {\n            code.appendLeft(renderedContentEnd, ` ${getSystemExportStatement(systemPatternExports, options)};`);\n        }\n    }\n    renderReplacedDeclarations(code, options) {\n        const separatedNodes = getCommaSeparatedNodesWithBoundaries(this.declarations, code, this.start + this.kind.length, this.end - (code.original.charCodeAt(this.end - 1) === 59 /*\";\"*/ ? 1 : 0));\n        let actualContentEnd, renderedContentEnd;\n        renderedContentEnd = findNonWhiteSpace(code.original, this.start + this.kind.length);\n        let lastSeparatorPos = renderedContentEnd - 1;\n        code.remove(this.start, lastSeparatorPos);\n        let isInDeclaration = false;\n        let hasRenderedContent = false;\n        let separatorString = '', leadingString, nextSeparatorString;\n        const aggregatedSystemExports = [];\n        const singleSystemExport = gatherSystemExportsAndGetSingleExport(separatedNodes, options, aggregatedSystemExports);\n        for (const { node, start, separator, contentEnd, end } of separatedNodes) {\n            if (!node.included) {\n                code.remove(start, end);\n                continue;\n            }\n            node.render(code, options);\n            leadingString = '';\n            nextSeparatorString = '';\n            if (!node.id.included ||\n                (node.id instanceof Identifier &&\n                    isReassignedExportsMember(node.id.variable, options.exportNamesByVariable))) {\n                if (hasRenderedContent) {\n                    separatorString += ';';\n                }\n                isInDeclaration = false;\n            }\n            else {\n                if (singleSystemExport && singleSystemExport === node.id.variable) {\n                    const operatorPos = findFirstOccurrenceOutsideComment(code.original, '=', node.id.end);\n                    renderSystemExportExpression(singleSystemExport, findNonWhiteSpace(code.original, operatorPos + 1), separator === null ? contentEnd : separator, code, options);\n                }\n                if (isInDeclaration) {\n                    separatorString += ',';\n                }\n                else {\n                    if (hasRenderedContent) {\n                        separatorString += ';';\n                    }\n                    leadingString += `${this.kind} `;\n                    isInDeclaration = true;\n                }\n            }\n            if (renderedContentEnd === lastSeparatorPos + 1) {\n                code.overwrite(lastSeparatorPos, renderedContentEnd, separatorString + leadingString);\n            }\n            else {\n                code.overwrite(lastSeparatorPos, lastSeparatorPos + 1, separatorString);\n                code.appendLeft(renderedContentEnd, leadingString);\n            }\n            actualContentEnd = contentEnd;\n            renderedContentEnd = end;\n            hasRenderedContent = true;\n            lastSeparatorPos = separator;\n            separatorString = nextSeparatorString;\n        }\n        this.renderDeclarationEnd(code, separatorString, lastSeparatorPos, actualContentEnd, renderedContentEnd, aggregatedSystemExports, options);\n    }\n}\nfunction gatherSystemExportsAndGetSingleExport(separatedNodes, options, aggregatedSystemExports) {\n    let singleSystemExport = null;\n    if (options.format === 'system') {\n        for (const { node } of separatedNodes) {\n            if (node.id instanceof Identifier &&\n                node.init &&\n                aggregatedSystemExports.length === 0 &&\n                options.exportNamesByVariable.get(node.id.variable)?.length === 1) {\n                singleSystemExport = node.id.variable;\n                aggregatedSystemExports.push(singleSystemExport);\n            }\n            else {\n                node.id.addExportedVariables(aggregatedSystemExports, options.exportNamesByVariable);\n            }\n        }\n        if (aggregatedSystemExports.length > 1) {\n            singleSystemExport = null;\n        }\n        else if (singleSystemExport) {\n            aggregatedSystemExports.length = 0;\n        }\n    }\n    return singleSystemExport;\n}\n\nclass VariableDeclarator extends NodeBase {\n    declareDeclarator(kind) {\n        this.id.declare(kind, this.init || UNDEFINED_EXPRESSION);\n    }\n    deoptimizePath(path) {\n        this.id.deoptimizePath(path);\n    }\n    hasEffects(context) {\n        if (!this.deoptimized)\n            this.applyDeoptimizations();\n        const initEffect = this.init?.hasEffects(context);\n        this.id.markDeclarationReached();\n        return initEffect || this.id.hasEffects(context);\n    }\n    include(context, includeChildrenRecursively) {\n        const { deoptimized, id, init } = this;\n        if (!deoptimized)\n            this.applyDeoptimizations();\n        this.included = true;\n        init?.include(context, includeChildrenRecursively);\n        id.markDeclarationReached();\n        if (includeChildrenRecursively || id.shouldBeIncluded(context)) {\n            id.include(context, includeChildrenRecursively);\n        }\n    }\n    render(code, options) {\n        const { exportNamesByVariable, snippets: { _, getPropertyAccess } } = options;\n        const { end, id, init, start } = this;\n        const renderId = id.included;\n        if (renderId) {\n            id.render(code, options);\n        }\n        else {\n            const operatorPos = findFirstOccurrenceOutsideComment(code.original, '=', id.end);\n            code.remove(start, findNonWhiteSpace(code.original, operatorPos + 1));\n        }\n        if (init) {\n            if (id instanceof Identifier && init instanceof ClassExpression && !init.id) {\n                const renderedVariable = id.variable.getName(getPropertyAccess);\n                if (renderedVariable !== id.name) {\n                    code.appendLeft(init.start + 5, ` ${id.name}`);\n                }\n            }\n            init.render(code, options, renderId ? BLANK : { renderedSurroundingElement: ExpressionStatement$1 });\n        }\n        else if (id instanceof Identifier &&\n            isReassignedExportsMember(id.variable, exportNamesByVariable)) {\n            code.appendLeft(end, `${_}=${_}void 0`);\n        }\n    }\n    applyDeoptimizations() {\n        this.deoptimized = true;\n        const { id, init } = this;\n        if (init && id instanceof Identifier && init instanceof ClassExpression && !init.id) {\n            const { name, variable } = id;\n            for (const accessedVariable of init.scope.accessedOutsideVariables.values()) {\n                if (accessedVariable !== variable) {\n                    accessedVariable.forbidName(name);\n                }\n            }\n        }\n    }\n}\n\nclass WhileStatement extends NodeBase {\n    hasEffects(context) {\n        if (this.test.hasEffects(context))\n            return true;\n        const { brokenFlow, ignore } = context;\n        const { breaks, continues } = ignore;\n        ignore.breaks = true;\n        ignore.continues = true;\n        if (this.body.hasEffects(context))\n            return true;\n        ignore.breaks = breaks;\n        ignore.continues = continues;\n        context.brokenFlow = brokenFlow;\n        return false;\n    }\n    include(context, includeChildrenRecursively) {\n        this.included = true;\n        this.test.include(context, includeChildrenRecursively);\n        const { brokenFlow } = context;\n        this.body.include(context, includeChildrenRecursively, { asSingleStatement: true });\n        context.brokenFlow = brokenFlow;\n    }\n}\n\nclass YieldExpression extends NodeBase {\n    hasEffects(context) {\n        if (!this.deoptimized)\n            this.applyDeoptimizations();\n        return !(context.ignore.returnYield && !this.argument?.hasEffects(context));\n    }\n    render(code, options) {\n        if (this.argument) {\n            this.argument.render(code, options, { preventASI: true });\n            if (this.argument.start === this.start + 5 /* 'yield'.length */) {\n                code.prependLeft(this.start + 5, ' ');\n            }\n        }\n    }\n}\n\nconst nodeConstructors = {\n    ArrayExpression,\n    ArrayPattern,\n    ArrowFunctionExpression,\n    AssignmentExpression,\n    AssignmentPattern,\n    AwaitExpression,\n    BinaryExpression,\n    BlockStatement,\n    BreakStatement,\n    CallExpression,\n    CatchClause,\n    ChainExpression,\n    ClassBody,\n    ClassDeclaration,\n    ClassExpression,\n    ConditionalExpression,\n    ContinueStatement,\n    DoWhileStatement,\n    EmptyStatement,\n    ExportAllDeclaration,\n    ExportDefaultDeclaration,\n    ExportNamedDeclaration,\n    ExportSpecifier,\n    ExpressionStatement,\n    ForInStatement,\n    ForOfStatement,\n    ForStatement,\n    FunctionDeclaration,\n    FunctionExpression,\n    Identifier,\n    IfStatement,\n    ImportAttribute,\n    ImportDeclaration,\n    ImportDefaultSpecifier,\n    ImportExpression,\n    ImportNamespaceSpecifier,\n    ImportSpecifier,\n    LabeledStatement,\n    Literal,\n    LogicalExpression,\n    MemberExpression,\n    MetaProperty,\n    MethodDefinition,\n    NewExpression,\n    ObjectExpression,\n    ObjectPattern,\n    PrivateIdentifier,\n    Program,\n    Property,\n    PropertyDefinition,\n    RestElement,\n    ReturnStatement,\n    SequenceExpression,\n    SpreadElement,\n    StaticBlock,\n    Super,\n    SwitchCase,\n    SwitchStatement,\n    TaggedTemplateExpression,\n    TemplateElement,\n    TemplateLiteral,\n    ThisExpression,\n    ThrowStatement,\n    TryStatement,\n    UnaryExpression,\n    UnknownNode,\n    UpdateExpression,\n    VariableDeclaration,\n    VariableDeclarator,\n    WhileStatement,\n    YieldExpression\n};\n\nconst MISSING_EXPORT_SHIM_VARIABLE = '_missingExportShim';\n\nclass ExportShimVariable extends Variable {\n    constructor(module) {\n        super(MISSING_EXPORT_SHIM_VARIABLE);\n        this.module = module;\n    }\n    include() {\n        super.include();\n        this.module.needsExportShim = true;\n    }\n}\n\nclass NamespaceVariable extends Variable {\n    constructor(context) {\n        super(context.getModuleName());\n        this.memberVariables = null;\n        this.mergedNamespaces = [];\n        this.referencedEarly = false;\n        this.references = [];\n        this.context = context;\n        this.module = context.module;\n    }\n    addReference(identifier) {\n        this.references.push(identifier);\n        this.name = identifier.name;\n    }\n    deoptimizePath(path) {\n        if (path.length > 1) {\n            const key = path[0];\n            if (typeof key === 'string') {\n                this.getMemberVariables()[key]?.deoptimizePath(path.slice(1));\n            }\n        }\n    }\n    deoptimizeThisOnInteractionAtPath(interaction, path, recursionTracker) {\n        if (path.length > 1 || (path.length === 1 && interaction.type === INTERACTION_CALLED)) {\n            const key = path[0];\n            if (typeof key === 'string') {\n                this.getMemberVariables()[key]?.deoptimizeThisOnInteractionAtPath(interaction, path.slice(1), recursionTracker);\n            }\n            else {\n                interaction.thisArg.deoptimizePath(UNKNOWN_PATH);\n            }\n        }\n    }\n    getLiteralValueAtPath(path) {\n        if (path[0] === SymbolToStringTag) {\n            return 'Module';\n        }\n        return UnknownValue;\n    }\n    getMemberVariables() {\n        if (this.memberVariables) {\n            return this.memberVariables;\n        }\n        const memberVariables = Object.create(null);\n        const sortedExports = [...this.context.getExports(), ...this.context.getReexports()].sort();\n        for (const name of sortedExports) {\n            if (name[0] !== '*' && name !== this.module.info.syntheticNamedExports) {\n                const exportedVariable = this.context.traceExport(name);\n                if (exportedVariable) {\n                    memberVariables[name] = exportedVariable;\n                }\n            }\n        }\n        return (this.memberVariables = memberVariables);\n    }\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\n        const { type } = interaction;\n        if (path.length === 0) {\n            // This can only be a call anyway\n            return true;\n        }\n        if (path.length === 1 && type !== INTERACTION_CALLED) {\n            return type === INTERACTION_ASSIGNED;\n        }\n        const key = path[0];\n        if (typeof key !== 'string') {\n            return true;\n        }\n        const memberVariable = this.getMemberVariables()[key];\n        return (!memberVariable ||\n            memberVariable.hasEffectsOnInteractionAtPath(path.slice(1), interaction, context));\n    }\n    include() {\n        this.included = true;\n        this.context.includeAllExports();\n    }\n    prepare(accessedGlobalsByScope) {\n        if (this.mergedNamespaces.length > 0) {\n            this.module.scope.addAccessedGlobals([MERGE_NAMESPACES_VARIABLE], accessedGlobalsByScope);\n        }\n    }\n    renderBlock(options) {\n        const { exportNamesByVariable, format, freeze, indent: t, namespaceToStringTag, snippets: { _, cnst, getObject, getPropertyAccess, n, s } } = options;\n        const memberVariables = this.getMemberVariables();\n        const members = Object.entries(memberVariables).map(([name, original]) => {\n            if (this.referencedEarly || original.isReassigned) {\n                return [\n                    null,\n                    `get ${name}${_}()${_}{${_}return ${original.getName(getPropertyAccess)}${s}${_}}`\n                ];\n            }\n            return [name, original.getName(getPropertyAccess)];\n        });\n        members.unshift([null, `__proto__:${_}null`]);\n        let output = getObject(members, { lineBreakIndent: { base: '', t } });\n        if (this.mergedNamespaces.length > 0) {\n            const assignmentArguments = this.mergedNamespaces.map(variable => variable.getName(getPropertyAccess));\n            output = `/*#__PURE__*/${MERGE_NAMESPACES_VARIABLE}(${output},${_}[${assignmentArguments.join(`,${_}`)}])`;\n        }\n        else {\n            // The helper to merge namespaces will also take care of freezing and toStringTag\n            if (namespaceToStringTag) {\n                output = `/*#__PURE__*/Object.defineProperty(${output},${_}Symbol.toStringTag,${_}${getToStringTagValue(getObject)})`;\n            }\n            if (freeze) {\n                output = `/*#__PURE__*/Object.freeze(${output})`;\n            }\n        }\n        const name = this.getName(getPropertyAccess);\n        output = `${cnst} ${name}${_}=${_}${output};`;\n        if (format === 'system' && exportNamesByVariable.has(this)) {\n            output += `${n}${getSystemExportStatement([this], options)};`;\n        }\n        return output;\n    }\n    renderFirst() {\n        return this.referencedEarly;\n    }\n    setMergedNamespaces(mergedNamespaces) {\n        this.mergedNamespaces = mergedNamespaces;\n        const moduleExecIndex = this.context.getModuleExecIndex();\n        for (const identifier of this.references) {\n            if (identifier.context.getModuleExecIndex() <= moduleExecIndex) {\n                this.referencedEarly = true;\n                break;\n            }\n        }\n    }\n}\nNamespaceVariable.prototype.isNamespace = true;\n\nclass SyntheticNamedExportVariable extends Variable {\n    constructor(context, name, syntheticNamespace) {\n        super(name);\n        this.baseVariable = null;\n        this.context = context;\n        this.module = context.module;\n        this.syntheticNamespace = syntheticNamespace;\n    }\n    getBaseVariable() {\n        if (this.baseVariable)\n            return this.baseVariable;\n        let baseVariable = this.syntheticNamespace;\n        while (baseVariable instanceof ExportDefaultVariable ||\n            baseVariable instanceof SyntheticNamedExportVariable) {\n            if (baseVariable instanceof ExportDefaultVariable) {\n                const original = baseVariable.getOriginalVariable();\n                if (original === baseVariable)\n                    break;\n                baseVariable = original;\n            }\n            if (baseVariable instanceof SyntheticNamedExportVariable) {\n                baseVariable = baseVariable.syntheticNamespace;\n            }\n        }\n        return (this.baseVariable = baseVariable);\n    }\n    getBaseVariableName() {\n        return this.syntheticNamespace.getBaseVariableName();\n    }\n    getName(getPropertyAccess) {\n        return `${this.syntheticNamespace.getName(getPropertyAccess)}${getPropertyAccess(this.name)}`;\n    }\n    include() {\n        this.included = true;\n        this.context.includeVariableInModule(this.syntheticNamespace);\n    }\n    setRenderNames(baseName, name) {\n        super.setRenderNames(baseName, name);\n    }\n}\n\nvar BuildPhase;\n(function (BuildPhase) {\n    BuildPhase[BuildPhase[\"LOAD_AND_PARSE\"] = 0] = \"LOAD_AND_PARSE\";\n    BuildPhase[BuildPhase[\"ANALYSE\"] = 1] = \"ANALYSE\";\n    BuildPhase[BuildPhase[\"GENERATE\"] = 2] = \"GENERATE\";\n})(BuildPhase || (BuildPhase = {}));\n\nfunction getId(m) {\n    return m.id;\n}\n\nfunction getAssertionsFromImportExpression(node) {\n    const assertProperty = node.arguments?.[0]?.properties.find((property) => getPropertyKey(property) === 'assert')?.value;\n    if (!assertProperty) {\n        return EMPTY_OBJECT;\n    }\n    const assertFields = assertProperty.properties\n        .map(property => {\n        const key = getPropertyKey(property);\n        if (typeof key === 'string' &&\n            typeof property.value.value === 'string') {\n            return [key, property.value.value];\n        }\n        return null;\n    })\n        .filter((property) => !!property);\n    if (assertFields.length > 0) {\n        return Object.fromEntries(assertFields);\n    }\n    return EMPTY_OBJECT;\n}\nconst getPropertyKey = (property) => {\n    const key = property.key;\n    return key && (key.name || key.value);\n};\nfunction getAssertionsFromImportExportDeclaration(assertions) {\n    return assertions?.length\n        ? Object.fromEntries(assertions.map(assertion => [getPropertyKey(assertion), assertion.value.value]))\n        : EMPTY_OBJECT;\n}\nfunction doAssertionsDiffer(assertionA, assertionB) {\n    const keysA = Object.keys(assertionA);\n    return (keysA.length !== Object.keys(assertionB).length ||\n        keysA.some(key => assertionA[key] !== assertionB[key]));\n}\n\nconst NOOP = () => { };\nlet timers = new Map();\nfunction getPersistedLabel(label, level) {\n    switch (level) {\n        case 1: {\n            return `# ${label}`;\n        }\n        case 2: {\n            return `## ${label}`;\n        }\n        case 3: {\n            return label;\n        }\n        default: {\n            return `${'  '.repeat(level - 4)}- ${label}`;\n        }\n    }\n}\nfunction timeStartImpl(label, level = 3) {\n    label = getPersistedLabel(label, level);\n    const startMemory = process$1.memoryUsage().heapUsed;\n    const startTime = performance.now();\n    const timer = timers.get(label);\n    if (timer === undefined) {\n        timers.set(label, {\n            memory: 0,\n            startMemory,\n            startTime,\n            time: 0,\n            totalMemory: 0\n        });\n    }\n    else {\n        timer.startMemory = startMemory;\n        timer.startTime = startTime;\n    }\n}\nfunction timeEndImpl(label, level = 3) {\n    label = getPersistedLabel(label, level);\n    const timer = timers.get(label);\n    if (timer !== undefined) {\n        const currentMemory = process$1.memoryUsage().heapUsed;\n        timer.memory += currentMemory - timer.startMemory;\n        timer.time += performance.now() - timer.startTime;\n        timer.totalMemory = Math.max(timer.totalMemory, currentMemory);\n    }\n}\nfunction getTimings() {\n    const newTimings = {};\n    for (const [label, { memory, time, totalMemory }] of timers) {\n        newTimings[label] = [time, memory, totalMemory];\n    }\n    return newTimings;\n}\nlet timeStart = NOOP;\nlet timeEnd = NOOP;\nconst TIMED_PLUGIN_HOOKS = [\n    'augmentChunkHash',\n    'buildEnd',\n    'buildStart',\n    'generateBundle',\n    'load',\n    'moduleParsed',\n    'options',\n    'outputOptions',\n    'renderChunk',\n    'renderDynamicImport',\n    'renderStart',\n    'resolveDynamicImport',\n    'resolveFileUrl',\n    'resolveId',\n    'resolveImportMeta',\n    'shouldTransformCachedModule',\n    'transform',\n    'writeBundle'\n];\nfunction getPluginWithTimers(plugin, index) {\n    for (const hook of TIMED_PLUGIN_HOOKS) {\n        if (hook in plugin) {\n            let timerLabel = `plugin ${index}`;\n            if (plugin.name) {\n                timerLabel += ` (${plugin.name})`;\n            }\n            timerLabel += ` - ${hook}`;\n            const handler = function (...parameters) {\n                timeStart(timerLabel, 4);\n                const result = hookFunction.apply(this, parameters);\n                timeEnd(timerLabel, 4);\n                return result;\n            };\n            let hookFunction;\n            if (typeof plugin[hook].handler === 'function') {\n                hookFunction = plugin[hook].handler;\n                plugin[hook].handler = handler;\n            }\n            else {\n                hookFunction = plugin[hook];\n                plugin[hook] = handler;\n            }\n        }\n    }\n    return plugin;\n}\nfunction initialiseTimers(inputOptions) {\n    if (inputOptions.perf) {\n        timers = new Map();\n        timeStart = timeStartImpl;\n        timeEnd = timeEndImpl;\n        inputOptions.plugins = inputOptions.plugins.map(getPluginWithTimers);\n    }\n    else {\n        timeStart = NOOP;\n        timeEnd = NOOP;\n    }\n}\n\nfunction markModuleAndImpureDependenciesAsExecuted(baseModule) {\n    baseModule.isExecuted = true;\n    const modules = [baseModule];\n    const visitedModules = new Set();\n    for (const module of modules) {\n        for (const dependency of [...module.dependencies, ...module.implicitlyLoadedBefore]) {\n            if (!(dependency instanceof ExternalModule) &&\n                !dependency.isExecuted &&\n                (dependency.info.moduleSideEffects || module.implicitlyLoadedBefore.has(dependency)) &&\n                !visitedModules.has(dependency.id)) {\n                dependency.isExecuted = true;\n                visitedModules.add(dependency.id);\n                modules.push(dependency);\n            }\n        }\n    }\n}\n\nconst MISSING_EXPORT_SHIM_DESCRIPTION = {\n    identifier: null,\n    localName: MISSING_EXPORT_SHIM_VARIABLE\n};\nfunction getVariableForExportNameRecursive(target, name, importerForSideEffects, isExportAllSearch, searchedNamesAndModules = new Map()) {\n    const searchedModules = searchedNamesAndModules.get(name);\n    if (searchedModules) {\n        if (searchedModules.has(target)) {\n            return isExportAllSearch ? [null] : error(errorCircularReexport(name, target.id));\n        }\n        searchedModules.add(target);\n    }\n    else {\n        searchedNamesAndModules.set(name, new Set([target]));\n    }\n    return target.getVariableForExportName(name, {\n        importerForSideEffects,\n        isExportAllSearch,\n        searchedNamesAndModules\n    });\n}\nfunction getAndExtendSideEffectModules(variable, module) {\n    const sideEffectModules = getOrCreate(module.sideEffectDependenciesByVariable, variable, (getNewSet));\n    let currentVariable = variable;\n    const referencedVariables = new Set([currentVariable]);\n    while (true) {\n        const importingModule = currentVariable.module;\n        currentVariable =\n            currentVariable instanceof ExportDefaultVariable\n                ? currentVariable.getDirectOriginalVariable()\n                : currentVariable instanceof SyntheticNamedExportVariable\n                    ? currentVariable.syntheticNamespace\n                    : null;\n        if (!currentVariable || referencedVariables.has(currentVariable)) {\n            break;\n        }\n        referencedVariables.add(currentVariable);\n        sideEffectModules.add(importingModule);\n        const originalSideEffects = importingModule.sideEffectDependenciesByVariable.get(currentVariable);\n        if (originalSideEffects) {\n            for (const module of originalSideEffects) {\n                sideEffectModules.add(module);\n            }\n        }\n    }\n    return sideEffectModules;\n}\nclass Module {\n    constructor(graph, id, options, isEntry, moduleSideEffects, syntheticNamedExports, meta, assertions) {\n        this.graph = graph;\n        this.id = id;\n        this.options = options;\n        this.alternativeReexportModules = new Map();\n        this.chunkFileNames = new Set();\n        this.chunkNames = [];\n        this.cycles = new Set();\n        this.dependencies = new Set();\n        this.dynamicDependencies = new Set();\n        this.dynamicImporters = [];\n        this.dynamicImports = [];\n        this.execIndex = Infinity;\n        this.implicitlyLoadedAfter = new Set();\n        this.implicitlyLoadedBefore = new Set();\n        this.importDescriptions = new Map();\n        this.importMetas = [];\n        this.importedFromNotTreeshaken = false;\n        this.importers = [];\n        this.includedDynamicImporters = [];\n        this.includedImports = new Set();\n        this.isExecuted = false;\n        this.isUserDefinedEntryPoint = false;\n        this.needsExportShim = false;\n        this.sideEffectDependenciesByVariable = new Map();\n        this.sourcesWithAssertions = new Map();\n        this.allExportNames = null;\n        this.ast = null;\n        this.exportAllModules = [];\n        this.exportAllSources = new Set();\n        this.exportNamesByVariable = null;\n        this.exportShimVariable = new ExportShimVariable(this);\n        this.exports = new Map();\n        this.namespaceReexportsByName = new Map();\n        this.reexportDescriptions = new Map();\n        this.relevantDependencies = null;\n        this.syntheticExports = new Map();\n        this.syntheticNamespace = null;\n        this.transformDependencies = [];\n        this.transitiveReexports = null;\n        this.excludeFromSourcemap = /\\0/.test(id);\n        this.context = options.moduleContext(id);\n        this.preserveSignature = this.options.preserveEntrySignatures;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const module = this;\n        const { dynamicImports, dynamicImporters, exportAllSources, exports, implicitlyLoadedAfter, implicitlyLoadedBefore, importers, reexportDescriptions, sourcesWithAssertions } = this;\n        this.info = {\n            assertions,\n            ast: null,\n            code: null,\n            get dynamicallyImportedIdResolutions() {\n                return dynamicImports\n                    .map(({ argument }) => typeof argument === 'string' && module.resolvedIds[argument])\n                    .filter(Boolean);\n            },\n            get dynamicallyImportedIds() {\n                // We cannot use this.dynamicDependencies because this is needed before\n                // dynamicDependencies are populated\n                return dynamicImports.map(({ id }) => id).filter((id) => id != null);\n            },\n            get dynamicImporters() {\n                return dynamicImporters.sort();\n            },\n            get exportedBindings() {\n                const exportBindings = { '.': [...exports.keys()] };\n                for (const [name, { source }] of reexportDescriptions) {\n                    (exportBindings[source] ?? (exportBindings[source] = [])).push(name);\n                }\n                for (const source of exportAllSources) {\n                    (exportBindings[source] ?? (exportBindings[source] = [])).push('*');\n                }\n                return exportBindings;\n            },\n            get exports() {\n                return [\n                    ...exports.keys(),\n                    ...reexportDescriptions.keys(),\n                    ...[...exportAllSources].map(() => '*')\n                ];\n            },\n            get hasDefaultExport() {\n                // This information is only valid after parsing\n                if (!module.ast) {\n                    return null;\n                }\n                return module.exports.has('default') || reexportDescriptions.has('default');\n            },\n            get hasModuleSideEffects() {\n                warnDeprecation('Accessing ModuleInfo.hasModuleSideEffects from plugins is deprecated. Please use ModuleInfo.moduleSideEffects instead.', URL_THIS_GETMODULEINFO, true, options);\n                return this.moduleSideEffects;\n            },\n            id,\n            get implicitlyLoadedAfterOneOf() {\n                // eslint-disable-next-line unicorn/prefer-spread\n                return Array.from(implicitlyLoadedAfter, getId).sort();\n            },\n            get implicitlyLoadedBefore() {\n                // eslint-disable-next-line unicorn/prefer-spread\n                return Array.from(implicitlyLoadedBefore, getId).sort();\n            },\n            get importedIdResolutions() {\n                // eslint-disable-next-line unicorn/prefer-spread\n                return Array.from(sourcesWithAssertions.keys(), source => module.resolvedIds[source]).filter(Boolean);\n            },\n            get importedIds() {\n                // We cannot use this.dependencies because this is needed before\n                // dependencies are populated\n                // eslint-disable-next-line unicorn/prefer-spread\n                return Array.from(sourcesWithAssertions.keys(), source => module.resolvedIds[source]?.id).filter(Boolean);\n            },\n            get importers() {\n                return importers.sort();\n            },\n            isEntry,\n            isExternal: false,\n            get isIncluded() {\n                if (graph.phase !== BuildPhase.GENERATE) {\n                    return null;\n                }\n                return module.isIncluded();\n            },\n            meta: { ...meta },\n            moduleSideEffects,\n            syntheticNamedExports\n        };\n        // Hide the deprecated key so that it only warns when accessed explicitly\n        // eslint-disable-next-line unicorn/consistent-destructuring\n        Object.defineProperty(this.info, 'hasModuleSideEffects', {\n            enumerable: false\n        });\n    }\n    basename() {\n        const base = basename(this.id);\n        const extension = extname(this.id);\n        return makeLegal(extension ? base.slice(0, -extension.length) : base);\n    }\n    bindReferences() {\n        this.ast.bind();\n    }\n    error(properties, pos) {\n        this.addLocationToLogProps(properties, pos);\n        return error(properties);\n    }\n    getAllExportNames() {\n        if (this.allExportNames) {\n            return this.allExportNames;\n        }\n        this.allExportNames = new Set([...this.exports.keys(), ...this.reexportDescriptions.keys()]);\n        for (const module of this.exportAllModules) {\n            if (module instanceof ExternalModule) {\n                this.allExportNames.add(`*${module.id}`);\n                continue;\n            }\n            for (const name of module.getAllExportNames()) {\n                if (name !== 'default')\n                    this.allExportNames.add(name);\n            }\n        }\n        // We do not count the synthetic namespace as a regular export to hide it\n        // from entry signatures and namespace objects\n        if (typeof this.info.syntheticNamedExports === 'string') {\n            this.allExportNames.delete(this.info.syntheticNamedExports);\n        }\n        return this.allExportNames;\n    }\n    getDependenciesToBeIncluded() {\n        if (this.relevantDependencies)\n            return this.relevantDependencies;\n        this.relevantDependencies = new Set();\n        const necessaryDependencies = new Set();\n        const alwaysCheckedDependencies = new Set();\n        const dependencyVariables = new Set(this.includedImports);\n        if (this.info.isEntry ||\n            this.includedDynamicImporters.length > 0 ||\n            this.namespace.included ||\n            this.implicitlyLoadedAfter.size > 0) {\n            for (const exportName of [...this.getReexports(), ...this.getExports()]) {\n                const [exportedVariable] = this.getVariableForExportName(exportName);\n                if (exportedVariable) {\n                    dependencyVariables.add(exportedVariable);\n                }\n            }\n        }\n        for (let variable of dependencyVariables) {\n            const sideEffectDependencies = this.sideEffectDependenciesByVariable.get(variable);\n            if (sideEffectDependencies) {\n                for (const module of sideEffectDependencies) {\n                    alwaysCheckedDependencies.add(module);\n                }\n            }\n            if (variable instanceof SyntheticNamedExportVariable) {\n                variable = variable.getBaseVariable();\n            }\n            else if (variable instanceof ExportDefaultVariable) {\n                variable = variable.getOriginalVariable();\n            }\n            necessaryDependencies.add(variable.module);\n        }\n        if (!this.options.treeshake || this.info.moduleSideEffects === 'no-treeshake') {\n            for (const dependency of this.dependencies) {\n                this.relevantDependencies.add(dependency);\n            }\n        }\n        else {\n            this.addRelevantSideEffectDependencies(this.relevantDependencies, necessaryDependencies, alwaysCheckedDependencies);\n        }\n        for (const dependency of necessaryDependencies) {\n            this.relevantDependencies.add(dependency);\n        }\n        return this.relevantDependencies;\n    }\n    getExportNamesByVariable() {\n        if (this.exportNamesByVariable) {\n            return this.exportNamesByVariable;\n        }\n        const exportNamesByVariable = new Map();\n        for (const exportName of this.getAllExportNames()) {\n            let [tracedVariable] = this.getVariableForExportName(exportName);\n            if (tracedVariable instanceof ExportDefaultVariable) {\n                tracedVariable = tracedVariable.getOriginalVariable();\n            }\n            if (!tracedVariable ||\n                !(tracedVariable.included || tracedVariable instanceof ExternalVariable)) {\n                continue;\n            }\n            const existingExportNames = exportNamesByVariable.get(tracedVariable);\n            if (existingExportNames) {\n                existingExportNames.push(exportName);\n            }\n            else {\n                exportNamesByVariable.set(tracedVariable, [exportName]);\n            }\n        }\n        return (this.exportNamesByVariable = exportNamesByVariable);\n    }\n    getExports() {\n        return [...this.exports.keys()];\n    }\n    getReexports() {\n        if (this.transitiveReexports) {\n            return this.transitiveReexports;\n        }\n        // to avoid infinite recursion when using circular `export * from X`\n        this.transitiveReexports = [];\n        const reexports = new Set(this.reexportDescriptions.keys());\n        for (const module of this.exportAllModules) {\n            if (module instanceof ExternalModule) {\n                reexports.add(`*${module.id}`);\n            }\n            else {\n                for (const name of [...module.getReexports(), ...module.getExports()]) {\n                    if (name !== 'default')\n                        reexports.add(name);\n                }\n            }\n        }\n        return (this.transitiveReexports = [...reexports]);\n    }\n    getRenderedExports() {\n        // only direct exports are counted here, not reexports at all\n        const renderedExports = [];\n        const removedExports = [];\n        for (const exportName of this.exports.keys()) {\n            const [variable] = this.getVariableForExportName(exportName);\n            (variable && variable.included ? renderedExports : removedExports).push(exportName);\n        }\n        return { removedExports, renderedExports };\n    }\n    getSyntheticNamespace() {\n        if (this.syntheticNamespace === null) {\n            this.syntheticNamespace = undefined;\n            [this.syntheticNamespace] = this.getVariableForExportName(typeof this.info.syntheticNamedExports === 'string'\n                ? this.info.syntheticNamedExports\n                : 'default', { onlyExplicit: true });\n        }\n        if (!this.syntheticNamespace) {\n            return error(errorSyntheticNamedExportsNeedNamespaceExport(this.id, this.info.syntheticNamedExports));\n        }\n        return this.syntheticNamespace;\n    }\n    getVariableForExportName(name, { importerForSideEffects, isExportAllSearch, onlyExplicit, searchedNamesAndModules } = EMPTY_OBJECT) {\n        if (name[0] === '*') {\n            if (name.length === 1) {\n                // export * from './other'\n                return [this.namespace];\n            }\n            // export * from 'external'\n            const module = this.graph.modulesById.get(name.slice(1));\n            return module.getVariableForExportName('*');\n        }\n        // export { foo } from './other'\n        const reexportDeclaration = this.reexportDescriptions.get(name);\n        if (reexportDeclaration) {\n            const [variable] = getVariableForExportNameRecursive(reexportDeclaration.module, reexportDeclaration.localName, importerForSideEffects, false, searchedNamesAndModules);\n            if (!variable) {\n                return this.error(errorMissingExport(reexportDeclaration.localName, this.id, reexportDeclaration.module.id), reexportDeclaration.start);\n            }\n            if (importerForSideEffects) {\n                setAlternativeExporterIfCyclic(variable, importerForSideEffects, this);\n                if (this.info.moduleSideEffects) {\n                    getOrCreate(importerForSideEffects.sideEffectDependenciesByVariable, variable, (getNewSet)).add(this);\n                }\n            }\n            return [variable];\n        }\n        const exportDeclaration = this.exports.get(name);\n        if (exportDeclaration) {\n            if (exportDeclaration === MISSING_EXPORT_SHIM_DESCRIPTION) {\n                return [this.exportShimVariable];\n            }\n            const name = exportDeclaration.localName;\n            const variable = this.traceVariable(name, {\n                importerForSideEffects,\n                searchedNamesAndModules\n            });\n            if (importerForSideEffects) {\n                setAlternativeExporterIfCyclic(variable, importerForSideEffects, this);\n                getOrCreate(importerForSideEffects.sideEffectDependenciesByVariable, variable, (getNewSet)).add(this);\n            }\n            return [variable];\n        }\n        if (onlyExplicit) {\n            return [null];\n        }\n        if (name !== 'default') {\n            const foundNamespaceReexport = this.namespaceReexportsByName.get(name) ??\n                this.getVariableFromNamespaceReexports(name, importerForSideEffects, searchedNamesAndModules);\n            this.namespaceReexportsByName.set(name, foundNamespaceReexport);\n            if (foundNamespaceReexport[0]) {\n                return foundNamespaceReexport;\n            }\n        }\n        if (this.info.syntheticNamedExports) {\n            return [\n                getOrCreate(this.syntheticExports, name, () => new SyntheticNamedExportVariable(this.astContext, name, this.getSyntheticNamespace()))\n            ];\n        }\n        // we don't want to create shims when we are just\n        // probing export * modules for exports\n        if (!isExportAllSearch && this.options.shimMissingExports) {\n            this.shimMissingExport(name);\n            return [this.exportShimVariable];\n        }\n        return [null];\n    }\n    hasEffects() {\n        return this.info.moduleSideEffects === 'no-treeshake' || this.ast.hasCachedEffects();\n    }\n    include() {\n        const context = createInclusionContext();\n        if (this.ast.shouldBeIncluded(context))\n            this.ast.include(context, false);\n    }\n    includeAllExports(includeNamespaceMembers) {\n        if (!this.isExecuted) {\n            markModuleAndImpureDependenciesAsExecuted(this);\n            this.graph.needsTreeshakingPass = true;\n        }\n        for (const exportName of this.exports.keys()) {\n            if (includeNamespaceMembers || exportName !== this.info.syntheticNamedExports) {\n                const variable = this.getVariableForExportName(exportName)[0];\n                variable.deoptimizePath(UNKNOWN_PATH);\n                if (!variable.included) {\n                    this.includeVariable(variable);\n                }\n            }\n        }\n        for (const name of this.getReexports()) {\n            const [variable] = this.getVariableForExportName(name);\n            if (variable) {\n                variable.deoptimizePath(UNKNOWN_PATH);\n                if (!variable.included) {\n                    this.includeVariable(variable);\n                }\n                if (variable instanceof ExternalVariable) {\n                    variable.module.reexported = true;\n                }\n            }\n        }\n        if (includeNamespaceMembers) {\n            this.namespace.setMergedNamespaces(this.includeAndGetAdditionalMergedNamespaces());\n        }\n    }\n    includeAllInBundle() {\n        this.ast.include(createInclusionContext(), true);\n        this.includeAllExports(false);\n    }\n    isIncluded() {\n        // Modules where this.ast is missing have been loaded via this.load and are\n        // not yet fully processed, hence they cannot be included.\n        return (this.ast && (this.ast.included || this.namespace.included || this.importedFromNotTreeshaken));\n    }\n    linkImports() {\n        this.addModulesToImportDescriptions(this.importDescriptions);\n        this.addModulesToImportDescriptions(this.reexportDescriptions);\n        const externalExportAllModules = [];\n        for (const source of this.exportAllSources) {\n            const module = this.graph.modulesById.get(this.resolvedIds[source].id);\n            if (module instanceof ExternalModule) {\n                externalExportAllModules.push(module);\n                continue;\n            }\n            this.exportAllModules.push(module);\n        }\n        this.exportAllModules.push(...externalExportAllModules);\n    }\n    render(options) {\n        const source = this.magicString.clone();\n        this.ast.render(source, options);\n        source.trim();\n        const { usesTopLevelAwait } = this.astContext;\n        if (usesTopLevelAwait && options.format !== 'es' && options.format !== 'system') {\n            return error(errorInvalidFormatForTopLevelAwait(this.id, options.format));\n        }\n        return { source, usesTopLevelAwait };\n    }\n    setSource({ ast, code, customTransformCache, originalCode, originalSourcemap, resolvedIds, sourcemapChain, transformDependencies, transformFiles, ...moduleOptions }) {\n        timeStart('generate ast', 3);\n        this.info.code = code;\n        this.originalCode = originalCode;\n        this.originalSourcemap = originalSourcemap;\n        this.sourcemapChain = sourcemapChain;\n        if (transformFiles) {\n            this.transformFiles = transformFiles;\n        }\n        this.transformDependencies = transformDependencies;\n        this.customTransformCache = customTransformCache;\n        this.updateOptions(moduleOptions);\n        const moduleAst = ast ?? this.tryParse();\n        timeEnd('generate ast', 3);\n        timeStart('analyze ast', 3);\n        this.resolvedIds = resolvedIds ?? Object.create(null);\n        // By default, `id` is the file name. Custom resolvers and loaders\n        // can change that, but it makes sense to use it for the source file name\n        const fileName = this.id;\n        this.magicString = new MagicString(code, {\n            filename: (this.excludeFromSourcemap ? null : fileName),\n            indentExclusionRanges: []\n        });\n        this.astContext = {\n            addDynamicImport: this.addDynamicImport.bind(this),\n            addExport: this.addExport.bind(this),\n            addImport: this.addImport.bind(this),\n            addImportMeta: this.addImportMeta.bind(this),\n            code,\n            deoptimizationTracker: this.graph.deoptimizationTracker,\n            error: this.error.bind(this),\n            fileName,\n            getExports: this.getExports.bind(this),\n            getModuleExecIndex: () => this.execIndex,\n            getModuleName: this.basename.bind(this),\n            getNodeConstructor: (name) => nodeConstructors[name] || nodeConstructors.UnknownNode,\n            getReexports: this.getReexports.bind(this),\n            importDescriptions: this.importDescriptions,\n            includeAllExports: () => this.includeAllExports(true),\n            includeDynamicImport: this.includeDynamicImport.bind(this),\n            includeVariableInModule: this.includeVariableInModule.bind(this),\n            magicString: this.magicString,\n            manualPureFunctions: this.graph.pureFunctions,\n            module: this,\n            moduleContext: this.context,\n            options: this.options,\n            requestTreeshakingPass: () => (this.graph.needsTreeshakingPass = true),\n            traceExport: (name) => this.getVariableForExportName(name)[0],\n            traceVariable: this.traceVariable.bind(this),\n            usesTopLevelAwait: false,\n            warn: this.warn.bind(this)\n        };\n        this.scope = new ModuleScope(this.graph.scope, this.astContext);\n        this.namespace = new NamespaceVariable(this.astContext);\n        this.ast = new Program(moduleAst, { context: this.astContext, type: 'Module' }, this.scope);\n        // Assign AST directly if has existing one as there's no way to drop it from memory.\n        // If cache is enabled, also assign directly as otherwise it takes more CPU and memory to re-compute.\n        if (ast || this.options.cache !== false) {\n            this.info.ast = moduleAst;\n        }\n        else {\n            // Make lazy and apply LRU cache to not hog the memory\n            Object.defineProperty(this.info, 'ast', {\n                get: () => {\n                    if (this.graph.astLru.has(fileName)) {\n                        return this.graph.astLru.get(fileName);\n                    }\n                    else {\n                        const parsedAst = this.tryParse();\n                        this.graph.astLru.set(fileName, parsedAst);\n                        return parsedAst;\n                    }\n                }\n            });\n        }\n        timeEnd('analyze ast', 3);\n    }\n    toJSON() {\n        return {\n            assertions: this.info.assertions,\n            ast: this.info.ast,\n            code: this.info.code,\n            customTransformCache: this.customTransformCache,\n            // eslint-disable-next-line unicorn/prefer-spread\n            dependencies: Array.from(this.dependencies, getId),\n            id: this.id,\n            meta: this.info.meta,\n            moduleSideEffects: this.info.moduleSideEffects,\n            originalCode: this.originalCode,\n            originalSourcemap: this.originalSourcemap,\n            resolvedIds: this.resolvedIds,\n            sourcemapChain: this.sourcemapChain,\n            syntheticNamedExports: this.info.syntheticNamedExports,\n            transformDependencies: this.transformDependencies,\n            transformFiles: this.transformFiles\n        };\n    }\n    traceVariable(name, { importerForSideEffects, isExportAllSearch, searchedNamesAndModules } = EMPTY_OBJECT) {\n        const localVariable = this.scope.variables.get(name);\n        if (localVariable) {\n            return localVariable;\n        }\n        const importDescription = this.importDescriptions.get(name);\n        if (importDescription) {\n            const otherModule = importDescription.module;\n            if (otherModule instanceof Module && importDescription.name === '*') {\n                return otherModule.namespace;\n            }\n            const [declaration] = getVariableForExportNameRecursive(otherModule, importDescription.name, importerForSideEffects || this, isExportAllSearch, searchedNamesAndModules);\n            if (!declaration) {\n                return this.error(errorMissingExport(importDescription.name, this.id, otherModule.id), importDescription.start);\n            }\n            return declaration;\n        }\n        return null;\n    }\n    updateOptions({ meta, moduleSideEffects, syntheticNamedExports }) {\n        if (moduleSideEffects != null) {\n            this.info.moduleSideEffects = moduleSideEffects;\n        }\n        if (syntheticNamedExports != null) {\n            this.info.syntheticNamedExports = syntheticNamedExports;\n        }\n        if (meta != null) {\n            Object.assign(this.info.meta, meta);\n        }\n    }\n    warn(properties, pos) {\n        this.addLocationToLogProps(properties, pos);\n        this.options.onwarn(properties);\n    }\n    addDynamicImport(node) {\n        let argument = node.source;\n        if (argument instanceof TemplateLiteral) {\n            if (argument.quasis.length === 1 && argument.quasis[0].value.cooked) {\n                argument = argument.quasis[0].value.cooked;\n            }\n        }\n        else if (argument instanceof Literal && typeof argument.value === 'string') {\n            argument = argument.value;\n        }\n        this.dynamicImports.push({ argument, id: null, node, resolution: null });\n    }\n    addExport(node) {\n        if (node instanceof ExportDefaultDeclaration) {\n            // export default foo;\n            this.exports.set('default', {\n                identifier: node.variable.getAssignedVariableName(),\n                localName: 'default'\n            });\n        }\n        else if (node instanceof ExportAllDeclaration) {\n            const source = node.source.value;\n            this.addSource(source, node);\n            if (node.exported) {\n                // export * as name from './other'\n                const name = node.exported.name;\n                this.reexportDescriptions.set(name, {\n                    localName: '*',\n                    module: null,\n                    source,\n                    start: node.start\n                });\n            }\n            else {\n                // export * from './other'\n                this.exportAllSources.add(source);\n            }\n        }\n        else if (node.source instanceof Literal) {\n            // export { name } from './other'\n            const source = node.source.value;\n            this.addSource(source, node);\n            for (const { exported, local, start } of node.specifiers) {\n                const name = exported instanceof Literal ? exported.value : exported.name;\n                this.reexportDescriptions.set(name, {\n                    localName: local instanceof Literal ? local.value : local.name,\n                    module: null,\n                    source,\n                    start\n                });\n            }\n        }\n        else if (node.declaration) {\n            const declaration = node.declaration;\n            if (declaration instanceof VariableDeclaration) {\n                // export var { foo, bar } = ...\n                // export var foo = 1, bar = 2;\n                for (const declarator of declaration.declarations) {\n                    for (const localName of extractAssignedNames(declarator.id)) {\n                        this.exports.set(localName, { identifier: null, localName });\n                    }\n                }\n            }\n            else {\n                // export function foo () {}\n                const localName = declaration.id.name;\n                this.exports.set(localName, { identifier: null, localName });\n            }\n        }\n        else {\n            // export { foo, bar, baz }\n            for (const { local, exported } of node.specifiers) {\n                // except for reexports, local must be an Identifier\n                const localName = local.name;\n                const exportedName = exported instanceof Identifier ? exported.name : exported.value;\n                this.exports.set(exportedName, { identifier: null, localName });\n            }\n        }\n    }\n    addImport(node) {\n        const source = node.source.value;\n        this.addSource(source, node);\n        for (const specifier of node.specifiers) {\n            const name = specifier instanceof ImportDefaultSpecifier\n                ? 'default'\n                : specifier instanceof ImportNamespaceSpecifier\n                    ? '*'\n                    : specifier.imported instanceof Identifier\n                        ? specifier.imported.name\n                        : specifier.imported.value;\n            this.importDescriptions.set(specifier.local.name, {\n                module: null,\n                name,\n                source,\n                start: specifier.start\n            });\n        }\n    }\n    addImportMeta(node) {\n        this.importMetas.push(node);\n    }\n    addLocationToLogProps(properties, pos) {\n        properties.id = this.id;\n        properties.pos = pos;\n        let code = this.info.code;\n        const location = locate(code, pos, { offsetLine: 1 });\n        if (location) {\n            let { column, line } = location;\n            try {\n                ({ column, line } = getOriginalLocation(this.sourcemapChain, { column, line }));\n                code = this.originalCode;\n            }\n            catch (error_) {\n                this.options.onwarn(errorInvalidSourcemapForError(error_, this.id, column, line, pos));\n            }\n            augmentCodeLocation(properties, { column, line }, code, this.id);\n        }\n    }\n    addModulesToImportDescriptions(importDescription) {\n        for (const specifier of importDescription.values()) {\n            const { id } = this.resolvedIds[specifier.source];\n            specifier.module = this.graph.modulesById.get(id);\n        }\n    }\n    addRelevantSideEffectDependencies(relevantDependencies, necessaryDependencies, alwaysCheckedDependencies) {\n        const handledDependencies = new Set();\n        const addSideEffectDependencies = (possibleDependencies) => {\n            for (const dependency of possibleDependencies) {\n                if (handledDependencies.has(dependency)) {\n                    continue;\n                }\n                handledDependencies.add(dependency);\n                if (necessaryDependencies.has(dependency)) {\n                    relevantDependencies.add(dependency);\n                    continue;\n                }\n                if (!(dependency.info.moduleSideEffects || alwaysCheckedDependencies.has(dependency))) {\n                    continue;\n                }\n                if (dependency instanceof ExternalModule || dependency.hasEffects()) {\n                    relevantDependencies.add(dependency);\n                    continue;\n                }\n                addSideEffectDependencies(dependency.dependencies);\n            }\n        };\n        addSideEffectDependencies(this.dependencies);\n        addSideEffectDependencies(alwaysCheckedDependencies);\n    }\n    addSource(source, declaration) {\n        const parsedAssertions = getAssertionsFromImportExportDeclaration(declaration.assertions);\n        const existingAssertions = this.sourcesWithAssertions.get(source);\n        if (existingAssertions) {\n            if (doAssertionsDiffer(existingAssertions, parsedAssertions)) {\n                this.warn(errorInconsistentImportAssertions(existingAssertions, parsedAssertions, source, this.id), declaration.start);\n            }\n        }\n        else {\n            this.sourcesWithAssertions.set(source, parsedAssertions);\n        }\n    }\n    getVariableFromNamespaceReexports(name, importerForSideEffects, searchedNamesAndModules) {\n        let foundSyntheticDeclaration = null;\n        const foundInternalDeclarations = new Map();\n        const foundExternalDeclarations = new Set();\n        for (const module of this.exportAllModules) {\n            // Synthetic namespaces should not hide \"regular\" exports of the same name\n            if (module.info.syntheticNamedExports === name) {\n                continue;\n            }\n            const [variable, indirectExternal] = getVariableForExportNameRecursive(module, name, importerForSideEffects, true, \n            // We are creating a copy to handle the case where the same binding is\n            // imported through different namespace reexports gracefully\n            copyNameToModulesMap(searchedNamesAndModules));\n            if (module instanceof ExternalModule || indirectExternal) {\n                foundExternalDeclarations.add(variable);\n            }\n            else if (variable instanceof SyntheticNamedExportVariable) {\n                if (!foundSyntheticDeclaration) {\n                    foundSyntheticDeclaration = variable;\n                }\n            }\n            else if (variable) {\n                foundInternalDeclarations.set(variable, module);\n            }\n        }\n        if (foundInternalDeclarations.size > 0) {\n            const foundDeclarationList = [...foundInternalDeclarations];\n            const usedDeclaration = foundDeclarationList[0][0];\n            if (foundDeclarationList.length === 1) {\n                return [usedDeclaration];\n            }\n            this.options.onwarn(errorNamespaceConflict(name, this.id, foundDeclarationList.map(([, module]) => module.id)));\n            // TODO we are pretending it was not found while it should behave like \"undefined\"\n            return [null];\n        }\n        if (foundExternalDeclarations.size > 0) {\n            const foundDeclarationList = [...foundExternalDeclarations];\n            const usedDeclaration = foundDeclarationList[0];\n            if (foundDeclarationList.length > 1) {\n                this.options.onwarn(errorAmbiguousExternalNamespaces(name, this.id, usedDeclaration.module.id, foundDeclarationList.map(declaration => declaration.module.id)));\n            }\n            return [usedDeclaration, true];\n        }\n        if (foundSyntheticDeclaration) {\n            return [foundSyntheticDeclaration];\n        }\n        return [null];\n    }\n    includeAndGetAdditionalMergedNamespaces() {\n        const externalNamespaces = new Set();\n        const syntheticNamespaces = new Set();\n        for (const module of [this, ...this.exportAllModules]) {\n            if (module instanceof ExternalModule) {\n                const [externalVariable] = module.getVariableForExportName('*');\n                externalVariable.include();\n                this.includedImports.add(externalVariable);\n                externalNamespaces.add(externalVariable);\n            }\n            else if (module.info.syntheticNamedExports) {\n                const syntheticNamespace = module.getSyntheticNamespace();\n                syntheticNamespace.include();\n                this.includedImports.add(syntheticNamespace);\n                syntheticNamespaces.add(syntheticNamespace);\n            }\n        }\n        return [...syntheticNamespaces, ...externalNamespaces];\n    }\n    includeDynamicImport(node) {\n        const resolution = this.dynamicImports.find(dynamicImport => dynamicImport.node === node).resolution;\n        if (resolution instanceof Module) {\n            resolution.includedDynamicImporters.push(this);\n            resolution.includeAllExports(true);\n        }\n    }\n    includeVariable(variable) {\n        if (!variable.included) {\n            variable.include();\n            this.graph.needsTreeshakingPass = true;\n            const variableModule = variable.module;\n            if (variableModule instanceof Module) {\n                if (!variableModule.isExecuted) {\n                    markModuleAndImpureDependenciesAsExecuted(variableModule);\n                }\n                if (variableModule !== this) {\n                    const sideEffectModules = getAndExtendSideEffectModules(variable, this);\n                    for (const module of sideEffectModules) {\n                        if (!module.isExecuted) {\n                            markModuleAndImpureDependenciesAsExecuted(module);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    includeVariableInModule(variable) {\n        this.includeVariable(variable);\n        const variableModule = variable.module;\n        if (variableModule && variableModule !== this) {\n            this.includedImports.add(variable);\n        }\n    }\n    shimMissingExport(name) {\n        this.options.onwarn(errorShimmedExport(this.id, name));\n        this.exports.set(name, MISSING_EXPORT_SHIM_DESCRIPTION);\n    }\n    tryParse() {\n        try {\n            return this.graph.contextParse(this.info.code);\n        }\n        catch (error_) {\n            return this.error(errorParseError(error_, this.id), error_.pos);\n        }\n    }\n}\n// if there is a cyclic import in the reexport chain, we should not\n// import from the original module but from the cyclic module to not\n// mess up execution order.\nfunction setAlternativeExporterIfCyclic(variable, importer, reexporter) {\n    if (variable.module instanceof Module && variable.module !== reexporter) {\n        const exporterCycles = variable.module.cycles;\n        if (exporterCycles.size > 0) {\n            const importerCycles = reexporter.cycles;\n            for (const cycleSymbol of importerCycles) {\n                if (exporterCycles.has(cycleSymbol)) {\n                    importer.alternativeReexportModules.set(variable, reexporter);\n                    break;\n                }\n            }\n        }\n    }\n}\nconst copyNameToModulesMap = (searchedNamesAndModules) => searchedNamesAndModules &&\n    // eslint-disable-next-line unicorn/prefer-spread\n    new Map(Array.from(searchedNamesAndModules, ([name, modules]) => [name, new Set(modules)]));\n\nfunction removeJsExtension(name) {\n    return name.endsWith('.js') ? name.slice(0, -3) : name;\n}\n\nfunction getCompleteAmdId(options, chunkId) {\n    if (options.autoId) {\n        return `${options.basePath ? options.basePath + '/' : ''}${removeJsExtension(chunkId)}`;\n    }\n    return options.id ?? '';\n}\n\nfunction getExportBlock$1(exports, dependencies, namedExportsMode, interop, snippets, t, externalLiveBindings, mechanism = 'return ') {\n    const { _, getDirectReturnFunction, getFunctionIntro, getPropertyAccess, n, s } = snippets;\n    if (!namedExportsMode) {\n        return `${n}${n}${mechanism}${getSingleDefaultExport(exports, dependencies, interop, externalLiveBindings, getPropertyAccess)};`;\n    }\n    let exportBlock = '';\n    for (const { defaultVariableName, importPath, isChunk, name, namedExportsMode: depNamedExportsMode, namespaceVariableName, reexports } of dependencies) {\n        if (reexports && namedExportsMode) {\n            for (const specifier of reexports) {\n                if (specifier.reexported !== '*') {\n                    const importName = getReexportedImportName(name, specifier.imported, depNamedExportsMode, isChunk, defaultVariableName, namespaceVariableName, interop, importPath, externalLiveBindings, getPropertyAccess);\n                    if (exportBlock)\n                        exportBlock += n;\n                    if (specifier.imported !== '*' && specifier.needsLiveBinding) {\n                        const [left, right] = getDirectReturnFunction([], {\n                            functionReturn: true,\n                            lineBreakIndent: null,\n                            name: null\n                        });\n                        exportBlock +=\n                            `Object.defineProperty(exports,${_}'${specifier.reexported}',${_}{${n}` +\n                                `${t}enumerable:${_}true,${n}` +\n                                `${t}get:${_}${left}${importName}${right}${n}});`;\n                    }\n                    else {\n                        exportBlock += `exports${getPropertyAccess(specifier.reexported)}${_}=${_}${importName};`;\n                    }\n                }\n            }\n        }\n    }\n    for (const { exported, local } of exports) {\n        const lhs = `exports${getPropertyAccess(exported)}`;\n        const rhs = local;\n        if (lhs !== rhs) {\n            if (exportBlock)\n                exportBlock += n;\n            exportBlock += `${lhs}${_}=${_}${rhs};`;\n        }\n    }\n    for (const { name, reexports } of dependencies) {\n        if (reexports && namedExportsMode) {\n            for (const specifier of reexports) {\n                if (specifier.reexported === '*') {\n                    if (exportBlock)\n                        exportBlock += n;\n                    const copyPropertyIfNecessary = `{${n}${t}if${_}(k${_}!==${_}'default'${_}&&${_}!exports.hasOwnProperty(k))${_}${getDefineProperty(name, specifier.needsLiveBinding, t, snippets)}${s}${n}}`;\n                    exportBlock += `Object.keys(${name}).forEach(${getFunctionIntro(['k'], {\n                        isAsync: false,\n                        name: null\n                    })}${copyPropertyIfNecessary});`;\n                }\n            }\n        }\n    }\n    if (exportBlock) {\n        return `${n}${n}${exportBlock}`;\n    }\n    return '';\n}\nfunction getSingleDefaultExport(exports, dependencies, interop, externalLiveBindings, getPropertyAccess) {\n    if (exports.length > 0) {\n        return exports[0].local;\n    }\n    else {\n        for (const { defaultVariableName, importPath, isChunk, name, namedExportsMode: depNamedExportsMode, namespaceVariableName, reexports } of dependencies) {\n            if (reexports) {\n                return getReexportedImportName(name, reexports[0].imported, depNamedExportsMode, isChunk, defaultVariableName, namespaceVariableName, interop, importPath, externalLiveBindings, getPropertyAccess);\n            }\n        }\n    }\n}\nfunction getReexportedImportName(moduleVariableName, imported, depNamedExportsMode, isChunk, defaultVariableName, namespaceVariableName, interop, moduleId, externalLiveBindings, getPropertyAccess) {\n    if (imported === 'default') {\n        if (!isChunk) {\n            const moduleInterop = interop(moduleId);\n            const variableName = defaultInteropHelpersByInteropType[moduleInterop]\n                ? defaultVariableName\n                : moduleVariableName;\n            return isDefaultAProperty(moduleInterop, externalLiveBindings)\n                ? `${variableName}${getPropertyAccess('default')}`\n                : variableName;\n        }\n        return depNamedExportsMode\n            ? `${moduleVariableName}${getPropertyAccess('default')}`\n            : moduleVariableName;\n    }\n    if (imported === '*') {\n        return (isChunk ? !depNamedExportsMode : namespaceInteropHelpersByInteropType[interop(moduleId)])\n            ? namespaceVariableName\n            : moduleVariableName;\n    }\n    return `${moduleVariableName}${getPropertyAccess(imported)}`;\n}\nfunction getEsModuleValue(getObject) {\n    return getObject([['value', 'true']], {\n        lineBreakIndent: null\n    });\n}\nfunction getNamespaceMarkers(hasNamedExports, addEsModule, addNamespaceToStringTag, { _, getObject }) {\n    if (hasNamedExports) {\n        if (addEsModule) {\n            if (addNamespaceToStringTag) {\n                return `Object.defineProperties(exports,${_}${getObject([\n                    ['__esModule', getEsModuleValue(getObject)],\n                    [null, `[Symbol.toStringTag]:${_}${getToStringTagValue(getObject)}`]\n                ], {\n                    lineBreakIndent: null\n                })});`;\n            }\n            return `Object.defineProperty(exports,${_}'__esModule',${_}${getEsModuleValue(getObject)});`;\n        }\n        if (addNamespaceToStringTag) {\n            return `Object.defineProperty(exports,${_}Symbol.toStringTag,${_}${getToStringTagValue(getObject)});`;\n        }\n    }\n    return '';\n}\nconst getDefineProperty = (name, needsLiveBinding, t, { _, getDirectReturnFunction, n }) => {\n    if (needsLiveBinding) {\n        const [left, right] = getDirectReturnFunction([], {\n            functionReturn: true,\n            lineBreakIndent: null,\n            name: null\n        });\n        return (`Object.defineProperty(exports,${_}k,${_}{${n}` +\n            `${t}${t}enumerable:${_}true,${n}` +\n            `${t}${t}get:${_}${left}${name}[k]${right}${n}${t}})`);\n    }\n    return `exports[k]${_}=${_}${name}[k]`;\n};\n\nfunction getInteropBlock(dependencies, interop, externalLiveBindings, freeze, namespaceToStringTag, accessedGlobals, indent, snippets) {\n    const { _, cnst, n } = snippets;\n    const neededInteropHelpers = new Set();\n    const interopStatements = [];\n    const addInteropStatement = (helperVariableName, helper, dependencyVariableName) => {\n        neededInteropHelpers.add(helper);\n        interopStatements.push(`${cnst} ${helperVariableName}${_}=${_}/*#__PURE__*/${helper}(${dependencyVariableName});`);\n    };\n    for (const { defaultVariableName, imports, importPath, isChunk, name, namedExportsMode, namespaceVariableName, reexports } of dependencies) {\n        if (isChunk) {\n            for (const { imported, reexported } of [\n                ...(imports || []),\n                ...(reexports || [])\n            ]) {\n                if (imported === '*' && reexported !== '*') {\n                    if (!namedExportsMode) {\n                        addInteropStatement(namespaceVariableName, INTEROP_NAMESPACE_DEFAULT_ONLY_VARIABLE, name);\n                    }\n                    break;\n                }\n            }\n        }\n        else {\n            const moduleInterop = interop(importPath);\n            let hasDefault = false;\n            let hasNamespace = false;\n            for (const { imported, reexported } of [\n                ...(imports || []),\n                ...(reexports || [])\n            ]) {\n                let helper;\n                let variableName;\n                if (imported === 'default') {\n                    if (!hasDefault) {\n                        hasDefault = true;\n                        if (defaultVariableName !== namespaceVariableName) {\n                            variableName = defaultVariableName;\n                            helper = defaultInteropHelpersByInteropType[moduleInterop];\n                        }\n                    }\n                }\n                else if (imported === '*' && reexported !== '*' && !hasNamespace) {\n                    hasNamespace = true;\n                    helper = namespaceInteropHelpersByInteropType[moduleInterop];\n                    variableName = namespaceVariableName;\n                }\n                if (helper) {\n                    addInteropStatement(variableName, helper, name);\n                }\n            }\n        }\n    }\n    return `${getHelpersBlock(neededInteropHelpers, accessedGlobals, indent, snippets, externalLiveBindings, freeze, namespaceToStringTag)}${interopStatements.length > 0 ? `${interopStatements.join(n)}${n}${n}` : ''}`;\n}\n\nfunction addJsExtension(name) {\n    return name.endsWith('.js') ? name : name + '.js';\n}\n\n// AMD resolution will only respect the AMD baseUrl if the .js extension is omitted.\n// The assumption is that this makes sense for all relative ids:\n// https://requirejs.org/docs/api.html#jsfiles\nfunction updateExtensionForRelativeAmdId(id, forceJsExtensionForImports) {\n    if (id[0] !== '.') {\n        return id;\n    }\n    return forceJsExtensionForImports ? addJsExtension(id) : removeJsExtension(id);\n}\n\nvar _staticExports = {};\nvar _static = {\n  get exports(){ return _staticExports; },\n  set exports(v){ _staticExports = v; },\n};\n\nconst require$$0 = [\n\t\"assert\",\n\t\"async_hooks\",\n\t\"buffer\",\n\t\"child_process\",\n\t\"cluster\",\n\t\"console\",\n\t\"constants\",\n\t\"crypto\",\n\t\"dgram\",\n\t\"diagnostics_channel\",\n\t\"dns\",\n\t\"domain\",\n\t\"events\",\n\t\"fs\",\n\t\"http\",\n\t\"http2\",\n\t\"https\",\n\t\"inspector\",\n\t\"module\",\n\t\"net\",\n\t\"os\",\n\t\"path\",\n\t\"perf_hooks\",\n\t\"process\",\n\t\"punycode\",\n\t\"querystring\",\n\t\"readline\",\n\t\"repl\",\n\t\"stream\",\n\t\"string_decoder\",\n\t\"timers\",\n\t\"tls\",\n\t\"trace_events\",\n\t\"tty\",\n\t\"url\",\n\t\"util\",\n\t\"v8\",\n\t\"vm\",\n\t\"wasi\",\n\t\"worker_threads\",\n\t\"zlib\"\n];\n\n(function (module) {\n\tmodule.exports = require$$0;\n} (_static));\n\nconst builtinModules = /*@__PURE__*/getDefaultExportFromCjs(_staticExports);\n\nconst nodeBuiltins = new Set([\n    ...builtinModules,\n    // TODO\n    // remove once builtin-modules includes PR: https://github.com/sindresorhus/builtin-modules/pull/17\n    'assert/strict',\n    'dns/promises',\n    'fs/promises',\n    'path/posix',\n    'path/win32',\n    'readline/promises',\n    'stream/consumers',\n    'stream/promises',\n    'stream/web',\n    'timers/promises',\n    'util/types'\n]);\nfunction warnOnBuiltins(warn, dependencies) {\n    const externalBuiltins = dependencies\n        .map(({ importPath }) => importPath)\n        .filter(importPath => nodeBuiltins.has(importPath) || importPath.startsWith('node:'));\n    if (externalBuiltins.length === 0)\n        return;\n    warn(errorMissingNodeBuiltins(externalBuiltins));\n}\n\nfunction amd(magicString, { accessedGlobals, dependencies, exports, hasDefaultExport, hasExports, id, indent: t, intro, isEntryFacade, isModuleFacade, namedExportsMode, outro, snippets, onwarn }, { amd, esModule, externalLiveBindings, freeze, interop, namespaceToStringTag, strict }) {\n    warnOnBuiltins(onwarn, dependencies);\n    const deps = dependencies.map(m => `'${updateExtensionForRelativeAmdId(m.importPath, amd.forceJsExtensionForImports)}'`);\n    const parameters = dependencies.map(m => m.name);\n    const { n, getNonArrowFunctionIntro, _ } = snippets;\n    if (namedExportsMode && hasExports) {\n        parameters.unshift(`exports`);\n        deps.unshift(`'exports'`);\n    }\n    if (accessedGlobals.has('require')) {\n        parameters.unshift('require');\n        deps.unshift(`'require'`);\n    }\n    if (accessedGlobals.has('module')) {\n        parameters.unshift('module');\n        deps.unshift(`'module'`);\n    }\n    const completeAmdId = getCompleteAmdId(amd, id);\n    const defineParameters = (completeAmdId ? `'${completeAmdId}',${_}` : ``) +\n        (deps.length > 0 ? `[${deps.join(`,${_}`)}],${_}` : ``);\n    const useStrict = strict ? `${_}'use strict';` : '';\n    magicString.prepend(`${intro}${getInteropBlock(dependencies, interop, externalLiveBindings, freeze, namespaceToStringTag, accessedGlobals, t, snippets)}`);\n    const exportBlock = getExportBlock$1(exports, dependencies, namedExportsMode, interop, snippets, t, externalLiveBindings);\n    let namespaceMarkers = getNamespaceMarkers(namedExportsMode && hasExports, isEntryFacade && (esModule === true || (esModule === 'if-default-prop' && hasDefaultExport)), isModuleFacade && namespaceToStringTag, snippets);\n    if (namespaceMarkers) {\n        namespaceMarkers = n + n + namespaceMarkers;\n    }\n    magicString\n        .append(`${exportBlock}${namespaceMarkers}${outro}`)\n        .indent(t)\n        // factory function should be wrapped by parentheses to avoid lazy parsing,\n        // cf. https://v8.dev/blog/preparser#pife\n        .prepend(`${amd.define}(${defineParameters}(${getNonArrowFunctionIntro(parameters, {\n        isAsync: false,\n        name: null\n    })}{${useStrict}${n}${n}`)\n        .append(`${n}${n}}));`);\n}\n\nfunction cjs(magicString, { accessedGlobals, dependencies, exports, hasDefaultExport, hasExports, indent: t, intro, isEntryFacade, isModuleFacade, namedExportsMode, outro, snippets }, { compact, esModule, externalLiveBindings, freeze, interop, namespaceToStringTag, strict }) {\n    const { _, n } = snippets;\n    const useStrict = strict ? `'use strict';${n}${n}` : '';\n    let namespaceMarkers = getNamespaceMarkers(namedExportsMode && hasExports, isEntryFacade && (esModule === true || (esModule === 'if-default-prop' && hasDefaultExport)), isModuleFacade && namespaceToStringTag, snippets);\n    if (namespaceMarkers) {\n        namespaceMarkers += n + n;\n    }\n    const importBlock = getImportBlock$1(dependencies, snippets, compact);\n    const interopBlock = getInteropBlock(dependencies, interop, externalLiveBindings, freeze, namespaceToStringTag, accessedGlobals, t, snippets);\n    magicString.prepend(`${useStrict}${intro}${namespaceMarkers}${importBlock}${interopBlock}`);\n    const exportBlock = getExportBlock$1(exports, dependencies, namedExportsMode, interop, snippets, t, externalLiveBindings, `module.exports${_}=${_}`);\n    magicString.append(`${exportBlock}${outro}`);\n}\nfunction getImportBlock$1(dependencies, { _, cnst, n }, compact) {\n    let importBlock = '';\n    let definingVariable = false;\n    for (const { importPath, name, reexports, imports } of dependencies) {\n        if (!reexports && !imports) {\n            if (importBlock) {\n                importBlock += compact && !definingVariable ? ',' : `;${n}`;\n            }\n            definingVariable = false;\n            importBlock += `require('${importPath}')`;\n        }\n        else {\n            importBlock += compact && definingVariable ? ',' : `${importBlock ? `;${n}` : ''}${cnst} `;\n            definingVariable = true;\n            importBlock += `${name}${_}=${_}require('${importPath}')`;\n        }\n    }\n    if (importBlock) {\n        return `${importBlock};${n}${n}`;\n    }\n    return '';\n}\n\nfunction es(magicString, { accessedGlobals, indent: t, intro, outro, dependencies, exports, snippets }, { externalLiveBindings, freeze, namespaceToStringTag }) {\n    const { n } = snippets;\n    const importBlock = getImportBlock(dependencies, snippets);\n    if (importBlock.length > 0)\n        intro += importBlock.join(n) + n + n;\n    intro += getHelpersBlock(null, accessedGlobals, t, snippets, externalLiveBindings, freeze, namespaceToStringTag);\n    if (intro)\n        magicString.prepend(intro);\n    const exportBlock = getExportBlock(exports, snippets);\n    if (exportBlock.length > 0)\n        magicString.append(n + n + exportBlock.join(n).trim());\n    if (outro)\n        magicString.append(outro);\n    magicString.trim();\n}\nfunction getImportBlock(dependencies, { _ }) {\n    const importBlock = [];\n    for (const { importPath, reexports, imports, name, assertions } of dependencies) {\n        const assertion = assertions ? `${_}assert${_}${assertions}` : '';\n        const pathWithAssertion = `'${importPath}'${assertion};`;\n        if (!reexports && !imports) {\n            importBlock.push(`import${_}${pathWithAssertion}`);\n            continue;\n        }\n        if (imports) {\n            let defaultImport = null;\n            let starImport = null;\n            const importedNames = [];\n            for (const specifier of imports) {\n                if (specifier.imported === 'default') {\n                    defaultImport = specifier;\n                }\n                else if (specifier.imported === '*') {\n                    starImport = specifier;\n                }\n                else {\n                    importedNames.push(specifier);\n                }\n            }\n            if (starImport) {\n                importBlock.push(`import${_}*${_}as ${starImport.local} from${_}${pathWithAssertion}`);\n            }\n            if (defaultImport && importedNames.length === 0) {\n                importBlock.push(`import ${defaultImport.local} from${_}${pathWithAssertion}`);\n            }\n            else if (importedNames.length > 0) {\n                importBlock.push(`import ${defaultImport ? `${defaultImport.local},${_}` : ''}{${_}${importedNames\n                    .map(specifier => specifier.imported === specifier.local\n                    ? specifier.imported\n                    : `${specifier.imported} as ${specifier.local}`)\n                    .join(`,${_}`)}${_}}${_}from${_}${pathWithAssertion}`);\n            }\n        }\n        if (reexports) {\n            let starExport = null;\n            const namespaceReexports = [];\n            const namedReexports = [];\n            for (const specifier of reexports) {\n                if (specifier.reexported === '*') {\n                    starExport = specifier;\n                }\n                else if (specifier.imported === '*') {\n                    namespaceReexports.push(specifier);\n                }\n                else {\n                    namedReexports.push(specifier);\n                }\n            }\n            if (starExport) {\n                importBlock.push(`export${_}*${_}from${_}${pathWithAssertion}`);\n            }\n            if (namespaceReexports.length > 0) {\n                if (!imports ||\n                    !imports.some(specifier => specifier.imported === '*' && specifier.local === name)) {\n                    importBlock.push(`import${_}*${_}as ${name} from${_}${pathWithAssertion}`);\n                }\n                for (const specifier of namespaceReexports) {\n                    importBlock.push(`export${_}{${_}${name === specifier.reexported ? name : `${name} as ${specifier.reexported}`} };`);\n                }\n            }\n            if (namedReexports.length > 0) {\n                importBlock.push(`export${_}{${_}${namedReexports\n                    .map(specifier => specifier.imported === specifier.reexported\n                    ? specifier.imported\n                    : `${specifier.imported} as ${specifier.reexported}`)\n                    .join(`,${_}`)}${_}}${_}from${_}${pathWithAssertion}`);\n            }\n        }\n    }\n    return importBlock;\n}\nfunction getExportBlock(exports, { _, cnst }) {\n    const exportBlock = [];\n    const exportDeclaration = [];\n    for (const specifier of exports) {\n        if (specifier.expression) {\n            exportBlock.push(`${cnst} ${specifier.local}${_}=${_}${specifier.expression};`);\n        }\n        exportDeclaration.push(specifier.exported === specifier.local\n            ? specifier.local\n            : `${specifier.local} as ${specifier.exported}`);\n    }\n    if (exportDeclaration.length > 0) {\n        exportBlock.push(`export${_}{${_}${exportDeclaration.join(`,${_}`)}${_}};`);\n    }\n    return exportBlock;\n}\n\nconst keypath = (keypath, getPropertyAccess) => keypath.split('.').map(getPropertyAccess).join('');\n\nfunction setupNamespace(name, root, globals, { _, getPropertyAccess, s }, compact) {\n    const parts = name.split('.');\n    parts[0] = (typeof globals === 'function' ? globals(parts[0]) : globals[parts[0]]) || parts[0];\n    parts.pop();\n    let propertyPath = root;\n    return (parts\n        .map(part => {\n        propertyPath += getPropertyAccess(part);\n        return `${propertyPath}${_}=${_}${propertyPath}${_}||${_}{}${s}`;\n    })\n        .join(compact ? ',' : '\\n') + (compact && parts.length > 0 ? ';' : '\\n'));\n}\nfunction assignToDeepVariable(deepName, root, globals, assignment, { _, getPropertyAccess }) {\n    const parts = deepName.split('.');\n    parts[0] = (typeof globals === 'function' ? globals(parts[0]) : globals[parts[0]]) || parts[0];\n    const last = parts.pop();\n    let propertyPath = root;\n    let deepAssignment = [\n        ...parts.map(part => {\n            propertyPath += getPropertyAccess(part);\n            return `${propertyPath}${_}=${_}${propertyPath}${_}||${_}{}`;\n        }),\n        `${propertyPath}${getPropertyAccess(last)}`\n    ].join(`,${_}`) + `${_}=${_}${assignment}`;\n    if (parts.length > 0) {\n        deepAssignment = `(${deepAssignment})`;\n    }\n    return deepAssignment;\n}\n\nfunction trimEmptyImports(dependencies) {\n    let index = dependencies.length;\n    while (index--) {\n        const { imports, reexports } = dependencies[index];\n        if (imports || reexports) {\n            return dependencies.slice(0, index + 1);\n        }\n    }\n    return [];\n}\n\nfunction iife(magicString, { accessedGlobals, dependencies, exports, hasDefaultExport, hasExports, indent: t, intro, namedExportsMode, outro, snippets, onwarn }, { compact, esModule, extend, freeze, externalLiveBindings, globals, interop, name, namespaceToStringTag, strict }) {\n    const { _, getNonArrowFunctionIntro, getPropertyAccess, n } = snippets;\n    const isNamespaced = name && name.includes('.');\n    const useVariableAssignment = !extend && !isNamespaced;\n    if (name && useVariableAssignment && !isLegal(name)) {\n        return error(errorIllegalIdentifierAsName(name));\n    }\n    warnOnBuiltins(onwarn, dependencies);\n    const external = trimEmptyImports(dependencies);\n    const deps = external.map(dep => dep.globalName || 'null');\n    const parameters = external.map(m => m.name);\n    if (hasExports && !name) {\n        onwarn(errorMissingNameOptionForIifeExport());\n    }\n    if (namedExportsMode && hasExports) {\n        if (extend) {\n            deps.unshift(`this${keypath(name, getPropertyAccess)}${_}=${_}this${keypath(name, getPropertyAccess)}${_}||${_}{}`);\n            parameters.unshift('exports');\n        }\n        else {\n            deps.unshift('{}');\n            parameters.unshift('exports');\n        }\n    }\n    const useStrict = strict ? `${t}'use strict';${n}` : '';\n    const interopBlock = getInteropBlock(dependencies, interop, externalLiveBindings, freeze, namespaceToStringTag, accessedGlobals, t, snippets);\n    magicString.prepend(`${intro}${interopBlock}`);\n    let wrapperIntro = `(${getNonArrowFunctionIntro(parameters, {\n        isAsync: false,\n        name: null\n    })}{${n}${useStrict}${n}`;\n    if (hasExports) {\n        if (name && !(extend && namedExportsMode)) {\n            wrapperIntro =\n                (useVariableAssignment ? `var ${name}` : `this${keypath(name, getPropertyAccess)}`) +\n                    `${_}=${_}${wrapperIntro}`;\n        }\n        if (isNamespaced) {\n            wrapperIntro = setupNamespace(name, 'this', globals, snippets, compact) + wrapperIntro;\n        }\n    }\n    let wrapperOutro = `${n}${n}})(${deps.join(`,${_}`)});`;\n    if (hasExports && !extend && namedExportsMode) {\n        wrapperOutro = `${n}${n}${t}return exports;${wrapperOutro}`;\n    }\n    const exportBlock = getExportBlock$1(exports, dependencies, namedExportsMode, interop, snippets, t, externalLiveBindings);\n    let namespaceMarkers = getNamespaceMarkers(namedExportsMode && hasExports, esModule === true || (esModule === 'if-default-prop' && hasDefaultExport), namespaceToStringTag, snippets);\n    if (namespaceMarkers) {\n        namespaceMarkers = n + n + namespaceMarkers;\n    }\n    magicString\n        .append(`${exportBlock}${namespaceMarkers}${outro}`)\n        .indent(t)\n        .prepend(wrapperIntro)\n        .append(wrapperOutro);\n}\n\nfunction system(magicString, { accessedGlobals, dependencies, exports, hasExports, indent: t, intro, snippets, outro, usesTopLevelAwait }, { externalLiveBindings, freeze, name, namespaceToStringTag, strict, systemNullSetters }) {\n    const { _, getFunctionIntro, getNonArrowFunctionIntro, n, s } = snippets;\n    const { importBindings, setters, starExcludes } = analyzeDependencies(dependencies, exports, t, snippets);\n    const registeredName = name ? `'${name}',${_}` : '';\n    const wrapperParameters = accessedGlobals.has('module')\n        ? ['exports', 'module']\n        : hasExports\n            ? ['exports']\n            : [];\n    // factory function should be wrapped by parentheses to avoid lazy parsing,\n    // cf. https://v8.dev/blog/preparser#pife\n    let wrapperStart = `System.register(${registeredName}[` +\n        dependencies.map(({ importPath }) => `'${importPath}'`).join(`,${_}`) +\n        `],${_}(${getNonArrowFunctionIntro(wrapperParameters, {\n            isAsync: false,\n            name: null\n        })}{${n}${t}${strict ? \"'use strict';\" : ''}` +\n        getStarExcludesBlock(starExcludes, t, snippets) +\n        getImportBindingsBlock(importBindings, t, snippets) +\n        `${n}${t}return${_}{${setters.length > 0\n            ? `${n}${t}${t}setters:${_}[${setters\n                .map(setter => setter\n                ? `${getFunctionIntro(['module'], {\n                    isAsync: false,\n                    name: null\n                })}{${n}${t}${t}${t}${setter}${n}${t}${t}}`\n                : systemNullSetters\n                    ? `null`\n                    : `${getFunctionIntro([], { isAsync: false, name: null })}{}`)\n                .join(`,${_}`)}],`\n            : ''}${n}`;\n    wrapperStart += `${t}${t}execute:${_}(${getNonArrowFunctionIntro([], {\n        isAsync: usesTopLevelAwait,\n        name: null\n    })}{${n}${n}`;\n    const wrapperEnd = `${t}${t}})${n}${t}}${s}${n}}));`;\n    magicString\n        .prepend(intro +\n        getHelpersBlock(null, accessedGlobals, t, snippets, externalLiveBindings, freeze, namespaceToStringTag) +\n        getHoistedExportsBlock(exports, t, snippets))\n        .append(`${outro}${n}${n}` +\n        getSyntheticExportsBlock(exports, t, snippets) +\n        getMissingExportsBlock(exports, t, snippets))\n        .indent(`${t}${t}${t}`)\n        .append(wrapperEnd)\n        .prepend(wrapperStart);\n}\nfunction analyzeDependencies(dependencies, exports, t, { _, cnst, getObject, getPropertyAccess, n }) {\n    const importBindings = [];\n    const setters = [];\n    let starExcludes = null;\n    for (const { imports, reexports } of dependencies) {\n        const setter = [];\n        if (imports) {\n            for (const specifier of imports) {\n                importBindings.push(specifier.local);\n                if (specifier.imported === '*') {\n                    setter.push(`${specifier.local}${_}=${_}module;`);\n                }\n                else {\n                    setter.push(`${specifier.local}${_}=${_}module${getPropertyAccess(specifier.imported)};`);\n                }\n            }\n        }\n        if (reexports) {\n            const reexportedNames = [];\n            let hasStarReexport = false;\n            for (const { imported, reexported } of reexports) {\n                if (reexported === '*') {\n                    hasStarReexport = true;\n                }\n                else {\n                    reexportedNames.push([\n                        reexported,\n                        imported === '*' ? 'module' : `module${getPropertyAccess(imported)}`\n                    ]);\n                }\n            }\n            if (reexportedNames.length > 1 || hasStarReexport) {\n                const exportMapping = getObject(reexportedNames, { lineBreakIndent: null });\n                if (hasStarReexport) {\n                    if (!starExcludes) {\n                        starExcludes = getStarExcludes({ dependencies, exports });\n                    }\n                    setter.push(`${cnst} setter${_}=${_}${exportMapping};`, `for${_}(${cnst} name in module)${_}{`, `${t}if${_}(!_starExcludes[name])${_}setter[name]${_}=${_}module[name];`, '}', 'exports(setter);');\n                }\n                else {\n                    setter.push(`exports(${exportMapping});`);\n                }\n            }\n            else {\n                const [key, value] = reexportedNames[0];\n                setter.push(`exports('${key}',${_}${value});`);\n            }\n        }\n        setters.push(setter.join(`${n}${t}${t}${t}`));\n    }\n    return { importBindings, setters, starExcludes };\n}\nconst getStarExcludes = ({ dependencies, exports }) => {\n    const starExcludes = new Set(exports.map(expt => expt.exported));\n    starExcludes.add('default');\n    for (const { reexports } of dependencies) {\n        if (reexports) {\n            for (const reexport of reexports) {\n                if (reexport.reexported !== '*')\n                    starExcludes.add(reexport.reexported);\n            }\n        }\n    }\n    return starExcludes;\n};\nconst getStarExcludesBlock = (starExcludes, t, { _, cnst, getObject, n }) => starExcludes\n    ? `${n}${t}${cnst} _starExcludes${_}=${_}${getObject([...starExcludes].map(property => [property, '1']), { lineBreakIndent: { base: t, t } })};`\n    : '';\nconst getImportBindingsBlock = (importBindings, t, { _, n }) => (importBindings.length > 0 ? `${n}${t}var ${importBindings.join(`,${_}`)};` : '');\nconst getHoistedExportsBlock = (exports, t, snippets) => getExportsBlock(exports.filter(expt => expt.hoisted).map(expt => ({ name: expt.exported, value: expt.local })), t, snippets);\nfunction getExportsBlock(exports, t, { _, n }) {\n    if (exports.length === 0) {\n        return '';\n    }\n    if (exports.length === 1) {\n        return `exports('${exports[0].name}',${_}${exports[0].value});${n}${n}`;\n    }\n    return (`exports({${n}` +\n        exports.map(({ name, value }) => `${t}${name}:${_}${value}`).join(`,${n}`) +\n        `${n}});${n}${n}`);\n}\nconst getSyntheticExportsBlock = (exports, t, snippets) => getExportsBlock(exports\n    .filter(expt => expt.expression)\n    .map(expt => ({ name: expt.exported, value: expt.local })), t, snippets);\nconst getMissingExportsBlock = (exports, t, snippets) => getExportsBlock(exports\n    .filter(expt => expt.local === MISSING_EXPORT_SHIM_VARIABLE)\n    .map(expt => ({ name: expt.exported, value: MISSING_EXPORT_SHIM_VARIABLE })), t, snippets);\n\nfunction globalProperty(name, globalVariable, getPropertyAccess) {\n    if (!name)\n        return 'null';\n    return `${globalVariable}${keypath(name, getPropertyAccess)}`;\n}\nfunction safeAccess(name, globalVariable, { _, getPropertyAccess }) {\n    let propertyPath = globalVariable;\n    return name\n        .split('.')\n        .map(part => (propertyPath += getPropertyAccess(part)))\n        .join(`${_}&&${_}`);\n}\nfunction umd(magicString, { accessedGlobals, dependencies, exports, hasDefaultExport, hasExports, id, indent: t, intro, namedExportsMode, outro, snippets, onwarn }, { amd, compact, esModule, extend, externalLiveBindings, freeze, interop, name, namespaceToStringTag, globals, noConflict, strict }) {\n    const { _, cnst, getFunctionIntro, getNonArrowFunctionIntro, getPropertyAccess, n, s } = snippets;\n    const factoryVariable = compact ? 'f' : 'factory';\n    const globalVariable = compact ? 'g' : 'global';\n    if (hasExports && !name) {\n        return error(errorMissingNameOptionForUmdExport());\n    }\n    warnOnBuiltins(onwarn, dependencies);\n    const amdDeps = dependencies.map(m => `'${updateExtensionForRelativeAmdId(m.importPath, amd.forceJsExtensionForImports)}'`);\n    const cjsDeps = dependencies.map(m => `require('${m.importPath}')`);\n    const trimmedImports = trimEmptyImports(dependencies);\n    const globalDeps = trimmedImports.map(module => globalProperty(module.globalName, globalVariable, getPropertyAccess));\n    const factoryParameters = trimmedImports.map(m => m.name);\n    if (namedExportsMode && (hasExports || noConflict)) {\n        amdDeps.unshift(`'exports'`);\n        cjsDeps.unshift(`exports`);\n        globalDeps.unshift(assignToDeepVariable(name, globalVariable, globals, `${extend ? `${globalProperty(name, globalVariable, getPropertyAccess)}${_}||${_}` : ''}{}`, snippets));\n        factoryParameters.unshift('exports');\n    }\n    const completeAmdId = getCompleteAmdId(amd, id);\n    const amdParameters = (completeAmdId ? `'${completeAmdId}',${_}` : ``) +\n        (amdDeps.length > 0 ? `[${amdDeps.join(`,${_}`)}],${_}` : ``);\n    const define = amd.define;\n    const cjsExport = !namedExportsMode && hasExports ? `module.exports${_}=${_}` : ``;\n    const useStrict = strict ? `${_}'use strict';${n}` : ``;\n    let iifeExport;\n    if (noConflict) {\n        const noConflictExportsVariable = compact ? 'e' : 'exports';\n        let factory;\n        if (!namedExportsMode && hasExports) {\n            factory = `${cnst} ${noConflictExportsVariable}${_}=${_}${assignToDeepVariable(name, globalVariable, globals, `${factoryVariable}(${globalDeps.join(`,${_}`)})`, snippets)};`;\n        }\n        else {\n            const module = globalDeps.shift();\n            factory =\n                `${cnst} ${noConflictExportsVariable}${_}=${_}${module};${n}` +\n                    `${t}${t}${factoryVariable}(${[noConflictExportsVariable, ...globalDeps].join(`,${_}`)});`;\n        }\n        iifeExport =\n            `(${getFunctionIntro([], { isAsync: false, name: null })}{${n}` +\n                `${t}${t}${cnst} current${_}=${_}${safeAccess(name, globalVariable, snippets)};${n}` +\n                `${t}${t}${factory}${n}` +\n                `${t}${t}${noConflictExportsVariable}.noConflict${_}=${_}${getFunctionIntro([], {\n                    isAsync: false,\n                    name: null\n                })}{${_}` +\n                `${globalProperty(name, globalVariable, getPropertyAccess)}${_}=${_}current;${_}return ${noConflictExportsVariable}${s}${_}};${n}` +\n                `${t}})()`;\n    }\n    else {\n        iifeExport = `${factoryVariable}(${globalDeps.join(`,${_}`)})`;\n        if (!namedExportsMode && hasExports) {\n            iifeExport = assignToDeepVariable(name, globalVariable, globals, iifeExport, snippets);\n        }\n    }\n    const iifeNeedsGlobal = hasExports || (noConflict && namedExportsMode) || globalDeps.length > 0;\n    const wrapperParameters = [factoryVariable];\n    if (iifeNeedsGlobal) {\n        wrapperParameters.unshift(globalVariable);\n    }\n    const globalArgument = iifeNeedsGlobal ? `this,${_}` : '';\n    const iifeStart = iifeNeedsGlobal\n        ? `(${globalVariable}${_}=${_}typeof globalThis${_}!==${_}'undefined'${_}?${_}globalThis${_}:${_}${globalVariable}${_}||${_}self,${_}`\n        : '';\n    const iifeEnd = iifeNeedsGlobal ? ')' : '';\n    const cjsIntro = iifeNeedsGlobal\n        ? `${t}typeof exports${_}===${_}'object'${_}&&${_}typeof module${_}!==${_}'undefined'${_}?` +\n            `${_}${cjsExport}${factoryVariable}(${cjsDeps.join(`,${_}`)})${_}:${n}`\n        : '';\n    const wrapperIntro = `(${getNonArrowFunctionIntro(wrapperParameters, { isAsync: false, name: null })}{${n}` +\n        cjsIntro +\n        `${t}typeof ${define}${_}===${_}'function'${_}&&${_}${define}.amd${_}?${_}${define}(${amdParameters}${factoryVariable})${_}:${n}` +\n        `${t}${iifeStart}${iifeExport}${iifeEnd};${n}` +\n        // factory function should be wrapped by parentheses to avoid lazy parsing,\n        // cf. https://v8.dev/blog/preparser#pife\n        `})(${globalArgument}(${getNonArrowFunctionIntro(factoryParameters, {\n            isAsync: false,\n            name: null\n        })}{${useStrict}${n}`;\n    const wrapperOutro = n + n + '}));';\n    magicString.prepend(`${intro}${getInteropBlock(dependencies, interop, externalLiveBindings, freeze, namespaceToStringTag, accessedGlobals, t, snippets)}`);\n    const exportBlock = getExportBlock$1(exports, dependencies, namedExportsMode, interop, snippets, t, externalLiveBindings);\n    let namespaceMarkers = getNamespaceMarkers(namedExportsMode && hasExports, esModule === true || (esModule === 'if-default-prop' && hasDefaultExport), namespaceToStringTag, snippets);\n    if (namespaceMarkers) {\n        namespaceMarkers = n + n + namespaceMarkers;\n    }\n    magicString\n        .append(`${exportBlock}${namespaceMarkers}${outro}`)\n        .trim()\n        .indent(t)\n        .append(wrapperOutro)\n        .prepend(wrapperIntro);\n}\n\nconst finalisers = { amd, cjs, es, iife, system, umd };\n\nconst concatSeparator = (out, next) => (next ? `${out}\\n${next}` : out);\nconst concatDblSeparator = (out, next) => (next ? `${out}\\n\\n${next}` : out);\nasync function createAddons(options, outputPluginDriver, chunk) {\n    try {\n        let [banner, footer, intro, outro] = await Promise.all([\n            outputPluginDriver.hookReduceValue('banner', options.banner(chunk), [chunk], concatSeparator),\n            outputPluginDriver.hookReduceValue('footer', options.footer(chunk), [chunk], concatSeparator),\n            outputPluginDriver.hookReduceValue('intro', options.intro(chunk), [chunk], concatDblSeparator),\n            outputPluginDriver.hookReduceValue('outro', options.outro(chunk), [chunk], concatDblSeparator)\n        ]);\n        if (intro)\n            intro += '\\n\\n';\n        if (outro)\n            outro = `\\n\\n${outro}`;\n        if (banner)\n            banner += '\\n';\n        if (footer)\n            footer = '\\n' + footer;\n        return { banner, footer, intro, outro };\n    }\n    catch (error_) {\n        return error(errorAddonNotGenerated(error_.message, error_.hook, error_.plugin));\n    }\n}\n\nconst DECONFLICT_IMPORTED_VARIABLES_BY_FORMAT = {\n    amd: deconflictImportsOther,\n    cjs: deconflictImportsOther,\n    es: deconflictImportsEsmOrSystem,\n    iife: deconflictImportsOther,\n    system: deconflictImportsEsmOrSystem,\n    umd: deconflictImportsOther\n};\nfunction deconflictChunk(modules, dependenciesToBeDeconflicted, imports, usedNames, format, interop, preserveModules, externalLiveBindings, chunkByModule, externalChunkByModule, syntheticExports, exportNamesByVariable, accessedGlobalsByScope, includedNamespaces) {\n    const reversedModules = [...modules].reverse();\n    for (const module of reversedModules) {\n        module.scope.addUsedOutsideNames(usedNames, format, exportNamesByVariable, accessedGlobalsByScope);\n    }\n    deconflictTopLevelVariables(usedNames, reversedModules, includedNamespaces);\n    DECONFLICT_IMPORTED_VARIABLES_BY_FORMAT[format](usedNames, imports, dependenciesToBeDeconflicted, interop, preserveModules, externalLiveBindings, chunkByModule, externalChunkByModule, syntheticExports);\n    for (const module of reversedModules) {\n        module.scope.deconflict(format, exportNamesByVariable, accessedGlobalsByScope);\n    }\n}\nfunction deconflictImportsEsmOrSystem(usedNames, imports, dependenciesToBeDeconflicted, _interop, preserveModules, _externalLiveBindings, chunkByModule, externalChunkByModule, syntheticExports) {\n    // This is needed for namespace reexports\n    for (const dependency of dependenciesToBeDeconflicted.dependencies) {\n        if (preserveModules || dependency instanceof ExternalChunk) {\n            dependency.variableName = getSafeName(dependency.suggestedVariableName, usedNames, null);\n        }\n    }\n    for (const variable of imports) {\n        const module = variable.module;\n        const name = variable.name;\n        if (variable.isNamespace && (preserveModules || module instanceof ExternalModule)) {\n            variable.setRenderNames(null, (module instanceof ExternalModule\n                ? externalChunkByModule.get(module)\n                : chunkByModule.get(module)).variableName);\n        }\n        else if (module instanceof ExternalModule && name === 'default') {\n            variable.setRenderNames(null, getSafeName([...module.exportedVariables].some(([exportedVariable, exportedName]) => exportedName === '*' && exportedVariable.included)\n                ? module.suggestedVariableName + '__default'\n                : module.suggestedVariableName, usedNames, variable.forbiddenNames));\n        }\n        else {\n            variable.setRenderNames(null, getSafeName(name, usedNames, variable.forbiddenNames));\n        }\n    }\n    for (const variable of syntheticExports) {\n        variable.setRenderNames(null, getSafeName(variable.name, usedNames, variable.forbiddenNames));\n    }\n}\nfunction deconflictImportsOther(usedNames, imports, { deconflictedDefault, deconflictedNamespace, dependencies }, interop, preserveModules, externalLiveBindings, chunkByModule, externalChunkByModule) {\n    for (const chunk of dependencies) {\n        chunk.variableName = getSafeName(chunk.suggestedVariableName, usedNames, null);\n    }\n    for (const chunk of deconflictedNamespace) {\n        chunk.namespaceVariableName = getSafeName(`${chunk.suggestedVariableName}__namespace`, usedNames, null);\n    }\n    for (const externalModule of deconflictedDefault) {\n        externalModule.defaultVariableName =\n            deconflictedNamespace.has(externalModule) &&\n                canDefaultBeTakenFromNamespace(interop(externalModule.id), externalLiveBindings)\n                ? externalModule.namespaceVariableName\n                : getSafeName(`${externalModule.suggestedVariableName}__default`, usedNames, null);\n    }\n    for (const variable of imports) {\n        const module = variable.module;\n        if (module instanceof ExternalModule) {\n            const chunk = externalChunkByModule.get(module);\n            const name = variable.name;\n            if (name === 'default') {\n                const moduleInterop = interop(module.id);\n                const variableName = defaultInteropHelpersByInteropType[moduleInterop]\n                    ? chunk.defaultVariableName\n                    : chunk.variableName;\n                if (isDefaultAProperty(moduleInterop, externalLiveBindings)) {\n                    variable.setRenderNames(variableName, 'default');\n                }\n                else {\n                    variable.setRenderNames(null, variableName);\n                }\n            }\n            else if (name === '*') {\n                variable.setRenderNames(null, namespaceInteropHelpersByInteropType[interop(module.id)]\n                    ? chunk.namespaceVariableName\n                    : chunk.variableName);\n            }\n            else {\n                // if the second parameter is `null`, it uses its \"name\" for the property name\n                variable.setRenderNames(chunk.variableName, null);\n            }\n        }\n        else {\n            const chunk = chunkByModule.get(module);\n            if (preserveModules && variable.isNamespace) {\n                variable.setRenderNames(null, chunk.exportMode === 'default' ? chunk.namespaceVariableName : chunk.variableName);\n            }\n            else if (chunk.exportMode === 'default') {\n                variable.setRenderNames(null, chunk.variableName);\n            }\n            else {\n                variable.setRenderNames(chunk.variableName, chunk.getVariableExportName(variable));\n            }\n        }\n    }\n}\nfunction deconflictTopLevelVariables(usedNames, modules, includedNamespaces) {\n    for (const module of modules) {\n        for (const variable of module.scope.variables.values()) {\n            if (variable.included &&\n                // this will only happen for exports in some formats\n                !(variable.renderBaseName ||\n                    (variable instanceof ExportDefaultVariable && variable.getOriginalVariable() !== variable))) {\n                variable.setRenderNames(null, getSafeName(variable.name, usedNames, variable.forbiddenNames));\n            }\n        }\n        if (includedNamespaces.has(module)) {\n            const namespace = module.namespace;\n            namespace.setRenderNames(null, getSafeName(namespace.name, usedNames, namespace.forbiddenNames));\n        }\n    }\n}\n\nfunction assignExportsToMangledNames(exports, exportsByName, exportNamesByVariable) {\n    let nameIndex = 0;\n    for (const variable of exports) {\n        let [exportName] = variable.name;\n        if (exportsByName.has(exportName)) {\n            do {\n                exportName = toBase64(++nameIndex);\n                // skip past leading number identifiers\n                if (exportName.charCodeAt(0) === 49 /* '1' */) {\n                    nameIndex += 9 * 64 ** (exportName.length - 1);\n                    exportName = toBase64(nameIndex);\n                }\n            } while (RESERVED_NAMES$1.has(exportName) || exportsByName.has(exportName));\n        }\n        exportsByName.set(exportName, variable);\n        exportNamesByVariable.set(variable, [exportName]);\n    }\n}\nfunction assignExportsToNames(exports, exportsByName, exportNamesByVariable) {\n    for (const variable of exports) {\n        let nameIndex = 0;\n        let exportName = variable.name;\n        while (exportsByName.has(exportName)) {\n            exportName = variable.name + '$' + ++nameIndex;\n        }\n        exportsByName.set(exportName, variable);\n        exportNamesByVariable.set(variable, [exportName]);\n    }\n}\n\nfunction getExportMode(chunk, { exports: exportMode, name, format }, facadeModuleId, warn) {\n    const exportKeys = chunk.getExportNames();\n    if (exportMode === 'default') {\n        if (exportKeys.length !== 1 || exportKeys[0] !== 'default') {\n            return error(errorIncompatibleExportOptionValue('default', exportKeys, facadeModuleId));\n        }\n    }\n    else if (exportMode === 'none' && exportKeys.length > 0) {\n        return error(errorIncompatibleExportOptionValue('none', exportKeys, facadeModuleId));\n    }\n    if (exportMode === 'auto') {\n        if (exportKeys.length === 0) {\n            exportMode = 'none';\n        }\n        else if (exportKeys.length === 1 && exportKeys[0] === 'default') {\n            exportMode = 'default';\n        }\n        else {\n            if (format !== 'es' && format !== 'system' && exportKeys.includes('default')) {\n                warn(errorMixedExport(facadeModuleId, name));\n            }\n            exportMode = 'named';\n        }\n    }\n    return exportMode;\n}\n\nfunction guessIndentString(code) {\n    const lines = code.split('\\n');\n    const tabbed = lines.filter(line => /^\\t+/.test(line));\n    const spaced = lines.filter(line => /^ {2,}/.test(line));\n    if (tabbed.length === 0 && spaced.length === 0) {\n        return null;\n    }\n    // More lines tabbed than spaced? Assume tabs, and\n    // default to tabs in the case of a tie (or nothing\n    // to go on)\n    if (tabbed.length >= spaced.length) {\n        return '\\t';\n    }\n    // Otherwise, we need to guess the multiple\n    const min = spaced.reduce((previous, current) => {\n        const numberSpaces = /^ +/.exec(current)[0].length;\n        return Math.min(numberSpaces, previous);\n    }, Infinity);\n    return ' '.repeat(min);\n}\nfunction getIndentString(modules, options) {\n    if (options.indent !== true)\n        return options.indent;\n    for (const module of modules) {\n        const indent = guessIndentString(module.originalCode);\n        if (indent !== null)\n            return indent;\n    }\n    return '\\t';\n}\n\nfunction getStaticDependencies(chunk, orderedModules, chunkByModule, externalChunkByModule) {\n    const staticDependencyBlocks = [];\n    const handledDependencies = new Set();\n    for (let modulePos = orderedModules.length - 1; modulePos >= 0; modulePos--) {\n        const module = orderedModules[modulePos];\n        if (!handledDependencies.has(module)) {\n            const staticDependencies = [];\n            addStaticDependencies(module, staticDependencies, handledDependencies, chunk, chunkByModule, externalChunkByModule);\n            staticDependencyBlocks.unshift(staticDependencies);\n        }\n    }\n    const dependencies = new Set();\n    for (const block of staticDependencyBlocks) {\n        for (const dependency of block) {\n            dependencies.add(dependency);\n        }\n    }\n    return dependencies;\n}\nfunction addStaticDependencies(module, staticDependencies, handledModules, chunk, chunkByModule, externalChunkByModule) {\n    const dependencies = module.getDependenciesToBeIncluded();\n    for (const dependency of dependencies) {\n        if (dependency instanceof ExternalModule) {\n            staticDependencies.push(externalChunkByModule.get(dependency));\n            continue;\n        }\n        const dependencyChunk = chunkByModule.get(dependency);\n        if (dependencyChunk !== chunk) {\n            staticDependencies.push(dependencyChunk);\n            continue;\n        }\n        if (!handledModules.has(dependency)) {\n            handledModules.add(dependency);\n            addStaticDependencies(dependency, staticDependencies, handledModules, chunk, chunkByModule, externalChunkByModule);\n        }\n    }\n}\n\n// Four random characters from the private use area to minimize risk of conflicts\nconst hashPlaceholderLeft = '!~{';\nconst hashPlaceholderRight = '}~';\nconst hashPlaceholderOverhead = hashPlaceholderLeft.length + hashPlaceholderRight.length;\n// This is the size of a sha256\nconst maxHashSize = 64;\nconst defaultHashSize = 8;\nconst getHashPlaceholderGenerator = () => {\n    let nextIndex = 0;\n    return (optionName, hashSize = defaultHashSize) => {\n        if (hashSize > maxHashSize) {\n            return error(errorFailedValidation(`Hashes cannot be longer than ${maxHashSize} characters, received ${hashSize}. Check the \"${optionName}\" option.`));\n        }\n        const placeholder = `${hashPlaceholderLeft}${toBase64(++nextIndex).padStart(hashSize - hashPlaceholderOverhead, '0')}${hashPlaceholderRight}`;\n        if (placeholder.length > hashSize) {\n            return error(errorFailedValidation(`To generate hashes for this number of chunks (currently ${nextIndex}), you need a minimum hash size of ${placeholder.length}, received ${hashSize}. Check the \"${optionName}\" option.`));\n        }\n        return placeholder;\n    };\n};\nconst REPLACER_REGEX = new RegExp(`${hashPlaceholderLeft}[0-9a-zA-Z_$]{1,${maxHashSize - hashPlaceholderOverhead}}${hashPlaceholderRight}`, 'g');\nconst replacePlaceholders = (code, hashesByPlaceholder) => code.replace(REPLACER_REGEX, placeholder => hashesByPlaceholder.get(placeholder) || placeholder);\nconst replaceSinglePlaceholder = (code, placeholder, value) => code.replace(REPLACER_REGEX, match => (match === placeholder ? value : match));\nconst replacePlaceholdersWithDefaultAndGetContainedPlaceholders = (code, placeholders) => {\n    const containedPlaceholders = new Set();\n    const transformedCode = code.replace(REPLACER_REGEX, placeholder => {\n        if (placeholders.has(placeholder)) {\n            containedPlaceholders.add(placeholder);\n            return `${hashPlaceholderLeft}${'0'.repeat(placeholder.length - hashPlaceholderOverhead)}${hashPlaceholderRight}`;\n        }\n        return placeholder;\n    });\n    return { containedPlaceholders, transformedCode };\n};\n\nconst lowercaseBundleKeys = Symbol('bundleKeys');\nconst FILE_PLACEHOLDER = {\n    type: 'placeholder'\n};\nconst getOutputBundle = (outputBundleBase) => {\n    const reservedLowercaseBundleKeys = new Set();\n    return new Proxy(outputBundleBase, {\n        deleteProperty(target, key) {\n            if (typeof key === 'string') {\n                reservedLowercaseBundleKeys.delete(key.toLowerCase());\n            }\n            return Reflect.deleteProperty(target, key);\n        },\n        get(target, key) {\n            if (key === lowercaseBundleKeys) {\n                return reservedLowercaseBundleKeys;\n            }\n            return Reflect.get(target, key);\n        },\n        set(target, key, value) {\n            if (typeof key === 'string') {\n                reservedLowercaseBundleKeys.add(key.toLowerCase());\n            }\n            return Reflect.set(target, key, value);\n        }\n    });\n};\nconst removeUnreferencedAssets = (outputBundle) => {\n    const unreferencedAssets = new Set();\n    const bundleEntries = Object.values(outputBundle);\n    for (const asset of bundleEntries) {\n        asset.type === 'asset' && asset.needsCodeReference && unreferencedAssets.add(asset.fileName);\n    }\n    for (const chunk of bundleEntries) {\n        if (chunk.type === 'chunk') {\n            for (const referencedFile of chunk.referencedFiles) {\n                unreferencedAssets.has(referencedFile) && unreferencedAssets.delete(referencedFile);\n            }\n        }\n    }\n    for (const file of unreferencedAssets) {\n        delete outputBundle[file];\n    }\n};\n\nfunction renderNamePattern(pattern, patternName, replacements) {\n    if (isPathFragment(pattern))\n        return error(errorFailedValidation(`Invalid pattern \"${pattern}\" for \"${patternName}\", patterns can be neither absolute nor relative paths. If you want your files to be stored in a subdirectory, write its name without a leading slash like this: subdirectory/pattern.`));\n    return pattern.replace(/\\[(\\w+)(:\\d+)?]/g, (_match, type, size) => {\n        if (!replacements.hasOwnProperty(type) || (size && type !== 'hash')) {\n            return error(errorFailedValidation(`\"[${type}${size || ''}]\" is not a valid placeholder in the \"${patternName}\" pattern.`));\n        }\n        const replacement = replacements[type](size && Number.parseInt(size.slice(1)));\n        if (isPathFragment(replacement))\n            return error(errorFailedValidation(`Invalid substitution \"${replacement}\" for placeholder \"[${type}]\" in \"${patternName}\" pattern, can be neither absolute nor relative path.`));\n        return replacement;\n    });\n}\nfunction makeUnique(name, { [lowercaseBundleKeys]: reservedLowercaseBundleKeys }) {\n    if (!reservedLowercaseBundleKeys.has(name.toLowerCase()))\n        return name;\n    const extension = extname(name);\n    name = name.slice(0, Math.max(0, name.length - extension.length));\n    let uniqueName, uniqueIndex = 1;\n    while (reservedLowercaseBundleKeys.has((uniqueName = name + ++uniqueIndex + extension).toLowerCase()))\n        ;\n    return uniqueName;\n}\n\nconst NON_ASSET_EXTENSIONS = new Set([\n    '.js',\n    '.jsx',\n    '.ts',\n    '.tsx',\n    '.mjs',\n    '.mts',\n    '.cjs',\n    '.cts'\n]);\nfunction getGlobalName(chunk, globals, hasExports, warn) {\n    const globalName = typeof globals === 'function' ? globals(chunk.id) : globals[chunk.id];\n    if (globalName) {\n        return globalName;\n    }\n    if (hasExports) {\n        warn(errorMissingGlobalName(chunk.id, chunk.variableName));\n        return chunk.variableName;\n    }\n}\nclass Chunk {\n    constructor(orderedModules, inputOptions, outputOptions, unsetOptions, pluginDriver, modulesById, chunkByModule, externalChunkByModule, facadeChunkByModule, includedNamespaces, manualChunkAlias, getPlaceholder, bundle, inputBase, snippets) {\n        this.orderedModules = orderedModules;\n        this.inputOptions = inputOptions;\n        this.outputOptions = outputOptions;\n        this.unsetOptions = unsetOptions;\n        this.pluginDriver = pluginDriver;\n        this.modulesById = modulesById;\n        this.chunkByModule = chunkByModule;\n        this.externalChunkByModule = externalChunkByModule;\n        this.facadeChunkByModule = facadeChunkByModule;\n        this.includedNamespaces = includedNamespaces;\n        this.manualChunkAlias = manualChunkAlias;\n        this.getPlaceholder = getPlaceholder;\n        this.bundle = bundle;\n        this.inputBase = inputBase;\n        this.snippets = snippets;\n        this.entryModules = [];\n        this.exportMode = 'named';\n        this.facadeModule = null;\n        this.namespaceVariableName = '';\n        this.variableName = '';\n        this.accessedGlobalsByScope = new Map();\n        this.dependencies = new Set();\n        this.dynamicEntryModules = [];\n        this.dynamicName = null;\n        this.exportNamesByVariable = new Map();\n        this.exports = new Set();\n        this.exportsByName = new Map();\n        this.fileName = null;\n        this.implicitEntryModules = [];\n        this.implicitlyLoadedBefore = new Set();\n        this.imports = new Set();\n        this.includedDynamicImports = null;\n        this.includedReexportsByModule = new Map();\n        // This may be updated in the constructor\n        this.isEmpty = true;\n        this.name = null;\n        this.needsExportsShim = false;\n        this.preRenderedChunkInfo = null;\n        this.preliminaryFileName = null;\n        this.renderedChunkInfo = null;\n        this.renderedDependencies = null;\n        this.renderedModules = Object.create(null);\n        this.sortedExportNames = null;\n        this.strictFacade = false;\n        this.execIndex = orderedModules.length > 0 ? orderedModules[0].execIndex : Infinity;\n        const chunkModules = new Set(orderedModules);\n        for (const module of orderedModules) {\n            chunkByModule.set(module, this);\n            if (module.namespace.included) {\n                includedNamespaces.add(module);\n            }\n            if (this.isEmpty && module.isIncluded()) {\n                this.isEmpty = false;\n            }\n            if (module.info.isEntry || outputOptions.preserveModules) {\n                this.entryModules.push(module);\n            }\n            for (const importer of module.includedDynamicImporters) {\n                if (!chunkModules.has(importer)) {\n                    this.dynamicEntryModules.push(module);\n                    // Modules with synthetic exports need an artificial namespace for dynamic imports\n                    if (module.info.syntheticNamedExports && !outputOptions.preserveModules) {\n                        includedNamespaces.add(module);\n                        this.exports.add(module.namespace);\n                    }\n                }\n            }\n            if (module.implicitlyLoadedAfter.size > 0) {\n                this.implicitEntryModules.push(module);\n            }\n        }\n        this.suggestedVariableName = makeLegal(this.generateVariableName());\n    }\n    static generateFacade(inputOptions, outputOptions, unsetOptions, pluginDriver, modulesById, chunkByModule, externalChunkByModule, facadeChunkByModule, includedNamespaces, facadedModule, facadeName, getPlaceholder, bundle, inputBase, snippets) {\n        const chunk = new Chunk([], inputOptions, outputOptions, unsetOptions, pluginDriver, modulesById, chunkByModule, externalChunkByModule, facadeChunkByModule, includedNamespaces, null, getPlaceholder, bundle, inputBase, snippets);\n        chunk.assignFacadeName(facadeName, facadedModule);\n        if (!facadeChunkByModule.has(facadedModule)) {\n            facadeChunkByModule.set(facadedModule, chunk);\n        }\n        for (const dependency of facadedModule.getDependenciesToBeIncluded()) {\n            chunk.dependencies.add(dependency instanceof Module\n                ? chunkByModule.get(dependency)\n                : externalChunkByModule.get(dependency));\n        }\n        if (!chunk.dependencies.has(chunkByModule.get(facadedModule)) &&\n            facadedModule.info.moduleSideEffects &&\n            facadedModule.hasEffects()) {\n            chunk.dependencies.add(chunkByModule.get(facadedModule));\n        }\n        chunk.ensureReexportsAreAvailableForModule(facadedModule);\n        chunk.facadeModule = facadedModule;\n        chunk.strictFacade = true;\n        return chunk;\n    }\n    canModuleBeFacade(module, exposedVariables) {\n        const moduleExportNamesByVariable = module.getExportNamesByVariable();\n        for (const exposedVariable of this.exports) {\n            if (!moduleExportNamesByVariable.has(exposedVariable)) {\n                return false;\n            }\n        }\n        for (const exposedVariable of exposedVariables) {\n            if (!(moduleExportNamesByVariable.has(exposedVariable) || exposedVariable.module === module)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    finalizeChunk(code, map, hashesByPlaceholder) {\n        const renderedChunkInfo = this.getRenderedChunkInfo();\n        const finalize = (code) => replacePlaceholders(code, hashesByPlaceholder);\n        const fileName = (this.fileName = finalize(renderedChunkInfo.fileName));\n        return {\n            ...renderedChunkInfo,\n            code,\n            dynamicImports: renderedChunkInfo.dynamicImports.map(finalize),\n            fileName,\n            implicitlyLoadedBefore: renderedChunkInfo.implicitlyLoadedBefore.map(finalize),\n            importedBindings: Object.fromEntries(Object.entries(renderedChunkInfo.importedBindings).map(([fileName, bindings]) => [\n                finalize(fileName),\n                bindings\n            ])),\n            imports: renderedChunkInfo.imports.map(finalize),\n            map,\n            referencedFiles: renderedChunkInfo.referencedFiles.map(finalize)\n        };\n    }\n    generateExports() {\n        this.sortedExportNames = null;\n        const remainingExports = new Set(this.exports);\n        if (this.facadeModule !== null &&\n            (this.facadeModule.preserveSignature !== false || this.strictFacade)) {\n            const exportNamesByVariable = this.facadeModule.getExportNamesByVariable();\n            for (const [variable, exportNames] of exportNamesByVariable) {\n                this.exportNamesByVariable.set(variable, [...exportNames]);\n                for (const exportName of exportNames) {\n                    this.exportsByName.set(exportName, variable);\n                }\n                remainingExports.delete(variable);\n            }\n        }\n        if (this.outputOptions.minifyInternalExports) {\n            assignExportsToMangledNames(remainingExports, this.exportsByName, this.exportNamesByVariable);\n        }\n        else {\n            assignExportsToNames(remainingExports, this.exportsByName, this.exportNamesByVariable);\n        }\n        if (this.outputOptions.preserveModules || (this.facadeModule && this.facadeModule.info.isEntry))\n            this.exportMode = getExportMode(this, this.outputOptions, this.facadeModule.id, this.inputOptions.onwarn);\n    }\n    generateFacades() {\n        const facades = [];\n        const entryModules = new Set([...this.entryModules, ...this.implicitEntryModules]);\n        const exposedVariables = new Set(this.dynamicEntryModules.map(({ namespace }) => namespace));\n        for (const module of entryModules) {\n            if (module.preserveSignature) {\n                for (const exportedVariable of module.getExportNamesByVariable().keys()) {\n                    exposedVariables.add(exportedVariable);\n                }\n            }\n        }\n        for (const module of entryModules) {\n            // eslint-disable-next-line unicorn/prefer-spread\n            const requiredFacades = Array.from(new Set(module.chunkNames.filter(({ isUserDefined }) => isUserDefined).map(({ name }) => name)), \n            // mapping must run after Set 'name' dedupe\n            name => ({\n                name\n            }));\n            if (requiredFacades.length === 0 && module.isUserDefinedEntryPoint) {\n                requiredFacades.push({});\n            }\n            // eslint-disable-next-line unicorn/prefer-spread\n            requiredFacades.push(...Array.from(module.chunkFileNames, fileName => ({ fileName })));\n            if (requiredFacades.length === 0) {\n                requiredFacades.push({});\n            }\n            if (!this.facadeModule) {\n                const needsStrictFacade = module.preserveSignature === 'strict' ||\n                    (module.preserveSignature === 'exports-only' &&\n                        module.getExportNamesByVariable().size > 0);\n                if (!needsStrictFacade ||\n                    this.outputOptions.preserveModules ||\n                    this.canModuleBeFacade(module, exposedVariables)) {\n                    this.facadeModule = module;\n                    this.facadeChunkByModule.set(module, this);\n                    if (module.preserveSignature) {\n                        this.strictFacade = needsStrictFacade;\n                    }\n                    this.assignFacadeName(requiredFacades.shift(), module, this.outputOptions.preserveModules);\n                }\n            }\n            for (const facadeName of requiredFacades) {\n                facades.push(Chunk.generateFacade(this.inputOptions, this.outputOptions, this.unsetOptions, this.pluginDriver, this.modulesById, this.chunkByModule, this.externalChunkByModule, this.facadeChunkByModule, this.includedNamespaces, module, facadeName, this.getPlaceholder, this.bundle, this.inputBase, this.snippets));\n            }\n        }\n        for (const module of this.dynamicEntryModules) {\n            if (module.info.syntheticNamedExports)\n                continue;\n            if (!this.facadeModule && this.canModuleBeFacade(module, exposedVariables)) {\n                this.facadeModule = module;\n                this.facadeChunkByModule.set(module, this);\n                this.strictFacade = true;\n                this.dynamicName = getChunkNameFromModule(module);\n            }\n            else if (this.facadeModule === module &&\n                !this.strictFacade &&\n                this.canModuleBeFacade(module, exposedVariables)) {\n                this.strictFacade = true;\n            }\n            else if (!this.facadeChunkByModule.get(module)?.strictFacade) {\n                this.includedNamespaces.add(module);\n                this.exports.add(module.namespace);\n            }\n        }\n        if (!this.outputOptions.preserveModules) {\n            this.addNecessaryImportsForFacades();\n        }\n        return facades;\n    }\n    getChunkName() {\n        return (this.name ?? (this.name = this.outputOptions.sanitizeFileName(this.getFallbackChunkName())));\n    }\n    getExportNames() {\n        return (this.sortedExportNames ?? (this.sortedExportNames = [...this.exportsByName.keys()].sort()));\n    }\n    getFileName() {\n        return this.fileName || this.getPreliminaryFileName().fileName;\n    }\n    getImportPath(importer) {\n        return escapeId(getImportPath(importer, this.getFileName(), this.outputOptions.format === 'amd' && !this.outputOptions.amd.forceJsExtensionForImports, true));\n    }\n    getPreliminaryFileName() {\n        if (this.preliminaryFileName) {\n            return this.preliminaryFileName;\n        }\n        let fileName;\n        let hashPlaceholder = null;\n        const { chunkFileNames, entryFileNames, file, format, preserveModules } = this.outputOptions;\n        if (file) {\n            fileName = basename(file);\n        }\n        else if (this.fileName === null) {\n            const [pattern, patternName] = preserveModules || this.facadeModule?.isUserDefinedEntryPoint\n                ? [entryFileNames, 'output.entryFileNames']\n                : [chunkFileNames, 'output.chunkFileNames'];\n            fileName = renderNamePattern(typeof pattern === 'function' ? pattern(this.getPreRenderedChunkInfo()) : pattern, patternName, {\n                format: () => format,\n                hash: size => hashPlaceholder || (hashPlaceholder = this.getPlaceholder(patternName, size)),\n                name: () => this.getChunkName()\n            });\n            if (!hashPlaceholder) {\n                fileName = makeUnique(fileName, this.bundle);\n            }\n        }\n        else {\n            fileName = this.fileName;\n        }\n        if (!hashPlaceholder) {\n            this.bundle[fileName] = FILE_PLACEHOLDER;\n        }\n        // Caching is essential to not conflict with the file name reservation above\n        return (this.preliminaryFileName = { fileName, hashPlaceholder });\n    }\n    getRenderedChunkInfo() {\n        if (this.renderedChunkInfo) {\n            return this.renderedChunkInfo;\n        }\n        return (this.renderedChunkInfo = {\n            ...this.getPreRenderedChunkInfo(),\n            dynamicImports: this.getDynamicDependencies().map(resolveFileName),\n            fileName: this.getFileName(),\n            // eslint-disable-next-line unicorn/prefer-spread\n            implicitlyLoadedBefore: Array.from(this.implicitlyLoadedBefore, resolveFileName),\n            importedBindings: getImportedBindingsPerDependency(this.getRenderedDependencies(), resolveFileName),\n            // eslint-disable-next-line unicorn/prefer-spread\n            imports: Array.from(this.dependencies, resolveFileName),\n            modules: this.renderedModules,\n            referencedFiles: this.getReferencedFiles()\n        });\n    }\n    getVariableExportName(variable) {\n        if (this.outputOptions.preserveModules && variable instanceof NamespaceVariable) {\n            return '*';\n        }\n        return this.exportNamesByVariable.get(variable)[0];\n    }\n    link() {\n        this.dependencies = getStaticDependencies(this, this.orderedModules, this.chunkByModule, this.externalChunkByModule);\n        for (const module of this.orderedModules) {\n            this.addImplicitlyLoadedBeforeFromModule(module);\n            this.setUpChunkImportsAndExportsForModule(module);\n        }\n    }\n    async render() {\n        const { dependencies, exportMode, facadeModule, inputOptions: { onwarn }, outputOptions, pluginDriver, snippets } = this;\n        const { format, hoistTransitiveImports, preserveModules } = outputOptions;\n        // for static and dynamic entry points, add transitive dependencies to this\n        // chunk's dependencies to avoid loading latency\n        if (hoistTransitiveImports && !preserveModules && facadeModule !== null) {\n            for (const dep of dependencies) {\n                if (dep instanceof Chunk)\n                    this.inlineChunkDependencies(dep);\n            }\n        }\n        const preliminaryFileName = this.getPreliminaryFileName();\n        const { accessedGlobals, indent, magicString, renderedSource, usedModules, usesTopLevelAwait } = this.renderModules(preliminaryFileName.fileName);\n        const renderedDependencies = [...this.getRenderedDependencies().values()];\n        const renderedExports = exportMode === 'none' ? [] : this.getChunkExportDeclarations(format);\n        let hasExports = renderedExports.length > 0;\n        let hasDefaultExport = false;\n        for (const renderedDependence of renderedDependencies) {\n            const { reexports } = renderedDependence;\n            if (reexports?.length) {\n                hasExports = true;\n                if (!hasDefaultExport && reexports.some(reexport => reexport.reexported === 'default')) {\n                    hasDefaultExport = true;\n                }\n                if (format === 'es') {\n                    renderedDependence.reexports = reexports.filter(\n                    // eslint-disable-next-line unicorn/prefer-array-some\n                    ({ reexported }) => !renderedExports.find(({ exported }) => exported === reexported));\n                }\n            }\n        }\n        if (!hasDefaultExport) {\n            for (const { exported } of renderedExports) {\n                if (exported === 'default') {\n                    hasDefaultExport = true;\n                    break;\n                }\n            }\n        }\n        const { intro, outro, banner, footer } = await createAddons(outputOptions, pluginDriver, this.getRenderedChunkInfo());\n        finalisers[format](renderedSource, {\n            accessedGlobals,\n            dependencies: renderedDependencies,\n            exports: renderedExports,\n            hasDefaultExport,\n            hasExports,\n            id: preliminaryFileName.fileName,\n            indent,\n            intro,\n            isEntryFacade: preserveModules || (facadeModule !== null && facadeModule.info.isEntry),\n            isModuleFacade: facadeModule !== null,\n            namedExportsMode: exportMode !== 'default',\n            onwarn,\n            outro,\n            snippets,\n            usesTopLevelAwait\n        }, outputOptions);\n        if (banner)\n            magicString.prepend(banner);\n        if (footer)\n            magicString.append(footer);\n        return {\n            chunk: this,\n            magicString,\n            preliminaryFileName,\n            usedModules\n        };\n    }\n    addImplicitlyLoadedBeforeFromModule(baseModule) {\n        const { chunkByModule, implicitlyLoadedBefore } = this;\n        for (const module of baseModule.implicitlyLoadedBefore) {\n            const chunk = chunkByModule.get(module);\n            if (chunk && chunk !== this) {\n                implicitlyLoadedBefore.add(chunk);\n            }\n        }\n    }\n    addNecessaryImportsForFacades() {\n        for (const [module, variables] of this.includedReexportsByModule) {\n            if (this.includedNamespaces.has(module)) {\n                for (const variable of variables) {\n                    this.imports.add(variable);\n                }\n            }\n        }\n    }\n    assignFacadeName({ fileName, name }, facadedModule, preservePath) {\n        if (fileName) {\n            this.fileName = fileName;\n        }\n        else {\n            this.name = this.outputOptions.sanitizeFileName(name ||\n                (preservePath\n                    ? this.getPreserveModulesChunkNameFromModule(facadedModule)\n                    : getChunkNameFromModule(facadedModule)));\n        }\n    }\n    checkCircularDependencyImport(variable, importingModule) {\n        const variableModule = variable.module;\n        if (variableModule instanceof Module) {\n            const exportChunk = this.chunkByModule.get(variableModule);\n            let alternativeReexportModule;\n            do {\n                alternativeReexportModule = importingModule.alternativeReexportModules.get(variable);\n                if (alternativeReexportModule) {\n                    const exportingChunk = this.chunkByModule.get(alternativeReexportModule);\n                    if (exportingChunk !== exportChunk) {\n                        this.inputOptions.onwarn(errorCyclicCrossChunkReexport(\n                        // Namespaces do not have an export name\n                        variableModule.getExportNamesByVariable().get(variable)?.[0] || '*', variableModule.id, alternativeReexportModule.id, importingModule.id, this.outputOptions.preserveModules));\n                    }\n                    importingModule = alternativeReexportModule;\n                }\n            } while (alternativeReexportModule);\n        }\n    }\n    ensureReexportsAreAvailableForModule(module) {\n        const includedReexports = [];\n        const map = module.getExportNamesByVariable();\n        for (const exportedVariable of map.keys()) {\n            const isSynthetic = exportedVariable instanceof SyntheticNamedExportVariable;\n            const importedVariable = isSynthetic ? exportedVariable.getBaseVariable() : exportedVariable;\n            this.checkCircularDependencyImport(importedVariable, module);\n            // When preserving modules, we do not create namespace objects but directly\n            // use the actual namespaces, which would be broken by this logic.\n            if (!(importedVariable instanceof NamespaceVariable && this.outputOptions.preserveModules)) {\n                const exportingModule = importedVariable.module;\n                if (exportingModule instanceof Module) {\n                    const chunk = this.chunkByModule.get(exportingModule);\n                    if (chunk && chunk !== this) {\n                        chunk.exports.add(importedVariable);\n                        includedReexports.push(importedVariable);\n                        if (isSynthetic) {\n                            this.imports.add(importedVariable);\n                        }\n                    }\n                }\n            }\n        }\n        if (includedReexports.length > 0) {\n            this.includedReexportsByModule.set(module, includedReexports);\n        }\n    }\n    generateVariableName() {\n        if (this.manualChunkAlias) {\n            return this.manualChunkAlias;\n        }\n        const moduleForNaming = this.entryModules[0] ||\n            this.implicitEntryModules[0] ||\n            this.dynamicEntryModules[0] ||\n            this.orderedModules[this.orderedModules.length - 1];\n        if (moduleForNaming) {\n            return getChunkNameFromModule(moduleForNaming);\n        }\n        return 'chunk';\n    }\n    getChunkExportDeclarations(format) {\n        const exports = [];\n        for (const exportName of this.getExportNames()) {\n            if (exportName[0] === '*')\n                continue;\n            const variable = this.exportsByName.get(exportName);\n            if (!(variable instanceof SyntheticNamedExportVariable)) {\n                const module = variable.module;\n                if (module) {\n                    const chunk = this.chunkByModule.get(module);\n                    if (chunk !== this) {\n                        if (!chunk || format !== 'es') {\n                            continue;\n                        }\n                        const chunkDep = this.renderedDependencies.get(chunk);\n                        if (!chunkDep) {\n                            continue;\n                        }\n                        const { imports, reexports } = chunkDep;\n                        const importedByReexported = reexports?.find(({ reexported }) => reexported === exportName);\n                        const isImported = imports?.find(({ imported }) => imported === importedByReexported?.imported);\n                        if (!isImported) {\n                            continue;\n                        }\n                    }\n                }\n            }\n            let expression = null;\n            let hoisted = false;\n            let local = variable.getName(this.snippets.getPropertyAccess);\n            if (variable instanceof LocalVariable) {\n                for (const declaration of variable.declarations) {\n                    if (declaration.parent instanceof FunctionDeclaration ||\n                        (declaration instanceof ExportDefaultDeclaration &&\n                            declaration.declaration instanceof FunctionDeclaration)) {\n                        hoisted = true;\n                        break;\n                    }\n                }\n            }\n            else if (variable instanceof SyntheticNamedExportVariable) {\n                expression = local;\n                if (format === 'es') {\n                    local = variable.renderName;\n                }\n            }\n            exports.push({\n                exported: exportName,\n                expression,\n                hoisted,\n                local\n            });\n        }\n        return exports;\n    }\n    getDependenciesToBeDeconflicted(addNonNamespacesAndInteropHelpers, addDependenciesWithoutBindings, interop) {\n        const dependencies = new Set();\n        const deconflictedDefault = new Set();\n        const deconflictedNamespace = new Set();\n        for (const variable of [...this.exportNamesByVariable.keys(), ...this.imports]) {\n            if (addNonNamespacesAndInteropHelpers || variable.isNamespace) {\n                const module = variable.module;\n                if (module instanceof ExternalModule) {\n                    const chunk = this.externalChunkByModule.get(module);\n                    dependencies.add(chunk);\n                    if (addNonNamespacesAndInteropHelpers) {\n                        if (variable.name === 'default') {\n                            if (defaultInteropHelpersByInteropType[interop(module.id)]) {\n                                deconflictedDefault.add(chunk);\n                            }\n                        }\n                        else if (variable.name === '*' &&\n                            namespaceInteropHelpersByInteropType[interop(module.id)]) {\n                            deconflictedNamespace.add(chunk);\n                        }\n                    }\n                }\n                else {\n                    const chunk = this.chunkByModule.get(module);\n                    if (chunk !== this) {\n                        dependencies.add(chunk);\n                        if (addNonNamespacesAndInteropHelpers &&\n                            chunk.exportMode === 'default' &&\n                            variable.isNamespace) {\n                            deconflictedNamespace.add(chunk);\n                        }\n                    }\n                }\n            }\n        }\n        if (addDependenciesWithoutBindings) {\n            for (const dependency of this.dependencies) {\n                dependencies.add(dependency);\n            }\n        }\n        return { deconflictedDefault, deconflictedNamespace, dependencies };\n    }\n    getDynamicDependencies() {\n        return this.getIncludedDynamicImports()\n            .map(resolvedDynamicImport => resolvedDynamicImport.facadeChunk ||\n            resolvedDynamicImport.chunk ||\n            resolvedDynamicImport.externalChunk ||\n            resolvedDynamicImport.resolution)\n            .filter((resolution) => resolution !== this &&\n            (resolution instanceof Chunk || resolution instanceof ExternalChunk));\n    }\n    getDynamicImportStringAndAssertions(resolution, fileName) {\n        if (resolution instanceof ExternalModule) {\n            const chunk = this.externalChunkByModule.get(resolution);\n            return [`'${chunk.getImportPath(fileName)}'`, chunk.getImportAssertions(this.snippets)];\n        }\n        return [\n            resolution || '',\n            (this.outputOptions.format === 'es' && this.outputOptions.externalImportAssertions) || null\n        ];\n    }\n    getFallbackChunkName() {\n        if (this.manualChunkAlias) {\n            return this.manualChunkAlias;\n        }\n        if (this.dynamicName) {\n            return this.dynamicName;\n        }\n        if (this.fileName) {\n            return getAliasName(this.fileName);\n        }\n        return getAliasName(this.orderedModules[this.orderedModules.length - 1].id);\n    }\n    getImportSpecifiers() {\n        const { interop } = this.outputOptions;\n        const importsByDependency = new Map();\n        for (const variable of this.imports) {\n            const module = variable.module;\n            let dependency;\n            let imported;\n            if (module instanceof ExternalModule) {\n                dependency = this.externalChunkByModule.get(module);\n                imported = variable.name;\n                if (imported !== 'default' && imported !== '*' && interop(module.id) === 'defaultOnly') {\n                    return error(errorUnexpectedNamedImport(module.id, imported, false));\n                }\n            }\n            else {\n                dependency = this.chunkByModule.get(module);\n                imported = dependency.getVariableExportName(variable);\n            }\n            getOrCreate(importsByDependency, dependency, getNewArray).push({\n                imported,\n                local: variable.getName(this.snippets.getPropertyAccess)\n            });\n        }\n        return importsByDependency;\n    }\n    getIncludedDynamicImports() {\n        if (this.includedDynamicImports) {\n            return this.includedDynamicImports;\n        }\n        const includedDynamicImports = [];\n        for (const module of this.orderedModules) {\n            for (const { node, resolution } of module.dynamicImports) {\n                if (!node.included) {\n                    continue;\n                }\n                includedDynamicImports.push(resolution instanceof Module\n                    ? {\n                        chunk: this.chunkByModule.get(resolution),\n                        externalChunk: null,\n                        facadeChunk: this.facadeChunkByModule.get(resolution),\n                        node,\n                        resolution\n                    }\n                    : resolution instanceof ExternalModule\n                        ? {\n                            chunk: null,\n                            externalChunk: this.externalChunkByModule.get(resolution),\n                            facadeChunk: null,\n                            node,\n                            resolution\n                        }\n                        : { chunk: null, externalChunk: null, facadeChunk: null, node, resolution });\n            }\n        }\n        return (this.includedDynamicImports = includedDynamicImports);\n    }\n    getPreRenderedChunkInfo() {\n        if (this.preRenderedChunkInfo) {\n            return this.preRenderedChunkInfo;\n        }\n        const { dynamicEntryModules, facadeModule, implicitEntryModules, orderedModules } = this;\n        return (this.preRenderedChunkInfo = {\n            exports: this.getExportNames(),\n            facadeModuleId: facadeModule && facadeModule.id,\n            isDynamicEntry: dynamicEntryModules.length > 0,\n            isEntry: !!facadeModule?.info.isEntry,\n            isImplicitEntry: implicitEntryModules.length > 0,\n            moduleIds: orderedModules.map(({ id }) => id),\n            name: this.getChunkName(),\n            type: 'chunk'\n        });\n    }\n    getPreserveModulesChunkNameFromModule(module) {\n        const predefinedChunkName = getPredefinedChunkNameFromModule(module);\n        if (predefinedChunkName)\n            return predefinedChunkName;\n        const { preserveModulesRoot, sanitizeFileName } = this.outputOptions;\n        const sanitizedId = sanitizeFileName(normalize(module.id.split(QUERY_HASH_REGEX, 1)[0]));\n        const extensionName = extname(sanitizedId);\n        const idWithoutExtension = NON_ASSET_EXTENSIONS.has(extensionName)\n            ? sanitizedId.slice(0, -extensionName.length)\n            : sanitizedId;\n        if (isAbsolute(idWithoutExtension)) {\n            return preserveModulesRoot && resolve(idWithoutExtension).startsWith(preserveModulesRoot)\n                ? idWithoutExtension.slice(preserveModulesRoot.length).replace(/^[/\\\\]/, '')\n                : relative(this.inputBase, idWithoutExtension);\n        }\n        else {\n            return `_virtual/${basename(idWithoutExtension)}`;\n        }\n    }\n    getReexportSpecifiers() {\n        const { externalLiveBindings, interop } = this.outputOptions;\n        const reexportSpecifiers = new Map();\n        for (let exportName of this.getExportNames()) {\n            let dependency;\n            let imported;\n            let needsLiveBinding = false;\n            if (exportName[0] === '*') {\n                const id = exportName.slice(1);\n                if (interop(id) === 'defaultOnly') {\n                    this.inputOptions.onwarn(errorUnexpectedNamespaceReexport(id));\n                }\n                needsLiveBinding = externalLiveBindings;\n                dependency = this.externalChunkByModule.get(this.modulesById.get(id));\n                imported = exportName = '*';\n            }\n            else {\n                const variable = this.exportsByName.get(exportName);\n                if (variable instanceof SyntheticNamedExportVariable)\n                    continue;\n                const module = variable.module;\n                if (module instanceof Module) {\n                    dependency = this.chunkByModule.get(module);\n                    if (dependency === this)\n                        continue;\n                    imported = dependency.getVariableExportName(variable);\n                    needsLiveBinding = variable.isReassigned;\n                }\n                else {\n                    dependency = this.externalChunkByModule.get(module);\n                    imported = variable.name;\n                    if (imported !== 'default' && imported !== '*' && interop(module.id) === 'defaultOnly') {\n                        return error(errorUnexpectedNamedImport(module.id, imported, true));\n                    }\n                    needsLiveBinding =\n                        externalLiveBindings &&\n                            (imported !== 'default' || isDefaultAProperty(interop(module.id), true));\n                }\n            }\n            getOrCreate(reexportSpecifiers, dependency, getNewArray).push({\n                imported,\n                needsLiveBinding,\n                reexported: exportName\n            });\n        }\n        return reexportSpecifiers;\n    }\n    getReferencedFiles() {\n        const referencedFiles = new Set();\n        for (const module of this.orderedModules) {\n            for (const meta of module.importMetas) {\n                const fileName = meta.getReferencedFileName(this.pluginDriver);\n                if (fileName) {\n                    referencedFiles.add(fileName);\n                }\n            }\n        }\n        return [...referencedFiles];\n    }\n    getRenderedDependencies() {\n        if (this.renderedDependencies) {\n            return this.renderedDependencies;\n        }\n        const importSpecifiers = this.getImportSpecifiers();\n        const reexportSpecifiers = this.getReexportSpecifiers();\n        const renderedDependencies = new Map();\n        const fileName = this.getFileName();\n        for (const dep of this.dependencies) {\n            const imports = importSpecifiers.get(dep) || null;\n            const reexports = reexportSpecifiers.get(dep) || null;\n            const namedExportsMode = dep instanceof ExternalChunk || dep.exportMode !== 'default';\n            const importPath = dep.getImportPath(fileName);\n            renderedDependencies.set(dep, {\n                assertions: dep instanceof ExternalChunk ? dep.getImportAssertions(this.snippets) : null,\n                defaultVariableName: dep.defaultVariableName,\n                globalName: dep instanceof ExternalChunk &&\n                    (this.outputOptions.format === 'umd' || this.outputOptions.format === 'iife') &&\n                    getGlobalName(dep, this.outputOptions.globals, (imports || reexports) !== null, this.inputOptions.onwarn),\n                importPath,\n                imports,\n                isChunk: dep instanceof Chunk,\n                name: dep.variableName,\n                namedExportsMode,\n                namespaceVariableName: dep.namespaceVariableName,\n                reexports\n            });\n        }\n        return (this.renderedDependencies = renderedDependencies);\n    }\n    inlineChunkDependencies(chunk) {\n        for (const dep of chunk.dependencies) {\n            if (this.dependencies.has(dep))\n                continue;\n            this.dependencies.add(dep);\n            if (dep instanceof Chunk) {\n                this.inlineChunkDependencies(dep);\n            }\n        }\n    }\n    // This method changes properties on the AST before rendering and must not be async\n    renderModules(fileName) {\n        const { accessedGlobalsByScope, dependencies, exportNamesByVariable, includedNamespaces, inputOptions: { onwarn }, isEmpty, orderedModules, outputOptions, pluginDriver, renderedModules, snippets } = this;\n        const { compact, dynamicImportFunction, format, freeze, namespaceToStringTag, preserveModules } = outputOptions;\n        const { _, cnst, n } = snippets;\n        this.setDynamicImportResolutions(fileName);\n        this.setImportMetaResolutions(fileName);\n        this.setIdentifierRenderResolutions();\n        const magicString = new Bundle$1({ separator: `${n}${n}` });\n        const indent = getIndentString(orderedModules, outputOptions);\n        const usedModules = [];\n        let hoistedSource = '';\n        const accessedGlobals = new Set();\n        const renderedModuleSources = new Map();\n        const renderOptions = {\n            dynamicImportFunction,\n            exportNamesByVariable,\n            format,\n            freeze,\n            indent,\n            namespaceToStringTag,\n            pluginDriver,\n            snippets,\n            useOriginalName: null\n        };\n        let usesTopLevelAwait = false;\n        for (const module of orderedModules) {\n            let renderedLength = 0;\n            let source;\n            if (module.isIncluded() || includedNamespaces.has(module)) {\n                const rendered = module.render(renderOptions);\n                ({ source } = rendered);\n                usesTopLevelAwait || (usesTopLevelAwait = rendered.usesTopLevelAwait);\n                renderedLength = source.length();\n                if (renderedLength) {\n                    if (compact && source.lastLine().includes('//'))\n                        source.append('\\n');\n                    renderedModuleSources.set(module, source);\n                    magicString.addSource(source);\n                    usedModules.push(module);\n                }\n                const namespace = module.namespace;\n                if (includedNamespaces.has(module) && !preserveModules) {\n                    const rendered = namespace.renderBlock(renderOptions);\n                    if (namespace.renderFirst())\n                        hoistedSource += n + rendered;\n                    else\n                        magicString.addSource(new MagicString(rendered));\n                }\n                const accessedGlobalVariables = accessedGlobalsByScope.get(module.scope);\n                if (accessedGlobalVariables) {\n                    for (const name of accessedGlobalVariables) {\n                        accessedGlobals.add(name);\n                    }\n                }\n            }\n            const { renderedExports, removedExports } = module.getRenderedExports();\n            renderedModules[module.id] = {\n                get code() {\n                    return source?.toString() ?? null;\n                },\n                originalLength: module.originalCode.length,\n                removedExports,\n                renderedExports,\n                renderedLength\n            };\n        }\n        if (hoistedSource)\n            magicString.prepend(hoistedSource + n + n);\n        // eslint-disable-next-line unicorn/consistent-destructuring\n        if (this.needsExportsShim) {\n            magicString.prepend(`${n}${cnst} ${MISSING_EXPORT_SHIM_VARIABLE}${_}=${_}void 0;${n}${n}`);\n        }\n        const renderedSource = compact ? magicString : magicString.trim();\n        if (isEmpty && this.getExportNames().length === 0 && dependencies.size === 0) {\n            onwarn(errorEmptyChunk(this.getChunkName()));\n        }\n        return { accessedGlobals, indent, magicString, renderedSource, usedModules, usesTopLevelAwait };\n    }\n    setDynamicImportResolutions(fileName) {\n        const { accessedGlobalsByScope, outputOptions, pluginDriver, snippets } = this;\n        for (const resolvedDynamicImport of this.getIncludedDynamicImports()) {\n            if (resolvedDynamicImport.chunk) {\n                const { chunk, facadeChunk, node, resolution } = resolvedDynamicImport;\n                if (chunk === this) {\n                    node.setInternalResolution(resolution.namespace);\n                }\n                else {\n                    node.setExternalResolution((facadeChunk || chunk).exportMode, resolution, outputOptions, snippets, pluginDriver, accessedGlobalsByScope, `'${(facadeChunk || chunk).getImportPath(fileName)}'`, !facadeChunk?.strictFacade && chunk.exportNamesByVariable.get(resolution.namespace)[0], null);\n                }\n            }\n            else {\n                const { node, resolution } = resolvedDynamicImport;\n                const [resolutionString, assertions] = this.getDynamicImportStringAndAssertions(resolution, fileName);\n                node.setExternalResolution('external', resolution, outputOptions, snippets, pluginDriver, accessedGlobalsByScope, resolutionString, false, assertions);\n            }\n        }\n    }\n    setIdentifierRenderResolutions() {\n        const { format, interop, namespaceToStringTag, preserveModules, externalLiveBindings } = this.outputOptions;\n        const syntheticExports = new Set();\n        for (const exportName of this.getExportNames()) {\n            const exportVariable = this.exportsByName.get(exportName);\n            if (format !== 'es' &&\n                format !== 'system' &&\n                exportVariable.isReassigned &&\n                !exportVariable.isId) {\n                exportVariable.setRenderNames('exports', exportName);\n            }\n            else if (exportVariable instanceof SyntheticNamedExportVariable) {\n                syntheticExports.add(exportVariable);\n            }\n            else {\n                exportVariable.setRenderNames(null, null);\n            }\n        }\n        for (const module of this.orderedModules) {\n            if (module.needsExportShim) {\n                this.needsExportsShim = true;\n                break;\n            }\n        }\n        const usedNames = new Set(['Object', 'Promise']);\n        if (this.needsExportsShim) {\n            usedNames.add(MISSING_EXPORT_SHIM_VARIABLE);\n        }\n        if (namespaceToStringTag) {\n            usedNames.add('Symbol');\n        }\n        switch (format) {\n            case 'system': {\n                usedNames.add('module').add('exports');\n                break;\n            }\n            case 'es': {\n                break;\n            }\n            case 'cjs': {\n                usedNames.add('module').add('require').add('__filename').add('__dirname');\n            }\n            // fallthrough\n            default: {\n                usedNames.add('exports');\n                for (const helper of HELPER_NAMES) {\n                    usedNames.add(helper);\n                }\n            }\n        }\n        deconflictChunk(this.orderedModules, this.getDependenciesToBeDeconflicted(format !== 'es' && format !== 'system', format === 'amd' || format === 'umd' || format === 'iife', interop), this.imports, usedNames, format, interop, preserveModules, externalLiveBindings, this.chunkByModule, this.externalChunkByModule, syntheticExports, this.exportNamesByVariable, this.accessedGlobalsByScope, this.includedNamespaces);\n    }\n    setImportMetaResolutions(fileName) {\n        const { accessedGlobalsByScope, includedNamespaces, orderedModules, outputOptions: { format, preserveModules } } = this;\n        for (const module of orderedModules) {\n            for (const importMeta of module.importMetas) {\n                importMeta.setResolution(format, accessedGlobalsByScope, fileName);\n            }\n            if (includedNamespaces.has(module) && !preserveModules) {\n                module.namespace.prepare(accessedGlobalsByScope);\n            }\n        }\n    }\n    setUpChunkImportsAndExportsForModule(module) {\n        const moduleImports = new Set(module.includedImports);\n        // when we are not preserving modules, we need to make all namespace variables available for\n        // rendering the namespace object\n        if (!this.outputOptions.preserveModules && this.includedNamespaces.has(module)) {\n            const memberVariables = module.namespace.getMemberVariables();\n            for (const variable of Object.values(memberVariables)) {\n                moduleImports.add(variable);\n            }\n        }\n        for (let variable of moduleImports) {\n            if (variable instanceof ExportDefaultVariable) {\n                variable = variable.getOriginalVariable();\n            }\n            if (variable instanceof SyntheticNamedExportVariable) {\n                variable = variable.getBaseVariable();\n            }\n            const chunk = this.chunkByModule.get(variable.module);\n            if (chunk !== this) {\n                this.imports.add(variable);\n                if (variable.module instanceof Module) {\n                    this.checkCircularDependencyImport(variable, module);\n                    // When preserving modules, we do not create namespace objects but directly\n                    // use the actual namespaces, which would be broken by this logic.\n                    if (!(variable instanceof NamespaceVariable && this.outputOptions.preserveModules)) {\n                        chunk.exports.add(variable);\n                    }\n                }\n            }\n        }\n        if (this.includedNamespaces.has(module) ||\n            (module.info.isEntry && module.preserveSignature !== false) ||\n            module.includedDynamicImporters.some(importer => this.chunkByModule.get(importer) !== this)) {\n            this.ensureReexportsAreAvailableForModule(module);\n        }\n        for (const { node, resolution } of module.dynamicImports) {\n            if (node.included &&\n                resolution instanceof Module &&\n                this.chunkByModule.get(resolution) === this &&\n                !this.includedNamespaces.has(resolution)) {\n                this.includedNamespaces.add(resolution);\n                this.ensureReexportsAreAvailableForModule(resolution);\n            }\n        }\n    }\n}\nfunction getChunkNameFromModule(module) {\n    return getPredefinedChunkNameFromModule(module) ?? getAliasName(module.id);\n}\nfunction getPredefinedChunkNameFromModule(module) {\n    return (module.chunkNames.find(({ isUserDefined }) => isUserDefined)?.name ?? module.chunkNames[0]?.name);\n}\nfunction getImportedBindingsPerDependency(renderedDependencies, resolveFileName) {\n    const importedBindingsPerDependency = {};\n    for (const [dependency, declaration] of renderedDependencies) {\n        const specifiers = new Set();\n        if (declaration.imports) {\n            for (const { imported } of declaration.imports) {\n                specifiers.add(imported);\n            }\n        }\n        if (declaration.reexports) {\n            for (const { imported } of declaration.reexports) {\n                specifiers.add(imported);\n            }\n        }\n        importedBindingsPerDependency[resolveFileName(dependency)] = [...specifiers];\n    }\n    return importedBindingsPerDependency;\n}\nconst QUERY_HASH_REGEX = /[#?]/;\nconst resolveFileName = (dependency) => dependency.getFileName();\n\n/**\n * Concatenate a number of iterables to a new iterable without fully evaluating\n * their iterators. Useful when e.g. working with large sets or lists and when\n * there is a chance that the iterators will not be fully exhausted.\n */\nfunction* concatLazy(iterables) {\n    for (const iterable of iterables) {\n        yield* iterable;\n    }\n}\n\n/**\n * At its core, the algorithm first starts from each static or dynamic entry\n * point and then assigns that entry point to all modules than can be reached\n * via static imports. We call this the *dependent entry points* of that\n * module.\n *\n * Then we group all modules with the same dependent entry points into chunks\n * as those modules will always be loaded together.\n *\n * One non-trivial optimization we can apply is that dynamic entries are\n * different from static entries in so far as when a dynamic import occurs,\n * some\n * modules are already in memory. If some of these modules are also\n * dependencies\n * of the dynamic entry, then it does not make sense to create a separate chunk\n * for them. Instead, the dynamic import target can load them from the\n * importing\n * chunk.\n *\n * With regard to chunking, if B is implicitly loaded after A, then this can be\n * handled the same way as if there was a dynamic import A => B.\n *\n * Example:\n * Assume A -> B (A imports B), A => C (A dynamically imports C) and C -> B.\n * Then the initial algorithm would assign A into the A chunk, C into the C\n * chunk and B into the AC chunk, i.e. the chunk with the dependent entry\n * points\n * A and C.\n * However we know that C can only be loaded from A, so A and its dependency B\n * must already be in memory when C is loaded. So it is enough to create only\n * two chunks A containing [AB] and C containing [C].\n *\n * So we do not assign the dynamic entry C as dependent entry point to modules\n * that are already loaded.\n *\n * In a more complex example, let us assume that we have entry points X and Y.\n * Further, let us assume\n * X -> A, X -> B, X -> C,\n * Y -> A, Y -> B,\n * A => D,\n * D -> B, D -> C\n * So without dynamic import optimization, the dependent entry points are\n * A: XY, B: DXY, C: DX, D: D, X: X, Y: Y,\n * so we would for now create six chunks.\n *\n * Now D is loaded only after A is loaded. But A is loaded if either X is\n * loaded\n * or Y is loaded. So the modules that are already in memory when D is loaded\n * are the intersection of all modules that X depends on with all modules that\n * Y\n * depends on, which in this case are the modules A and B.\n * We could also say they are all modules that have both X and Y as dependent\n * entry points.\n *\n * So we can remove D as dependent entry point from A and B, which means they\n * both now have only XY as dependent entry points and can be merged into the\n * same chunk.\n *\n * Now let us extend this to the most general case where we have several\n * dynamic\n * importers for one dynamic entry point.\n *\n * In the most general form, it works like this:\n * For each dynamic entry point, we have a number of dynamic importers, which\n * are the modules importing it. Using the previous ideas, we can determine\n * the modules already in memory for each dynamic importer by looking for all\n * modules that have all the dependent entry points of the dynamic importer as\n * dependent entry points.\n * So the modules that are guaranteed to be in memory when the dynamic entry\n * point is loaded are the intersection of the modules already in memory for\n * each dynamic importer.\n *\n * Assuming that A => D and B => D and A has dependent entry points XY and B\n * has\n * dependent entry points YZ, then the modules guaranteed to be in memory are\n * all modules that have at least XYZ as dependent entry points.\n * We call XYZ the *dynamically dependent entry points* of D.\n *\n * Now there is one last case to consider: If one of the dynamically dependent\n * entries is itself a dynamic entry, then any module is in memory that either\n * is a dependency of that dynamic entry or again has the dynamic dependent\n * entries of that dynamic entry as dependent entry points.\n *\n * A naive algorithm for this proved to be costly as it contained an O(n^3)\n * complexity with regard to dynamic entries that blew up for very large\n * projects.\n *\n * If we have an efficient way to do Set operations, an alternative approach\n * would be to instead collect already loaded modules per dynamic entry. And as\n * all chunks from the initial grouping would behave the same, we can instead\n * collect already loaded chunks for a performance improvement.\n *\n * To do that efficiently, need\n * - a Map of dynamic imports per dynamic entry, which contains all dynamic\n *   imports that can be triggered by a dynamic entry\n * - a Map of static dependencies per entry\n * - a Map of already loaded chunks per entry that we initially populate with\n *   empty Sets for static entries and Sets containing all entries for dynamic\n *   entries\n *\n * For efficient operations, we assign each entry a numerical index and\n * represent Sets of Chunks as BigInt values where each chunk corresponds to a\n * bit index. Then thw last two maps can be represented as arrays of BigInt\n * values.\n *\n * Then we iterate through each dynamic entry. We set the already loaded modules\n * to the intersection of the previously already loaded modules with the union\n * of the already loaded modules of that chunk with its static dependencies.\n *\n * If the already loaded modules changed, then we use the Map of dynamic imports\n * per dynamic entry to marks all dynamic entry dependencies as \"dirty\" and put\n * them back into the iteration. As an additional optimization, we note for\n * each dynamic entry which dynamic dependent entries have changed and only\n * intersect those entries again on subsequent interations.\n *\n * Then we remove the dynamic entries from the list of dependent entries for\n * those chunks that are already loaded for that dynamic entry and create\n * another round of chunks.\n */\nfunction getChunkAssignments(entries, manualChunkAliasByEntry, minChunkSize) {\n    const { chunkDefinitions, modulesInManualChunks } = getChunkDefinitionsFromManualChunks(manualChunkAliasByEntry);\n    const { allEntries, dependentEntriesByModule, dynamicallyDependentEntriesByDynamicEntry, dynamicImportsByEntry } = analyzeModuleGraph(entries);\n    // Each chunk is identified by its position in this array\n    const initialChunks = Object.values(getChunksBySignature(getModulesWithDependentEntries(dependentEntriesByModule, modulesInManualChunks)));\n    // This mutates initialChunks but also clears\n    // dynamicallyDependentEntriesByDynamicEntry as side effect\n    removeUnnecessaryDependentEntries(initialChunks, dynamicallyDependentEntriesByDynamicEntry, dynamicImportsByEntry, allEntries);\n    chunkDefinitions.push(...createChunks(allEntries, getChunksBySignature(initialChunks), minChunkSize));\n    return chunkDefinitions;\n}\nfunction getChunkDefinitionsFromManualChunks(manualChunkAliasByEntry) {\n    const chunkDefinitions = [];\n    const modulesInManualChunks = new Set(manualChunkAliasByEntry.keys());\n    const manualChunkModulesByAlias = Object.create(null);\n    for (const [entry, alias] of manualChunkAliasByEntry) {\n        addStaticDependenciesToManualChunk(entry, (manualChunkModulesByAlias[alias] || (manualChunkModulesByAlias[alias] = [])), modulesInManualChunks);\n    }\n    for (const [alias, modules] of Object.entries(manualChunkModulesByAlias)) {\n        chunkDefinitions.push({ alias, modules });\n    }\n    return { chunkDefinitions, modulesInManualChunks };\n}\nfunction addStaticDependenciesToManualChunk(entry, manualChunkModules, modulesInManualChunks) {\n    const modulesToHandle = new Set([entry]);\n    for (const module of modulesToHandle) {\n        modulesInManualChunks.add(module);\n        manualChunkModules.push(module);\n        for (const dependency of module.dependencies) {\n            if (!(dependency instanceof ExternalModule || modulesInManualChunks.has(dependency))) {\n                modulesToHandle.add(dependency);\n            }\n        }\n    }\n}\nfunction analyzeModuleGraph(entries) {\n    const dynamicEntryModules = new Set();\n    const dependentEntriesByModule = new Map();\n    const dynamicImportModulesByEntry = [];\n    const allEntriesSet = new Set(entries);\n    let entryIndex = 0;\n    for (const currentEntry of allEntriesSet) {\n        const dynamicImportsForCurrentEntry = new Set();\n        dynamicImportModulesByEntry.push(dynamicImportsForCurrentEntry);\n        const modulesToHandle = new Set([currentEntry]);\n        for (const module of modulesToHandle) {\n            getOrCreate(dependentEntriesByModule, module, (getNewSet)).add(entryIndex);\n            for (const dependency of module.getDependenciesToBeIncluded()) {\n                if (!(dependency instanceof ExternalModule)) {\n                    modulesToHandle.add(dependency);\n                }\n            }\n            for (const { resolution } of module.dynamicImports) {\n                if (resolution instanceof Module &&\n                    resolution.includedDynamicImporters.length > 0 &&\n                    !allEntriesSet.has(resolution)) {\n                    dynamicEntryModules.add(resolution);\n                    allEntriesSet.add(resolution);\n                    dynamicImportsForCurrentEntry.add(resolution);\n                }\n            }\n            for (const dependency of module.implicitlyLoadedBefore) {\n                if (!allEntriesSet.has(dependency)) {\n                    dynamicEntryModules.add(dependency);\n                    allEntriesSet.add(dependency);\n                }\n            }\n        }\n        entryIndex++;\n    }\n    const allEntries = [...allEntriesSet];\n    const { dynamicEntries, dynamicImportsByEntry } = getDynamicEntries(allEntries, dynamicEntryModules, dynamicImportModulesByEntry);\n    return {\n        allEntries,\n        dependentEntriesByModule,\n        dynamicallyDependentEntriesByDynamicEntry: getDynamicallyDependentEntriesByDynamicEntry(dependentEntriesByModule, dynamicEntries, allEntries),\n        dynamicImportsByEntry\n    };\n}\nfunction getDynamicEntries(allEntries, dynamicEntryModules, dynamicImportModulesByEntry) {\n    const entryIndexByModule = new Map();\n    const dynamicEntries = new Set();\n    for (const [entryIndex, entry] of allEntries.entries()) {\n        entryIndexByModule.set(entry, entryIndex);\n        if (dynamicEntryModules.has(entry)) {\n            dynamicEntries.add(entryIndex);\n        }\n    }\n    const dynamicImportsByEntry = [];\n    for (const dynamicImportModules of dynamicImportModulesByEntry) {\n        const dynamicImports = new Set();\n        for (const dynamicEntry of dynamicImportModules) {\n            dynamicImports.add(entryIndexByModule.get(dynamicEntry));\n        }\n        dynamicImportsByEntry.push(dynamicImports);\n    }\n    return { dynamicEntries, dynamicImportsByEntry };\n}\nfunction getDynamicallyDependentEntriesByDynamicEntry(dependentEntriesByModule, dynamicEntries, allEntries) {\n    const dynamicallyDependentEntriesByDynamicEntry = new Map();\n    for (const dynamicEntryIndex of dynamicEntries) {\n        const dynamicallyDependentEntries = getOrCreate(dynamicallyDependentEntriesByDynamicEntry, dynamicEntryIndex, (getNewSet));\n        const dynamicEntry = allEntries[dynamicEntryIndex];\n        for (const importer of concatLazy([\n            dynamicEntry.includedDynamicImporters,\n            dynamicEntry.implicitlyLoadedAfter\n        ])) {\n            for (const entry of dependentEntriesByModule.get(importer)) {\n                dynamicallyDependentEntries.add(entry);\n            }\n        }\n    }\n    return dynamicallyDependentEntriesByDynamicEntry;\n}\nfunction getChunksBySignature(modulesWithDependentEntries) {\n    var _a;\n    const chunkModules = Object.create(null);\n    for (const { dependentEntries, modules } of modulesWithDependentEntries) {\n        let chunkSignature = 0n;\n        for (const entryIndex of dependentEntries) {\n            chunkSignature |= 1n << BigInt(entryIndex);\n        }\n        (chunkModules[_a = String(chunkSignature)] || (chunkModules[_a] = {\n            dependentEntries: new Set(dependentEntries),\n            modules: []\n        })).modules.push(...modules);\n    }\n    return chunkModules;\n}\nfunction* getModulesWithDependentEntries(dependentEntriesByModule, modulesInManualChunks) {\n    for (const [module, dependentEntries] of dependentEntriesByModule) {\n        if (!modulesInManualChunks.has(module)) {\n            yield { dependentEntries, modules: [module] };\n        }\n    }\n}\n/**\n * This removes all unnecessary dynamic entries from the dependenEntries in its\n * first argument. It will also consume its second argument, so if\n * dynamicallyDependentEntriesByDynamicEntry is ever needed after this, we\n * should make a copy.\n */\nfunction removeUnnecessaryDependentEntries(chunks, dynamicallyDependentEntriesByDynamicEntry, dynamicImportsByEntry, allEntries) {\n    // The indices correspond to the indices in allEntries. The chunks correspond\n    // to bits in the bigint values where chunk 0 is the lowest bit.\n    const staticDependenciesPerEntry = allEntries.map(() => 0n);\n    const alreadyLoadedChunksPerEntry = allEntries.map((_entry, entryIndex) => dynamicallyDependentEntriesByDynamicEntry.has(entryIndex) ? -1n : 0n);\n    // This toggles the bits for each chunk that is a dependency of an entry\n    let chunkMask = 1n;\n    for (const { dependentEntries } of chunks) {\n        for (const entryIndex of dependentEntries) {\n            staticDependenciesPerEntry[entryIndex] |= chunkMask;\n        }\n        chunkMask <<= 1n;\n    }\n    // Warning: This will consume dynamicallyDependentEntriesByDynamicEntry.\n    // If we no longer want this, we should make a copy here.\n    const updatedDynamicallyDependentEntriesByDynamicEntry = dynamicallyDependentEntriesByDynamicEntry;\n    for (const [dynamicEntryIndex, updatedDynamicallyDependentEntries] of updatedDynamicallyDependentEntriesByDynamicEntry) {\n        updatedDynamicallyDependentEntriesByDynamicEntry.delete(dynamicEntryIndex);\n        const previousLoadedModules = alreadyLoadedChunksPerEntry[dynamicEntryIndex];\n        let newLoadedModules = previousLoadedModules;\n        for (const entryIndex of updatedDynamicallyDependentEntries) {\n            newLoadedModules &=\n                staticDependenciesPerEntry[entryIndex] | alreadyLoadedChunksPerEntry[entryIndex];\n        }\n        if (newLoadedModules !== previousLoadedModules) {\n            alreadyLoadedChunksPerEntry[dynamicEntryIndex] = newLoadedModules;\n            for (const dynamicImport of dynamicImportsByEntry[dynamicEntryIndex]) {\n                getOrCreate(updatedDynamicallyDependentEntriesByDynamicEntry, dynamicImport, (getNewSet)).add(dynamicEntryIndex);\n            }\n        }\n    }\n    // Remove entries from dependent entries if a chunk is already loaded without\n    // that entry.\n    chunkMask = 1n;\n    for (const { dependentEntries } of chunks) {\n        for (const entryIndex of dependentEntries) {\n            if ((alreadyLoadedChunksPerEntry[entryIndex] & chunkMask) === chunkMask) {\n                dependentEntries.delete(entryIndex);\n            }\n        }\n        chunkMask <<= 1n;\n    }\n}\nfunction createChunks(allEntries, chunkModulesBySignature, minChunkSize) {\n    return minChunkSize === 0\n        ? Object.values(chunkModulesBySignature).map(({ modules }) => ({\n            alias: null,\n            modules\n        }))\n        : getOptimizedChunks(chunkModulesBySignature, allEntries.length, minChunkSize).map(({ modules }) => ({\n            alias: null,\n            modules\n        }));\n}\n/**\n * This function tries to get rid of small chunks by merging them with other\n * chunks.\n *\n * We can only merge chunks safely if after the merge, loading any entry point\n * in any allowed order will not trigger side effects that should not have been\n * triggered. While side effects are usually things like global function calls,\n * global variable mutations or potentially thrown errors, details do not\n * matter here, and we just discern chunks without side effects (pure chunks)\n * from other chunks.\n *\n * As a first step, we assign each pre-generated chunk with side effects a\n * label. I.e. we have side effect \"A\" if the non-pure chunk \"A\" is loaded.\n *\n * Now to determine the side effects of loading a chunk, one also has to take\n * the side effects of its dependencies into account. So if A depends on B\n * (A -> B) and both have side effects, loading A triggers effects AB.\n *\n * Now from the previous step we know that each chunk is uniquely determine by\n * the entry points that depend on it and cause it to load, which we will call\n * its dependent entry points.\n *\n * E.g. if X -> A and Y -> A, then the dependent entry points of A are XY.\n * Starting from that idea, we can determine a set of chunks—and thus a set\n * of side effects—that must have been triggered if a certain chunk has been\n * loaded. Basically, it is the intersection of all chunks loaded by the\n * dependent entry points of a given chunk. We call the corresponding side\n * effects the correlated side effects of that chunk.\n *\n * Example:\n * X -> ABC, Y -> ADE, A-> F, B -> D\n * Then taking dependencies into account, X -> ABCDF, Y -> ADEF\n * The intersection is ADF. So we know that when A is loaded, D and F must also\n * be in memory even though neither D nor A is a dependency of the other.\n * If all have side effects, we call ADF the correlated side effects of A. The\n * correlated side effects need to remain constant when merging chunks.\n *\n * In contrast, we have the dependency side effects of A, which represents\n * the side effects we trigger if we directly load A. In this example, the\n * dependency side effects are AF.\n * For entry chunks, dependency and correlated side effects are the same.\n *\n * With these concepts, merging chunks is allowed if the correlated side effects\n * of each entry do not change. Thus, we are allowed to merge two chunks if\n * a) the dependency side effects of each chunk are a subset of the correlated\n *    side effects of the other chunk, so no additional side effects are\n *    triggered for any entry, or\n * b) The signature of chunk A is a subset of the signature of chunk B while the\n *    dependency side effects of A are a subset of the correlated side effects\n *    of B. Because in that scenario, whenever A is loaded, B is loaded as well.\n *    But there are cases when B is loaded where A is not loaded. So if we merge\n *    the chunks, all dependency side effects of A will be added to the\n *    correlated side effects of B, and as the latter is not allowed to change,\n *    the former need to be a subset of the latter.\n *\n * Another consideration when merging small chunks into other chunks is to avoid\n * that too much additional code is loaded. This is achieved when the dependent\n * entries of the small chunk are a subset of the dependent entries of the other\n * chunk. Because then when the small chunk is loaded, the other chunk was\n * loaded/in memory anyway, so at most when the other chunk is loaded, the\n * additional size of the small chunk is loaded unnecessarily.\n *\n * So the algorithm performs merges in two passes:\n * 1. First we try to merge small chunks A only into other chunks B if the\n *    dependent entries of A are a subset of the dependent entries of B and the\n *    dependency side effects of A are a subset of the correlated side effects\n *    of B.\n * 2. Only then for all remaining small chunks, we look for arbitrary merges\n *    following the above rules (a) and (b), starting with the smallest chunks\n *    to look for possible merge targets.\n */\n// TODO instead of picking the \"closest\" chunk, we could actually use a\n//  technique similar to what we do for side effects to compare the size of the\n//  static dependencies that are not part of the correlated dependencies\nfunction getOptimizedChunks(chunkModulesBySignature, numberOfEntries, minChunkSize) {\n    timeStart('optimize chunks', 3);\n    const chunkPartition = getPartitionedChunks(chunkModulesBySignature, numberOfEntries, minChunkSize);\n    console.log('Before eliminating small chunks, there were\\n', Object.keys(chunkModulesBySignature).length, 'chunks, of which\\n', chunkPartition.small.size, 'were below minChunkSize.');\n    if (chunkPartition.small.size > 0) {\n        mergeChunks(chunkPartition, minChunkSize);\n    }\n    console.log('After merging chunks,\\n', chunkPartition.small.size + chunkPartition.big.size, 'chunks remain, of which\\n', chunkPartition.small.size, 'are below minChunkSize.');\n    timeEnd('optimize chunks', 3);\n    return [...chunkPartition.small, ...chunkPartition.big];\n}\nfunction getPartitionedChunks(chunkModulesBySignature, numberOfEntries, minChunkSize) {\n    const smallChunks = [];\n    const bigChunks = [];\n    const chunkByModule = new Map();\n    const sideEffectsByEntry = [];\n    for (let index = 0; index < numberOfEntries; index++) {\n        sideEffectsByEntry.push(new Set());\n    }\n    for (const [signature, { dependentEntries, modules }] of Object.entries(chunkModulesBySignature)) {\n        const chunkDescription = {\n            correlatedSideEffects: new Set(),\n            dependencies: new Set(),\n            dependentChunks: new Set(),\n            dependentEntries,\n            modules,\n            pure: true,\n            sideEffects: new Set(),\n            size: 0\n        };\n        let size = 0;\n        let pure = true;\n        for (const module of modules) {\n            chunkByModule.set(module, chunkDescription);\n            pure && (pure = !module.hasEffects());\n            // Unfortunately, we cannot take tree-shaking into account here because\n            // rendering did not happen yet\n            size += module.originalCode.length;\n        }\n        chunkDescription.pure = pure;\n        chunkDescription.size = size;\n        if (!pure) {\n            for (const entryIndex of dependentEntries) {\n                sideEffectsByEntry[entryIndex].add(signature);\n            }\n            // In the beginning, each chunk is only its own side effect. After\n            // merging, additional side effects can accumulate.\n            chunkDescription.sideEffects.add(signature);\n        }\n        (size < minChunkSize ? smallChunks : bigChunks).push(chunkDescription);\n    }\n    sortChunksAndAddDependenciesAndEffects([bigChunks, smallChunks], chunkByModule, sideEffectsByEntry);\n    return {\n        big: new Set(bigChunks),\n        small: new Set(smallChunks)\n    };\n}\nfunction sortChunksAndAddDependenciesAndEffects(chunkLists, chunkByModule, sideEffectsByEntry) {\n    for (const chunks of chunkLists) {\n        chunks.sort(compareChunkSize);\n        for (const chunk of chunks) {\n            const { dependencies, modules, correlatedSideEffects, dependentEntries } = chunk;\n            for (const module of modules) {\n                for (const dependency of module.getDependenciesToBeIncluded()) {\n                    const dependencyChunk = chunkByModule.get(dependency);\n                    if (dependencyChunk && dependencyChunk !== chunk) {\n                        dependencies.add(dependencyChunk);\n                        dependencyChunk.dependentChunks.add(chunk);\n                    }\n                }\n            }\n            let firstEntry = true;\n            // Correlated side effects is the intersection of all entry side effects\n            for (const entryIndex of dependentEntries) {\n                const entryEffects = sideEffectsByEntry[entryIndex];\n                if (firstEntry) {\n                    for (const sideEffect of entryEffects) {\n                        correlatedSideEffects.add(sideEffect);\n                    }\n                    firstEntry = false;\n                }\n                else {\n                    for (const sideEffect of correlatedSideEffects) {\n                        if (!entryEffects.has(sideEffect)) {\n                            correlatedSideEffects.delete(sideEffect);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\nfunction compareChunkSize({ size: sizeA }, { size: sizeB }) {\n    return sizeA - sizeB;\n}\nfunction mergeChunks(chunkPartition, minChunkSize) {\n    for (const allowArbitraryMerges of [false, true]) {\n        for (const mergedChunk of chunkPartition.small) {\n            let closestChunk = null;\n            let closestChunkDistance = Infinity;\n            const { modules, pure, size } = mergedChunk;\n            for (const targetChunk of concatLazy([chunkPartition.small, chunkPartition.big])) {\n                if (mergedChunk === targetChunk)\n                    continue;\n                // If both chunks are small, we also allow for unrelated merges during\n                // the first pass\n                const onlySubsetMerge = !allowArbitraryMerges && targetChunk.size >= minChunkSize;\n                const distance = getChunkEntryDistance(mergedChunk, targetChunk, onlySubsetMerge);\n                if (distance < closestChunkDistance &&\n                    isValidMerge(mergedChunk, targetChunk, onlySubsetMerge)) {\n                    closestChunk = targetChunk;\n                    closestChunkDistance = distance;\n                }\n            }\n            if (closestChunk) {\n                chunkPartition.small.delete(mergedChunk);\n                getChunksInPartition(closestChunk, minChunkSize, chunkPartition).delete(closestChunk);\n                closestChunk.modules.push(...modules);\n                closestChunk.size += size;\n                closestChunk.pure && (closestChunk.pure = pure);\n                const { correlatedSideEffects, dependencies, dependentChunks, dependentEntries, sideEffects } = closestChunk;\n                for (const sideEffect of correlatedSideEffects) {\n                    if (!mergedChunk.correlatedSideEffects.has(sideEffect)) {\n                        correlatedSideEffects.delete(sideEffect);\n                    }\n                }\n                for (const entry of mergedChunk.dependentEntries) {\n                    dependentEntries.add(entry);\n                }\n                for (const sideEffect of mergedChunk.sideEffects) {\n                    sideEffects.add(sideEffect);\n                }\n                for (const dependency of mergedChunk.dependencies) {\n                    dependencies.add(dependency);\n                    dependency.dependentChunks.delete(mergedChunk);\n                    dependency.dependentChunks.add(closestChunk);\n                }\n                for (const dependentChunk of mergedChunk.dependentChunks) {\n                    dependentChunks.add(dependentChunk);\n                    dependentChunk.dependencies.delete(mergedChunk);\n                    dependentChunk.dependencies.add(closestChunk);\n                }\n                dependencies.delete(closestChunk);\n                dependentChunks.delete(closestChunk);\n                getChunksInPartition(closestChunk, minChunkSize, chunkPartition).add(closestChunk);\n            }\n        }\n    }\n}\n// Merging will not produce cycles if none of the direct non-merged dependencies\n// of a chunk have the other chunk as a transitive dependency\nfunction isValidMerge(mergedChunk, targetChunk, onlySubsetMerge) {\n    return !(hasTransitiveDependencyOrNonCorrelatedSideEffect(mergedChunk, targetChunk, true) ||\n        hasTransitiveDependencyOrNonCorrelatedSideEffect(targetChunk, mergedChunk, !onlySubsetMerge));\n}\nfunction hasTransitiveDependencyOrNonCorrelatedSideEffect(dependentChunk, dependencyChunk, checkSideEffects) {\n    const { correlatedSideEffects } = dependencyChunk;\n    if (checkSideEffects) {\n        for (const sideEffect of dependentChunk.sideEffects) {\n            if (!correlatedSideEffects.has(sideEffect)) {\n                return true;\n            }\n        }\n    }\n    const chunksToCheck = new Set(dependentChunk.dependencies);\n    for (const { dependencies, sideEffects } of chunksToCheck) {\n        for (const dependency of dependencies) {\n            if (dependency === dependencyChunk) {\n                return true;\n            }\n            chunksToCheck.add(dependency);\n        }\n        if (checkSideEffects) {\n            for (const sideEffect of sideEffects) {\n                if (!correlatedSideEffects.has(sideEffect)) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\nfunction getChunksInPartition(chunk, minChunkSize, chunkPartition) {\n    return chunk.size < minChunkSize ? chunkPartition.small : chunkPartition.big;\n}\nfunction getChunkEntryDistance({ dependentEntries: sourceEntries }, { dependentEntries: targetEntries }, enforceSubest) {\n    let distance = 0;\n    for (const entryIndex of targetEntries) {\n        if (!sourceEntries.has(entryIndex)) {\n            distance++;\n        }\n    }\n    for (const entryIndex of sourceEntries) {\n        if (!targetEntries.has(entryIndex)) {\n            if (enforceSubest) {\n                return Infinity;\n            }\n            distance++;\n        }\n    }\n    return distance;\n}\n\n// ported from https://github.com/substack/node-commondir\nfunction commondir(files) {\n    if (files.length === 0)\n        return '/';\n    if (files.length === 1)\n        return dirname(files[0]);\n    const commonSegments = files.slice(1).reduce((commonSegments, file) => {\n        const pathSegements = file.split(/\\/+|\\\\+/);\n        let index;\n        for (index = 0; commonSegments[index] === pathSegements[index] &&\n            index < Math.min(commonSegments.length, pathSegements.length); index++)\n            ;\n        return commonSegments.slice(0, index);\n    }, files[0].split(/\\/+|\\\\+/));\n    // Windows correctly handles paths with forward-slashes\n    return commonSegments.length > 1 ? commonSegments.join('/') : '/';\n}\n\nconst compareExecIndex = (unitA, unitB) => unitA.execIndex > unitB.execIndex ? 1 : -1;\nfunction sortByExecutionOrder(units) {\n    units.sort(compareExecIndex);\n}\nfunction analyseModuleExecution(entryModules) {\n    let nextExecIndex = 0;\n    const cyclePaths = [];\n    const analysedModules = new Set();\n    const dynamicImports = new Set();\n    const parents = new Map();\n    const orderedModules = [];\n    const analyseModule = (module) => {\n        if (module instanceof Module) {\n            for (const dependency of module.dependencies) {\n                if (parents.has(dependency)) {\n                    if (!analysedModules.has(dependency)) {\n                        cyclePaths.push(getCyclePath(dependency, module, parents));\n                    }\n                    continue;\n                }\n                parents.set(dependency, module);\n                analyseModule(dependency);\n            }\n            for (const dependency of module.implicitlyLoadedBefore) {\n                dynamicImports.add(dependency);\n            }\n            for (const { resolution } of module.dynamicImports) {\n                if (resolution instanceof Module) {\n                    dynamicImports.add(resolution);\n                }\n            }\n            orderedModules.push(module);\n        }\n        module.execIndex = nextExecIndex++;\n        analysedModules.add(module);\n    };\n    for (const currentEntry of entryModules) {\n        if (!parents.has(currentEntry)) {\n            parents.set(currentEntry, null);\n            analyseModule(currentEntry);\n        }\n    }\n    for (const currentEntry of dynamicImports) {\n        if (!parents.has(currentEntry)) {\n            parents.set(currentEntry, null);\n            analyseModule(currentEntry);\n        }\n    }\n    return { cyclePaths, orderedModules };\n}\nfunction getCyclePath(module, parent, parents) {\n    const cycleSymbol = Symbol(module.id);\n    const path = [module.id];\n    let nextModule = parent;\n    module.cycles.add(cycleSymbol);\n    while (nextModule !== module) {\n        nextModule.cycles.add(cycleSymbol);\n        path.push(nextModule.id);\n        nextModule = parents.get(nextModule);\n    }\n    path.push(path[0]);\n    path.reverse();\n    return path;\n}\n\nfunction getGenerateCodeSnippets({ compact, generatedCode: { arrowFunctions, constBindings, objectShorthand, reservedNamesAsProps } }) {\n    const { _, n, s } = compact ? { _: '', n: '', s: '' } : { _: ' ', n: '\\n', s: ';' };\n    const cnst = constBindings ? 'const' : 'var';\n    const getNonArrowFunctionIntro = (parameters, { isAsync, name }) => `${isAsync ? `async ` : ''}function${name ? ` ${name}` : ''}${_}(${parameters.join(`,${_}`)})${_}`;\n    const getFunctionIntro = arrowFunctions\n        ? (parameters, { isAsync, name }) => {\n            const singleParameter = parameters.length === 1;\n            const asyncString = isAsync ? `async${singleParameter ? ' ' : _}` : '';\n            return `${name ? `${cnst} ${name}${_}=${_}` : ''}${asyncString}${singleParameter ? parameters[0] : `(${parameters.join(`,${_}`)})`}${_}=>${_}`;\n        }\n        : getNonArrowFunctionIntro;\n    const getDirectReturnFunction = (parameters, { functionReturn, lineBreakIndent, name }) => [\n        `${getFunctionIntro(parameters, {\n            isAsync: false,\n            name\n        })}${arrowFunctions\n            ? lineBreakIndent\n                ? `${n}${lineBreakIndent.base}${lineBreakIndent.t}`\n                : ''\n            : `{${lineBreakIndent ? `${n}${lineBreakIndent.base}${lineBreakIndent.t}` : _}${functionReturn ? 'return ' : ''}`}`,\n        arrowFunctions\n            ? `${name ? ';' : ''}${lineBreakIndent ? `${n}${lineBreakIndent.base}` : ''}`\n            : `${s}${lineBreakIndent ? `${n}${lineBreakIndent.base}` : _}}`\n    ];\n    const isValidPropertyName = reservedNamesAsProps\n        ? (name) => validPropertyName.test(name)\n        : (name) => !RESERVED_NAMES$1.has(name) && validPropertyName.test(name);\n    return {\n        _,\n        cnst,\n        getDirectReturnFunction,\n        getDirectReturnIifeLeft: (parameters, returned, { needsArrowReturnParens, needsWrappedFunction }) => {\n            const [left, right] = getDirectReturnFunction(parameters, {\n                functionReturn: true,\n                lineBreakIndent: null,\n                name: null\n            });\n            return `${wrapIfNeeded(`${left}${wrapIfNeeded(returned, arrowFunctions && needsArrowReturnParens)}${right}`, arrowFunctions || needsWrappedFunction)}(`;\n        },\n        getFunctionIntro,\n        getNonArrowFunctionIntro,\n        getObject(fields, { lineBreakIndent }) {\n            const prefix = lineBreakIndent ? `${n}${lineBreakIndent.base}${lineBreakIndent.t}` : _;\n            return `{${fields\n                .map(([key, value]) => {\n                if (key === null)\n                    return `${prefix}${value}`;\n                const needsQuotes = !isValidPropertyName(key);\n                return key === value && objectShorthand && !needsQuotes\n                    ? prefix + key\n                    : `${prefix}${needsQuotes ? `'${key}'` : key}:${_}${value}`;\n            })\n                .join(`,`)}${fields.length === 0 ? '' : lineBreakIndent ? `${n}${lineBreakIndent.base}` : _}}`;\n        },\n        getPropertyAccess: (name) => isValidPropertyName(name) ? `.${name}` : `[${JSON.stringify(name)}]`,\n        n,\n        s\n    };\n}\nconst wrapIfNeeded = (code, needsParens) => needsParens ? `(${code})` : code;\nconst validPropertyName = /^(?!\\d)[\\w$]+$/;\n\nclass Source {\n    constructor(filename, content) {\n        this.isOriginal = true;\n        this.filename = filename;\n        this.content = content;\n    }\n    traceSegment(line, column, name) {\n        return { column, line, name, source: this };\n    }\n}\nclass Link {\n    constructor(map, sources) {\n        this.sources = sources;\n        this.names = map.names;\n        this.mappings = map.mappings;\n    }\n    traceMappings() {\n        const sources = [];\n        const sourceIndexMap = new Map();\n        const sourcesContent = [];\n        const names = [];\n        const nameIndexMap = new Map();\n        const mappings = [];\n        for (const line of this.mappings) {\n            const tracedLine = [];\n            for (const segment of line) {\n                if (segment.length === 1)\n                    continue;\n                const source = this.sources[segment[1]];\n                if (!source)\n                    continue;\n                const traced = source.traceSegment(segment[2], segment[3], segment.length === 5 ? this.names[segment[4]] : '');\n                if (traced) {\n                    const { column, line, name, source: { content, filename } } = traced;\n                    let sourceIndex = sourceIndexMap.get(filename);\n                    if (sourceIndex === undefined) {\n                        sourceIndex = sources.length;\n                        sources.push(filename);\n                        sourceIndexMap.set(filename, sourceIndex);\n                        sourcesContent[sourceIndex] = content;\n                    }\n                    else if (sourcesContent[sourceIndex] == null) {\n                        sourcesContent[sourceIndex] = content;\n                    }\n                    else if (content != null && sourcesContent[sourceIndex] !== content) {\n                        return error(errorConflictingSourcemapSources(filename));\n                    }\n                    const tracedSegment = [segment[0], sourceIndex, line, column];\n                    if (name) {\n                        let nameIndex = nameIndexMap.get(name);\n                        if (nameIndex === undefined) {\n                            nameIndex = names.length;\n                            names.push(name);\n                            nameIndexMap.set(name, nameIndex);\n                        }\n                        tracedSegment[4] = nameIndex;\n                    }\n                    tracedLine.push(tracedSegment);\n                }\n            }\n            mappings.push(tracedLine);\n        }\n        return { mappings, names, sources, sourcesContent };\n    }\n    traceSegment(line, column, name) {\n        const segments = this.mappings[line];\n        if (!segments)\n            return null;\n        // binary search through segments for the given column\n        let searchStart = 0;\n        let searchEnd = segments.length - 1;\n        while (searchStart <= searchEnd) {\n            const m = (searchStart + searchEnd) >> 1;\n            const segment = segments[m];\n            // If a sourcemap does not have sufficient resolution to contain a\n            // necessary mapping, e.g. because it only contains line information, we\n            // use the best approximation we could find\n            if (segment[0] === column || searchStart === searchEnd) {\n                if (segment.length == 1)\n                    return null;\n                const source = this.sources[segment[1]];\n                if (!source)\n                    return null;\n                return source.traceSegment(segment[2], segment[3], segment.length === 5 ? this.names[segment[4]] : name);\n            }\n            if (segment[0] > column) {\n                searchEnd = m - 1;\n            }\n            else {\n                searchStart = m + 1;\n            }\n        }\n        return null;\n    }\n}\nfunction getLinkMap(warn) {\n    return function linkMap(source, map) {\n        if (map.mappings) {\n            return new Link(map, [source]);\n        }\n        warn(errorSourcemapBroken(map.plugin));\n        return new Link({\n            mappings: [],\n            names: []\n        }, [source]);\n    };\n}\nfunction getCollapsedSourcemap(id, originalCode, originalSourcemap, sourcemapChain, linkMap) {\n    let source;\n    if (originalSourcemap) {\n        const sources = originalSourcemap.sources;\n        const sourcesContent = originalSourcemap.sourcesContent || [];\n        const directory = dirname(id) || '.';\n        const sourceRoot = originalSourcemap.sourceRoot || '.';\n        const baseSources = sources.map((source, index) => new Source(resolve(directory, sourceRoot, source), sourcesContent[index]));\n        source = new Link(originalSourcemap, baseSources);\n    }\n    else {\n        source = new Source(id, originalCode);\n    }\n    return sourcemapChain.reduce(linkMap, source);\n}\nfunction collapseSourcemaps(file, map, modules, bundleSourcemapChain, excludeContent, warn) {\n    const linkMap = getLinkMap(warn);\n    const moduleSources = modules\n        .filter(module => !module.excludeFromSourcemap)\n        .map(module => getCollapsedSourcemap(module.id, module.originalCode, module.originalSourcemap, module.sourcemapChain, linkMap));\n    const link = new Link(map, moduleSources);\n    const source = bundleSourcemapChain.reduce(linkMap, link);\n    let { sources, sourcesContent, names, mappings } = source.traceMappings();\n    if (file) {\n        const directory = dirname(file);\n        sources = sources.map((source) => relative$1(directory, source));\n        file = basename(file);\n    }\n    sourcesContent = (excludeContent ? null : sourcesContent);\n    return new SourceMap({ file, mappings, names, sources, sourcesContent });\n}\nfunction collapseSourcemap(id, originalCode, originalSourcemap, sourcemapChain, warn) {\n    if (sourcemapChain.length === 0) {\n        return originalSourcemap;\n    }\n    const source = getCollapsedSourcemap(id, originalCode, originalSourcemap, sourcemapChain, getLinkMap(warn));\n    const map = source.traceMappings();\n    return { version: 3, ...map };\n}\n\nconst createHash = () => createHash$1('sha256');\n\nfunction decodedSourcemap(map) {\n    if (!map)\n        return null;\n    if (typeof map === 'string') {\n        map = JSON.parse(map);\n    }\n    if (map.mappings === '') {\n        return {\n            mappings: [],\n            names: [],\n            sources: [],\n            version: 3\n        };\n    }\n    const mappings = typeof map.mappings === 'string' ? decode(map.mappings) : map.mappings;\n    return { ...map, mappings };\n}\n\nasync function renderChunks(chunks, bundle, pluginDriver, outputOptions, onwarn) {\n    timeStart('render chunks', 2);\n    reserveEntryChunksInBundle(chunks);\n    const renderedChunks = await Promise.all(chunks.map(chunk => chunk.render()));\n    timeEnd('render chunks', 2);\n    timeStart('transform chunks', 2);\n    const chunkGraph = getChunkGraph(chunks);\n    const { nonHashedChunksWithPlaceholders, renderedChunksByPlaceholder, hashDependenciesByPlaceholder } = await transformChunksAndGenerateContentHashes(renderedChunks, chunkGraph, outputOptions, pluginDriver, onwarn);\n    const hashesByPlaceholder = generateFinalHashes(renderedChunksByPlaceholder, hashDependenciesByPlaceholder, bundle);\n    addChunksToBundle(renderedChunksByPlaceholder, hashesByPlaceholder, bundle, nonHashedChunksWithPlaceholders, pluginDriver, outputOptions);\n    timeEnd('transform chunks', 2);\n}\nfunction reserveEntryChunksInBundle(chunks) {\n    for (const chunk of chunks) {\n        if (chunk.facadeModule && chunk.facadeModule.isUserDefinedEntryPoint) {\n            // reserves name in bundle as side effect if it does not contain a hash\n            chunk.getPreliminaryFileName();\n        }\n    }\n}\nfunction getChunkGraph(chunks) {\n    return Object.fromEntries(chunks.map(chunk => {\n        const renderedChunkInfo = chunk.getRenderedChunkInfo();\n        return [renderedChunkInfo.fileName, renderedChunkInfo];\n    }));\n}\nasync function transformChunk(magicString, fileName, usedModules, chunkGraph, options, outputPluginDriver, onwarn) {\n    let map = null;\n    const sourcemapChain = [];\n    let code = await outputPluginDriver.hookReduceArg0('renderChunk', [magicString.toString(), chunkGraph[fileName], options, { chunks: chunkGraph }], (code, result, plugin) => {\n        if (result == null)\n            return code;\n        if (typeof result === 'string')\n            result = {\n                code: result,\n                map: undefined\n            };\n        // strict null check allows 'null' maps to not be pushed to the chain, while 'undefined' gets the missing map warning\n        if (result.map !== null) {\n            const map = decodedSourcemap(result.map);\n            sourcemapChain.push(map || { missing: true, plugin: plugin.name });\n        }\n        return result.code;\n    });\n    const { compact, dir, file, sourcemap, sourcemapExcludeSources, sourcemapFile, sourcemapPathTransform, sourcemapIgnoreList } = options;\n    if (!compact && code[code.length - 1] !== '\\n')\n        code += '\\n';\n    if (sourcemap) {\n        timeStart('sourcemaps', 3);\n        let resultingFile;\n        if (file)\n            resultingFile = resolve(sourcemapFile || file);\n        else if (dir)\n            resultingFile = resolve(dir, fileName);\n        else\n            resultingFile = resolve(fileName);\n        const decodedMap = magicString.generateDecodedMap({});\n        map = collapseSourcemaps(resultingFile, decodedMap, usedModules, sourcemapChain, sourcemapExcludeSources, onwarn);\n        for (let sourcesIndex = 0; sourcesIndex < map.sources.length; ++sourcesIndex) {\n            let sourcePath = map.sources[sourcesIndex];\n            const sourcemapPath = `${resultingFile}.map`;\n            const ignoreList = sourcemapIgnoreList(sourcePath, sourcemapPath);\n            if (typeof ignoreList !== 'boolean') {\n                error(errorFailedValidation('sourcemapIgnoreList function must return a boolean.'));\n            }\n            if (ignoreList) {\n                if (map.x_google_ignoreList === undefined) {\n                    map.x_google_ignoreList = [];\n                }\n                if (!map.x_google_ignoreList.includes(sourcesIndex)) {\n                    map.x_google_ignoreList.push(sourcesIndex);\n                }\n            }\n            if (sourcemapPathTransform) {\n                sourcePath = sourcemapPathTransform(sourcePath, sourcemapPath);\n                if (typeof sourcePath !== 'string') {\n                    error(errorFailedValidation(`sourcemapPathTransform function must return a string.`));\n                }\n            }\n            map.sources[sourcesIndex] = normalize(sourcePath);\n        }\n        timeEnd('sourcemaps', 3);\n    }\n    return {\n        code,\n        map\n    };\n}\nasync function transformChunksAndGenerateContentHashes(renderedChunks, chunkGraph, outputOptions, pluginDriver, onwarn) {\n    const nonHashedChunksWithPlaceholders = [];\n    const renderedChunksByPlaceholder = new Map();\n    const hashDependenciesByPlaceholder = new Map();\n    const placeholders = new Set();\n    for (const { preliminaryFileName: { hashPlaceholder } } of renderedChunks) {\n        if (hashPlaceholder)\n            placeholders.add(hashPlaceholder);\n    }\n    await Promise.all(renderedChunks.map(async ({ chunk, preliminaryFileName: { fileName, hashPlaceholder }, magicString, usedModules }) => {\n        const transformedChunk = {\n            chunk,\n            fileName,\n            ...(await transformChunk(magicString, fileName, usedModules, chunkGraph, outputOptions, pluginDriver, onwarn))\n        };\n        const { code } = transformedChunk;\n        if (hashPlaceholder) {\n            // To create a reproducible content-only hash, all placeholders are\n            // replaced with the same value before hashing\n            const { containedPlaceholders, transformedCode } = replacePlaceholdersWithDefaultAndGetContainedPlaceholders(code, placeholders);\n            const hash = createHash().update(transformedCode);\n            const hashAugmentation = pluginDriver.hookReduceValueSync('augmentChunkHash', '', [chunk.getRenderedChunkInfo()], (augmentation, pluginHash) => {\n                if (pluginHash) {\n                    augmentation += pluginHash;\n                }\n                return augmentation;\n            });\n            if (hashAugmentation) {\n                hash.update(hashAugmentation);\n            }\n            renderedChunksByPlaceholder.set(hashPlaceholder, transformedChunk);\n            hashDependenciesByPlaceholder.set(hashPlaceholder, {\n                containedPlaceholders,\n                contentHash: hash.digest('hex')\n            });\n        }\n        else {\n            nonHashedChunksWithPlaceholders.push(transformedChunk);\n        }\n    }));\n    return {\n        hashDependenciesByPlaceholder,\n        nonHashedChunksWithPlaceholders,\n        renderedChunksByPlaceholder\n    };\n}\nfunction generateFinalHashes(renderedChunksByPlaceholder, hashDependenciesByPlaceholder, bundle) {\n    const hashesByPlaceholder = new Map();\n    for (const [placeholder, { fileName }] of renderedChunksByPlaceholder) {\n        let hash = createHash();\n        const hashDependencyPlaceholders = new Set([placeholder]);\n        for (const dependencyPlaceholder of hashDependencyPlaceholders) {\n            const { containedPlaceholders, contentHash } = hashDependenciesByPlaceholder.get(dependencyPlaceholder);\n            hash.update(contentHash);\n            for (const containedPlaceholder of containedPlaceholders) {\n                // When looping over a map, setting an entry only causes a new iteration if the key is new\n                hashDependencyPlaceholders.add(containedPlaceholder);\n            }\n        }\n        let finalFileName;\n        let finalHash;\n        do {\n            // In case of a hash collision, create a hash of the hash\n            if (finalHash) {\n                hash = createHash().update(finalHash);\n            }\n            finalHash = hash.digest('hex').slice(0, placeholder.length);\n            finalFileName = replaceSinglePlaceholder(fileName, placeholder, finalHash);\n        } while (bundle[lowercaseBundleKeys].has(finalFileName.toLowerCase()));\n        bundle[finalFileName] = FILE_PLACEHOLDER;\n        hashesByPlaceholder.set(placeholder, finalHash);\n    }\n    return hashesByPlaceholder;\n}\nfunction addChunksToBundle(renderedChunksByPlaceholder, hashesByPlaceholder, bundle, nonHashedChunksWithPlaceholders, pluginDriver, options) {\n    for (const { chunk, code, fileName, map } of renderedChunksByPlaceholder.values()) {\n        let updatedCode = replacePlaceholders(code, hashesByPlaceholder);\n        const finalFileName = replacePlaceholders(fileName, hashesByPlaceholder);\n        if (map) {\n            map.file = replacePlaceholders(map.file, hashesByPlaceholder);\n            updatedCode += emitSourceMapAndGetComment(finalFileName, map, pluginDriver, options);\n        }\n        bundle[finalFileName] = chunk.finalizeChunk(updatedCode, map, hashesByPlaceholder);\n    }\n    for (const { chunk, code, fileName, map } of nonHashedChunksWithPlaceholders) {\n        let updatedCode = hashesByPlaceholder.size > 0 ? replacePlaceholders(code, hashesByPlaceholder) : code;\n        if (map) {\n            updatedCode += emitSourceMapAndGetComment(fileName, map, pluginDriver, options);\n        }\n        bundle[fileName] = chunk.finalizeChunk(updatedCode, map, hashesByPlaceholder);\n    }\n}\nfunction emitSourceMapAndGetComment(fileName, map, pluginDriver, { sourcemap, sourcemapBaseUrl }) {\n    let url;\n    if (sourcemap === 'inline') {\n        url = map.toUrl();\n    }\n    else {\n        const sourcemapFileName = `${basename(fileName)}.map`;\n        url = sourcemapBaseUrl\n            ? new URL(sourcemapFileName, sourcemapBaseUrl).toString()\n            : sourcemapFileName;\n        pluginDriver.emitFile({ fileName: `${fileName}.map`, source: map.toString(), type: 'asset' });\n    }\n    return sourcemap === 'hidden' ? '' : `//# ${SOURCEMAPPING_URL}=${url}\\n`;\n}\n\nclass Bundle {\n    constructor(outputOptions, unsetOptions, inputOptions, pluginDriver, graph) {\n        this.outputOptions = outputOptions;\n        this.unsetOptions = unsetOptions;\n        this.inputOptions = inputOptions;\n        this.pluginDriver = pluginDriver;\n        this.graph = graph;\n        this.facadeChunkByModule = new Map();\n        this.includedNamespaces = new Set();\n    }\n    async generate(isWrite) {\n        timeStart('GENERATE', 1);\n        const outputBundleBase = Object.create(null);\n        const outputBundle = getOutputBundle(outputBundleBase);\n        this.pluginDriver.setOutputBundle(outputBundle, this.outputOptions);\n        try {\n            timeStart('initialize render', 2);\n            await this.pluginDriver.hookParallel('renderStart', [this.outputOptions, this.inputOptions]);\n            timeEnd('initialize render', 2);\n            timeStart('generate chunks', 2);\n            const getHashPlaceholder = getHashPlaceholderGenerator();\n            const chunks = await this.generateChunks(outputBundle, getHashPlaceholder);\n            if (chunks.length > 1) {\n                validateOptionsForMultiChunkOutput(this.outputOptions, this.inputOptions.onwarn);\n            }\n            this.pluginDriver.setChunkInformation(this.facadeChunkByModule);\n            for (const chunk of chunks) {\n                chunk.generateExports();\n            }\n            timeEnd('generate chunks', 2);\n            await renderChunks(chunks, outputBundle, this.pluginDriver, this.outputOptions, this.inputOptions.onwarn);\n        }\n        catch (error_) {\n            await this.pluginDriver.hookParallel('renderError', [error_]);\n            throw error_;\n        }\n        removeUnreferencedAssets(outputBundle);\n        timeStart('generate bundle', 2);\n        await this.pluginDriver.hookSeq('generateBundle', [\n            this.outputOptions,\n            outputBundle,\n            isWrite\n        ]);\n        this.finaliseAssets(outputBundle);\n        timeEnd('generate bundle', 2);\n        timeEnd('GENERATE', 1);\n        return outputBundleBase;\n    }\n    async addManualChunks(manualChunks) {\n        const manualChunkAliasByEntry = new Map();\n        const chunkEntries = await Promise.all(Object.entries(manualChunks).map(async ([alias, files]) => ({\n            alias,\n            entries: await this.graph.moduleLoader.addAdditionalModules(files)\n        })));\n        for (const { alias, entries } of chunkEntries) {\n            for (const entry of entries) {\n                addModuleToManualChunk(alias, entry, manualChunkAliasByEntry);\n            }\n        }\n        return manualChunkAliasByEntry;\n    }\n    assignManualChunks(getManualChunk) {\n        // eslint-disable-next-line unicorn/prefer-module\n        const manualChunkAliasesWithEntry = [];\n        const manualChunksApi = {\n            getModuleIds: () => this.graph.modulesById.keys(),\n            getModuleInfo: this.graph.getModuleInfo\n        };\n        for (const module of this.graph.modulesById.values()) {\n            if (module instanceof Module) {\n                const manualChunkAlias = getManualChunk(module.id, manualChunksApi);\n                if (typeof manualChunkAlias === 'string') {\n                    manualChunkAliasesWithEntry.push([manualChunkAlias, module]);\n                }\n            }\n        }\n        manualChunkAliasesWithEntry.sort(([aliasA], [aliasB]) => aliasA > aliasB ? 1 : aliasA < aliasB ? -1 : 0);\n        const manualChunkAliasByEntry = new Map();\n        for (const [alias, module] of manualChunkAliasesWithEntry) {\n            addModuleToManualChunk(alias, module, manualChunkAliasByEntry);\n        }\n        return manualChunkAliasByEntry;\n    }\n    finaliseAssets(bundle) {\n        if (this.outputOptions.validate) {\n            for (const file of Object.values(bundle)) {\n                if ('code' in file) {\n                    try {\n                        this.graph.contextParse(file.code, {\n                            ecmaVersion: 'latest'\n                        });\n                    }\n                    catch (error_) {\n                        this.inputOptions.onwarn(errorChunkInvalid(file, error_));\n                    }\n                }\n            }\n        }\n        this.pluginDriver.finaliseAssets();\n    }\n    async generateChunks(bundle, getHashPlaceholder) {\n        const { experimentalMinChunkSize, inlineDynamicImports, manualChunks, preserveModules } = this.outputOptions;\n        const manualChunkAliasByEntry = typeof manualChunks === 'object'\n            ? await this.addManualChunks(manualChunks)\n            : this.assignManualChunks(manualChunks);\n        const snippets = getGenerateCodeSnippets(this.outputOptions);\n        const includedModules = getIncludedModules(this.graph.modulesById);\n        const inputBase = commondir(getAbsoluteEntryModulePaths(includedModules, preserveModules));\n        const externalChunkByModule = getExternalChunkByModule(this.graph.modulesById, this.outputOptions, inputBase);\n        const chunks = [];\n        const chunkByModule = new Map();\n        for (const { alias, modules } of inlineDynamicImports\n            ? [{ alias: null, modules: includedModules }]\n            : preserveModules\n                ? includedModules.map(module => ({ alias: null, modules: [module] }))\n                : getChunkAssignments(this.graph.entryModules, manualChunkAliasByEntry, experimentalMinChunkSize)) {\n            sortByExecutionOrder(modules);\n            const chunk = new Chunk(modules, this.inputOptions, this.outputOptions, this.unsetOptions, this.pluginDriver, this.graph.modulesById, chunkByModule, externalChunkByModule, this.facadeChunkByModule, this.includedNamespaces, alias, getHashPlaceholder, bundle, inputBase, snippets);\n            chunks.push(chunk);\n        }\n        for (const chunk of chunks) {\n            chunk.link();\n        }\n        const facades = [];\n        for (const chunk of chunks) {\n            facades.push(...chunk.generateFacades());\n        }\n        return [...chunks, ...facades];\n    }\n}\nfunction validateOptionsForMultiChunkOutput(outputOptions, onWarn) {\n    if (outputOptions.format === 'umd' || outputOptions.format === 'iife')\n        return error(errorInvalidOption('output.format', URL_OUTPUT_FORMAT, 'UMD and IIFE output formats are not supported for code-splitting builds', outputOptions.format));\n    if (typeof outputOptions.file === 'string')\n        return error(errorInvalidOption('output.file', URL_OUTPUT_DIR, 'when building multiple chunks, the \"output.dir\" option must be used, not \"output.file\". To inline dynamic imports, set the \"inlineDynamicImports\" option'));\n    if (outputOptions.sourcemapFile)\n        return error(errorInvalidOption('output.sourcemapFile', URL_OUTPUT_SOURCEMAPFILE, '\"output.sourcemapFile\" is only supported for single-file builds'));\n    if (!outputOptions.amd.autoId && outputOptions.amd.id)\n        onWarn(errorInvalidOption('output.amd.id', URL_OUTPUT_AMD_ID, 'this option is only properly supported for single-file builds. Use \"output.amd.autoId\" and \"output.amd.basePath\" instead'));\n}\nfunction getIncludedModules(modulesById) {\n    const includedModules = [];\n    for (const module of modulesById.values()) {\n        if (module instanceof Module &&\n            (module.isIncluded() || module.info.isEntry || module.includedDynamicImporters.length > 0)) {\n            includedModules.push(module);\n        }\n    }\n    return includedModules;\n}\nfunction getAbsoluteEntryModulePaths(includedModules, preserveModules) {\n    const absoluteEntryModulePaths = [];\n    for (const module of includedModules) {\n        if ((module.info.isEntry || preserveModules) && isAbsolute(module.id)) {\n            absoluteEntryModulePaths.push(module.id);\n        }\n    }\n    return absoluteEntryModulePaths;\n}\nfunction getExternalChunkByModule(modulesById, outputOptions, inputBase) {\n    const externalChunkByModule = new Map();\n    for (const module of modulesById.values()) {\n        if (module instanceof ExternalModule) {\n            externalChunkByModule.set(module, new ExternalChunk(module, outputOptions, inputBase));\n        }\n    }\n    return externalChunkByModule;\n}\nfunction addModuleToManualChunk(alias, module, manualChunkAliasByEntry) {\n    const existingAlias = manualChunkAliasByEntry.get(module);\n    if (typeof existingAlias === 'string' && existingAlias !== alias) {\n        return error(errorCannotAssignModuleToChunk(module.id, alias, existingAlias));\n    }\n    manualChunkAliasByEntry.set(module, alias);\n}\n\n// This file was generated. Do not modify manually!\nvar astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 357, 0, 62, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\n// This file was generated. Do not modify manually!\nvar astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1070, 4050, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 46, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 482, 44, 11, 6, 17, 0, 322, 29, 19, 43, 1269, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4152, 8, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\n\n// This file was generated. Do not modify manually!\nvar nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\n// This file was generated. Do not modify manually!\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n\n// These are a run-length and offset encoded representation of the\n\n// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n};\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\nvar keywords$1 = {\n  5: ecma5AndLessKeywords,\n  \"5module\": ecma5AndLessKeywords + \" export import\",\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n};\n\nvar keywordRelationalOperator = /^in(stanceof)?$/;\n\n// ## Character categories\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) { return false }\n    pos += set[i + 1];\n    if (pos >= code) { return true }\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) { return code === 36 }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes)\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) { return code === 36 }\n  if (code < 58) { return true }\n  if (code < 65) { return false }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n}\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar TokenType = function TokenType(label, conf) {\n  if ( conf === void 0 ) conf = {};\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nfunction binop(name, prec) {\n  return new TokenType(name, {beforeExpr: true, binop: prec})\n}\nvar beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n// Map keyword names to token types.\n\nvar keywords = {};\n\n// Succinct definitions of keyword token types\nfunction kw(name, options) {\n  if ( options === void 0 ) options = {};\n\n  options.keyword = name;\n  return keywords[name] = new TokenType(name, options)\n}\n\nvar types$1 = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  privateId: new TokenType(\"privateId\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  invalidTemplate: new TokenType(\"invalidTemplate\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n  assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n  incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n  prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=/===/!==\", 6),\n  relational: binop(\"</>/<=/>=\", 7),\n  bitShift: binop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {beforeExpr: true}),\n  coalesce: binop(\"??\", 1),\n\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {isLoop: true}),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {isLoop: true}),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\", startsExpr),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\", startsExpr),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n  _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n  _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n};\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code) {\n  return code === 10 || code === 13 || code === 0x2028 || code === 0x2029\n}\n\nfunction nextLineBreak(code, from, end) {\n  if ( end === void 0 ) end = code.length;\n\n  for (var i = from; i < end; i++) {\n    var next = code.charCodeAt(i);\n    if (isNewLine(next))\n      { return i < end - 1 && next === 13 && code.charCodeAt(i + 1) === 10 ? i + 2 : i + 1 }\n  }\n  return -1\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\nvar toString = ref.toString;\n\nvar hasOwn = Object.hasOwn || (function (obj, propName) { return (\n  hasOwnProperty.call(obj, propName)\n); });\n\nvar isArray = Array.isArray || (function (obj) { return (\n  toString.call(obj) === \"[object Array]\"\n); });\n\nfunction wordsRegexp(words) {\n  return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n}\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) { return String.fromCharCode(code) }\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n}\n\nvar loneSurrogate = /(?:[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/;\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  this.line = line;\n  this.column = col;\n};\n\nPosition.prototype.offset = function offset (n) {\n  return new Position(this.line, this.column + n)\n};\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start;\n  this.end = end;\n  if (p.sourceFile !== null) { this.source = p.sourceFile; }\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    var nextBreak = nextLineBreak(input, cur, offset);\n    if (nextBreak < 0) { return new Position(line, offset - cur) }\n    ++line;\n    cur = nextBreak;\n  }\n}\n\n// A second argument must be given to configure the parser process.\n// These options are recognized (only `ecmaVersion` is required):\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must be\n  // either 3, 5, 6 (or 2015), 7 (2016), 8 (2017), 9 (2018), 10\n  // (2019), 11 (2020), 12 (2021), 13 (2022), 14 (2023), or `\"latest\"`\n  // (the latest version the library supports). This influences\n  // support for strict mode, the set of reserved words, and support\n  // for new syntax features.\n  ecmaVersion: null,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `\"script\"` or `\"module\"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // the position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program, and an import.meta expression\n  // in a script isn't considered an error.\n  allowImportExportEverywhere: false,\n  // By default, await identifiers are allowed to appear at the top-level scope only if ecmaVersion >= 2022.\n  // When enabled, await identifiers are allowed to appear at the top-level scope,\n  // but they are still not allowed in non-async functions.\n  allowAwaitOutsideFunction: null,\n  // When enabled, super identifiers are not constrained to\n  // appearing in methods and do not raise an error when they appear elsewhere.\n  allowSuperOutsideMethod: null,\n  // When enabled, hashbang directive in the beginning of file is\n  // allowed and treated as a line comment. Enabled by default when\n  // `ecmaVersion` >= 2023.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false\n};\n\n// Interpret and default an options object\n\nvar warnedAboutEcmaVersion = false;\n\nfunction getOptions(opts) {\n  var options = {};\n\n  for (var opt in defaultOptions)\n    { options[opt] = opts && hasOwn(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n  if (options.ecmaVersion === \"latest\") {\n    options.ecmaVersion = 1e8;\n  } else if (options.ecmaVersion == null) {\n    if (!warnedAboutEcmaVersion && typeof console === \"object\" && console.warn) {\n      warnedAboutEcmaVersion = true;\n      console.warn(\"Since Acorn 8.0.0, options.ecmaVersion is required.\\nDefaulting to 2020, but this will stop working in the future.\");\n    }\n    options.ecmaVersion = 11;\n  } else if (options.ecmaVersion >= 2015) {\n    options.ecmaVersion -= 2009;\n  }\n\n  if (options.allowReserved == null)\n    { options.allowReserved = options.ecmaVersion < 5; }\n\n  if (opts.allowHashBang == null)\n    { options.allowHashBang = options.ecmaVersion >= 14; }\n\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken;\n    options.onToken = function (token) { return tokens.push(token); };\n  }\n  if (isArray(options.onComment))\n    { options.onComment = pushComment(options, options.onComment); }\n\n  return options\n}\n\nfunction pushComment(options, array) {\n  return function(block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"Block\" : \"Line\",\n      value: text,\n      start: start,\n      end: end\n    };\n    if (options.locations)\n      { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n    if (options.ranges)\n      { comment.range = [start, end]; }\n    array.push(comment);\n  }\n}\n\n// Each scope gets a bitset that may contain these flags\nvar\n    SCOPE_TOP = 1,\n    SCOPE_FUNCTION = 2,\n    SCOPE_ASYNC = 4,\n    SCOPE_GENERATOR = 8,\n    SCOPE_ARROW = 16,\n    SCOPE_SIMPLE_CATCH = 32,\n    SCOPE_SUPER = 64,\n    SCOPE_DIRECT_SUPER = 128,\n    SCOPE_CLASS_STATIC_BLOCK = 256,\n    SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK;\n\nfunction functionFlags(async, generator) {\n  return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n}\n\n// Used in checkLVal* and declareName to determine the type of a binding\nvar\n    BIND_NONE = 0, // Not a binding\n    BIND_VAR = 1, // Var-style binding\n    BIND_LEXICAL = 2, // Let- or const-style binding\n    BIND_FUNCTION = 3, // Function declaration\n    BIND_SIMPLE_CATCH = 4, // Simple (identifier pattern) catch binding\n    BIND_OUTSIDE = 5; // Special case for function names as bound inside the function\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options);\n  this.sourceFile = options.sourceFile;\n  this.keywords = wordsRegexp(keywords$1[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n  var reserved = \"\";\n  if (options.allowReserved !== true) {\n    reserved = reservedWords[options.ecmaVersion >= 6 ? 6 : options.ecmaVersion === 5 ? 5 : 3];\n    if (options.sourceType === \"module\") { reserved += \" await\"; }\n  }\n  this.reservedWords = wordsRegexp(reserved);\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n  this.reservedWordsStrict = wordsRegexp(reservedStrict);\n  this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n  this.input = String(input);\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  this.containsEsc = false;\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos;\n    this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n  } else {\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = types$1.eof;\n  // For tokens that include more information than their type, the value\n  this.value = null;\n  // Its start and end offset\n  this.start = this.end = this.pos;\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = this.curPosition();\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null;\n  this.lastTokStart = this.lastTokEnd = this.pos;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext();\n  this.exprAllowed = true;\n\n  // Figure out if it's a module code.\n  this.inModule = options.sourceType === \"module\";\n  this.strict = this.inModule || this.strictDirective(this.pos);\n\n  // Used to signify the start of a potential arrow function\n  this.potentialArrowAt = -1;\n  this.potentialArrowInForAwait = false;\n\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n  // Labels in scope.\n  this.labels = [];\n  // Thus-far undefined exports.\n  this.undefinedExports = Object.create(null);\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n    { this.skipLineComment(2); }\n\n  // Scope tracking for duplicate variable names (see scope.js)\n  this.scopeStack = [];\n  this.enterScope(SCOPE_TOP);\n\n  // For RegExp validation\n  this.regexpState = null;\n\n  // The stack of private names.\n  // Each element has two properties: 'declared' and 'used'.\n  // When it exited from the outermost class definition, all used private names must be declared.\n  this.privateNameStack = [];\n};\n\nvar prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },canAwait: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true },allowNewDotTarget: { configurable: true },inClassStaticBlock: { configurable: true } };\n\nParser.prototype.parse = function parse () {\n  var node = this.options.program || this.startNode();\n  this.nextToken();\n  return this.parseTopLevel(node)\n};\n\nprototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\n\nprototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 && !this.currentVarScope().inClassFieldInit };\n\nprototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 && !this.currentVarScope().inClassFieldInit };\n\nprototypeAccessors.canAwait.get = function () {\n  for (var i = this.scopeStack.length - 1; i >= 0; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.inClassFieldInit || scope.flags & SCOPE_CLASS_STATIC_BLOCK) { return false }\n    if (scope.flags & SCOPE_FUNCTION) { return (scope.flags & SCOPE_ASYNC) > 0 }\n  }\n  return (this.inModule && this.options.ecmaVersion >= 13) || this.options.allowAwaitOutsideFunction\n};\n\nprototypeAccessors.allowSuper.get = function () {\n  var ref = this.currentThisScope();\n    var flags = ref.flags;\n    var inClassFieldInit = ref.inClassFieldInit;\n  return (flags & SCOPE_SUPER) > 0 || inClassFieldInit || this.options.allowSuperOutsideMethod\n};\n\nprototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\n\nprototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\nprototypeAccessors.allowNewDotTarget.get = function () {\n  var ref = this.currentThisScope();\n    var flags = ref.flags;\n    var inClassFieldInit = ref.inClassFieldInit;\n  return (flags & (SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK)) > 0 || inClassFieldInit\n};\n\nprototypeAccessors.inClassStaticBlock.get = function () {\n  return (this.currentVarScope().flags & SCOPE_CLASS_STATIC_BLOCK) > 0\n};\n\nParser.extend = function extend () {\n    var plugins = [], len = arguments.length;\n    while ( len-- ) plugins[ len ] = arguments[ len ];\n\n  var cls = this;\n  for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n  return cls\n};\n\nParser.parse = function parse (input, options) {\n  return new this(options, input).parse()\n};\n\nParser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n  var parser = new this(options, input, pos);\n  parser.nextToken();\n  return parser.parseExpression()\n};\n\nParser.tokenizer = function tokenizer (input, options) {\n  return new this(options, input)\n};\n\nObject.defineProperties( Parser.prototype, prototypeAccessors );\n\nvar pp$9 = Parser.prototype;\n\n// ## Parser utilities\n\nvar literal = /^(?:'((?:\\\\.|[^'\\\\])*?)'|\"((?:\\\\.|[^\"\\\\])*?)\")/;\npp$9.strictDirective = function(start) {\n  if (this.options.ecmaVersion < 5) { return false }\n  for (;;) {\n    // Try to find string literal.\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this.input)[0].length;\n    var match = literal.exec(this.input.slice(start));\n    if (!match) { return false }\n    if ((match[1] || match[2]) === \"use strict\") {\n      skipWhiteSpace.lastIndex = start + match[0].length;\n      var spaceAfter = skipWhiteSpace.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;\n      var next = this.input.charAt(end);\n      return next === \";\" || next === \"}\" ||\n        (lineBreak.test(spaceAfter[0]) &&\n         !(/[(`.[+\\-/*%<>=,?^&]/.test(next) || next === \"!\" && this.input.charAt(end + 1) === \"=\"))\n    }\n    start += match[0].length;\n\n    // Skip semicolon, if any.\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this.input)[0].length;\n    if (this.input[start] === \";\")\n      { start++; }\n  }\n};\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp$9.eat = function(type) {\n  if (this.type === type) {\n    this.next();\n    return true\n  } else {\n    return false\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp$9.isContextual = function(name) {\n  return this.type === types$1.name && this.value === name && !this.containsEsc\n};\n\n// Consumes contextual keyword if possible.\n\npp$9.eatContextual = function(name) {\n  if (!this.isContextual(name)) { return false }\n  this.next();\n  return true\n};\n\n// Asserts that following token is given contextual keyword.\n\npp$9.expectContextual = function(name) {\n  if (!this.eatContextual(name)) { this.unexpected(); }\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp$9.canInsertSemicolon = function() {\n  return this.type === types$1.eof ||\n    this.type === types$1.braceR ||\n    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\npp$9.insertSemicolon = function() {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon)\n      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n    return true\n  }\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp$9.semicolon = function() {\n  if (!this.eat(types$1.semi) && !this.insertSemicolon()) { this.unexpected(); }\n};\n\npp$9.afterTrailingComma = function(tokType, notNext) {\n  if (this.type === tokType) {\n    if (this.options.onTrailingComma)\n      { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n    if (!notNext)\n      { this.next(); }\n    return true\n  }\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp$9.expect = function(type) {\n  this.eat(type) || this.unexpected();\n};\n\n// Raise an unexpected token error.\n\npp$9.unexpected = function(pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\n\nvar DestructuringErrors = function DestructuringErrors() {\n  this.shorthandAssign =\n  this.trailingComma =\n  this.parenthesizedAssign =\n  this.parenthesizedBind =\n  this.doubleProto =\n    -1;\n};\n\npp$9.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) { return }\n  if (refDestructuringErrors.trailingComma > -1)\n    { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n  if (parens > -1) { this.raiseRecoverable(parens, isAssign ? \"Assigning to rvalue\" : \"Parenthesized pattern\"); }\n};\n\npp$9.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n  if (!refDestructuringErrors) { return false }\n  var shorthandAssign = refDestructuringErrors.shorthandAssign;\n  var doubleProto = refDestructuringErrors.doubleProto;\n  if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n  if (shorthandAssign >= 0)\n    { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n  if (doubleProto >= 0)\n    { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n};\n\npp$9.checkYieldAwaitInDefaultParams = function() {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n    { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n  if (this.awaitPos)\n    { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n};\n\npp$9.isSimpleAssignTarget = function(expr) {\n  if (expr.type === \"ParenthesizedExpression\")\n    { return this.isSimpleAssignTarget(expr.expression) }\n  return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n};\n\nvar pp$8 = Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$8.parseTopLevel = function(node) {\n  var exports = Object.create(null);\n  if (!node.body) { node.body = []; }\n  while (this.type !== types$1.eof) {\n    var stmt = this.parseStatement(null, true, exports);\n    node.body.push(stmt);\n  }\n  if (this.inModule)\n    { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n      {\n        var name = list[i];\n\n        this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n      } }\n  this.adaptDirectivePrologue(node.body);\n  this.next();\n  node.sourceType = this.options.sourceType;\n  return this.finishNode(node, \"Program\")\n};\n\nvar loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\npp$8.isLet = function(context) {\n  if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n  // For ambiguous cases, determine if a LexicalDeclaration (or only a\n  // Statement) is allowed here. If context is not empty then only a Statement\n  // is allowed. However, `let [` is an explicit negative lookahead for\n  // ExpressionStatement, so special-case it first.\n  if (nextCh === 91 || nextCh === 92 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true } // '[', '/', astral\n  if (context) { return false }\n\n  if (nextCh === 123) { return true } // '{'\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1;\n    while (isIdentifierChar(nextCh = this.input.charCodeAt(pos), true)) { ++pos; }\n    if (nextCh === 92 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true }\n    var ident = this.input.slice(next, pos);\n    if (!keywordRelationalOperator.test(ident)) { return true }\n  }\n  return false\n};\n\n// check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\npp$8.isAsyncFunction = function() {\n  if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n    { return false }\n\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, after;\n  return !lineBreak.test(this.input.slice(this.pos, next)) &&\n    this.input.slice(next, next + 8) === \"function\" &&\n    (next + 8 === this.input.length ||\n     !(isIdentifierChar(after = this.input.charCodeAt(next + 8)) || after > 0xd7ff && after < 0xdc00))\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$8.parseStatement = function(context, topLevel, exports) {\n  var starttype = this.type, node = this.startNode(), kind;\n\n  if (this.isLet(context)) {\n    starttype = types$1._var;\n    kind = \"let\";\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n  case types$1._break: case types$1._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n  case types$1._debugger: return this.parseDebuggerStatement(node)\n  case types$1._do: return this.parseDoStatement(node)\n  case types$1._for: return this.parseForStatement(node)\n  case types$1._function:\n    // Function as sole body of either an if statement or a labeled statement\n    // works, but not when it is part of a labeled statement that is the sole\n    // body of an if statement.\n    if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n    return this.parseFunctionStatement(node, false, !context)\n  case types$1._class:\n    if (context) { this.unexpected(); }\n    return this.parseClass(node, true)\n  case types$1._if: return this.parseIfStatement(node)\n  case types$1._return: return this.parseReturnStatement(node)\n  case types$1._switch: return this.parseSwitchStatement(node)\n  case types$1._throw: return this.parseThrowStatement(node)\n  case types$1._try: return this.parseTryStatement(node)\n  case types$1._const: case types$1._var:\n    kind = kind || this.value;\n    if (context && kind !== \"var\") { this.unexpected(); }\n    return this.parseVarStatement(node, kind)\n  case types$1._while: return this.parseWhileStatement(node)\n  case types$1._with: return this.parseWithStatement(node)\n  case types$1.braceL: return this.parseBlock(true, node)\n  case types$1.semi: return this.parseEmptyStatement(node)\n  case types$1._export:\n  case types$1._import:\n    if (this.options.ecmaVersion > 10 && starttype === types$1._import) {\n      skipWhiteSpace.lastIndex = this.pos;\n      var skip = skipWhiteSpace.exec(this.input);\n      var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n      if (nextCh === 40 || nextCh === 46) // '(' or '.'\n        { return this.parseExpressionStatement(node, this.parseExpression()) }\n    }\n\n    if (!this.options.allowImportExportEverywhere) {\n      if (!topLevel)\n        { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n      if (!this.inModule)\n        { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n    }\n    return starttype === types$1._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n  default:\n    if (this.isAsyncFunction()) {\n      if (context) { this.unexpected(); }\n      this.next();\n      return this.parseFunctionStatement(node, true, !context)\n    }\n\n    var maybeName = this.value, expr = this.parseExpression();\n    if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon))\n      { return this.parseLabeledStatement(node, maybeName, expr, context) }\n    else { return this.parseExpressionStatement(node, expr) }\n  }\n};\n\npp$8.parseBreakContinueStatement = function(node, keyword) {\n  var isBreak = keyword === \"break\";\n  this.next();\n  if (this.eat(types$1.semi) || this.insertSemicolon()) { node.label = null; }\n  else if (this.type !== types$1.name) { this.unexpected(); }\n  else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = 0;\n  for (; i < this.labels.length; ++i) {\n    var lab = this.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n      if (node.label && isBreak) { break }\n    }\n  }\n  if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n};\n\npp$8.parseDebuggerStatement = function(node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\")\n};\n\npp$8.parseDoStatement = function(node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"do\");\n  this.labels.pop();\n  this.expect(types$1._while);\n  node.test = this.parseParenExpression();\n  if (this.options.ecmaVersion >= 6)\n    { this.eat(types$1.semi); }\n  else\n    { this.semicolon(); }\n  return this.finishNode(node, \"DoWhileStatement\")\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$8.parseForStatement = function(node) {\n  this.next();\n  var awaitAt = (this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n  this.labels.push(loopLabel);\n  this.enterScope(0);\n  this.expect(types$1.parenL);\n  if (this.type === types$1.semi) {\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, null)\n  }\n  var isLet = this.isLet();\n  if (this.type === types$1._var || this.type === types$1._const || isLet) {\n    var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n    this.next();\n    this.parseVar(init$1, true, kind);\n    this.finishNode(init$1, \"VariableDeclaration\");\n    if ((this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types$1._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      return this.parseForIn(node, init$1)\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init$1)\n  }\n  var startsWithLet = this.isContextual(\"let\"), isForOf = false;\n  var refDestructuringErrors = new DestructuringErrors;\n  var init = this.parseExpression(awaitAt > -1 ? \"await\" : true, refDestructuringErrors);\n  if (this.type === types$1._in || (isForOf = this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n    if (this.options.ecmaVersion >= 9) {\n      if (this.type === types$1._in) {\n        if (awaitAt > -1) { this.unexpected(awaitAt); }\n      } else { node.await = awaitAt > -1; }\n    }\n    if (startsWithLet && isForOf) { this.raise(init.start, \"The left-hand side of a for-of loop may not start with 'let'.\"); }\n    this.toAssignable(init, false, refDestructuringErrors);\n    this.checkLValPattern(init);\n    return this.parseForIn(node, init)\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  if (awaitAt > -1) { this.unexpected(awaitAt); }\n  return this.parseFor(node, init)\n};\n\npp$8.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n  this.next();\n  return this.parseFunction(node, FUNC_STATEMENT$1 | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n};\n\npp$8.parseIfStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  // allow function declarations in branches, but only in non-strict mode\n  node.consequent = this.parseStatement(\"if\");\n  node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n  return this.finishNode(node, \"IfStatement\")\n};\n\npp$8.parseReturnStatement = function(node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n    { this.raise(this.start, \"'return' outside of function\"); }\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(types$1.semi) || this.insertSemicolon()) { node.argument = null; }\n  else { node.argument = this.parseExpression(); this.semicolon(); }\n  return this.finishNode(node, \"ReturnStatement\")\n};\n\npp$8.parseSwitchStatement = function(node) {\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types$1.braceL);\n  this.labels.push(switchLabel);\n  this.enterScope(0);\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur;\n  for (var sawDefault = false; this.type !== types$1.braceR;) {\n    if (this.type === types$1._case || this.type === types$1._default) {\n      var isCase = this.type === types$1._case;\n      if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n      node.cases.push(cur = this.startNode());\n      cur.consequent = [];\n      this.next();\n      if (isCase) {\n        cur.test = this.parseExpression();\n      } else {\n        if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n        sawDefault = true;\n        cur.test = null;\n      }\n      this.expect(types$1.colon);\n    } else {\n      if (!cur) { this.unexpected(); }\n      cur.consequent.push(this.parseStatement(null));\n    }\n  }\n  this.exitScope();\n  if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n  this.next(); // Closing brace\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\")\n};\n\npp$8.parseThrowStatement = function(node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n    { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\")\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty$1 = [];\n\npp$8.parseTryStatement = function(node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n  if (this.type === types$1._catch) {\n    var clause = this.startNode();\n    this.next();\n    if (this.eat(types$1.parenL)) {\n      clause.param = this.parseBindingAtom();\n      var simple = clause.param.type === \"Identifier\";\n      this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n      this.checkLValPattern(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n      this.expect(types$1.parenR);\n    } else {\n      if (this.options.ecmaVersion < 10) { this.unexpected(); }\n      clause.param = null;\n      this.enterScope(0);\n    }\n    clause.body = this.parseBlock(false);\n    this.exitScope();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n  node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n  if (!node.handler && !node.finalizer)\n    { this.raise(node.start, \"Missing catch or finally clause\"); }\n  return this.finishNode(node, \"TryStatement\")\n};\n\npp$8.parseVarStatement = function(node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\")\n};\n\npp$8.parseWhileStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"while\");\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\")\n};\n\npp$8.parseWithStatement = function(node) {\n  if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(\"with\");\n  return this.finishNode(node, \"WithStatement\")\n};\n\npp$8.parseEmptyStatement = function(node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\")\n};\n\npp$8.parseLabeledStatement = function(node, maybeName, expr, context) {\n  for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n    {\n    var label = list[i$1];\n\n    if (label.name === maybeName)\n      { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n  } }\n  var kind = this.type.isLoop ? \"loop\" : this.type === types$1._switch ? \"switch\" : null;\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label$1 = this.labels[i];\n    if (label$1.statementStart === node.start) {\n      // Update information about previous labels on this node\n      label$1.statementStart = this.start;\n      label$1.kind = kind;\n    } else { break }\n  }\n  this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n  node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\")\n};\n\npp$8.parseExpressionStatement = function(node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\")\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$8.parseBlock = function(createNewLexicalScope, node, exitStrict) {\n  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n  if ( node === void 0 ) node = this.startNode();\n\n  node.body = [];\n  this.expect(types$1.braceL);\n  if (createNewLexicalScope) { this.enterScope(0); }\n  while (this.type !== types$1.braceR) {\n    var stmt = this.parseStatement(null);\n    node.body.push(stmt);\n  }\n  if (exitStrict) { this.strict = false; }\n  this.next();\n  if (createNewLexicalScope) { this.exitScope(); }\n  return this.finishNode(node, \"BlockStatement\")\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$8.parseFor = function(node, init) {\n  node.init = init;\n  this.expect(types$1.semi);\n  node.test = this.type === types$1.semi ? null : this.parseExpression();\n  this.expect(types$1.semi);\n  node.update = this.type === types$1.parenR ? null : this.parseExpression();\n  this.expect(types$1.parenR);\n  node.body = this.parseStatement(\"for\");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\")\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$8.parseForIn = function(node, init) {\n  var isForIn = this.type === types$1._in;\n  this.next();\n\n  if (\n    init.type === \"VariableDeclaration\" &&\n    init.declarations[0].init != null &&\n    (\n      !isForIn ||\n      this.options.ecmaVersion < 8 ||\n      this.strict ||\n      init.kind !== \"var\" ||\n      init.declarations[0].id.type !== \"Identifier\"\n    )\n  ) {\n    this.raise(\n      init.start,\n      ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n    );\n  }\n  node.left = init;\n  node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n  this.expect(types$1.parenR);\n  node.body = this.parseStatement(\"for\");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n};\n\n// Parse a list of variable declarations.\n\npp$8.parseVar = function(node, isFor, kind) {\n  node.declarations = [];\n  node.kind = kind;\n  for (;;) {\n    var decl = this.startNode();\n    this.parseVarId(decl, kind);\n    if (this.eat(types$1.eq)) {\n      decl.init = this.parseMaybeAssign(isFor);\n    } else if (kind === \"const\" && !(this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n      this.unexpected();\n    } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.type === types$1._in || this.isContextual(\"of\")))) {\n      this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n    if (!this.eat(types$1.comma)) { break }\n  }\n  return node\n};\n\npp$8.parseVarId = function(decl, kind) {\n  decl.id = this.parseBindingAtom();\n  this.checkLValPattern(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n};\n\nvar FUNC_STATEMENT$1 = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID$1 = 4;\n\n// Parse a function declaration or literal (depending on the\n// `statement & FUNC_STATEMENT`).\n\n// Remove `allowExpressionBody` for 7.0.0, as it is only called with false\npp$8.parseFunction = function(node, statement, allowExpressionBody, isAsync, forInit) {\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n    if (this.type === types$1.star && (statement & FUNC_HANGING_STATEMENT))\n      { this.unexpected(); }\n    node.generator = this.eat(types$1.star);\n  }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  if (statement & FUNC_STATEMENT$1) {\n    node.id = (statement & FUNC_NULLABLE_ID$1) && this.type !== types$1.name ? null : this.parseIdent();\n    if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n      // If it is a regular function declaration in sloppy mode, then it is\n      // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n      // mode depends on properties of the current scope (see\n      // treatFunctionsAsVar).\n      { this.checkLValSimple(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n  }\n\n  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(node.async, node.generator));\n\n  if (!(statement & FUNC_STATEMENT$1))\n    { node.id = this.type === types$1.name ? this.parseIdent() : null; }\n\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody, false, forInit);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, (statement & FUNC_STATEMENT$1) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n};\n\npp$8.parseFunctionParams = function(node) {\n  this.expect(types$1.parenL);\n  node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$8.parseClass = function(node, isStatement) {\n  this.next();\n\n  // ecma-262 14.6 Class Definitions\n  // A class definition is always strict mode code.\n  var oldStrict = this.strict;\n  this.strict = true;\n\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var privateNameMap = this.enterClassBody();\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(types$1.braceL);\n  while (this.type !== types$1.braceR) {\n    var element = this.parseClassElement(node.superClass !== null);\n    if (element) {\n      classBody.body.push(element);\n      if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n        if (hadConstructor) { this.raise(element.start, \"Duplicate constructor in the same class\"); }\n        hadConstructor = true;\n      } else if (element.key && element.key.type === \"PrivateIdentifier\" && isPrivateNameConflicted(privateNameMap, element)) {\n        this.raiseRecoverable(element.key.start, (\"Identifier '#\" + (element.key.name) + \"' has already been declared\"));\n      }\n    }\n  }\n  this.strict = oldStrict;\n  this.next();\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  this.exitClassBody();\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n};\n\npp$8.parseClassElement = function(constructorAllowsSuper) {\n  if (this.eat(types$1.semi)) { return null }\n\n  var ecmaVersion = this.options.ecmaVersion;\n  var node = this.startNode();\n  var keyName = \"\";\n  var isGenerator = false;\n  var isAsync = false;\n  var kind = \"method\";\n  var isStatic = false;\n\n  if (this.eatContextual(\"static\")) {\n    // Parse static init block\n    if (ecmaVersion >= 13 && this.eat(types$1.braceL)) {\n      this.parseClassStaticBlock(node);\n      return node\n    }\n    if (this.isClassElementNameStart() || this.type === types$1.star) {\n      isStatic = true;\n    } else {\n      keyName = \"static\";\n    }\n  }\n  node.static = isStatic;\n  if (!keyName && ecmaVersion >= 8 && this.eatContextual(\"async\")) {\n    if ((this.isClassElementNameStart() || this.type === types$1.star) && !this.canInsertSemicolon()) {\n      isAsync = true;\n    } else {\n      keyName = \"async\";\n    }\n  }\n  if (!keyName && (ecmaVersion >= 9 || !isAsync) && this.eat(types$1.star)) {\n    isGenerator = true;\n  }\n  if (!keyName && !isAsync && !isGenerator) {\n    var lastValue = this.value;\n    if (this.eatContextual(\"get\") || this.eatContextual(\"set\")) {\n      if (this.isClassElementNameStart()) {\n        kind = lastValue;\n      } else {\n        keyName = lastValue;\n      }\n    }\n  }\n\n  // Parse element name\n  if (keyName) {\n    // 'async', 'get', 'set', or 'static' were not a keyword contextually.\n    // The last token is any of those. Make it the element name.\n    node.computed = false;\n    node.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc);\n    node.key.name = keyName;\n    this.finishNode(node.key, \"Identifier\");\n  } else {\n    this.parseClassElementName(node);\n  }\n\n  // Parse element value\n  if (ecmaVersion < 13 || this.type === types$1.parenL || kind !== \"method\" || isGenerator || isAsync) {\n    var isConstructor = !node.static && checkKeyName(node, \"constructor\");\n    var allowsDirectSuper = isConstructor && constructorAllowsSuper;\n    // Couldn't move this check into the 'parseClassMethod' method for backward compatibility.\n    if (isConstructor && kind !== \"method\") { this.raise(node.key.start, \"Constructor can't have get/set modifier\"); }\n    node.kind = isConstructor ? \"constructor\" : kind;\n    this.parseClassMethod(node, isGenerator, isAsync, allowsDirectSuper);\n  } else {\n    this.parseClassField(node);\n  }\n\n  return node\n};\n\npp$8.isClassElementNameStart = function() {\n  return (\n    this.type === types$1.name ||\n    this.type === types$1.privateId ||\n    this.type === types$1.num ||\n    this.type === types$1.string ||\n    this.type === types$1.bracketL ||\n    this.type.keyword\n  )\n};\n\npp$8.parseClassElementName = function(element) {\n  if (this.type === types$1.privateId) {\n    if (this.value === \"constructor\") {\n      this.raise(this.start, \"Classes can't have an element named '#constructor'\");\n    }\n    element.computed = false;\n    element.key = this.parsePrivateIdent();\n  } else {\n    this.parsePropertyName(element);\n  }\n};\n\npp$8.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n  // Check key and flags\n  var key = method.key;\n  if (method.kind === \"constructor\") {\n    if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n    if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n  } else if (method.static && checkKeyName(method, \"prototype\")) {\n    this.raise(key.start, \"Classes may not have a static property named prototype\");\n  }\n\n  // Parse value\n  var value = method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n\n  // Check value\n  if (method.kind === \"get\" && value.params.length !== 0)\n    { this.raiseRecoverable(value.start, \"getter should have no params\"); }\n  if (method.kind === \"set\" && value.params.length !== 1)\n    { this.raiseRecoverable(value.start, \"setter should have exactly one param\"); }\n  if (method.kind === \"set\" && value.params[0].type === \"RestElement\")\n    { this.raiseRecoverable(value.params[0].start, \"Setter cannot use rest params\"); }\n\n  return this.finishNode(method, \"MethodDefinition\")\n};\n\npp$8.parseClassField = function(field) {\n  if (checkKeyName(field, \"constructor\")) {\n    this.raise(field.key.start, \"Classes can't have a field named 'constructor'\");\n  } else if (field.static && checkKeyName(field, \"prototype\")) {\n    this.raise(field.key.start, \"Classes can't have a static field named 'prototype'\");\n  }\n\n  if (this.eat(types$1.eq)) {\n    // To raise SyntaxError if 'arguments' exists in the initializer.\n    var scope = this.currentThisScope();\n    var inClassFieldInit = scope.inClassFieldInit;\n    scope.inClassFieldInit = true;\n    field.value = this.parseMaybeAssign();\n    scope.inClassFieldInit = inClassFieldInit;\n  } else {\n    field.value = null;\n  }\n  this.semicolon();\n\n  return this.finishNode(field, \"PropertyDefinition\")\n};\n\npp$8.parseClassStaticBlock = function(node) {\n  node.body = [];\n\n  var oldLabels = this.labels;\n  this.labels = [];\n  this.enterScope(SCOPE_CLASS_STATIC_BLOCK | SCOPE_SUPER);\n  while (this.type !== types$1.braceR) {\n    var stmt = this.parseStatement(null);\n    node.body.push(stmt);\n  }\n  this.next();\n  this.exitScope();\n  this.labels = oldLabels;\n\n  return this.finishNode(node, \"StaticBlock\")\n};\n\npp$8.parseClassId = function(node, isStatement) {\n  if (this.type === types$1.name) {\n    node.id = this.parseIdent();\n    if (isStatement)\n      { this.checkLValSimple(node.id, BIND_LEXICAL, false); }\n  } else {\n    if (isStatement === true)\n      { this.unexpected(); }\n    node.id = null;\n  }\n};\n\npp$8.parseClassSuper = function(node) {\n  node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts(false) : null;\n};\n\npp$8.enterClassBody = function() {\n  var element = {declared: Object.create(null), used: []};\n  this.privateNameStack.push(element);\n  return element.declared\n};\n\npp$8.exitClassBody = function() {\n  var ref = this.privateNameStack.pop();\n  var declared = ref.declared;\n  var used = ref.used;\n  var len = this.privateNameStack.length;\n  var parent = len === 0 ? null : this.privateNameStack[len - 1];\n  for (var i = 0; i < used.length; ++i) {\n    var id = used[i];\n    if (!hasOwn(declared, id.name)) {\n      if (parent) {\n        parent.used.push(id);\n      } else {\n        this.raiseRecoverable(id.start, (\"Private field '#\" + (id.name) + \"' must be declared in an enclosing class\"));\n      }\n    }\n  }\n};\n\nfunction isPrivateNameConflicted(privateNameMap, element) {\n  var name = element.key.name;\n  var curr = privateNameMap[name];\n\n  var next = \"true\";\n  if (element.type === \"MethodDefinition\" && (element.kind === \"get\" || element.kind === \"set\")) {\n    next = (element.static ? \"s\" : \"i\") + element.kind;\n  }\n\n  // `class { get #a(){}; static set #a(_){} }` is also conflict.\n  if (\n    curr === \"iget\" && next === \"iset\" ||\n    curr === \"iset\" && next === \"iget\" ||\n    curr === \"sget\" && next === \"sset\" ||\n    curr === \"sset\" && next === \"sget\"\n  ) {\n    privateNameMap[name] = \"true\";\n    return false\n  } else if (!curr) {\n    privateNameMap[name] = next;\n    return false\n  } else {\n    return true\n  }\n}\n\nfunction checkKeyName(node, name) {\n  var computed = node.computed;\n  var key = node.key;\n  return !computed && (\n    key.type === \"Identifier\" && key.name === name ||\n    key.type === \"Literal\" && key.value === name\n  )\n}\n\n// Parses module export declaration.\n\npp$8.parseExport = function(node, exports) {\n  this.next();\n  // export * from '...'\n  if (this.eat(types$1.star)) {\n    if (this.options.ecmaVersion >= 11) {\n      if (this.eatContextual(\"as\")) {\n        node.exported = this.parseModuleExportName();\n        this.checkExport(exports, node.exported, this.lastTokStart);\n      } else {\n        node.exported = null;\n      }\n    }\n    this.expectContextual(\"from\");\n    if (this.type !== types$1.string) { this.unexpected(); }\n    node.source = this.parseExprAtom();\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  }\n  if (this.eat(types$1._default)) { // export default ...\n    this.checkExport(exports, \"default\", this.lastTokStart);\n    var isAsync;\n    if (this.type === types$1._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n      if (isAsync) { this.next(); }\n      node.declaration = this.parseFunction(fNode, FUNC_STATEMENT$1 | FUNC_NULLABLE_ID$1, false, isAsync);\n    } else if (this.type === types$1._class) {\n      var cNode = this.startNode();\n      node.declaration = this.parseClass(cNode, \"nullableID\");\n    } else {\n      node.declaration = this.parseMaybeAssign();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(null);\n    if (node.declaration.type === \"VariableDeclaration\")\n      { this.checkVariableExport(exports, node.declaration.declarations); }\n    else\n      { this.checkExport(exports, node.declaration.id, node.declaration.id.start); }\n    node.specifiers = [];\n    node.source = null;\n  } else { // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers(exports);\n    if (this.eatContextual(\"from\")) {\n      if (this.type !== types$1.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n    } else {\n      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n        // check for keywords used as local names\n        var spec = list[i];\n\n        this.checkUnreserved(spec.local);\n        // check if export is defined\n        this.checkLocalExport(spec.local);\n\n        if (spec.local.type === \"Literal\") {\n          this.raise(spec.local.start, \"A string literal cannot be used as an exported binding without `from`.\");\n        }\n      }\n\n      node.source = null;\n    }\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n};\n\npp$8.checkExport = function(exports, name, pos) {\n  if (!exports) { return }\n  if (typeof name !== \"string\")\n    { name = name.type === \"Identifier\" ? name.name : name.value; }\n  if (hasOwn(exports, name))\n    { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n  exports[name] = true;\n};\n\npp$8.checkPatternExport = function(exports, pat) {\n  var type = pat.type;\n  if (type === \"Identifier\")\n    { this.checkExport(exports, pat, pat.start); }\n  else if (type === \"ObjectPattern\")\n    { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n      {\n        var prop = list[i];\n\n        this.checkPatternExport(exports, prop);\n      } }\n  else if (type === \"ArrayPattern\")\n    { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n      var elt = list$1[i$1];\n\n        if (elt) { this.checkPatternExport(exports, elt); }\n    } }\n  else if (type === \"Property\")\n    { this.checkPatternExport(exports, pat.value); }\n  else if (type === \"AssignmentPattern\")\n    { this.checkPatternExport(exports, pat.left); }\n  else if (type === \"RestElement\")\n    { this.checkPatternExport(exports, pat.argument); }\n  else if (type === \"ParenthesizedExpression\")\n    { this.checkPatternExport(exports, pat.expression); }\n};\n\npp$8.checkVariableExport = function(exports, decls) {\n  if (!exports) { return }\n  for (var i = 0, list = decls; i < list.length; i += 1)\n    {\n    var decl = list[i];\n\n    this.checkPatternExport(exports, decl.id);\n  }\n};\n\npp$8.shouldParseExportStatement = function() {\n  return this.type.keyword === \"var\" ||\n    this.type.keyword === \"const\" ||\n    this.type.keyword === \"class\" ||\n    this.type.keyword === \"function\" ||\n    this.isLet() ||\n    this.isAsyncFunction()\n};\n\n// Parses a comma-separated list of module exports.\n\npp$8.parseExportSpecifiers = function(exports) {\n  var nodes = [], first = true;\n  // export { x, y as z } [from '...']\n  this.expect(types$1.braceL);\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.afterTrailingComma(types$1.braceR)) { break }\n    } else { first = false; }\n\n    var node = this.startNode();\n    node.local = this.parseModuleExportName();\n    node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local;\n    this.checkExport(\n      exports,\n      node.exported,\n      node.exported.start\n    );\n    nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n  }\n  return nodes\n};\n\n// Parses import declaration.\n\npp$8.parseImport = function(node) {\n  this.next();\n  // import '...'\n  if (this.type === types$1.string) {\n    node.specifiers = empty$1;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === types$1.string ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\")\n};\n\n// Parses a comma-separated list of module imports.\n\npp$8.parseImportSpecifiers = function() {\n  var nodes = [], first = true;\n  if (this.type === types$1.name) {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLValSimple(node.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n    if (!this.eat(types$1.comma)) { return nodes }\n  }\n  if (this.type === types$1.star) {\n    var node$1 = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node$1.local = this.parseIdent();\n    this.checkLValSimple(node$1.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n    return nodes\n  }\n  this.expect(types$1.braceL);\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.afterTrailingComma(types$1.braceR)) { break }\n    } else { first = false; }\n\n    var node$2 = this.startNode();\n    node$2.imported = this.parseModuleExportName();\n    if (this.eatContextual(\"as\")) {\n      node$2.local = this.parseIdent();\n    } else {\n      this.checkUnreserved(node$2.imported);\n      node$2.local = node$2.imported;\n    }\n    this.checkLValSimple(node$2.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node$2, \"ImportSpecifier\"));\n  }\n  return nodes\n};\n\npp$8.parseModuleExportName = function() {\n  if (this.options.ecmaVersion >= 13 && this.type === types$1.string) {\n    var stringLiteral = this.parseLiteral(this.value);\n    if (loneSurrogate.test(stringLiteral.value)) {\n      this.raise(stringLiteral.start, \"An export name cannot include a lone surrogate.\");\n    }\n    return stringLiteral\n  }\n  return this.parseIdent(true)\n};\n\n// Set `ExpressionStatement#directive` property for directive prologues.\npp$8.adaptDirectivePrologue = function(statements) {\n  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n    statements[i].directive = statements[i].expression.raw.slice(1, -1);\n  }\n};\npp$8.isDirectiveCandidate = function(statement) {\n  return (\n    this.options.ecmaVersion >= 5 &&\n    statement.type === \"ExpressionStatement\" &&\n    statement.expression.type === \"Literal\" &&\n    typeof statement.expression.value === \"string\" &&\n    // Reject parenthesized strings.\n    (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n  )\n};\n\nvar pp$7 = Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$7.toAssignable = function(node, isBinding, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n    case \"Identifier\":\n      if (this.inAsync && node.name === \"await\")\n        { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n      break\n\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n    case \"AssignmentPattern\":\n    case \"RestElement\":\n      break\n\n    case \"ObjectExpression\":\n      node.type = \"ObjectPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      for (var i = 0, list = node.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      this.toAssignable(prop, isBinding);\n        // Early error:\n        //   AssignmentRestProperty[Yield, Await] :\n        //     `...` DestructuringAssignmentTarget[Yield, Await]\n        //\n        //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n        if (\n          prop.type === \"RestElement\" &&\n          (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n        ) {\n          this.raise(prop.argument.start, \"Unexpected token\");\n        }\n      }\n      break\n\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n      this.toAssignable(node.value, isBinding);\n      break\n\n    case \"ArrayExpression\":\n      node.type = \"ArrayPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      this.toAssignableList(node.elements, isBinding);\n      break\n\n    case \"SpreadElement\":\n      node.type = \"RestElement\";\n      this.toAssignable(node.argument, isBinding);\n      if (node.argument.type === \"AssignmentPattern\")\n        { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n      break\n\n    case \"AssignmentExpression\":\n      if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n      node.type = \"AssignmentPattern\";\n      delete node.operator;\n      this.toAssignable(node.left, isBinding);\n      break\n\n    case \"ParenthesizedExpression\":\n      this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n      break\n\n    case \"ChainExpression\":\n      this.raiseRecoverable(node.start, \"Optional chaining cannot appear in left-hand side\");\n      break\n\n    case \"MemberExpression\":\n      if (!isBinding) { break }\n\n    default:\n      this.raise(node.start, \"Assigning to rvalue\");\n    }\n  } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n  return node\n};\n\n// Convert list of expression atoms to binding list.\n\npp$7.toAssignableList = function(exprList, isBinding) {\n  var end = exprList.length;\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) { this.toAssignable(elt, isBinding); }\n  }\n  if (end) {\n    var last = exprList[end - 1];\n    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n      { this.unexpected(last.argument.start); }\n  }\n  return exprList\n};\n\n// Parses spread element.\n\npp$7.parseSpread = function(refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n  return this.finishNode(node, \"SpreadElement\")\n};\n\npp$7.parseRestBinding = function() {\n  var node = this.startNode();\n  this.next();\n\n  // RestElement inside of a function parameter must be an identifier\n  if (this.options.ecmaVersion === 6 && this.type !== types$1.name)\n    { this.unexpected(); }\n\n  node.argument = this.parseBindingAtom();\n\n  return this.finishNode(node, \"RestElement\")\n};\n\n// Parses lvalue (assignable) atom.\n\npp$7.parseBindingAtom = function() {\n  if (this.options.ecmaVersion >= 6) {\n    switch (this.type) {\n    case types$1.bracketL:\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseBindingList(types$1.bracketR, true, true);\n      return this.finishNode(node, \"ArrayPattern\")\n\n    case types$1.braceL:\n      return this.parseObj(true)\n    }\n  }\n  return this.parseIdent()\n};\n\npp$7.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (first) { first = false; }\n    else { this.expect(types$1.comma); }\n    if (allowEmpty && this.type === types$1.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n      break\n    } else if (this.type === types$1.ellipsis) {\n      var rest = this.parseRestBinding();\n      this.parseBindingListItem(rest);\n      elts.push(rest);\n      if (this.type === types$1.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n      this.expect(close);\n      break\n    } else {\n      var elem = this.parseMaybeDefault(this.start, this.startLoc);\n      this.parseBindingListItem(elem);\n      elts.push(elem);\n    }\n  }\n  return elts\n};\n\npp$7.parseBindingListItem = function(param) {\n  return param\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp$7.parseMaybeDefault = function(startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n  if (this.options.ecmaVersion < 6 || !this.eat(types$1.eq)) { return left }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\")\n};\n\n// The following three functions all verify that a node is an lvalue —\n// something that can be bound, or assigned to. In order to do so, they perform\n// a variety of checks:\n//\n// - Check that none of the bound/assigned-to identifiers are reserved words.\n// - Record name declarations for bindings in the appropriate scope.\n// - Check duplicate argument names, if checkClashes is set.\n//\n// If a complex binding pattern is encountered (e.g., object and array\n// destructuring), the entire pattern is recursively checked.\n//\n// There are three versions of checkLVal*() appropriate for different\n// circumstances:\n//\n// - checkLValSimple() shall be used if the syntactic construct supports\n//   nothing other than identifiers and member expressions. Parenthesized\n//   expressions are also correctly handled. This is generally appropriate for\n//   constructs for which the spec says\n//\n//   > It is a Syntax Error if AssignmentTargetType of [the production] is not\n//   > simple.\n//\n//   It is also appropriate for checking if an identifier is valid and not\n//   defined elsewhere, like import declarations or function/class identifiers.\n//\n//   Examples where this is used include:\n//     a += …;\n//     import a from '…';\n//   where a is the node to be checked.\n//\n// - checkLValPattern() shall be used if the syntactic construct supports\n//   anything checkLValSimple() supports, as well as object and array\n//   destructuring patterns. This is generally appropriate for constructs for\n//   which the spec says\n//\n//   > It is a Syntax Error if [the production] is neither an ObjectLiteral nor\n//   > an ArrayLiteral and AssignmentTargetType of [the production] is not\n//   > simple.\n//\n//   Examples where this is used include:\n//     (a = …);\n//     const a = …;\n//     try { … } catch (a) { … }\n//   where a is the node to be checked.\n//\n// - checkLValInnerPattern() shall be used if the syntactic construct supports\n//   anything checkLValPattern() supports, as well as default assignment\n//   patterns, rest elements, and other constructs that may appear within an\n//   object or array destructuring pattern.\n//\n//   As a special case, function parameters also use checkLValInnerPattern(),\n//   as they also support defaults and rest constructs.\n//\n// These functions deliberately support both assignment and binding constructs,\n// as the logic for both is exceedingly similar. If the node is the target of\n// an assignment, then bindingType should be set to BIND_NONE. Otherwise, it\n// should be set to the appropriate BIND_* constant, like BIND_VAR or\n// BIND_LEXICAL.\n//\n// If the function is called with a non-BIND_NONE bindingType, then\n// additionally a checkClashes object may be specified to allow checking for\n// duplicate argument names. checkClashes is ignored if the provided construct\n// is an assignment (i.e., bindingType is BIND_NONE).\n\npp$7.checkLValSimple = function(expr, bindingType, checkClashes) {\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  var isBind = bindingType !== BIND_NONE;\n\n  switch (expr.type) {\n  case \"Identifier\":\n    if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n      { this.raiseRecoverable(expr.start, (isBind ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n    if (isBind) {\n      if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n        { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n      if (checkClashes) {\n        if (hasOwn(checkClashes, expr.name))\n          { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n        checkClashes[expr.name] = true;\n      }\n      if (bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n    }\n    break\n\n  case \"ChainExpression\":\n    this.raiseRecoverable(expr.start, \"Optional chaining cannot appear in left-hand side\");\n    break\n\n  case \"MemberExpression\":\n    if (isBind) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n    break\n\n  case \"ParenthesizedExpression\":\n    if (isBind) { this.raiseRecoverable(expr.start, \"Binding parenthesized expression\"); }\n    return this.checkLValSimple(expr.expression, bindingType, checkClashes)\n\n  default:\n    this.raise(expr.start, (isBind ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n};\n\npp$7.checkLValPattern = function(expr, bindingType, checkClashes) {\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  switch (expr.type) {\n  case \"ObjectPattern\":\n    for (var i = 0, list = expr.properties; i < list.length; i += 1) {\n      var prop = list[i];\n\n    this.checkLValInnerPattern(prop, bindingType, checkClashes);\n    }\n    break\n\n  case \"ArrayPattern\":\n    for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n      var elem = list$1[i$1];\n\n    if (elem) { this.checkLValInnerPattern(elem, bindingType, checkClashes); }\n    }\n    break\n\n  default:\n    this.checkLValSimple(expr, bindingType, checkClashes);\n  }\n};\n\npp$7.checkLValInnerPattern = function(expr, bindingType, checkClashes) {\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  switch (expr.type) {\n  case \"Property\":\n    // AssignmentProperty has type === \"Property\"\n    this.checkLValInnerPattern(expr.value, bindingType, checkClashes);\n    break\n\n  case \"AssignmentPattern\":\n    this.checkLValPattern(expr.left, bindingType, checkClashes);\n    break\n\n  case \"RestElement\":\n    this.checkLValPattern(expr.argument, bindingType, checkClashes);\n    break\n\n  default:\n    this.checkLValPattern(expr, bindingType, checkClashes);\n  }\n};\n\n// The algorithm used to determine whether a regexp can appear at a\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n  this.generator = !!generator;\n};\n\nvar types = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", false),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n  f_stat: new TokContext(\"function\", false),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n};\n\nvar pp$6 = Parser.prototype;\n\npp$6.initialContext = function() {\n  return [types.b_stat]\n};\n\npp$6.curContext = function() {\n  return this.context[this.context.length - 1]\n};\n\npp$6.braceIsBlock = function(prevType) {\n  var parent = this.curContext();\n  if (parent === types.f_expr || parent === types.f_stat)\n    { return true }\n  if (prevType === types$1.colon && (parent === types.b_stat || parent === types.b_expr))\n    { return !parent.isExpr }\n\n  // The check for `tt.name && exprAllowed` detects whether we are\n  // after a `yield` or `of` construct. See the `updateContext` for\n  // `tt.name`.\n  if (prevType === types$1._return || prevType === types$1.name && this.exprAllowed)\n    { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n  if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow)\n    { return true }\n  if (prevType === types$1.braceL)\n    { return parent === types.b_stat }\n  if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name)\n    { return false }\n  return !this.exprAllowed\n};\n\npp$6.inGeneratorContext = function() {\n  for (var i = this.context.length - 1; i >= 1; i--) {\n    var context = this.context[i];\n    if (context.token === \"function\")\n      { return context.generator }\n  }\n  return false\n};\n\npp$6.updateContext = function(prevType) {\n  var update, type = this.type;\n  if (type.keyword && prevType === types$1.dot)\n    { this.exprAllowed = false; }\n  else if (update = type.updateContext)\n    { update.call(this, prevType); }\n  else\n    { this.exprAllowed = type.beforeExpr; }\n};\n\n// Used to handle egde cases when token context could not be inferred correctly during tokenization phase\n\npp$6.overrideContext = function(tokenCtx) {\n  if (this.curContext() !== tokenCtx) {\n    this.context[this.context.length - 1] = tokenCtx;\n  }\n};\n\n// Token-specific context update code\n\ntypes$1.parenR.updateContext = types$1.braceR.updateContext = function() {\n  if (this.context.length === 1) {\n    this.exprAllowed = true;\n    return\n  }\n  var out = this.context.pop();\n  if (out === types.b_stat && this.curContext().token === \"function\") {\n    out = this.context.pop();\n  }\n  this.exprAllowed = !out.isExpr;\n};\n\ntypes$1.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr);\n  this.exprAllowed = true;\n};\n\ntypes$1.dollarBraceL.updateContext = function() {\n  this.context.push(types.b_tmpl);\n  this.exprAllowed = true;\n};\n\ntypes$1.parenL.updateContext = function(prevType) {\n  var statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;\n  this.context.push(statementParens ? types.p_stat : types.p_expr);\n  this.exprAllowed = true;\n};\n\ntypes$1.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n};\n\ntypes$1._function.updateContext = types$1._class.updateContext = function(prevType) {\n  if (prevType.beforeExpr && prevType !== types$1._else &&\n      !(prevType === types$1.semi && this.curContext() !== types.p_stat) &&\n      !(prevType === types$1._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n      !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat))\n    { this.context.push(types.f_expr); }\n  else\n    { this.context.push(types.f_stat); }\n  this.exprAllowed = false;\n};\n\ntypes$1.backQuote.updateContext = function() {\n  if (this.curContext() === types.q_tmpl)\n    { this.context.pop(); }\n  else\n    { this.context.push(types.q_tmpl); }\n  this.exprAllowed = false;\n};\n\ntypes$1.star.updateContext = function(prevType) {\n  if (prevType === types$1._function) {\n    var index = this.context.length - 1;\n    if (this.context[index] === types.f_expr)\n      { this.context[index] = types.f_expr_gen; }\n    else\n      { this.context[index] = types.f_gen; }\n  }\n  this.exprAllowed = true;\n};\n\ntypes$1.name.updateContext = function(prevType) {\n  var allowed = false;\n  if (this.options.ecmaVersion >= 6 && prevType !== types$1.dot) {\n    if (this.value === \"of\" && !this.exprAllowed ||\n        this.value === \"yield\" && this.inGeneratorContext())\n      { allowed = true; }\n  }\n  this.exprAllowed = allowed;\n};\n\n// A recursive descent parser operates by defining functions for all\n\nvar pp$5 = Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$5.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n    { return }\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n    { return }\n  var key = prop.key;\n  var name;\n  switch (key.type) {\n  case \"Identifier\": name = key.name; break\n  case \"Literal\": name = String(key.value); break\n  default: return\n  }\n  var kind = prop.kind;\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) {\n        if (refDestructuringErrors) {\n          if (refDestructuringErrors.doubleProto < 0) {\n            refDestructuringErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\");\n        }\n      }\n      propHash.proto = true;\n    }\n    return\n  }\n  name = \"$\" + name;\n  var other = propHash[name];\n  if (other) {\n    var redefinition;\n    if (kind === \"init\") {\n      redefinition = this.strict && other.init || other.get || other.set;\n    } else {\n      redefinition = other.init || other[kind];\n    }\n    if (redefinition)\n      { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n  other[kind] = true;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$5.parseExpression = function(forInit, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(forInit, refDestructuringErrors);\n  if (this.type === types$1.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(types$1.comma)) { node.expressions.push(this.parseMaybeAssign(forInit, refDestructuringErrors)); }\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$5.parseMaybeAssign = function(forInit, refDestructuringErrors, afterLeftParse) {\n  if (this.isContextual(\"yield\")) {\n    if (this.inGenerator) { return this.parseYield(forInit) }\n    // The tokenizer will assume an expression is allowed after\n    // `yield`, but this isn't that kind of yield\n    else { this.exprAllowed = false; }\n  }\n\n  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1, oldDoubleProto = -1;\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n    oldTrailingComma = refDestructuringErrors.trailingComma;\n    oldDoubleProto = refDestructuringErrors.doubleProto;\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n  } else {\n    refDestructuringErrors = new DestructuringErrors;\n    ownDestructuringErrors = true;\n  }\n\n  var startPos = this.start, startLoc = this.startLoc;\n  if (this.type === types$1.parenL || this.type === types$1.name) {\n    this.potentialArrowAt = this.start;\n    this.potentialArrowInForAwait = forInit === \"await\";\n  }\n  var left = this.parseMaybeConditional(forInit, refDestructuringErrors);\n  if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n  if (this.type.isAssign) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    if (this.type === types$1.eq)\n      { left = this.toAssignable(left, false, refDestructuringErrors); }\n    if (!ownDestructuringErrors) {\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n    }\n    if (refDestructuringErrors.shorthandAssign >= left.start)\n      { refDestructuringErrors.shorthandAssign = -1; } // reset because shorthand default was used correctly\n    if (this.type === types$1.eq)\n      { this.checkLValPattern(left); }\n    else\n      { this.checkLValSimple(left); }\n    node.left = left;\n    this.next();\n    node.right = this.parseMaybeAssign(forInit);\n    if (oldDoubleProto > -1) { refDestructuringErrors.doubleProto = oldDoubleProto; }\n    return this.finishNode(node, \"AssignmentExpression\")\n  } else {\n    if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n  }\n  if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n  if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n  return left\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$5.parseMaybeConditional = function(forInit, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprOps(forInit, refDestructuringErrors);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  if (this.eat(types$1.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types$1.colon);\n    node.alternate = this.parseMaybeAssign(forInit);\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n};\n\n// Start the precedence parser.\n\npp$5.parseExprOps = function(forInit, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false, false, forInit);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, forInit)\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$5.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, forInit) {\n  var prec = this.type.binop;\n  if (prec != null && (!forInit || this.type !== types$1._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === types$1.logicalOR || this.type === types$1.logicalAND;\n      var coalesce = this.type === types$1.coalesce;\n      if (coalesce) {\n        // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n        // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n        prec = types$1.logicalAND.binop;\n      }\n      var op = this.value;\n      this.next();\n      var startPos = this.start, startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false, false, forInit), startPos, startLoc, prec, forInit);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);\n      if ((logical && this.type === types$1.coalesce) || (coalesce && (this.type === types$1.logicalOR || this.type === types$1.logicalAND))) {\n        this.raiseRecoverable(this.start, \"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses\");\n      }\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, forInit)\n    }\n  }\n  return left\n};\n\npp$5.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n  if (right.type === \"PrivateIdentifier\") { this.raise(right.start, \"Private identifier can only be left side of binary expression\"); }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp$5.parseMaybeUnary = function(refDestructuringErrors, sawUnary, incDec, forInit) {\n  var startPos = this.start, startLoc = this.startLoc, expr;\n  if (this.isContextual(\"await\") && this.canAwait) {\n    expr = this.parseAwait(forInit);\n    sawUnary = true;\n  } else if (this.type.prefix) {\n    var node = this.startNode(), update = this.type === types$1.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true, update, forInit);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    if (update) { this.checkLValSimple(node.argument); }\n    else if (this.strict && node.operator === \"delete\" &&\n             node.argument.type === \"Identifier\")\n      { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n    else if (node.operator === \"delete\" && isPrivateFieldAccess(node.argument))\n      { this.raiseRecoverable(node.start, \"Private fields can not be deleted\"); }\n    else { sawUnary = true; }\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else if (!sawUnary && this.type === types$1.privateId) {\n    if (forInit || this.privateNameStack.length === 0) { this.unexpected(); }\n    expr = this.parsePrivateIdent();\n    // only could be private fields in 'in', such as #x in obj\n    if (this.type !== types$1._in) { this.unexpected(); }\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors, forInit);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.operator = this.value;\n      node$1.prefix = false;\n      node$1.argument = expr;\n      this.checkLValSimple(expr);\n      this.next();\n      expr = this.finishNode(node$1, \"UpdateExpression\");\n    }\n  }\n\n  if (!incDec && this.eat(types$1.starstar)) {\n    if (sawUnary)\n      { this.unexpected(this.lastTokStart); }\n    else\n      { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false, false, forInit), \"**\", false) }\n  } else {\n    return expr\n  }\n};\n\nfunction isPrivateFieldAccess(node) {\n  return (\n    node.type === \"MemberExpression\" && node.property.type === \"PrivateIdentifier\" ||\n    node.type === \"ChainExpression\" && isPrivateFieldAccess(node.expression)\n  )\n}\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$5.parseExprSubscripts = function(refDestructuringErrors, forInit) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors, forInit);\n  if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\")\n    { return expr }\n  var result = this.parseSubscripts(expr, startPos, startLoc, false, forInit);\n  if (refDestructuringErrors && result.type === \"MemberExpression\") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n    if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n    if (refDestructuringErrors.trailingComma >= result.start) { refDestructuringErrors.trailingComma = -1; }\n  }\n  return result\n};\n\npp$5.parseSubscripts = function(base, startPos, startLoc, noCalls, forInit) {\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n      this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 &&\n      this.potentialArrowAt === base.start;\n  var optionalChained = false;\n\n  while (true) {\n    var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit);\n\n    if (element.optional) { optionalChained = true; }\n    if (element === base || element.type === \"ArrowFunctionExpression\") {\n      if (optionalChained) {\n        var chainNode = this.startNodeAt(startPos, startLoc);\n        chainNode.expression = element;\n        element = this.finishNode(chainNode, \"ChainExpression\");\n      }\n      return element\n    }\n\n    base = element;\n  }\n};\n\npp$5.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit) {\n  var optionalSupported = this.options.ecmaVersion >= 11;\n  var optional = optionalSupported && this.eat(types$1.questionDot);\n  if (noCalls && optional) { this.raise(this.lastTokStart, \"Optional chaining cannot appear in the callee of new expressions\"); }\n\n  var computed = this.eat(types$1.bracketL);\n  if (computed || (optional && this.type !== types$1.parenL && this.type !== types$1.backQuote) || this.eat(types$1.dot)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(types$1.bracketR);\n    } else if (this.type === types$1.privateId && base.type !== \"Super\") {\n      node.property = this.parsePrivateIdent();\n    } else {\n      node.property = this.parseIdent(this.options.allowReserved !== \"never\");\n    }\n    node.computed = !!computed;\n    if (optionalSupported) {\n      node.optional = optional;\n    }\n    base = this.finishNode(node, \"MemberExpression\");\n  } else if (!noCalls && this.eat(types$1.parenL)) {\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    var exprList = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n    if (maybeAsyncArrow && !optional && !this.canInsertSemicolon() && this.eat(types$1.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      if (this.awaitIdentPos > 0)\n        { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos;\n      return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true, forInit)\n    }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n    var node$1 = this.startNodeAt(startPos, startLoc);\n    node$1.callee = base;\n    node$1.arguments = exprList;\n    if (optionalSupported) {\n      node$1.optional = optional;\n    }\n    base = this.finishNode(node$1, \"CallExpression\");\n  } else if (this.type === types$1.backQuote) {\n    if (optional || optionalChained) {\n      this.raise(this.start, \"Optional chaining cannot appear in the tag of tagged template expressions\");\n    }\n    var node$2 = this.startNodeAt(startPos, startLoc);\n    node$2.tag = base;\n    node$2.quasi = this.parseTemplate({isTagged: true});\n    base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n  }\n  return base\n};\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$5.parseExprAtom = function(refDestructuringErrors, forInit) {\n  // If a division operator appears in an expression position, the\n  // tokenizer got confused, and we force it to read a regexp instead.\n  if (this.type === types$1.slash) { this.readRegexp(); }\n\n  var node, canBeArrow = this.potentialArrowAt === this.start;\n  switch (this.type) {\n  case types$1._super:\n    if (!this.allowSuper)\n      { this.raise(this.start, \"'super' keyword outside a method\"); }\n    node = this.startNode();\n    this.next();\n    if (this.type === types$1.parenL && !this.allowDirectSuper)\n      { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n    // The `super` keyword can appear at below:\n    // SuperProperty:\n    //     super [ Expression ]\n    //     super . IdentifierName\n    // SuperCall:\n    //     super ( Arguments )\n    if (this.type !== types$1.dot && this.type !== types$1.bracketL && this.type !== types$1.parenL)\n      { this.unexpected(); }\n    return this.finishNode(node, \"Super\")\n\n  case types$1._this:\n    node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"ThisExpression\")\n\n  case types$1.name:\n    var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n    var id = this.parseIdent(false);\n    if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types$1._function)) {\n      this.overrideContext(types.f_expr);\n      return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true, forInit)\n    }\n    if (canBeArrow && !this.canInsertSemicolon()) {\n      if (this.eat(types$1.arrow))\n        { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false, forInit) }\n      if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types$1.name && !containsEsc &&\n          (!this.potentialArrowInForAwait || this.value !== \"of\" || this.containsEsc)) {\n        id = this.parseIdent(false);\n        if (this.canInsertSemicolon() || !this.eat(types$1.arrow))\n          { this.unexpected(); }\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true, forInit)\n      }\n    }\n    return id\n\n  case types$1.regexp:\n    var value = this.value;\n    node = this.parseLiteral(value.value);\n    node.regex = {pattern: value.pattern, flags: value.flags};\n    return node\n\n  case types$1.num: case types$1.string:\n    return this.parseLiteral(this.value)\n\n  case types$1._null: case types$1._true: case types$1._false:\n    node = this.startNode();\n    node.value = this.type === types$1._null ? null : this.type === types$1._true;\n    node.raw = this.type.keyword;\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case types$1.parenL:\n    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow, forInit);\n    if (refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n        { refDestructuringErrors.parenthesizedAssign = start; }\n      if (refDestructuringErrors.parenthesizedBind < 0)\n        { refDestructuringErrors.parenthesizedBind = start; }\n    }\n    return expr\n\n  case types$1.bracketL:\n    node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(types$1.bracketR, true, true, refDestructuringErrors);\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case types$1.braceL:\n    this.overrideContext(types.b_expr);\n    return this.parseObj(false, refDestructuringErrors)\n\n  case types$1._function:\n    node = this.startNode();\n    this.next();\n    return this.parseFunction(node, 0)\n\n  case types$1._class:\n    return this.parseClass(this.startNode(), false)\n\n  case types$1._new:\n    return this.parseNew()\n\n  case types$1.backQuote:\n    return this.parseTemplate()\n\n  case types$1._import:\n    if (this.options.ecmaVersion >= 11) {\n      return this.parseExprImport()\n    } else {\n      return this.unexpected()\n    }\n\n  default:\n    this.unexpected();\n  }\n};\n\npp$5.parseExprImport = function() {\n  var node = this.startNode();\n\n  // Consume `import` as an identifier for `import.meta`.\n  // Because `this.parseIdent(true)` doesn't check escape sequences, it needs the check of `this.containsEsc`.\n  if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword import\"); }\n  var meta = this.parseIdent(true);\n\n  switch (this.type) {\n  case types$1.parenL:\n    return this.parseDynamicImport(node)\n  case types$1.dot:\n    node.meta = meta;\n    return this.parseImportMeta(node)\n  default:\n    this.unexpected();\n  }\n};\n\npp$5.parseDynamicImport = function(node) {\n  this.next(); // skip `(`\n\n  // Parse node.source.\n  node.source = this.parseMaybeAssign();\n\n  // Verify ending.\n  if (!this.eat(types$1.parenR)) {\n    var errorPos = this.start;\n    if (this.eat(types$1.comma) && this.eat(types$1.parenR)) {\n      this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n    } else {\n      this.unexpected(errorPos);\n    }\n  }\n\n  return this.finishNode(node, \"ImportExpression\")\n};\n\npp$5.parseImportMeta = function(node) {\n  this.next(); // skip `.`\n\n  var containsEsc = this.containsEsc;\n  node.property = this.parseIdent(true);\n\n  if (node.property.name !== \"meta\")\n    { this.raiseRecoverable(node.property.start, \"The only valid meta property for import is 'import.meta'\"); }\n  if (containsEsc)\n    { this.raiseRecoverable(node.start, \"'import.meta' must not contain escaped characters\"); }\n  if (this.options.sourceType !== \"module\" && !this.options.allowImportExportEverywhere)\n    { this.raiseRecoverable(node.start, \"Cannot use 'import.meta' outside a module\"); }\n\n  return this.finishNode(node, \"MetaProperty\")\n};\n\npp$5.parseLiteral = function(value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1).replace(/_/g, \"\"); }\n  this.next();\n  return this.finishNode(node, \"Literal\")\n};\n\npp$5.parseParenExpression = function() {\n  this.expect(types$1.parenL);\n  var val = this.parseExpression();\n  this.expect(types$1.parenR);\n  return val\n};\n\npp$5.parseParenAndDistinguishExpression = function(canBeArrow, forInit) {\n  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n\n    var innerStartPos = this.start, innerStartLoc = this.startLoc;\n    var exprList = [], first = true, lastIsComma = false;\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    // Do not save awaitIdentPos to allow checking awaits nested in parameters\n    while (this.type !== types$1.parenR) {\n      first ? first = false : this.expect(types$1.comma);\n      if (allowTrailingComma && this.afterTrailingComma(types$1.parenR, true)) {\n        lastIsComma = true;\n        break\n      } else if (this.type === types$1.ellipsis) {\n        spreadStart = this.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding()));\n        if (this.type === types$1.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n        break\n      } else {\n        exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n      }\n    }\n    var innerEndPos = this.lastTokEnd, innerEndLoc = this.lastTokEndLoc;\n    this.expect(types$1.parenR);\n\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types$1.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      return this.parseParenArrowList(startPos, startLoc, exprList, forInit)\n    }\n\n    if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n    if (spreadStart) { this.unexpected(spreadStart); }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\")\n  } else {\n    return val\n  }\n};\n\npp$5.parseParenItem = function(item) {\n  return item\n};\n\npp$5.parseParenArrowList = function(startPos, startLoc, exprList, forInit) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, false, forInit)\n};\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty = [];\n\npp$5.parseNew = function() {\n  if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword new\"); }\n  var node = this.startNode();\n  var meta = this.parseIdent(true);\n  if (this.options.ecmaVersion >= 6 && this.eat(types$1.dot)) {\n    node.meta = meta;\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"target\")\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is 'new.target'\"); }\n    if (containsEsc)\n      { this.raiseRecoverable(node.start, \"'new.target' must not contain escaped characters\"); }\n    if (!this.allowNewDotTarget)\n      { this.raiseRecoverable(node.start, \"'new.target' can only be used in functions and class static block\"); }\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var startPos = this.start, startLoc = this.startLoc, isImport = this.type === types$1._import;\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true, false);\n  if (isImport && node.callee.type === \"ImportExpression\") {\n    this.raise(startPos, \"Cannot use new with import()\");\n  }\n  if (this.eat(types$1.parenL)) { node.arguments = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false); }\n  else { node.arguments = empty; }\n  return this.finishNode(node, \"NewExpression\")\n};\n\n// Parse template expression.\n\npp$5.parseTemplateElement = function(ref) {\n  var isTagged = ref.isTagged;\n\n  var elem = this.startNode();\n  if (this.type === types$1.invalidTemplate) {\n    if (!isTagged) {\n      this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n    }\n    elem.value = {\n      raw: this.value,\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.value\n    };\n  }\n  this.next();\n  elem.tail = this.type === types$1.backQuote;\n  return this.finishNode(elem, \"TemplateElement\")\n};\n\npp$5.parseTemplate = function(ref) {\n  if ( ref === void 0 ) ref = {};\n  var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement({isTagged: isTagged});\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    if (this.type === types$1.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n    this.expect(types$1.dollarBraceL);\n    node.expressions.push(this.parseExpression());\n    this.expect(types$1.braceR);\n    node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\")\n};\n\npp$5.isAsyncProp = function(prop) {\n  return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n    (this.type === types$1.name || this.type === types$1.num || this.type === types$1.string || this.type === types$1.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types$1.star)) &&\n    !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\n// Parse an object literal or binding pattern.\n\npp$5.parseObj = function(isPattern, refDestructuringErrors) {\n  var node = this.startNode(), first = true, propHash = {};\n  node.properties = [];\n  this.next();\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types$1.braceR)) { break }\n    } else { first = false; }\n\n    var prop = this.parseProperty(isPattern, refDestructuringErrors);\n    if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n    node.properties.push(prop);\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n};\n\npp$5.parseProperty = function(isPattern, refDestructuringErrors) {\n  var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n  if (this.options.ecmaVersion >= 9 && this.eat(types$1.ellipsis)) {\n    if (isPattern) {\n      prop.argument = this.parseIdent(false);\n      if (this.type === types$1.comma) {\n        this.raise(this.start, \"Comma is not permitted after the rest element\");\n      }\n      return this.finishNode(prop, \"RestElement\")\n    }\n    // Parse argument.\n    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    // To disallow trailing comma via `this.toAssignable()`.\n    if (this.type === types$1.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n      refDestructuringErrors.trailingComma = this.start;\n    }\n    // Finish\n    return this.finishNode(prop, \"SpreadElement\")\n  }\n  if (this.options.ecmaVersion >= 6) {\n    prop.method = false;\n    prop.shorthand = false;\n    if (isPattern || refDestructuringErrors) {\n      startPos = this.start;\n      startLoc = this.startLoc;\n    }\n    if (!isPattern)\n      { isGenerator = this.eat(types$1.star); }\n  }\n  var containsEsc = this.containsEsc;\n  this.parsePropertyName(prop);\n  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n    isAsync = true;\n    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types$1.star);\n    this.parsePropertyName(prop, refDestructuringErrors);\n  } else {\n    isAsync = false;\n  }\n  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n  return this.finishNode(prop, \"Property\")\n};\n\npp$5.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n  if ((isGenerator || isAsync) && this.type === types$1.colon)\n    { this.unexpected(); }\n\n  if (this.eat(types$1.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = \"init\";\n  } else if (this.options.ecmaVersion >= 6 && this.type === types$1.parenL) {\n    if (isPattern) { this.unexpected(); }\n    prop.kind = \"init\";\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator, isAsync);\n  } else if (!isPattern && !containsEsc &&\n             this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n             (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n             (this.type !== types$1.comma && this.type !== types$1.braceR && this.type !== types$1.eq)) {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n      if (prop.kind === \"get\")\n        { this.raiseRecoverable(start, \"getter should have no params\"); }\n      else\n        { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n        { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n    }\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    this.checkUnreserved(prop.key);\n    if (prop.key.name === \"await\" && !this.awaitIdentPos)\n      { this.awaitIdentPos = startPos; }\n    prop.kind = \"init\";\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n    } else if (this.type === types$1.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0)\n        { refDestructuringErrors.shorthandAssign = this.start; }\n      prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n    } else {\n      prop.value = this.copyNode(prop.key);\n    }\n    prop.shorthand = true;\n  } else { this.unexpected(); }\n};\n\npp$5.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(types$1.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(types$1.bracketR);\n      return prop.key\n    } else {\n      prop.computed = false;\n    }\n  }\n  return prop.key = this.type === types$1.num || this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n};\n\n// Initialize empty function node.\n\npp$5.initFunction = function(node) {\n  node.id = null;\n  if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n  if (this.options.ecmaVersion >= 8) { node.async = false; }\n};\n\n// Parse object or class method.\n\npp$5.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n  var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6)\n    { node.generator = isGenerator; }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n  this.expect(types$1.parenL);\n  node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n  this.parseFunctionBody(node, false, true, false);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, \"FunctionExpression\")\n};\n\n// Parse arrow function expression with given parameters.\n\npp$5.parseArrowExpression = function(node, params, isAsync, forInit) {\n  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n  this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true, false, forInit);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n};\n\n// Parse function body and check parameters.\n\npp$5.parseFunctionBody = function(node, isArrowFunction, isMethod, forInit) {\n  var isExpression = isArrowFunction && this.type !== types$1.braceL;\n  var oldStrict = this.strict, useStrict = false;\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign(forInit);\n    node.expression = true;\n    this.checkParams(node, false);\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end);\n      // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n      if (useStrict && nonSimple)\n        { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n    }\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldLabels = this.labels;\n    this.labels = [];\n    if (useStrict) { this.strict = true; }\n\n    // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n    if (this.strict && node.id) { this.checkLValSimple(node.id, BIND_OUTSIDE); }\n    node.body = this.parseBlock(false, undefined, useStrict && !oldStrict);\n    node.expression = false;\n    this.adaptDirectivePrologue(node.body.body);\n    this.labels = oldLabels;\n  }\n  this.exitScope();\n};\n\npp$5.isSimpleParamList = function(params) {\n  for (var i = 0, list = params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    if (param.type !== \"Identifier\") { return false\n  } }\n  return true\n};\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp$5.checkParams = function(node, allowDuplicates) {\n  var nameHash = Object.create(null);\n  for (var i = 0, list = node.params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    this.checkLValInnerPattern(param, BIND_VAR, allowDuplicates ? null : nameHash);\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$5.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n    } else { first = false; }\n\n    var elt = (void 0);\n    if (allowEmpty && this.type === types$1.comma)\n      { elt = null; }\n    else if (this.type === types$1.ellipsis) {\n      elt = this.parseSpread(refDestructuringErrors);\n      if (refDestructuringErrors && this.type === types$1.comma && refDestructuringErrors.trailingComma < 0)\n        { refDestructuringErrors.trailingComma = this.start; }\n    } else {\n      elt = this.parseMaybeAssign(false, refDestructuringErrors);\n    }\n    elts.push(elt);\n  }\n  return elts\n};\n\npp$5.checkUnreserved = function(ref) {\n  var start = ref.start;\n  var end = ref.end;\n  var name = ref.name;\n\n  if (this.inGenerator && name === \"yield\")\n    { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n  if (this.inAsync && name === \"await\")\n    { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n  if (this.currentThisScope().inClassFieldInit && name === \"arguments\")\n    { this.raiseRecoverable(start, \"Cannot use 'arguments' in class field initializer\"); }\n  if (this.inClassStaticBlock && (name === \"arguments\" || name === \"await\"))\n    { this.raise(start, (\"Cannot use \" + name + \" in class static initialization block\")); }\n  if (this.keywords.test(name))\n    { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n  if (this.options.ecmaVersion < 6 &&\n    this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n  if (re.test(name)) {\n    if (!this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n    this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n  }\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$5.parseIdent = function(liberal, isBinding) {\n  var node = this.startNode();\n  if (this.type === types$1.name) {\n    node.name = this.value;\n  } else if (this.type.keyword) {\n    node.name = this.type.keyword;\n\n    // To fix https://github.com/acornjs/acorn/issues/575\n    // `class` and `function` keywords push new context into this.context.\n    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n    if ((node.name === \"class\" || node.name === \"function\") &&\n        (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n      this.context.pop();\n    }\n  } else {\n    this.unexpected();\n  }\n  this.next(!!liberal);\n  this.finishNode(node, \"Identifier\");\n  if (!liberal) {\n    this.checkUnreserved(node);\n    if (node.name === \"await\" && !this.awaitIdentPos)\n      { this.awaitIdentPos = node.start; }\n  }\n  return node\n};\n\npp$5.parsePrivateIdent = function() {\n  var node = this.startNode();\n  if (this.type === types$1.privateId) {\n    node.name = this.value;\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  this.finishNode(node, \"PrivateIdentifier\");\n\n  // For validating existence\n  if (this.privateNameStack.length === 0) {\n    this.raise(node.start, (\"Private field '#\" + (node.name) + \"' must be declared in an enclosing class\"));\n  } else {\n    this.privateNameStack[this.privateNameStack.length - 1].used.push(node);\n  }\n\n  return node\n};\n\n// Parses yield expression inside generator.\n\npp$5.parseYield = function(forInit) {\n  if (!this.yieldPos) { this.yieldPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  if (this.type === types$1.semi || this.canInsertSemicolon() || (this.type !== types$1.star && !this.type.startsExpr)) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types$1.star);\n    node.argument = this.parseMaybeAssign(forInit);\n  }\n  return this.finishNode(node, \"YieldExpression\")\n};\n\npp$5.parseAwait = function(forInit) {\n  if (!this.awaitPos) { this.awaitPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary(null, true, false, forInit);\n  return this.finishNode(node, \"AwaitExpression\")\n};\n\nvar pp$4 = Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function(pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n  throw err\n};\n\npp$4.raiseRecoverable = pp$4.raise;\n\npp$4.curPosition = function() {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart)\n  }\n};\n\nvar pp$3 = Parser.prototype;\n\nvar Scope = function Scope(flags) {\n  this.flags = flags;\n  // A list of var-declared names in the current lexical scope\n  this.var = [];\n  // A list of lexically-declared names in the current lexical scope\n  this.lexical = [];\n  // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n  this.functions = [];\n  // A switch to disallow the identifier reference 'arguments'\n  this.inClassFieldInit = false;\n};\n\n// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\npp$3.enterScope = function(flags) {\n  this.scopeStack.push(new Scope(flags));\n};\n\npp$3.exitScope = function() {\n  this.scopeStack.pop();\n};\n\n// The spec says:\n// > At the top level of a function, or script, function declarations are\n// > treated like var declarations rather than like lexical declarations.\npp$3.treatFunctionsAsVarInScope = function(scope) {\n  return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n};\n\npp$3.declareName = function(name, bindingType, pos) {\n  var redeclared = false;\n  if (bindingType === BIND_LEXICAL) {\n    var scope = this.currentScope();\n    redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    scope.lexical.push(name);\n    if (this.inModule && (scope.flags & SCOPE_TOP))\n      { delete this.undefinedExports[name]; }\n  } else if (bindingType === BIND_SIMPLE_CATCH) {\n    var scope$1 = this.currentScope();\n    scope$1.lexical.push(name);\n  } else if (bindingType === BIND_FUNCTION) {\n    var scope$2 = this.currentScope();\n    if (this.treatFunctionsAsVar)\n      { redeclared = scope$2.lexical.indexOf(name) > -1; }\n    else\n      { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n    scope$2.functions.push(name);\n  } else {\n    for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n      var scope$3 = this.scopeStack[i];\n      if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n          !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n        redeclared = true;\n        break\n      }\n      scope$3.var.push(name);\n      if (this.inModule && (scope$3.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n      if (scope$3.flags & SCOPE_VAR) { break }\n    }\n  }\n  if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n};\n\npp$3.checkLocalExport = function(id) {\n  // scope.functions must be empty as Module code is always strict.\n  if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n      this.scopeStack[0].var.indexOf(id.name) === -1) {\n    this.undefinedExports[id.name] = id;\n  }\n};\n\npp$3.currentScope = function() {\n  return this.scopeStack[this.scopeStack.length - 1]\n};\n\npp$3.currentVarScope = function() {\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.flags & SCOPE_VAR) { return scope }\n  }\n};\n\n// Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\npp$3.currentThisScope = function() {\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\n  }\n};\n\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n  if (parser.options.locations)\n    { this.loc = new SourceLocation(parser, loc); }\n  if (parser.options.directSourceFile)\n    { this.sourceFile = parser.options.directSourceFile; }\n  if (parser.options.ranges)\n    { this.range = [pos, 0]; }\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$2 = Parser.prototype;\n\npp$2.startNode = function() {\n  return new Node(this, this.start, this.startLoc)\n};\n\npp$2.startNodeAt = function(pos, loc) {\n  return new Node(this, pos, loc)\n};\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  if (this.options.locations)\n    { node.loc.end = loc; }\n  if (this.options.ranges)\n    { node.range[1] = pos; }\n  return node\n}\n\npp$2.finishNode = function(node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n};\n\n// Finish node at given position\n\npp$2.finishNodeAt = function(node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc)\n};\n\npp$2.copyNode = function(node) {\n  var newNode = new Node(this, node.start, this.startLoc);\n  for (var prop in node) { newNode[prop] = node[prop]; }\n  return newNode\n};\n\n// This file contains Unicode properties extracted from the ECMAScript\n// specification. The lists are extracted like so:\n// $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)\n\n// #table-binary-unicode-properties\nvar ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\nvar ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\nvar ecma11BinaryProperties = ecma10BinaryProperties;\nvar ecma12BinaryProperties = ecma11BinaryProperties + \" EBase EComp EMod EPres ExtPict\";\nvar ecma13BinaryProperties = ecma12BinaryProperties;\nvar unicodeBinaryProperties = {\n  9: ecma9BinaryProperties,\n  10: ecma10BinaryProperties,\n  11: ecma11BinaryProperties,\n  12: ecma12BinaryProperties,\n  13: ecma13BinaryProperties\n};\n\n// #table-unicode-general-category-values\nvar unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n// #table-unicode-script-values\nvar ecma9ScriptValues = \"Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\nvar ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\nvar ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\nvar ecma12ScriptValues = ecma11ScriptValues + \" Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi\";\nvar ecma13ScriptValues = ecma12ScriptValues + \" Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith\";\nvar unicodeScriptValues = {\n  9: ecma9ScriptValues,\n  10: ecma10ScriptValues,\n  11: ecma11ScriptValues,\n  12: ecma12ScriptValues,\n  13: ecma13ScriptValues\n};\n\nvar data = {};\nfunction buildUnicodeData(ecmaVersion) {\n  var d = data[ecmaVersion] = {\n    binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n    nonBinary: {\n      General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n      Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n    }\n  };\n  d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n  d.nonBinary.gc = d.nonBinary.General_Category;\n  d.nonBinary.sc = d.nonBinary.Script;\n  d.nonBinary.scx = d.nonBinary.Script_Extensions;\n}\n\nfor (var i = 0, list = [9, 10, 11, 12, 13]; i < list.length; i += 1) {\n  var ecmaVersion = list[i];\n\n  buildUnicodeData(ecmaVersion);\n}\n\nvar pp$1 = Parser.prototype;\n\nvar RegExpValidationState = function RegExpValidationState(parser) {\n  this.parser = parser;\n  this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\") + (parser.options.ecmaVersion >= 13 ? \"d\" : \"\");\n  this.unicodeProperties = data[parser.options.ecmaVersion >= 13 ? 13 : parser.options.ecmaVersion];\n  this.source = \"\";\n  this.flags = \"\";\n  this.start = 0;\n  this.switchU = false;\n  this.switchN = false;\n  this.pos = 0;\n  this.lastIntValue = 0;\n  this.lastStringValue = \"\";\n  this.lastAssertionIsQuantifiable = false;\n  this.numCapturingParens = 0;\n  this.maxBackReference = 0;\n  this.groupNames = [];\n  this.backReferenceNames = [];\n};\n\nRegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n  var unicode = flags.indexOf(\"u\") !== -1;\n  this.start = start | 0;\n  this.source = pattern + \"\";\n  this.flags = flags;\n  this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n  this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n};\n\nRegExpValidationState.prototype.raise = function raise (message) {\n  this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n};\n\n// If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\nRegExpValidationState.prototype.at = function at (i, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return -1\n  }\n  var c = s.charCodeAt(i);\n  if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return c\n  }\n  var next = s.charCodeAt(i + 1);\n  return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\n};\n\nRegExpValidationState.prototype.nextIndex = function nextIndex (i, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return l\n  }\n  var c = s.charCodeAt(i), next;\n  if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\n      (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n    return i + 1\n  }\n  return i + 2\n};\n\nRegExpValidationState.prototype.current = function current (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  return this.at(this.pos, forceU)\n};\n\nRegExpValidationState.prototype.lookahead = function lookahead (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  return this.at(this.nextIndex(this.pos, forceU), forceU)\n};\n\nRegExpValidationState.prototype.advance = function advance (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  this.pos = this.nextIndex(this.pos, forceU);\n};\n\nRegExpValidationState.prototype.eat = function eat (ch, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  if (this.current(forceU) === ch) {\n    this.advance(forceU);\n    return true\n  }\n  return false\n};\n\n/**\n * Validate the flags part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$1.validateRegExpFlags = function(state) {\n  var validFlags = state.validFlags;\n  var flags = state.flags;\n\n  for (var i = 0; i < flags.length; i++) {\n    var flag = flags.charAt(i);\n    if (validFlags.indexOf(flag) === -1) {\n      this.raise(state.start, \"Invalid regular expression flag\");\n    }\n    if (flags.indexOf(flag, i + 1) > -1) {\n      this.raise(state.start, \"Duplicate regular expression flag\");\n    }\n  }\n};\n\n/**\n * Validate the pattern part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$1.validateRegExpPattern = function(state) {\n  this.regexp_pattern(state);\n\n  // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n  // parsing contains a |GroupName|, reparse with the goal symbol\n  // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n  // exception if _P_ did not conform to the grammar, if any elements of _P_\n  // were not matched by the parse, or if any Early Error conditions exist.\n  if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n    state.switchN = true;\n    this.regexp_pattern(state);\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\npp$1.regexp_pattern = function(state) {\n  state.pos = 0;\n  state.lastIntValue = 0;\n  state.lastStringValue = \"\";\n  state.lastAssertionIsQuantifiable = false;\n  state.numCapturingParens = 0;\n  state.maxBackReference = 0;\n  state.groupNames.length = 0;\n  state.backReferenceNames.length = 0;\n\n  this.regexp_disjunction(state);\n\n  if (state.pos !== state.source.length) {\n    // Make the same messages as V8.\n    if (state.eat(0x29 /* ) */)) {\n      state.raise(\"Unmatched ')'\");\n    }\n    if (state.eat(0x5D /* ] */) || state.eat(0x7D /* } */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  }\n  if (state.maxBackReference > state.numCapturingParens) {\n    state.raise(\"Invalid escape\");\n  }\n  for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n    var name = list[i];\n\n    if (state.groupNames.indexOf(name) === -1) {\n      state.raise(\"Invalid named capture referenced\");\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\npp$1.regexp_disjunction = function(state) {\n  this.regexp_alternative(state);\n  while (state.eat(0x7C /* | */)) {\n    this.regexp_alternative(state);\n  }\n\n  // Make the same message as V8.\n  if (this.regexp_eatQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  if (state.eat(0x7B /* { */)) {\n    state.raise(\"Lone quantifier brackets\");\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\npp$1.regexp_alternative = function(state) {\n  while (state.pos < state.source.length && this.regexp_eatTerm(state))\n    { }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\npp$1.regexp_eatTerm = function(state) {\n  if (this.regexp_eatAssertion(state)) {\n    // Handle `QuantifiableAssertion Quantifier` alternative.\n    // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n    // is a QuantifiableAssertion.\n    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n      // Make the same message as V8.\n      if (state.switchU) {\n        state.raise(\"Invalid quantifier\");\n      }\n    }\n    return true\n  }\n\n  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n    this.regexp_eatQuantifier(state);\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\npp$1.regexp_eatAssertion = function(state) {\n  var start = state.pos;\n  state.lastAssertionIsQuantifiable = false;\n\n  // ^, $\n  if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n    return true\n  }\n\n  // \\b \\B\n  if (state.eat(0x5C /* \\ */)) {\n    if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  // Lookahead / Lookbehind\n  if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n    var lookbehind = false;\n    if (this.options.ecmaVersion >= 9) {\n      lookbehind = state.eat(0x3C /* < */);\n    }\n    if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n      this.regexp_disjunction(state);\n      if (!state.eat(0x29 /* ) */)) {\n        state.raise(\"Unterminated group\");\n      }\n      state.lastAssertionIsQuantifiable = !lookbehind;\n      return true\n    }\n  }\n\n  state.pos = start;\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\npp$1.regexp_eatQuantifier = function(state, noError) {\n  if ( noError === void 0 ) noError = false;\n\n  if (this.regexp_eatQuantifierPrefix(state, noError)) {\n    state.eat(0x3F /* ? */);\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\npp$1.regexp_eatQuantifierPrefix = function(state, noError) {\n  return (\n    state.eat(0x2A /* * */) ||\n    state.eat(0x2B /* + */) ||\n    state.eat(0x3F /* ? */) ||\n    this.regexp_eatBracedQuantifier(state, noError)\n  )\n};\npp$1.regexp_eatBracedQuantifier = function(state, noError) {\n  var start = state.pos;\n  if (state.eat(0x7B /* { */)) {\n    var min = 0, max = -1;\n    if (this.regexp_eatDecimalDigits(state)) {\n      min = state.lastIntValue;\n      if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n        max = state.lastIntValue;\n      }\n      if (state.eat(0x7D /* } */)) {\n        // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n        if (max !== -1 && max < min && !noError) {\n          state.raise(\"numbers out of order in {} quantifier\");\n        }\n        return true\n      }\n    }\n    if (state.switchU && !noError) {\n      state.raise(\"Incomplete quantifier\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\npp$1.regexp_eatAtom = function(state) {\n  return (\n    this.regexp_eatPatternCharacters(state) ||\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state)\n  )\n};\npp$1.regexp_eatReverseSolidusAtomEscape = function(state) {\n  var start = state.pos;\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatAtomEscape(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatUncapturingGroup = function(state) {\n  var start = state.pos;\n  if (state.eat(0x28 /* ( */)) {\n    if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatCapturingGroup = function(state) {\n  if (state.eat(0x28 /* ( */)) {\n    if (this.options.ecmaVersion >= 9) {\n      this.regexp_groupSpecifier(state);\n    } else if (state.current() === 0x3F /* ? */) {\n      state.raise(\"Invalid group\");\n    }\n    this.regexp_disjunction(state);\n    if (state.eat(0x29 /* ) */)) {\n      state.numCapturingParens += 1;\n      return true\n    }\n    state.raise(\"Unterminated group\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\npp$1.regexp_eatExtendedAtom = function(state) {\n  return (\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state) ||\n    this.regexp_eatInvalidBracedQuantifier(state) ||\n    this.regexp_eatExtendedPatternCharacter(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\npp$1.regexp_eatInvalidBracedQuantifier = function(state) {\n  if (this.regexp_eatBracedQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\npp$1.regexp_eatSyntaxCharacter = function(state) {\n  var ch = state.current();\n  if (isSyntaxCharacter(ch)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isSyntaxCharacter(ch) {\n  return (\n    ch === 0x24 /* $ */ ||\n    ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n    ch === 0x2E /* . */ ||\n    ch === 0x3F /* ? */ ||\n    ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n    ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n// But eat eager.\npp$1.regexp_eatPatternCharacters = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n    state.advance();\n  }\n  return state.pos !== start\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\npp$1.regexp_eatExtendedPatternCharacter = function(state) {\n  var ch = state.current();\n  if (\n    ch !== -1 &&\n    ch !== 0x24 /* $ */ &&\n    !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n    ch !== 0x2E /* . */ &&\n    ch !== 0x3F /* ? */ &&\n    ch !== 0x5B /* [ */ &&\n    ch !== 0x5E /* ^ */ &&\n    ch !== 0x7C /* | */\n  ) {\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// GroupSpecifier ::\n//   [empty]\n//   `?` GroupName\npp$1.regexp_groupSpecifier = function(state) {\n  if (state.eat(0x3F /* ? */)) {\n    if (this.regexp_eatGroupName(state)) {\n      if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n        state.raise(\"Duplicate capture group name\");\n      }\n      state.groupNames.push(state.lastStringValue);\n      return\n    }\n    state.raise(\"Invalid group\");\n  }\n};\n\n// GroupName ::\n//   `<` RegExpIdentifierName `>`\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$1.regexp_eatGroupName = function(state) {\n  state.lastStringValue = \"\";\n  if (state.eat(0x3C /* < */)) {\n    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n      return true\n    }\n    state.raise(\"Invalid capture group name\");\n  }\n  return false\n};\n\n// RegExpIdentifierName ::\n//   RegExpIdentifierStart\n//   RegExpIdentifierName RegExpIdentifierPart\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$1.regexp_eatRegExpIdentifierName = function(state) {\n  state.lastStringValue = \"\";\n  if (this.regexp_eatRegExpIdentifierStart(state)) {\n    state.lastStringValue += codePointToString(state.lastIntValue);\n    while (this.regexp_eatRegExpIdentifierPart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n    }\n    return true\n  }\n  return false\n};\n\n// RegExpIdentifierStart ::\n//   UnicodeIDStart\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[+U]\npp$1.regexp_eatRegExpIdentifierStart = function(state) {\n  var start = state.pos;\n  var forceU = this.options.ecmaVersion >= 11;\n  var ch = state.current(forceU);\n  state.advance(forceU);\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierStart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierStart(ch) {\n  return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n}\n\n// RegExpIdentifierPart ::\n//   UnicodeIDContinue\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[+U]\n//   <ZWNJ>\n//   <ZWJ>\npp$1.regexp_eatRegExpIdentifierPart = function(state) {\n  var start = state.pos;\n  var forceU = this.options.ecmaVersion >= 11;\n  var ch = state.current(forceU);\n  state.advance(forceU);\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierPart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierPart(ch) {\n  return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\npp$1.regexp_eatAtomEscape = function(state) {\n  if (\n    this.regexp_eatBackReference(state) ||\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state) ||\n    (state.switchN && this.regexp_eatKGroupName(state))\n  ) {\n    return true\n  }\n  if (state.switchU) {\n    // Make the same message as V8.\n    if (state.current() === 0x63 /* c */) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.raise(\"Invalid escape\");\n  }\n  return false\n};\npp$1.regexp_eatBackReference = function(state) {\n  var start = state.pos;\n  if (this.regexp_eatDecimalEscape(state)) {\n    var n = state.lastIntValue;\n    if (state.switchU) {\n      // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n      if (n > state.maxBackReference) {\n        state.maxBackReference = n;\n      }\n      return true\n    }\n    if (n <= state.numCapturingParens) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatKGroupName = function(state) {\n  if (state.eat(0x6B /* k */)) {\n    if (this.regexp_eatGroupName(state)) {\n      state.backReferenceNames.push(state.lastStringValue);\n      return true\n    }\n    state.raise(\"Invalid named reference\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\npp$1.regexp_eatCharacterEscape = function(state) {\n  return (\n    this.regexp_eatControlEscape(state) ||\n    this.regexp_eatCControlLetter(state) ||\n    this.regexp_eatZero(state) ||\n    this.regexp_eatHexEscapeSequence(state) ||\n    this.regexp_eatRegExpUnicodeEscapeSequence(state, false) ||\n    (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n    this.regexp_eatIdentityEscape(state)\n  )\n};\npp$1.regexp_eatCControlLetter = function(state) {\n  var start = state.pos;\n  if (state.eat(0x63 /* c */)) {\n    if (this.regexp_eatControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatZero = function(state) {\n  if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n    state.lastIntValue = 0;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\npp$1.regexp_eatControlEscape = function(state) {\n  var ch = state.current();\n  if (ch === 0x74 /* t */) {\n    state.lastIntValue = 0x09; /* \\t */\n    state.advance();\n    return true\n  }\n  if (ch === 0x6E /* n */) {\n    state.lastIntValue = 0x0A; /* \\n */\n    state.advance();\n    return true\n  }\n  if (ch === 0x76 /* v */) {\n    state.lastIntValue = 0x0B; /* \\v */\n    state.advance();\n    return true\n  }\n  if (ch === 0x66 /* f */) {\n    state.lastIntValue = 0x0C; /* \\f */\n    state.advance();\n    return true\n  }\n  if (ch === 0x72 /* r */) {\n    state.lastIntValue = 0x0D; /* \\r */\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\npp$1.regexp_eatControlLetter = function(state) {\n  var ch = state.current();\n  if (isControlLetter(ch)) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isControlLetter(ch) {\n  return (\n    (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\npp$1.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {\n  if ( forceU === void 0 ) forceU = false;\n\n  var start = state.pos;\n  var switchU = forceU || state.switchU;\n\n  if (state.eat(0x75 /* u */)) {\n    if (this.regexp_eatFixedHexDigits(state, 4)) {\n      var lead = state.lastIntValue;\n      if (switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n        var leadSurrogateEnd = state.pos;\n        if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n          var trail = state.lastIntValue;\n          if (trail >= 0xDC00 && trail <= 0xDFFF) {\n            state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n            return true\n          }\n        }\n        state.pos = leadSurrogateEnd;\n        state.lastIntValue = lead;\n      }\n      return true\n    }\n    if (\n      switchU &&\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatHexDigits(state) &&\n      state.eat(0x7D /* } */) &&\n      isValidUnicode(state.lastIntValue)\n    ) {\n      return true\n    }\n    if (switchU) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.pos = start;\n  }\n\n  return false\n};\nfunction isValidUnicode(ch) {\n  return ch >= 0 && ch <= 0x10FFFF\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\npp$1.regexp_eatIdentityEscape = function(state) {\n  if (state.switchU) {\n    if (this.regexp_eatSyntaxCharacter(state)) {\n      return true\n    }\n    if (state.eat(0x2F /* / */)) {\n      state.lastIntValue = 0x2F; /* / */\n      return true\n    }\n    return false\n  }\n\n  var ch = state.current();\n  if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\npp$1.regexp_eatDecimalEscape = function(state) {\n  state.lastIntValue = 0;\n  var ch = state.current();\n  if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n    do {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\npp$1.regexp_eatCharacterClassEscape = function(state) {\n  var ch = state.current();\n\n  if (isCharacterClassEscape(ch)) {\n    state.lastIntValue = -1;\n    state.advance();\n    return true\n  }\n\n  if (\n    state.switchU &&\n    this.options.ecmaVersion >= 9 &&\n    (ch === 0x50 /* P */ || ch === 0x70 /* p */)\n  ) {\n    state.lastIntValue = -1;\n    state.advance();\n    if (\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatUnicodePropertyValueExpression(state) &&\n      state.eat(0x7D /* } */)\n    ) {\n      return true\n    }\n    state.raise(\"Invalid property name\");\n  }\n\n  return false\n};\nfunction isCharacterClassEscape(ch) {\n  return (\n    ch === 0x64 /* d */ ||\n    ch === 0x44 /* D */ ||\n    ch === 0x73 /* s */ ||\n    ch === 0x53 /* S */ ||\n    ch === 0x77 /* w */ ||\n    ch === 0x57 /* W */\n  )\n}\n\n// UnicodePropertyValueExpression ::\n//   UnicodePropertyName `=` UnicodePropertyValue\n//   LoneUnicodePropertyNameOrValue\npp$1.regexp_eatUnicodePropertyValueExpression = function(state) {\n  var start = state.pos;\n\n  // UnicodePropertyName `=` UnicodePropertyValue\n  if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n    var name = state.lastStringValue;\n    if (this.regexp_eatUnicodePropertyValue(state)) {\n      var value = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n      return true\n    }\n  }\n  state.pos = start;\n\n  // LoneUnicodePropertyNameOrValue\n  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n    var nameOrValue = state.lastStringValue;\n    this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n    return true\n  }\n  return false\n};\npp$1.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n  if (!hasOwn(state.unicodeProperties.nonBinary, name))\n    { state.raise(\"Invalid property name\"); }\n  if (!state.unicodeProperties.nonBinary[name].test(value))\n    { state.raise(\"Invalid property value\"); }\n};\npp$1.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n  if (!state.unicodeProperties.binary.test(nameOrValue))\n    { state.raise(\"Invalid property name\"); }\n};\n\n// UnicodePropertyName ::\n//   UnicodePropertyNameCharacters\npp$1.regexp_eatUnicodePropertyName = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyNameCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyNameCharacter(ch) {\n  return isControlLetter(ch) || ch === 0x5F /* _ */\n}\n\n// UnicodePropertyValue ::\n//   UnicodePropertyValueCharacters\npp$1.regexp_eatUnicodePropertyValue = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyValueCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyValueCharacter(ch) {\n  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n}\n\n// LoneUnicodePropertyNameOrValue ::\n//   UnicodePropertyValueCharacters\npp$1.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n  return this.regexp_eatUnicodePropertyValue(state)\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\npp$1.regexp_eatCharacterClass = function(state) {\n  if (state.eat(0x5B /* [ */)) {\n    state.eat(0x5E /* ^ */);\n    this.regexp_classRanges(state);\n    if (state.eat(0x5D /* ] */)) {\n      return true\n    }\n    // Unreachable since it threw \"unterminated regular expression\" error before.\n    state.raise(\"Unterminated character class\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\npp$1.regexp_classRanges = function(state) {\n  while (this.regexp_eatClassAtom(state)) {\n    var left = state.lastIntValue;\n    if (state.eat(0x2D /* - */) && this.regexp_eatClassAtom(state)) {\n      var right = state.lastIntValue;\n      if (state.switchU && (left === -1 || right === -1)) {\n        state.raise(\"Invalid character class\");\n      }\n      if (left !== -1 && right !== -1 && left > right) {\n        state.raise(\"Range out of order in character class\");\n      }\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\npp$1.regexp_eatClassAtom = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatClassEscape(state)) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      var ch$1 = state.current();\n      if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n        state.raise(\"Invalid class escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n\n  var ch = state.current();\n  if (ch !== 0x5D /* ] */) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\npp$1.regexp_eatClassEscape = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x62 /* b */)) {\n    state.lastIntValue = 0x08; /* <BS> */\n    return true\n  }\n\n  if (state.switchU && state.eat(0x2D /* - */)) {\n    state.lastIntValue = 0x2D; /* - */\n    return true\n  }\n\n  if (!state.switchU && state.eat(0x63 /* c */)) {\n    if (this.regexp_eatClassControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  return (\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\npp$1.regexp_eatClassControlLetter = function(state) {\n  var ch = state.current();\n  if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$1.regexp_eatHexEscapeSequence = function(state) {\n  var start = state.pos;\n  if (state.eat(0x78 /* x */)) {\n    if (this.regexp_eatFixedHexDigits(state, 2)) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\npp$1.regexp_eatDecimalDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isDecimalDigit(ch = state.current())) {\n    state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isDecimalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\npp$1.regexp_eatHexDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isHexDigit(ch = state.current())) {\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isHexDigit(ch) {\n  return (\n    (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n    (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n  )\n}\nfunction hexToInt(ch) {\n  if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n    return 10 + (ch - 0x41 /* A */)\n  }\n  if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n    return 10 + (ch - 0x61 /* a */)\n  }\n  return ch - 0x30 /* 0 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n// Allows only 0-377(octal) i.e. 0-255(decimal).\npp$1.regexp_eatLegacyOctalEscapeSequence = function(state) {\n  if (this.regexp_eatOctalDigit(state)) {\n    var n1 = state.lastIntValue;\n    if (this.regexp_eatOctalDigit(state)) {\n      var n2 = state.lastIntValue;\n      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n      } else {\n        state.lastIntValue = n1 * 8 + n2;\n      }\n    } else {\n      state.lastIntValue = n1;\n    }\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\npp$1.regexp_eatOctalDigit = function(state) {\n  var ch = state.current();\n  if (isOctalDigit(ch)) {\n    state.lastIntValue = ch - 0x30; /* 0 */\n    state.advance();\n    return true\n  }\n  state.lastIntValue = 0;\n  return false\n};\nfunction isOctalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$1.regexp_eatFixedHexDigits = function(state, length) {\n  var start = state.pos;\n  state.lastIntValue = 0;\n  for (var i = 0; i < length; ++i) {\n    var ch = state.current();\n    if (!isHexDigit(ch)) {\n      state.pos = start;\n      return false\n    }\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return true\n};\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n  if (p.options.locations)\n    { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n  if (p.options.ranges)\n    { this.range = [p.start, p.end]; }\n};\n\n// ## Tokenizer\n\nvar pp = Parser.prototype;\n\n// Move to the next token\n\npp.next = function(ignoreEscapeSequenceInKeyword) {\n  if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\n    { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword); }\n  if (this.options.onToken)\n    { this.options.onToken(new Token(this)); }\n\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\n\npp.getToken = function() {\n  this.next();\n  return new Token(this)\n};\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\")\n  { pp[Symbol.iterator] = function() {\n    var this$1$1 = this;\n\n    return {\n      next: function () {\n        var token = this$1$1.getToken();\n        return {\n          done: token.type === types$1.eof,\n          value: token\n        }\n      }\n    }\n  }; }\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp.nextToken = function() {\n  var curContext = this.curContext();\n  if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n  this.start = this.pos;\n  if (this.options.locations) { this.startLoc = this.curPosition(); }\n  if (this.pos >= this.input.length) { return this.finishToken(types$1.eof) }\n\n  if (curContext.override) { return curContext.override(this) }\n  else { this.readToken(this.fullCharCodeAtPos()); }\n};\n\npp.readToken = function(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n    { return this.readWord() }\n\n  return this.getTokenFromCode(code)\n};\n\npp.fullCharCodeAtPos = function() {\n  var code = this.input.charCodeAt(this.pos);\n  if (code <= 0xd7ff || code >= 0xdc00) { return code }\n  var next = this.input.charCodeAt(this.pos + 1);\n  return next <= 0xdbff || next >= 0xe000 ? code : (code << 10) + next - 0x35fdc00\n};\n\npp.skipBlockComment = function() {\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n  if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n  this.pos = end + 2;\n  if (this.options.locations) {\n    for (var nextBreak = (void 0), pos = start; (nextBreak = nextLineBreak(this.input, pos, this.pos)) > -1;) {\n      ++this.curLine;\n      pos = this.lineStart = nextBreak;\n    }\n  }\n  if (this.options.onComment)\n    { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\npp.skipLineComment = function(startSkip) {\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n  while (this.pos < this.input.length && !isNewLine(ch)) {\n    ch = this.input.charCodeAt(++this.pos);\n  }\n  if (this.options.onComment)\n    { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp.skipSpace = function() {\n  loop: while (this.pos < this.input.length) {\n    var ch = this.input.charCodeAt(this.pos);\n    switch (ch) {\n    case 32: case 160: // ' '\n      ++this.pos;\n      break\n    case 13:\n      if (this.input.charCodeAt(this.pos + 1) === 10) {\n        ++this.pos;\n      }\n    case 10: case 8232: case 8233:\n      ++this.pos;\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n      break\n    case 47: // '/'\n      switch (this.input.charCodeAt(this.pos + 1)) {\n      case 42: // '*'\n        this.skipBlockComment();\n        break\n      case 47:\n        this.skipLineComment(2);\n        break\n      default:\n        break loop\n      }\n      break\n    default:\n      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n        ++this.pos;\n      } else {\n        break loop\n      }\n    }\n  }\n};\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp.finishToken = function(type, val) {\n  this.end = this.pos;\n  if (this.options.locations) { this.endLoc = this.curPosition(); }\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n\n  this.updateContext(prevType);\n};\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp.readToken_dot = function() {\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next >= 48 && next <= 57) { return this.readNumber(true) }\n  var next2 = this.input.charCodeAt(this.pos + 2);\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(types$1.ellipsis)\n  } else {\n    ++this.pos;\n    return this.finishToken(types$1.dot)\n  }\n};\n\npp.readToken_slash = function() { // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(types$1.slash, 1)\n};\n\npp.readToken_mult_modulo_exp = function(code) { // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? types$1.star : types$1.modulo;\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n    ++size;\n    tokentype = types$1.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n\n  if (next === 61) { return this.finishOp(types$1.assign, size + 1) }\n  return this.finishOp(tokentype, size)\n};\n\npp.readToken_pipe_amp = function(code) { // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (this.options.ecmaVersion >= 12) {\n      var next2 = this.input.charCodeAt(this.pos + 2);\n      if (next2 === 61) { return this.finishOp(types$1.assign, 3) }\n    }\n    return this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2)\n  }\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1)\n};\n\npp.readToken_caret = function() { // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(types$1.bitwiseXOR, 1)\n};\n\npp.readToken_plus_min = function(code) { // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n        (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    return this.finishOp(types$1.incDec, 2)\n  }\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(types$1.plusMin, 1)\n};\n\npp.readToken_lt_gt = function(code) { // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n    if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types$1.assign, size + 1) }\n    return this.finishOp(types$1.bitShift, size)\n  }\n  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n      this.input.charCodeAt(this.pos + 3) === 45) {\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken()\n  }\n  if (next === 61) { size = 2; }\n  return this.finishOp(types$1.relational, size)\n};\n\npp.readToken_eq_excl = function(code) { // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types$1.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n    this.pos += 2;\n    return this.finishToken(types$1.arrow)\n  }\n  return this.finishOp(code === 61 ? types$1.eq : types$1.prefix, 1)\n};\n\npp.readToken_question = function() { // '?'\n  var ecmaVersion = this.options.ecmaVersion;\n  if (ecmaVersion >= 11) {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 46) {\n      var next2 = this.input.charCodeAt(this.pos + 2);\n      if (next2 < 48 || next2 > 57) { return this.finishOp(types$1.questionDot, 2) }\n    }\n    if (next === 63) {\n      if (ecmaVersion >= 12) {\n        var next2$1 = this.input.charCodeAt(this.pos + 2);\n        if (next2$1 === 61) { return this.finishOp(types$1.assign, 3) }\n      }\n      return this.finishOp(types$1.coalesce, 2)\n    }\n  }\n  return this.finishOp(types$1.question, 1)\n};\n\npp.readToken_numberSign = function() { // '#'\n  var ecmaVersion = this.options.ecmaVersion;\n  var code = 35; // '#'\n  if (ecmaVersion >= 13) {\n    ++this.pos;\n    code = this.fullCharCodeAtPos();\n    if (isIdentifierStart(code, true) || code === 92 /* '\\' */) {\n      return this.finishToken(types$1.privateId, this.readWord1())\n    }\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp.getTokenFromCode = function(code) {\n  switch (code) {\n  // The interpretation of a dot depends on whether it is followed\n  // by a digit or another two dots.\n  case 46: // '.'\n    return this.readToken_dot()\n\n  // Punctuation tokens.\n  case 40: ++this.pos; return this.finishToken(types$1.parenL)\n  case 41: ++this.pos; return this.finishToken(types$1.parenR)\n  case 59: ++this.pos; return this.finishToken(types$1.semi)\n  case 44: ++this.pos; return this.finishToken(types$1.comma)\n  case 91: ++this.pos; return this.finishToken(types$1.bracketL)\n  case 93: ++this.pos; return this.finishToken(types$1.bracketR)\n  case 123: ++this.pos; return this.finishToken(types$1.braceL)\n  case 125: ++this.pos; return this.finishToken(types$1.braceR)\n  case 58: ++this.pos; return this.finishToken(types$1.colon)\n\n  case 96: // '`'\n    if (this.options.ecmaVersion < 6) { break }\n    ++this.pos;\n    return this.finishToken(types$1.backQuote)\n\n  case 48: // '0'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n    if (this.options.ecmaVersion >= 6) {\n      if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n      if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n    }\n\n  // Anything else beginning with a digit is an integer, octal\n  // number, or float.\n  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n    return this.readNumber(false)\n\n  // Quotes produce strings.\n  case 34: case 39: // '\"', \"'\"\n    return this.readString(code)\n\n  // Operators are parsed inline in tiny state machines. '=' (61) is\n  // often referred to. `finishOp` simply skips the amount of\n  // characters it is given as second argument, and returns a token\n  // of the type given by its first argument.\n  case 47: // '/'\n    return this.readToken_slash()\n\n  case 37: case 42: // '%*'\n    return this.readToken_mult_modulo_exp(code)\n\n  case 124: case 38: // '|&'\n    return this.readToken_pipe_amp(code)\n\n  case 94: // '^'\n    return this.readToken_caret()\n\n  case 43: case 45: // '+-'\n    return this.readToken_plus_min(code)\n\n  case 60: case 62: // '<>'\n    return this.readToken_lt_gt(code)\n\n  case 61: case 33: // '=!'\n    return this.readToken_eq_excl(code)\n\n  case 63: // '?'\n    return this.readToken_question()\n\n  case 126: // '~'\n    return this.finishOp(types$1.prefix, 1)\n\n  case 35: // '#'\n    return this.readToken_numberSign()\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp.finishOp = function(type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str)\n};\n\npp.readRegexp = function() {\n  var escaped, inClass, start = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n    var ch = this.input.charAt(this.pos);\n    if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n    if (!escaped) {\n      if (ch === \"[\") { inClass = true; }\n      else if (ch === \"]\" && inClass) { inClass = false; }\n      else if (ch === \"/\" && !inClass) { break }\n      escaped = ch === \"\\\\\";\n    } else { escaped = false; }\n    ++this.pos;\n  }\n  var pattern = this.input.slice(start, this.pos);\n  ++this.pos;\n  var flagsStart = this.pos;\n  var flags = this.readWord1();\n  if (this.containsEsc) { this.unexpected(flagsStart); }\n\n  // Validate pattern\n  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n  state.reset(start, pattern, flags);\n  this.validateRegExpFlags(state);\n  this.validateRegExpPattern(state);\n\n  // Create Literal#value property value.\n  var value = null;\n  try {\n    value = new RegExp(pattern, flags);\n  } catch (e) {\n    // ESTree requires null if it failed to instantiate RegExp object.\n    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n  }\n\n  return this.finishToken(types$1.regexp, {pattern: pattern, flags: flags, value: value})\n};\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {\n  // `len` is used for character escape sequences. In that case, disallow separators.\n  var allowSeparators = this.options.ecmaVersion >= 12 && len === undefined;\n\n  // `maybeLegacyOctalNumericLiteral` is true if it doesn't have prefix (0x,0o,0b)\n  // and isn't fraction part nor exponent part. In that case, if the first digit\n  // is zero then disallow separators.\n  var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;\n\n  var start = this.pos, total = 0, lastCode = 0;\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i, ++this.pos) {\n    var code = this.input.charCodeAt(this.pos), val = (void 0);\n\n    if (allowSeparators && code === 95) {\n      if (isLegacyOctalNumericLiteral) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed in legacy octal numeric literals\"); }\n      if (lastCode === 95) { this.raiseRecoverable(this.pos, \"Numeric separator must be exactly one underscore\"); }\n      if (i === 0) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed at the first of digits\"); }\n      lastCode = code;\n      continue\n    }\n\n    if (code >= 97) { val = code - 97 + 10; } // a\n    else if (code >= 65) { val = code - 65 + 10; } // A\n    else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n    else { val = Infinity; }\n    if (val >= radix) { break }\n    lastCode = code;\n    total = total * radix + val;\n  }\n\n  if (allowSeparators && lastCode === 95) { this.raiseRecoverable(this.pos - 1, \"Numeric separator is not allowed at the last of digits\"); }\n  if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n  return total\n};\n\nfunction stringToNumber(str, isLegacyOctalNumericLiteral) {\n  if (isLegacyOctalNumericLiteral) {\n    return parseInt(str, 8)\n  }\n\n  // `parseFloat(value)` stops parsing at the first numeric separator then returns a wrong value.\n  return parseFloat(str.replace(/_/g, \"\"))\n}\n\nfunction stringToBigInt(str) {\n  if (typeof BigInt !== \"function\") {\n    return null\n  }\n\n  // `BigInt(value)` throws syntax error if the string contains numeric separators.\n  return BigInt(str.replace(/_/g, \"\"))\n}\n\npp.readRadixNumber = function(radix) {\n  var start = this.pos;\n  this.pos += 2; // 0x\n  var val = this.readInt(radix);\n  if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n  if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n    val = stringToBigInt(this.input.slice(start, this.pos));\n    ++this.pos;\n  } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n  return this.finishToken(types$1.num, val)\n};\n\n// Read an integer, octal integer, or floating-point number.\n\npp.readNumber = function(startsWithDot) {\n  var start = this.pos;\n  if (!startsWithDot && this.readInt(10, undefined, true) === null) { this.raise(start, \"Invalid number\"); }\n  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n  if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n  var next = this.input.charCodeAt(this.pos);\n  if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n    var val$1 = stringToBigInt(this.input.slice(start, this.pos));\n    ++this.pos;\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types$1.num, val$1)\n  }\n  if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n  if (next === 46 && !octal) { // '.'\n    ++this.pos;\n    this.readInt(10);\n    next = this.input.charCodeAt(this.pos);\n  }\n  if ((next === 69 || next === 101) && !octal) { // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n    if (next === 43 || next === 45) { ++this.pos; } // '+-'\n    if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n  var val = stringToNumber(this.input.slice(start, this.pos), octal);\n  return this.finishToken(types$1.num, val)\n};\n\n// Read a string value, interpreting backslash-escapes.\n\npp.readCodePoint = function() {\n  var ch = this.input.charCodeAt(this.pos), code;\n\n  if (ch === 123) { // '{'\n    if (this.options.ecmaVersion < 6) { this.unexpected(); }\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n    ++this.pos;\n    if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n  } else {\n    code = this.readHexChar(4);\n  }\n  return code\n};\n\npp.readString = function(quote) {\n  var out = \"\", chunkStart = ++this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === quote) { break }\n    if (ch === 92) { // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(false);\n      chunkStart = this.pos;\n    } else if (ch === 0x2028 || ch === 0x2029) {\n      if (this.options.ecmaVersion < 10) { this.raise(this.start, \"Unterminated string constant\"); }\n      ++this.pos;\n      if (this.options.locations) {\n        this.curLine++;\n        this.lineStart = this.pos;\n      }\n    } else {\n      if (isNewLine(ch)) { this.raise(this.start, \"Unterminated string constant\"); }\n      ++this.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(types$1.string, out)\n};\n\n// Reads template string tokens.\n\nvar INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\npp.tryReadTemplateToken = function() {\n  this.inTemplateElement = true;\n  try {\n    this.readTmplToken();\n  } catch (err) {\n    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n      this.readInvalidTemplateToken();\n    } else {\n      throw err\n    }\n  }\n\n  this.inTemplateElement = false;\n};\n\npp.invalidStringToken = function(position, message) {\n  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n    throw INVALID_TEMPLATE_ESCAPE_ERROR\n  } else {\n    this.raise(position, message);\n  }\n};\n\npp.readTmplToken = function() {\n  var out = \"\", chunkStart = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { // '`', '${'\n      if (this.pos === this.start && (this.type === types$1.template || this.type === types$1.invalidTemplate)) {\n        if (ch === 36) {\n          this.pos += 2;\n          return this.finishToken(types$1.dollarBraceL)\n        } else {\n          ++this.pos;\n          return this.finishToken(types$1.backQuote)\n        }\n      }\n      out += this.input.slice(chunkStart, this.pos);\n      return this.finishToken(types$1.template, out)\n    }\n    if (ch === 92) { // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(true);\n      chunkStart = this.pos;\n    } else if (isNewLine(ch)) {\n      out += this.input.slice(chunkStart, this.pos);\n      ++this.pos;\n      switch (ch) {\n      case 13:\n        if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n      case 10:\n        out += \"\\n\";\n        break\n      default:\n        out += String.fromCharCode(ch);\n        break\n      }\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n      chunkStart = this.pos;\n    } else {\n      ++this.pos;\n    }\n  }\n};\n\n// Reads a template token to search for the end, without validating any escape sequences\npp.readInvalidTemplateToken = function() {\n  for (; this.pos < this.input.length; this.pos++) {\n    switch (this.input[this.pos]) {\n    case \"\\\\\":\n      ++this.pos;\n      break\n\n    case \"$\":\n      if (this.input[this.pos + 1] !== \"{\") {\n        break\n      }\n\n    // falls through\n    case \"`\":\n      return this.finishToken(types$1.invalidTemplate, this.input.slice(this.start, this.pos))\n\n    // no default\n    }\n  }\n  this.raise(this.start, \"Unterminated template\");\n};\n\n// Used to read escaped characters\n\npp.readEscapedChar = function(inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n  switch (ch) {\n  case 110: return \"\\n\" // 'n' -> '\\n'\n  case 114: return \"\\r\" // 'r' -> '\\r'\n  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n  case 117: return codePointToString(this.readCodePoint()) // 'u'\n  case 116: return \"\\t\" // 't' -> '\\t'\n  case 98: return \"\\b\" // 'b' -> '\\b'\n  case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n  case 102: return \"\\f\" // 'f' -> '\\f'\n  case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n  case 10: // ' \\n'\n    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n    return \"\"\n  case 56:\n  case 57:\n    if (this.strict) {\n      this.invalidStringToken(\n        this.pos - 1,\n        \"Invalid escape sequence\"\n      );\n    }\n    if (inTemplate) {\n      var codePos = this.pos - 1;\n\n      this.invalidStringToken(\n        codePos,\n        \"Invalid escape sequence in template string\"\n      );\n\n      return null\n    }\n  default:\n    if (ch >= 48 && ch <= 55) {\n      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n      var octal = parseInt(octalStr, 8);\n      if (octal > 255) {\n        octalStr = octalStr.slice(0, -1);\n        octal = parseInt(octalStr, 8);\n      }\n      this.pos += octalStr.length - 1;\n      ch = this.input.charCodeAt(this.pos);\n      if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n        this.invalidStringToken(\n          this.pos - 1 - octalStr.length,\n          inTemplate\n            ? \"Octal literal in template string\"\n            : \"Octal literal in strict mode\"\n        );\n      }\n      return String.fromCharCode(octal)\n    }\n    if (isNewLine(ch)) {\n      // Unicode new line characters after \\ get removed from output in both\n      // template literals and strings\n      return \"\"\n    }\n    return String.fromCharCode(ch)\n  }\n};\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp.readHexChar = function(len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n  if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n  return n\n};\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp.readWord1 = function() {\n  this.containsEsc = false;\n  var word = \"\", first = true, chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n  while (this.pos < this.input.length) {\n    var ch = this.fullCharCodeAtPos();\n    if (isIdentifierChar(ch, astral)) {\n      this.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) { // \"\\\"\n      this.containsEsc = true;\n      word += this.input.slice(chunkStart, this.pos);\n      var escStart = this.pos;\n      if (this.input.charCodeAt(++this.pos) !== 117) // \"u\"\n        { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n      ++this.pos;\n      var esc = this.readCodePoint();\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n        { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n      word += codePointToString(esc);\n      chunkStart = this.pos;\n    } else {\n      break\n    }\n    first = false;\n  }\n  return word + this.input.slice(chunkStart, this.pos)\n};\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp.readWord = function() {\n  var word = this.readWord1();\n  var type = types$1.name;\n  if (this.keywords.test(word)) {\n    type = keywords[word];\n  }\n  return this.finishToken(type, word)\n};\n\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n\nvar version = \"8.8.1\";\n\nParser.acorn = {\n  Parser: Parser,\n  version: version,\n  defaultOptions: defaultOptions,\n  Position: Position,\n  SourceLocation: SourceLocation,\n  getLineInfo: getLineInfo,\n  Node: Node,\n  TokenType: TokenType,\n  tokTypes: types$1,\n  keywordTypes: keywords,\n  TokContext: TokContext,\n  tokContexts: types,\n  isIdentifierChar: isIdentifierChar,\n  isIdentifierStart: isIdentifierStart,\n  Token: Token,\n  isNewLine: isNewLine,\n  lineBreak: lineBreak,\n  lineBreakG: lineBreakG,\n  nonASCIIwhitespace: nonASCIIwhitespace\n};\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nfunction parse(input, options) {\n  return Parser.parse(input, options)\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  return Parser.parseExpressionAt(input, pos, options)\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return Parser.tokenizer(input, options)\n}\n\nconst _acorn = /*#__PURE__*/Object.defineProperty({\n  __proto__: null,\n  Node,\n  Parser,\n  Position,\n  SourceLocation,\n  TokContext,\n  Token,\n  TokenType,\n  defaultOptions,\n  getLineInfo,\n  isIdentifierChar,\n  isIdentifierStart,\n  isNewLine,\n  keywordTypes: keywords,\n  lineBreak,\n  lineBreakG,\n  nonASCIIwhitespace,\n  parse,\n  parseExpressionAt,\n  tokContexts: types,\n  tokTypes: types$1,\n  tokenizer,\n  version\n}, Symbol.toStringTag, { value: 'Module' });\n\nfunction flru (max) {\n\tvar num, curr, prev;\n\tvar limit = max || 1;\n\n\tfunction keep(key, value) {\n\t\tif (++num > limit) {\n\t\t\tprev = curr;\n\t\t\treset(1);\n\t\t\t++num;\n\t\t}\n\t\tcurr[key] = value;\n\t}\n\n\tfunction reset(isPartial) {\n\t\tnum = 0;\n\t\tcurr = Object.create(null);\n\t\tisPartial || (prev=Object.create(null));\n\t}\n\n\treset();\n\n\treturn {\n\t\tclear: reset,\n\t\thas: function (key) {\n\t\t\treturn curr[key] !== void 0 || prev[key] !== void 0;\n\t\t},\n\t\tget: function (key) {\n\t\t\tvar val = curr[key];\n\t\t\tif (val !== void 0) return val;\n\t\t\tif ((val=prev[key]) !== void 0) {\n\t\t\t\tkeep(key, val);\n\t\t\t\treturn val;\n\t\t\t}\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif (curr[key] !== void 0) {\n\t\t\t\tcurr[key] = value;\n\t\t\t} else {\n\t\t\t\tkeep(key, value);\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction resolveIdViaPlugins(source, importer, pluginDriver, moduleLoaderResolveId, skip, customOptions, isEntry, assertions) {\n    let skipped = null;\n    let replaceContext = null;\n    if (skip) {\n        skipped = new Set();\n        for (const skippedCall of skip) {\n            if (source === skippedCall.source && importer === skippedCall.importer) {\n                skipped.add(skippedCall.plugin);\n            }\n        }\n        replaceContext = (pluginContext, plugin) => ({\n            ...pluginContext,\n            resolve: (source, importer, { assertions, custom, isEntry, skipSelf } = BLANK) => moduleLoaderResolveId(source, importer, custom, isEntry, assertions || EMPTY_OBJECT, skipSelf ? [...skip, { importer, plugin, source }] : skip)\n        });\n    }\n    return pluginDriver.hookFirstAndGetPlugin('resolveId', [source, importer, { assertions, custom: customOptions, isEntry }], replaceContext, skipped);\n}\n\nasync function resolveId(source, importer, preserveSymlinks, pluginDriver, moduleLoaderResolveId, skip, customOptions, isEntry, assertions) {\n    const pluginResult = await resolveIdViaPlugins(source, importer, pluginDriver, moduleLoaderResolveId, skip, customOptions, isEntry, assertions);\n    if (pluginResult != null) {\n        const [resolveIdResult, plugin] = pluginResult;\n        if (typeof resolveIdResult === 'object' && !resolveIdResult.resolvedBy) {\n            return {\n                ...resolveIdResult,\n                resolvedBy: plugin.name\n            };\n        }\n        if (typeof resolveIdResult === 'string') {\n            return {\n                id: resolveIdResult,\n                resolvedBy: plugin.name\n            };\n        }\n        return resolveIdResult;\n    }\n    // external modules (non-entry modules that start with neither '.' or '/')\n    // are skipped at this stage.\n    if (importer !== undefined && !isAbsolute(source) && source[0] !== '.')\n        return null;\n    // `resolve` processes paths from right to left, prepending them until an\n    // absolute path is created. Absolute importees therefore shortcircuit the\n    // resolve call and require no special handing on our part.\n    // See https://nodejs.org/api/path.html#path_path_resolve_paths\n    return addJsExtensionIfNecessary(importer ? resolve(dirname(importer), source) : resolve(source), preserveSymlinks);\n}\nasync function addJsExtensionIfNecessary(file, preserveSymlinks) {\n    return ((await findFile(file, preserveSymlinks)) ??\n        (await findFile(file + '.mjs', preserveSymlinks)) ??\n        (await findFile(file + '.js', preserveSymlinks)));\n}\nasync function findFile(file, preserveSymlinks) {\n    try {\n        const stats = await lstat(file);\n        if (!preserveSymlinks && stats.isSymbolicLink())\n            return await findFile(await realpath(file), preserveSymlinks);\n        if ((preserveSymlinks && stats.isSymbolicLink()) || stats.isFile()) {\n            // check case\n            const name = basename(file);\n            const files = await readdir(dirname(file));\n            if (files.includes(name))\n                return file;\n        }\n    }\n    catch {\n        // suppress\n    }\n}\n\nconst ANONYMOUS_PLUGIN_PREFIX = 'at position ';\nconst ANONYMOUS_OUTPUT_PLUGIN_PREFIX = 'at output position ';\n\nfunction createPluginCache(cache) {\n    return {\n        delete(id) {\n            return delete cache[id];\n        },\n        get(id) {\n            const item = cache[id];\n            if (!item)\n                return;\n            item[0] = 0;\n            return item[1];\n        },\n        has(id) {\n            const item = cache[id];\n            if (!item)\n                return false;\n            item[0] = 0;\n            return true;\n        },\n        set(id, value) {\n            cache[id] = [0, value];\n        }\n    };\n}\nfunction getTrackedPluginCache(pluginCache, onUse) {\n    return {\n        delete(id) {\n            onUse();\n            return pluginCache.delete(id);\n        },\n        get(id) {\n            onUse();\n            return pluginCache.get(id);\n        },\n        has(id) {\n            onUse();\n            return pluginCache.has(id);\n        },\n        set(id, value) {\n            onUse();\n            return pluginCache.set(id, value);\n        }\n    };\n}\nconst NO_CACHE = {\n    delete() {\n        return false;\n    },\n    get() {\n        return undefined;\n    },\n    has() {\n        return false;\n    },\n    set() { }\n};\nfunction uncacheablePluginError(pluginName) {\n    if (pluginName.startsWith(ANONYMOUS_PLUGIN_PREFIX) ||\n        pluginName.startsWith(ANONYMOUS_OUTPUT_PLUGIN_PREFIX)) {\n        return error(errorAnonymousPluginCache());\n    }\n    return error(errorDuplicatePluginName(pluginName));\n}\nfunction getCacheForUncacheablePlugin(pluginName) {\n    return {\n        delete() {\n            return uncacheablePluginError(pluginName);\n        },\n        get() {\n            return uncacheablePluginError(pluginName);\n        },\n        has() {\n            return uncacheablePluginError(pluginName);\n        },\n        set() {\n            return uncacheablePluginError(pluginName);\n        }\n    };\n}\n\nasync function transform(source, module, pluginDriver, warn) {\n    const id = module.id;\n    const sourcemapChain = [];\n    let originalSourcemap = source.map === null ? null : decodedSourcemap(source.map);\n    const originalCode = source.code;\n    let ast = source.ast;\n    const transformDependencies = [];\n    const emittedFiles = [];\n    let customTransformCache = false;\n    const useCustomTransformCache = () => (customTransformCache = true);\n    let pluginName = '';\n    const currentSource = source.code;\n    function transformReducer(previousCode, result, plugin) {\n        let code;\n        let map;\n        if (typeof result === 'string') {\n            code = result;\n        }\n        else if (result && typeof result === 'object') {\n            module.updateOptions(result);\n            if (result.code == null) {\n                if (result.map || result.ast) {\n                    warn(errorNoTransformMapOrAstWithoutCode(plugin.name));\n                }\n                return previousCode;\n            }\n            ({ code, map, ast } = result);\n        }\n        else {\n            return previousCode;\n        }\n        // strict null check allows 'null' maps to not be pushed to the chain,\n        // while 'undefined' gets the missing map warning\n        if (map !== null) {\n            sourcemapChain.push(decodedSourcemap(typeof map === 'string' ? JSON.parse(map) : map) || {\n                missing: true,\n                plugin: plugin.name\n            });\n        }\n        return code;\n    }\n    let code;\n    try {\n        code = await pluginDriver.hookReduceArg0('transform', [currentSource, id], transformReducer, (pluginContext, plugin) => {\n            pluginName = plugin.name;\n            return {\n                ...pluginContext,\n                addWatchFile(id) {\n                    transformDependencies.push(id);\n                    pluginContext.addWatchFile(id);\n                },\n                cache: customTransformCache\n                    ? pluginContext.cache\n                    : getTrackedPluginCache(pluginContext.cache, useCustomTransformCache),\n                emitFile(emittedFile) {\n                    emittedFiles.push(emittedFile);\n                    return pluginDriver.emitFile(emittedFile);\n                },\n                error(error_, pos) {\n                    if (typeof error_ === 'string')\n                        error_ = { message: error_ };\n                    if (pos)\n                        augmentCodeLocation(error_, pos, currentSource, id);\n                    error_.id = id;\n                    error_.hook = 'transform';\n                    return pluginContext.error(error_);\n                },\n                getCombinedSourcemap() {\n                    const combinedMap = collapseSourcemap(id, originalCode, originalSourcemap, sourcemapChain, warn);\n                    if (!combinedMap) {\n                        const magicString = new MagicString(originalCode);\n                        return magicString.generateMap({ hires: true, includeContent: true, source: id });\n                    }\n                    if (originalSourcemap !== combinedMap) {\n                        originalSourcemap = combinedMap;\n                        sourcemapChain.length = 0;\n                    }\n                    return new SourceMap({\n                        ...combinedMap,\n                        file: null,\n                        sourcesContent: combinedMap.sourcesContent\n                    });\n                },\n                setAssetSource() {\n                    return this.error(errorInvalidSetAssetSourceCall());\n                },\n                warn(warning, pos) {\n                    if (typeof warning === 'string')\n                        warning = { message: warning };\n                    if (pos)\n                        augmentCodeLocation(warning, pos, currentSource, id);\n                    warning.id = id;\n                    warning.hook = 'transform';\n                    pluginContext.warn(warning);\n                }\n            };\n        });\n    }\n    catch (error_) {\n        return error(errorPluginError(error_, pluginName, { hook: 'transform', id }));\n    }\n    if (!customTransformCache && // files emitted by a transform hook need to be emitted again if the hook is skipped\n        emittedFiles.length > 0)\n        module.transformFiles = emittedFiles;\n    return {\n        ast,\n        code,\n        customTransformCache,\n        originalCode,\n        originalSourcemap,\n        sourcemapChain,\n        transformDependencies\n    };\n}\n\nconst RESOLVE_DEPENDENCIES = 'resolveDependencies';\nclass ModuleLoader {\n    constructor(graph, modulesById, options, pluginDriver) {\n        this.graph = graph;\n        this.modulesById = modulesById;\n        this.options = options;\n        this.pluginDriver = pluginDriver;\n        this.implicitEntryModules = new Set();\n        this.indexedEntryModules = [];\n        this.latestLoadModulesPromise = Promise.resolve();\n        this.moduleLoadPromises = new Map();\n        this.modulesWithLoadedDependencies = new Set();\n        this.nextChunkNamePriority = 0;\n        this.nextEntryModuleIndex = 0;\n        this.resolveId = async (source, importer, customOptions, isEntry, assertions, skip = null) => this.getResolvedIdWithDefaults(this.getNormalizedResolvedIdWithoutDefaults(this.options.external(source, importer, false)\n            ? false\n            : await resolveId(source, importer, this.options.preserveSymlinks, this.pluginDriver, this.resolveId, skip, customOptions, typeof isEntry === 'boolean' ? isEntry : !importer, assertions), importer, source), assertions);\n        this.hasModuleSideEffects = options.treeshake\n            ? options.treeshake.moduleSideEffects\n            : () => true;\n    }\n    async addAdditionalModules(unresolvedModules) {\n        const result = this.extendLoadModulesPromise(Promise.all(unresolvedModules.map(id => this.loadEntryModule(id, false, undefined, null))));\n        await this.awaitLoadModulesPromise();\n        return result;\n    }\n    async addEntryModules(unresolvedEntryModules, isUserDefined) {\n        const firstEntryModuleIndex = this.nextEntryModuleIndex;\n        this.nextEntryModuleIndex += unresolvedEntryModules.length;\n        const firstChunkNamePriority = this.nextChunkNamePriority;\n        this.nextChunkNamePriority += unresolvedEntryModules.length;\n        const newEntryModules = await this.extendLoadModulesPromise(Promise.all(unresolvedEntryModules.map(({ id, importer }) => this.loadEntryModule(id, true, importer, null))).then(entryModules => {\n            for (const [index, entryModule] of entryModules.entries()) {\n                entryModule.isUserDefinedEntryPoint =\n                    entryModule.isUserDefinedEntryPoint || isUserDefined;\n                addChunkNamesToModule(entryModule, unresolvedEntryModules[index], isUserDefined, firstChunkNamePriority + index);\n                const existingIndexedModule = this.indexedEntryModules.find(indexedModule => indexedModule.module === entryModule);\n                if (existingIndexedModule) {\n                    existingIndexedModule.index = Math.min(existingIndexedModule.index, firstEntryModuleIndex + index);\n                }\n                else {\n                    this.indexedEntryModules.push({\n                        index: firstEntryModuleIndex + index,\n                        module: entryModule\n                    });\n                }\n            }\n            this.indexedEntryModules.sort(({ index: indexA }, { index: indexB }) => indexA > indexB ? 1 : -1);\n            return entryModules;\n        }));\n        await this.awaitLoadModulesPromise();\n        return {\n            entryModules: this.indexedEntryModules.map(({ module }) => module),\n            implicitEntryModules: [...this.implicitEntryModules],\n            newEntryModules\n        };\n    }\n    async emitChunk({ fileName, id, importer, name, implicitlyLoadedAfterOneOf, preserveSignature }) {\n        const unresolvedModule = {\n            fileName: fileName || null,\n            id,\n            importer,\n            name: name || null\n        };\n        const module = implicitlyLoadedAfterOneOf\n            ? await this.addEntryWithImplicitDependants(unresolvedModule, implicitlyLoadedAfterOneOf)\n            : (await this.addEntryModules([unresolvedModule], false)).newEntryModules[0];\n        if (preserveSignature != null) {\n            module.preserveSignature = preserveSignature;\n        }\n        return module;\n    }\n    async preloadModule(resolvedId) {\n        const module = await this.fetchModule(this.getResolvedIdWithDefaults(resolvedId, EMPTY_OBJECT), undefined, false, resolvedId.resolveDependencies ? RESOLVE_DEPENDENCIES : true);\n        return module.info;\n    }\n    addEntryWithImplicitDependants(unresolvedModule, implicitlyLoadedAfter) {\n        const chunkNamePriority = this.nextChunkNamePriority++;\n        return this.extendLoadModulesPromise(this.loadEntryModule(unresolvedModule.id, false, unresolvedModule.importer, null).then(async (entryModule) => {\n            addChunkNamesToModule(entryModule, unresolvedModule, false, chunkNamePriority);\n            if (!entryModule.info.isEntry) {\n                this.implicitEntryModules.add(entryModule);\n                const implicitlyLoadedAfterModules = await Promise.all(implicitlyLoadedAfter.map(id => this.loadEntryModule(id, false, unresolvedModule.importer, entryModule.id)));\n                for (const module of implicitlyLoadedAfterModules) {\n                    entryModule.implicitlyLoadedAfter.add(module);\n                }\n                for (const dependant of entryModule.implicitlyLoadedAfter) {\n                    dependant.implicitlyLoadedBefore.add(entryModule);\n                }\n            }\n            return entryModule;\n        }));\n    }\n    async addModuleSource(id, importer, module) {\n        let source;\n        try {\n            source = await this.graph.fileOperationQueue.run(async () => (await this.pluginDriver.hookFirst('load', [id])) ?? (await readFile(id, 'utf8')));\n        }\n        catch (error_) {\n            let message = `Could not load ${id}`;\n            if (importer)\n                message += ` (imported by ${relativeId(importer)})`;\n            message += `: ${error_.message}`;\n            error_.message = message;\n            throw error_;\n        }\n        const sourceDescription = typeof source === 'string'\n            ? { code: source }\n            : source != null && typeof source === 'object' && typeof source.code === 'string'\n                ? source\n                : error(errorBadLoader(id));\n        const cachedModule = this.graph.cachedModules.get(id);\n        if (cachedModule &&\n            !cachedModule.customTransformCache &&\n            cachedModule.originalCode === sourceDescription.code &&\n            !(await this.pluginDriver.hookFirst('shouldTransformCachedModule', [\n                {\n                    ast: cachedModule.ast,\n                    code: cachedModule.code,\n                    id: cachedModule.id,\n                    meta: cachedModule.meta,\n                    moduleSideEffects: cachedModule.moduleSideEffects,\n                    resolvedSources: cachedModule.resolvedIds,\n                    syntheticNamedExports: cachedModule.syntheticNamedExports\n                }\n            ]))) {\n            if (cachedModule.transformFiles) {\n                for (const emittedFile of cachedModule.transformFiles)\n                    this.pluginDriver.emitFile(emittedFile);\n            }\n            module.setSource(cachedModule);\n        }\n        else {\n            module.updateOptions(sourceDescription);\n            module.setSource(await transform(sourceDescription, module, this.pluginDriver, this.options.onwarn));\n        }\n    }\n    async awaitLoadModulesPromise() {\n        let startingPromise;\n        do {\n            startingPromise = this.latestLoadModulesPromise;\n            await startingPromise;\n        } while (startingPromise !== this.latestLoadModulesPromise);\n    }\n    extendLoadModulesPromise(loadNewModulesPromise) {\n        this.latestLoadModulesPromise = Promise.all([\n            loadNewModulesPromise,\n            this.latestLoadModulesPromise\n        ]);\n        this.latestLoadModulesPromise.catch(() => {\n            /* Avoid unhandled Promise rejections */\n        });\n        return loadNewModulesPromise;\n    }\n    async fetchDynamicDependencies(module, resolveDynamicImportPromises) {\n        const dependencies = await Promise.all(resolveDynamicImportPromises.map(resolveDynamicImportPromise => resolveDynamicImportPromise.then(async ([dynamicImport, resolvedId]) => {\n            if (resolvedId === null)\n                return null;\n            if (typeof resolvedId === 'string') {\n                dynamicImport.resolution = resolvedId;\n                return null;\n            }\n            return (dynamicImport.resolution = await this.fetchResolvedDependency(relativeId(resolvedId.id), module.id, resolvedId));\n        })));\n        for (const dependency of dependencies) {\n            if (dependency) {\n                module.dynamicDependencies.add(dependency);\n                dependency.dynamicImporters.push(module.id);\n            }\n        }\n    }\n    // If this is a preload, then this method always waits for the dependencies of\n    // the module to be resolved.\n    // Otherwise, if the module does not exist, it waits for the module and all\n    // its dependencies to be loaded.\n    // Otherwise, it returns immediately.\n    async fetchModule({ assertions, id, meta, moduleSideEffects, syntheticNamedExports }, importer, isEntry, isPreload) {\n        const existingModule = this.modulesById.get(id);\n        if (existingModule instanceof Module) {\n            if (importer && doAssertionsDiffer(assertions, existingModule.info.assertions)) {\n                this.options.onwarn(errorInconsistentImportAssertions(existingModule.info.assertions, assertions, id, importer));\n            }\n            await this.handleExistingModule(existingModule, isEntry, isPreload);\n            return existingModule;\n        }\n        const module = new Module(this.graph, id, this.options, isEntry, moduleSideEffects, syntheticNamedExports, meta, assertions);\n        this.modulesById.set(id, module);\n        this.graph.watchFiles[id] = true;\n        const loadPromise = this.addModuleSource(id, importer, module).then(() => [\n            this.getResolveStaticDependencyPromises(module),\n            this.getResolveDynamicImportPromises(module),\n            loadAndResolveDependenciesPromise\n        ]);\n        const loadAndResolveDependenciesPromise = waitForDependencyResolution(loadPromise).then(() => this.pluginDriver.hookParallel('moduleParsed', [module.info]));\n        loadAndResolveDependenciesPromise.catch(() => {\n            /* avoid unhandled promise rejections */\n        });\n        this.moduleLoadPromises.set(module, loadPromise);\n        const resolveDependencyPromises = await loadPromise;\n        if (!isPreload) {\n            await this.fetchModuleDependencies(module, ...resolveDependencyPromises);\n        }\n        else if (isPreload === RESOLVE_DEPENDENCIES) {\n            await loadAndResolveDependenciesPromise;\n        }\n        return module;\n    }\n    async fetchModuleDependencies(module, resolveStaticDependencyPromises, resolveDynamicDependencyPromises, loadAndResolveDependenciesPromise) {\n        if (this.modulesWithLoadedDependencies.has(module)) {\n            return;\n        }\n        this.modulesWithLoadedDependencies.add(module);\n        await Promise.all([\n            this.fetchStaticDependencies(module, resolveStaticDependencyPromises),\n            this.fetchDynamicDependencies(module, resolveDynamicDependencyPromises)\n        ]);\n        module.linkImports();\n        // To handle errors when resolving dependencies or in moduleParsed\n        await loadAndResolveDependenciesPromise;\n    }\n    fetchResolvedDependency(source, importer, resolvedId) {\n        if (resolvedId.external) {\n            const { assertions, external, id, moduleSideEffects, meta } = resolvedId;\n            let externalModule = this.modulesById.get(id);\n            if (!externalModule) {\n                externalModule = new ExternalModule(this.options, id, moduleSideEffects, meta, external !== 'absolute' && isAbsolute(id), assertions);\n                this.modulesById.set(id, externalModule);\n            }\n            else if (!(externalModule instanceof ExternalModule)) {\n                return error(errorInternalIdCannotBeExternal(source, importer));\n            }\n            else if (doAssertionsDiffer(externalModule.info.assertions, assertions)) {\n                this.options.onwarn(errorInconsistentImportAssertions(externalModule.info.assertions, assertions, source, importer));\n            }\n            return Promise.resolve(externalModule);\n        }\n        return this.fetchModule(resolvedId, importer, false, false);\n    }\n    async fetchStaticDependencies(module, resolveStaticDependencyPromises) {\n        for (const dependency of await Promise.all(resolveStaticDependencyPromises.map(resolveStaticDependencyPromise => resolveStaticDependencyPromise.then(([source, resolvedId]) => this.fetchResolvedDependency(source, module.id, resolvedId))))) {\n            module.dependencies.add(dependency);\n            dependency.importers.push(module.id);\n        }\n        if (!this.options.treeshake || module.info.moduleSideEffects === 'no-treeshake') {\n            for (const dependency of module.dependencies) {\n                if (dependency instanceof Module) {\n                    dependency.importedFromNotTreeshaken = true;\n                }\n            }\n        }\n    }\n    getNormalizedResolvedIdWithoutDefaults(resolveIdResult, importer, source) {\n        const { makeAbsoluteExternalsRelative } = this.options;\n        if (resolveIdResult) {\n            if (typeof resolveIdResult === 'object') {\n                const external = resolveIdResult.external || this.options.external(resolveIdResult.id, importer, true);\n                return {\n                    ...resolveIdResult,\n                    external: external &&\n                        (external === 'relative' ||\n                            !isAbsolute(resolveIdResult.id) ||\n                            (external === true &&\n                                isNotAbsoluteExternal(resolveIdResult.id, source, makeAbsoluteExternalsRelative)) ||\n                            'absolute')\n                };\n            }\n            const external = this.options.external(resolveIdResult, importer, true);\n            return {\n                external: external &&\n                    (isNotAbsoluteExternal(resolveIdResult, source, makeAbsoluteExternalsRelative) ||\n                        'absolute'),\n                id: external && makeAbsoluteExternalsRelative\n                    ? normalizeRelativeExternalId(resolveIdResult, importer)\n                    : resolveIdResult\n            };\n        }\n        const id = makeAbsoluteExternalsRelative\n            ? normalizeRelativeExternalId(source, importer)\n            : source;\n        if (resolveIdResult !== false && !this.options.external(id, importer, true)) {\n            return null;\n        }\n        return {\n            external: isNotAbsoluteExternal(id, source, makeAbsoluteExternalsRelative) || 'absolute',\n            id\n        };\n    }\n    getResolveDynamicImportPromises(module) {\n        return module.dynamicImports.map(async (dynamicImport) => {\n            const resolvedId = await this.resolveDynamicImport(module, typeof dynamicImport.argument === 'string'\n                ? dynamicImport.argument\n                : dynamicImport.argument.esTreeNode, module.id, getAssertionsFromImportExpression(dynamicImport.node));\n            if (resolvedId && typeof resolvedId === 'object') {\n                dynamicImport.id = resolvedId.id;\n            }\n            return [dynamicImport, resolvedId];\n        });\n    }\n    getResolveStaticDependencyPromises(module) {\n        // eslint-disable-next-line unicorn/prefer-spread\n        return Array.from(module.sourcesWithAssertions, async ([source, assertions]) => [\n            source,\n            (module.resolvedIds[source] =\n                module.resolvedIds[source] ||\n                    this.handleInvalidResolvedId(await this.resolveId(source, module.id, EMPTY_OBJECT, false, assertions), source, module.id, assertions))\n        ]);\n    }\n    getResolvedIdWithDefaults(resolvedId, assertions) {\n        if (!resolvedId) {\n            return null;\n        }\n        const external = resolvedId.external || false;\n        return {\n            assertions: resolvedId.assertions || assertions,\n            external,\n            id: resolvedId.id,\n            meta: resolvedId.meta || {},\n            moduleSideEffects: resolvedId.moduleSideEffects ?? this.hasModuleSideEffects(resolvedId.id, !!external),\n            resolvedBy: resolvedId.resolvedBy ?? 'rollup',\n            syntheticNamedExports: resolvedId.syntheticNamedExports ?? false\n        };\n    }\n    async handleExistingModule(module, isEntry, isPreload) {\n        const loadPromise = this.moduleLoadPromises.get(module);\n        if (isPreload) {\n            return isPreload === RESOLVE_DEPENDENCIES\n                ? waitForDependencyResolution(loadPromise)\n                : loadPromise;\n        }\n        if (isEntry) {\n            module.info.isEntry = true;\n            this.implicitEntryModules.delete(module);\n            for (const dependant of module.implicitlyLoadedAfter) {\n                dependant.implicitlyLoadedBefore.delete(module);\n            }\n            module.implicitlyLoadedAfter.clear();\n        }\n        return this.fetchModuleDependencies(module, ...(await loadPromise));\n    }\n    handleInvalidResolvedId(resolvedId, source, importer, assertions) {\n        if (resolvedId === null) {\n            if (isRelative(source)) {\n                return error(errorUnresolvedImport(source, importer));\n            }\n            this.options.onwarn(errorUnresolvedImportTreatedAsExternal(source, importer));\n            return {\n                assertions,\n                external: true,\n                id: source,\n                meta: {},\n                moduleSideEffects: this.hasModuleSideEffects(source, true),\n                resolvedBy: 'rollup',\n                syntheticNamedExports: false\n            };\n        }\n        else if (resolvedId.external && resolvedId.syntheticNamedExports) {\n            this.options.onwarn(errorExternalSyntheticExports(source, importer));\n        }\n        return resolvedId;\n    }\n    async loadEntryModule(unresolvedId, isEntry, importer, implicitlyLoadedBefore) {\n        const resolveIdResult = await resolveId(unresolvedId, importer, this.options.preserveSymlinks, this.pluginDriver, this.resolveId, null, EMPTY_OBJECT, true, EMPTY_OBJECT);\n        if (resolveIdResult == null) {\n            return error(implicitlyLoadedBefore === null\n                ? errorUnresolvedEntry(unresolvedId)\n                : errorUnresolvedImplicitDependant(unresolvedId, implicitlyLoadedBefore));\n        }\n        if (resolveIdResult === false ||\n            (typeof resolveIdResult === 'object' && resolveIdResult.external)) {\n            return error(implicitlyLoadedBefore === null\n                ? errorEntryCannotBeExternal(unresolvedId)\n                : errorImplicitDependantCannotBeExternal(unresolvedId, implicitlyLoadedBefore));\n        }\n        return this.fetchModule(this.getResolvedIdWithDefaults(typeof resolveIdResult === 'object'\n            ? resolveIdResult\n            : { id: resolveIdResult }, EMPTY_OBJECT), undefined, isEntry, false);\n    }\n    async resolveDynamicImport(module, specifier, importer, assertions) {\n        const resolution = await this.pluginDriver.hookFirst('resolveDynamicImport', [\n            specifier,\n            importer,\n            { assertions }\n        ]);\n        if (typeof specifier !== 'string') {\n            if (typeof resolution === 'string') {\n                return resolution;\n            }\n            if (!resolution) {\n                return null;\n            }\n            return this.getResolvedIdWithDefaults(resolution, assertions);\n        }\n        if (resolution == null) {\n            const existingResolution = module.resolvedIds[specifier];\n            if (existingResolution) {\n                if (doAssertionsDiffer(existingResolution.assertions, assertions)) {\n                    this.options.onwarn(errorInconsistentImportAssertions(existingResolution.assertions, assertions, specifier, importer));\n                }\n                return existingResolution;\n            }\n            return (module.resolvedIds[specifier] = this.handleInvalidResolvedId(await this.resolveId(specifier, module.id, EMPTY_OBJECT, false, assertions), specifier, module.id, assertions));\n        }\n        return this.handleInvalidResolvedId(this.getResolvedIdWithDefaults(this.getNormalizedResolvedIdWithoutDefaults(resolution, importer, specifier), assertions), specifier, importer, assertions);\n    }\n}\nfunction normalizeRelativeExternalId(source, importer) {\n    return isRelative(source)\n        ? importer\n            ? resolve(importer, '..', source)\n            : resolve(source)\n        : source;\n}\nfunction addChunkNamesToModule(module, { fileName, name }, isUserDefined, priority) {\n    if (fileName !== null) {\n        module.chunkFileNames.add(fileName);\n    }\n    else if (name !== null) {\n        // Always keep chunkNames sorted by priority\n        let namePosition = 0;\n        while (module.chunkNames[namePosition]?.priority < priority)\n            namePosition++;\n        module.chunkNames.splice(namePosition, 0, { isUserDefined, name, priority });\n    }\n}\nfunction isNotAbsoluteExternal(id, source, makeAbsoluteExternalsRelative) {\n    return (makeAbsoluteExternalsRelative === true ||\n        (makeAbsoluteExternalsRelative === 'ifRelativeSource' && isRelative(source)) ||\n        !isAbsolute(id));\n}\nasync function waitForDependencyResolution(loadPromise) {\n    const [resolveStaticDependencyPromises, resolveDynamicImportPromises] = await loadPromise;\n    return Promise.all([...resolveStaticDependencyPromises, ...resolveDynamicImportPromises]);\n}\n\nclass GlobalScope extends Scope$1 {\n    constructor() {\n        super();\n        this.parent = null;\n        this.variables.set('undefined', new UndefinedVariable());\n    }\n    findVariable(name) {\n        let variable = this.variables.get(name);\n        if (!variable) {\n            variable = new GlobalVariable(name);\n            this.variables.set(name, variable);\n        }\n        return variable;\n    }\n}\n\nfunction getSourceHash(source) {\n    return createHash().update(source).digest('hex');\n}\nfunction generateAssetFileName(name, source, sourceHash, outputOptions, bundle) {\n    const emittedName = outputOptions.sanitizeFileName(name || 'asset');\n    return makeUnique(renderNamePattern(typeof outputOptions.assetFileNames === 'function'\n        ? outputOptions.assetFileNames({ name, source, type: 'asset' })\n        : outputOptions.assetFileNames, 'output.assetFileNames', {\n        ext: () => extname(emittedName).slice(1),\n        extname: () => extname(emittedName),\n        hash: size => sourceHash.slice(0, Math.max(0, size || defaultHashSize)),\n        name: () => emittedName.slice(0, Math.max(0, emittedName.length - extname(emittedName).length))\n    }), bundle);\n}\nfunction reserveFileNameInBundle(fileName, { bundle }, warn) {\n    if (bundle[lowercaseBundleKeys].has(fileName.toLowerCase())) {\n        warn(errorFileNameConflict(fileName));\n    }\n    else {\n        bundle[fileName] = FILE_PLACEHOLDER;\n    }\n}\nfunction hasValidType(emittedFile) {\n    return Boolean(emittedFile &&\n        (emittedFile.type === 'asset' ||\n            emittedFile.type === 'chunk'));\n}\nfunction hasValidName(emittedFile) {\n    const validatedName = emittedFile.fileName || emittedFile.name;\n    return !validatedName || (typeof validatedName === 'string' && !isPathFragment(validatedName));\n}\nfunction getValidSource(source, emittedFile, fileReferenceId) {\n    if (!(typeof source === 'string' || source instanceof Uint8Array)) {\n        const assetName = emittedFile.fileName || emittedFile.name || fileReferenceId;\n        return error(errorFailedValidation(`Could not set source for ${typeof assetName === 'string' ? `asset \"${assetName}\"` : 'unnamed asset'}, asset source needs to be a string, Uint8Array or Buffer.`));\n    }\n    return source;\n}\nfunction getAssetFileName(file, referenceId) {\n    if (typeof file.fileName !== 'string') {\n        return error(errorAssetNotFinalisedForFileName(file.name || referenceId));\n    }\n    return file.fileName;\n}\nfunction getChunkFileName(file, facadeChunkByModule) {\n    if (file.fileName) {\n        return file.fileName;\n    }\n    if (facadeChunkByModule) {\n        return facadeChunkByModule.get(file.module).getFileName();\n    }\n    return error(errorChunkNotGeneratedForFileName(file.fileName || file.name));\n}\nclass FileEmitter {\n    constructor(graph, options, baseFileEmitter) {\n        this.graph = graph;\n        this.options = options;\n        this.facadeChunkByModule = null;\n        this.nextIdBase = 1;\n        this.output = null;\n        this.outputFileEmitters = [];\n        this.emitFile = (emittedFile) => {\n            if (!hasValidType(emittedFile)) {\n                return error(errorFailedValidation(`Emitted files must be of type \"asset\" or \"chunk\", received \"${emittedFile && emittedFile.type}\".`));\n            }\n            if (!hasValidName(emittedFile)) {\n                return error(errorFailedValidation(`The \"fileName\" or \"name\" properties of emitted files must be strings that are neither absolute nor relative paths, received \"${emittedFile.fileName || emittedFile.name}\".`));\n            }\n            if (emittedFile.type === 'chunk') {\n                return this.emitChunk(emittedFile);\n            }\n            return this.emitAsset(emittedFile);\n        };\n        this.finaliseAssets = () => {\n            for (const [referenceId, emittedFile] of this.filesByReferenceId) {\n                if (emittedFile.type === 'asset' && typeof emittedFile.fileName !== 'string')\n                    return error(errorNoAssetSourceSet(emittedFile.name || referenceId));\n            }\n        };\n        this.getFileName = (fileReferenceId) => {\n            const emittedFile = this.filesByReferenceId.get(fileReferenceId);\n            if (!emittedFile)\n                return error(errorFileReferenceIdNotFoundForFilename(fileReferenceId));\n            if (emittedFile.type === 'chunk') {\n                return getChunkFileName(emittedFile, this.facadeChunkByModule);\n            }\n            return getAssetFileName(emittedFile, fileReferenceId);\n        };\n        this.setAssetSource = (referenceId, requestedSource) => {\n            const consumedFile = this.filesByReferenceId.get(referenceId);\n            if (!consumedFile)\n                return error(errorAssetReferenceIdNotFoundForSetSource(referenceId));\n            if (consumedFile.type !== 'asset') {\n                return error(errorFailedValidation(`Asset sources can only be set for emitted assets but \"${referenceId}\" is an emitted chunk.`));\n            }\n            if (consumedFile.source !== undefined) {\n                return error(errorAssetSourceAlreadySet(consumedFile.name || referenceId));\n            }\n            const source = getValidSource(requestedSource, consumedFile, referenceId);\n            if (this.output) {\n                this.finalizeAsset(consumedFile, source, referenceId, this.output);\n            }\n            else {\n                consumedFile.source = source;\n                for (const emitter of this.outputFileEmitters) {\n                    emitter.finalizeAsset(consumedFile, source, referenceId, emitter.output);\n                }\n            }\n        };\n        this.setChunkInformation = (facadeChunkByModule) => {\n            this.facadeChunkByModule = facadeChunkByModule;\n        };\n        this.setOutputBundle = (bundle, outputOptions) => {\n            const output = (this.output = {\n                bundle,\n                fileNamesBySource: new Map(),\n                outputOptions\n            });\n            for (const emittedFile of this.filesByReferenceId.values()) {\n                if (emittedFile.fileName) {\n                    reserveFileNameInBundle(emittedFile.fileName, output, this.options.onwarn);\n                }\n            }\n            for (const [referenceId, consumedFile] of this.filesByReferenceId) {\n                if (consumedFile.type === 'asset' && consumedFile.source !== undefined) {\n                    this.finalizeAsset(consumedFile, consumedFile.source, referenceId, output);\n                }\n            }\n        };\n        this.filesByReferenceId = baseFileEmitter\n            ? new Map(baseFileEmitter.filesByReferenceId)\n            : new Map();\n        baseFileEmitter?.addOutputFileEmitter(this);\n    }\n    addOutputFileEmitter(outputFileEmitter) {\n        this.outputFileEmitters.push(outputFileEmitter);\n    }\n    assignReferenceId(file, idBase) {\n        let referenceId = idBase;\n        do {\n            referenceId = createHash().update(referenceId).digest('hex').slice(0, 8);\n        } while (this.filesByReferenceId.has(referenceId) ||\n            this.outputFileEmitters.some(({ filesByReferenceId }) => filesByReferenceId.has(referenceId)));\n        this.filesByReferenceId.set(referenceId, file);\n        for (const { filesByReferenceId } of this.outputFileEmitters) {\n            filesByReferenceId.set(referenceId, file);\n        }\n        return referenceId;\n    }\n    emitAsset(emittedAsset) {\n        const source = emittedAsset.source === undefined\n            ? undefined\n            : getValidSource(emittedAsset.source, emittedAsset, null);\n        const consumedAsset = {\n            fileName: emittedAsset.fileName,\n            name: emittedAsset.name,\n            needsCodeReference: !!emittedAsset.needsCodeReference,\n            source,\n            type: 'asset'\n        };\n        const referenceId = this.assignReferenceId(consumedAsset, emittedAsset.fileName || emittedAsset.name || String(this.nextIdBase++));\n        if (this.output) {\n            this.emitAssetWithReferenceId(consumedAsset, referenceId, this.output);\n        }\n        else {\n            for (const fileEmitter of this.outputFileEmitters) {\n                fileEmitter.emitAssetWithReferenceId(consumedAsset, referenceId, fileEmitter.output);\n            }\n        }\n        return referenceId;\n    }\n    emitAssetWithReferenceId(consumedAsset, referenceId, output) {\n        const { fileName, source } = consumedAsset;\n        if (fileName) {\n            reserveFileNameInBundle(fileName, output, this.options.onwarn);\n        }\n        if (source !== undefined) {\n            this.finalizeAsset(consumedAsset, source, referenceId, output);\n        }\n    }\n    emitChunk(emittedChunk) {\n        if (this.graph.phase > BuildPhase.LOAD_AND_PARSE) {\n            return error(errorInvalidRollupPhaseForChunkEmission());\n        }\n        if (typeof emittedChunk.id !== 'string') {\n            return error(errorFailedValidation(`Emitted chunks need to have a valid string id, received \"${emittedChunk.id}\"`));\n        }\n        const consumedChunk = {\n            fileName: emittedChunk.fileName,\n            module: null,\n            name: emittedChunk.name || emittedChunk.id,\n            type: 'chunk'\n        };\n        this.graph.moduleLoader\n            .emitChunk(emittedChunk)\n            .then(module => (consumedChunk.module = module))\n            .catch(() => {\n            // Avoid unhandled Promise rejection as the error will be thrown later\n            // once module loading has finished\n        });\n        return this.assignReferenceId(consumedChunk, emittedChunk.id);\n    }\n    finalizeAsset(consumedFile, source, referenceId, { bundle, fileNamesBySource, outputOptions }) {\n        let fileName = consumedFile.fileName;\n        // Deduplicate assets if an explicit fileName is not provided\n        if (!fileName) {\n            const sourceHash = getSourceHash(source);\n            fileName = fileNamesBySource.get(sourceHash);\n            if (!fileName) {\n                fileName = generateAssetFileName(consumedFile.name, source, sourceHash, outputOptions, bundle);\n                fileNamesBySource.set(sourceHash, fileName);\n            }\n        }\n        // We must not modify the original assets to avoid interaction between outputs\n        const assetWithFileName = { ...consumedFile, fileName, source };\n        this.filesByReferenceId.set(referenceId, assetWithFileName);\n        bundle[fileName] = {\n            fileName,\n            name: consumedFile.name,\n            needsCodeReference: consumedFile.needsCodeReference,\n            source,\n            type: 'asset'\n        };\n    }\n}\n\nfunction getPluginContext(plugin, pluginCache, graph, options, fileEmitter, existingPluginNames) {\n    let cacheable = true;\n    if (typeof plugin.cacheKey !== 'string') {\n        if (plugin.name.startsWith(ANONYMOUS_PLUGIN_PREFIX) ||\n            plugin.name.startsWith(ANONYMOUS_OUTPUT_PLUGIN_PREFIX) ||\n            existingPluginNames.has(plugin.name)) {\n            cacheable = false;\n        }\n        else {\n            existingPluginNames.add(plugin.name);\n        }\n    }\n    let cacheInstance;\n    if (!pluginCache) {\n        cacheInstance = NO_CACHE;\n    }\n    else if (cacheable) {\n        const cacheKey = plugin.cacheKey || plugin.name;\n        cacheInstance = createPluginCache(pluginCache[cacheKey] || (pluginCache[cacheKey] = Object.create(null)));\n    }\n    else {\n        cacheInstance = getCacheForUncacheablePlugin(plugin.name);\n    }\n    return {\n        addWatchFile(id) {\n            if (graph.phase >= BuildPhase.GENERATE) {\n                return this.error(errorInvalidRollupPhaseForAddWatchFile());\n            }\n            graph.watchFiles[id] = true;\n        },\n        cache: cacheInstance,\n        emitFile: fileEmitter.emitFile.bind(fileEmitter),\n        error(error_) {\n            return error(errorPluginError(error_, plugin.name));\n        },\n        getFileName: fileEmitter.getFileName,\n        getModuleIds: () => graph.modulesById.keys(),\n        getModuleInfo: graph.getModuleInfo,\n        getWatchFiles: () => Object.keys(graph.watchFiles),\n        load(resolvedId) {\n            return graph.moduleLoader.preloadModule(resolvedId);\n        },\n        meta: {\n            rollupVersion: version$1,\n            watchMode: graph.watchMode\n        },\n        get moduleIds() {\n            function* wrappedModuleIds() {\n                // We are wrapping this in a generator to only show the message once we are actually iterating\n                warnDeprecation(`Accessing \"this.moduleIds\" on the plugin context by plugin ${plugin.name} is deprecated. The \"this.getModuleIds\" plugin context function should be used instead.`, URL_THIS_GETMODULEIDS, true, options, plugin.name);\n                yield* moduleIds;\n            }\n            const moduleIds = graph.modulesById.keys();\n            return wrappedModuleIds();\n        },\n        parse: graph.contextParse.bind(graph),\n        resolve(source, importer, { assertions, custom, isEntry, skipSelf } = BLANK) {\n            return graph.moduleLoader.resolveId(source, importer, custom, isEntry, assertions || EMPTY_OBJECT, skipSelf ? [{ importer, plugin, source }] : null);\n        },\n        setAssetSource: fileEmitter.setAssetSource,\n        warn(warning) {\n            if (typeof warning === 'string')\n                warning = { message: warning };\n            if (warning.code)\n                warning.pluginCode = warning.code;\n            warning.code = 'PLUGIN_WARNING';\n            warning.plugin = plugin.name;\n            options.onwarn(warning);\n        }\n    };\n}\n\n// This will make sure no input hook is omitted\nconst inputHookNames = {\n    buildEnd: 1,\n    buildStart: 1,\n    closeBundle: 1,\n    closeWatcher: 1,\n    load: 1,\n    moduleParsed: 1,\n    options: 1,\n    resolveDynamicImport: 1,\n    resolveId: 1,\n    shouldTransformCachedModule: 1,\n    transform: 1,\n    watchChange: 1\n};\nconst inputHooks = Object.keys(inputHookNames);\nclass PluginDriver {\n    constructor(graph, options, userPlugins, pluginCache, basePluginDriver) {\n        this.graph = graph;\n        this.options = options;\n        this.pluginCache = pluginCache;\n        this.sortedPlugins = new Map();\n        this.unfulfilledActions = new Set();\n        this.fileEmitter = new FileEmitter(graph, options, basePluginDriver && basePluginDriver.fileEmitter);\n        this.emitFile = this.fileEmitter.emitFile.bind(this.fileEmitter);\n        this.getFileName = this.fileEmitter.getFileName.bind(this.fileEmitter);\n        this.finaliseAssets = this.fileEmitter.finaliseAssets.bind(this.fileEmitter);\n        this.setChunkInformation = this.fileEmitter.setChunkInformation.bind(this.fileEmitter);\n        this.setOutputBundle = this.fileEmitter.setOutputBundle.bind(this.fileEmitter);\n        this.plugins = [...(basePluginDriver ? basePluginDriver.plugins : []), ...userPlugins];\n        const existingPluginNames = new Set();\n        this.pluginContexts = new Map(this.plugins.map(plugin => [\n            plugin,\n            getPluginContext(plugin, pluginCache, graph, options, this.fileEmitter, existingPluginNames)\n        ]));\n        if (basePluginDriver) {\n            for (const plugin of userPlugins) {\n                for (const hook of inputHooks) {\n                    if (hook in plugin) {\n                        options.onwarn(errorInputHookInOutputPlugin(plugin.name, hook));\n                    }\n                }\n            }\n        }\n    }\n    createOutputPluginDriver(plugins) {\n        return new PluginDriver(this.graph, this.options, plugins, this.pluginCache, this);\n    }\n    getUnfulfilledHookActions() {\n        return this.unfulfilledActions;\n    }\n    // chains, first non-null result stops and returns\n    hookFirst(hookName, parameters, replaceContext, skipped) {\n        return this.hookFirstAndGetPlugin(hookName, parameters, replaceContext, skipped).then(result => result && result[0]);\n    }\n    // chains, first non-null result stops and returns result and last plugin\n    async hookFirstAndGetPlugin(hookName, parameters, replaceContext, skipped) {\n        for (const plugin of this.getSortedPlugins(hookName)) {\n            if (skipped?.has(plugin))\n                continue;\n            const result = await this.runHook(hookName, parameters, plugin, replaceContext);\n            if (result != null)\n                return [result, plugin];\n        }\n        return null;\n    }\n    // chains synchronously, first non-null result stops and returns\n    hookFirstSync(hookName, parameters, replaceContext) {\n        for (const plugin of this.getSortedPlugins(hookName)) {\n            const result = this.runHookSync(hookName, parameters, plugin, replaceContext);\n            if (result != null)\n                return result;\n        }\n        return null;\n    }\n    // parallel, ignores returns\n    async hookParallel(hookName, parameters, replaceContext) {\n        const parallelPromises = [];\n        for (const plugin of this.getSortedPlugins(hookName)) {\n            if (plugin[hookName].sequential) {\n                await Promise.all(parallelPromises);\n                parallelPromises.length = 0;\n                await this.runHook(hookName, parameters, plugin, replaceContext);\n            }\n            else {\n                parallelPromises.push(this.runHook(hookName, parameters, plugin, replaceContext));\n            }\n        }\n        await Promise.all(parallelPromises);\n    }\n    // chains, reduces returned value, handling the reduced value as the first hook argument\n    hookReduceArg0(hookName, [argument0, ...rest], reduce, replaceContext) {\n        let promise = Promise.resolve(argument0);\n        for (const plugin of this.getSortedPlugins(hookName)) {\n            promise = promise.then(argument0 => this.runHook(hookName, [argument0, ...rest], plugin, replaceContext).then(result => reduce.call(this.pluginContexts.get(plugin), argument0, result, plugin)));\n        }\n        return promise;\n    }\n    // chains synchronously, reduces returned value, handling the reduced value as the first hook argument\n    hookReduceArg0Sync(hookName, [argument0, ...rest], reduce, replaceContext) {\n        for (const plugin of this.getSortedPlugins(hookName)) {\n            const parameters = [argument0, ...rest];\n            const result = this.runHookSync(hookName, parameters, plugin, replaceContext);\n            argument0 = reduce.call(this.pluginContexts.get(plugin), argument0, result, plugin);\n        }\n        return argument0;\n    }\n    // chains, reduces returned value to type string, handling the reduced value separately. permits hooks as values.\n    async hookReduceValue(hookName, initialValue, parameters, reducer) {\n        const results = [];\n        const parallelResults = [];\n        for (const plugin of this.getSortedPlugins(hookName, validateAddonPluginHandler)) {\n            if (plugin[hookName].sequential) {\n                results.push(...(await Promise.all(parallelResults)));\n                parallelResults.length = 0;\n                results.push(await this.runHook(hookName, parameters, plugin));\n            }\n            else {\n                parallelResults.push(this.runHook(hookName, parameters, plugin));\n            }\n        }\n        results.push(...(await Promise.all(parallelResults)));\n        return results.reduce(reducer, await initialValue);\n    }\n    // chains synchronously, reduces returned value to type T, handling the reduced value separately. permits hooks as values.\n    hookReduceValueSync(hookName, initialValue, parameters, reduce, replaceContext) {\n        let accumulator = initialValue;\n        for (const plugin of this.getSortedPlugins(hookName)) {\n            const result = this.runHookSync(hookName, parameters, plugin, replaceContext);\n            accumulator = reduce.call(this.pluginContexts.get(plugin), accumulator, result, plugin);\n        }\n        return accumulator;\n    }\n    // chains, ignores returns\n    hookSeq(hookName, parameters, replaceContext) {\n        let promise = Promise.resolve();\n        for (const plugin of this.getSortedPlugins(hookName)) {\n            promise = promise.then(() => this.runHook(hookName, parameters, plugin, replaceContext));\n        }\n        return promise.then(noReturn);\n    }\n    getSortedPlugins(hookName, validateHandler) {\n        return getOrCreate(this.sortedPlugins, hookName, () => getSortedValidatedPlugins(hookName, this.plugins, validateHandler));\n    }\n    // Implementation signature\n    runHook(hookName, parameters, plugin, replaceContext) {\n        // We always filter for plugins that support the hook before running it\n        const hook = plugin[hookName];\n        const handler = typeof hook === 'object' ? hook.handler : hook;\n        let context = this.pluginContexts.get(plugin);\n        if (replaceContext) {\n            context = replaceContext(context, plugin);\n        }\n        let action = null;\n        return Promise.resolve()\n            .then(() => {\n            if (typeof handler !== 'function') {\n                return handler;\n            }\n            // eslint-disable-next-line @typescript-eslint/ban-types\n            const hookResult = handler.apply(context, parameters);\n            if (!hookResult?.then) {\n                // short circuit for non-thenables and non-Promises\n                return hookResult;\n            }\n            // Track pending hook actions to properly error out when\n            // unfulfilled promises cause rollup to abruptly and confusingly\n            // exit with a successful 0 return code but without producing any\n            // output, errors or warnings.\n            action = [plugin.name, hookName, parameters];\n            this.unfulfilledActions.add(action);\n            // Although it would be more elegant to just return hookResult here\n            // and put the .then() handler just above the .catch() handler below,\n            // doing so would subtly change the defacto async event dispatch order\n            // which at least one test and some plugins in the wild may depend on.\n            return Promise.resolve(hookResult).then(result => {\n                // action was fulfilled\n                this.unfulfilledActions.delete(action);\n                return result;\n            });\n        })\n            .catch(error_ => {\n            if (action !== null) {\n                // action considered to be fulfilled since error being handled\n                this.unfulfilledActions.delete(action);\n            }\n            return error(errorPluginError(error_, plugin.name, { hook: hookName }));\n        });\n    }\n    /**\n     * Run a sync plugin hook and return the result.\n     * @param hookName Name of the plugin hook. Must be in `PluginHooks`.\n     * @param args Arguments passed to the plugin hook.\n     * @param plugin The acutal plugin\n     * @param replaceContext When passed, the plugin context can be overridden.\n     */\n    runHookSync(hookName, parameters, plugin, replaceContext) {\n        const hook = plugin[hookName];\n        const handler = typeof hook === 'object' ? hook.handler : hook;\n        let context = this.pluginContexts.get(plugin);\n        if (replaceContext) {\n            context = replaceContext(context, plugin);\n        }\n        try {\n            // eslint-disable-next-line @typescript-eslint/ban-types\n            return handler.apply(context, parameters);\n        }\n        catch (error_) {\n            return error(errorPluginError(error_, plugin.name, { hook: hookName }));\n        }\n    }\n}\nfunction getSortedValidatedPlugins(hookName, plugins, validateHandler = validateFunctionPluginHandler) {\n    const pre = [];\n    const normal = [];\n    const post = [];\n    for (const plugin of plugins) {\n        const hook = plugin[hookName];\n        if (hook) {\n            if (typeof hook === 'object') {\n                validateHandler(hook.handler, hookName, plugin);\n                if (hook.order === 'pre') {\n                    pre.push(plugin);\n                    continue;\n                }\n                if (hook.order === 'post') {\n                    post.push(plugin);\n                    continue;\n                }\n            }\n            else {\n                validateHandler(hook, hookName, plugin);\n            }\n            normal.push(plugin);\n        }\n    }\n    return [...pre, ...normal, ...post];\n}\nfunction validateFunctionPluginHandler(handler, hookName, plugin) {\n    if (typeof handler !== 'function') {\n        error(errorInvalidFunctionPluginHook(hookName, plugin.name));\n    }\n}\nfunction validateAddonPluginHandler(handler, hookName, plugin) {\n    if (typeof handler !== 'string' && typeof handler !== 'function') {\n        return error(errorInvalidAddonPluginHook(hookName, plugin.name));\n    }\n}\nfunction noReturn() { }\n\nclass Queue {\n    constructor(maxParallel) {\n        this.maxParallel = maxParallel;\n        this.queue = [];\n        this.workerCount = 0;\n    }\n    run(task) {\n        return new Promise((resolve, reject) => {\n            this.queue.push({ reject, resolve, task });\n            this.work();\n        });\n    }\n    async work() {\n        if (this.workerCount >= this.maxParallel)\n            return;\n        this.workerCount++;\n        let entry;\n        while ((entry = this.queue.shift())) {\n            const { reject, resolve, task } = entry;\n            try {\n                const result = await task();\n                resolve(result);\n            }\n            catch (error) {\n                reject(error);\n            }\n        }\n        this.workerCount--;\n    }\n}\n\nfunction normalizeEntryModules(entryModules) {\n    if (Array.isArray(entryModules)) {\n        return entryModules.map(id => ({\n            fileName: null,\n            id,\n            implicitlyLoadedAfter: [],\n            importer: undefined,\n            name: null\n        }));\n    }\n    return Object.entries(entryModules).map(([name, id]) => ({\n        fileName: null,\n        id,\n        implicitlyLoadedAfter: [],\n        importer: undefined,\n        name\n    }));\n}\nclass Graph {\n    constructor(options, watcher) {\n        this.options = options;\n        this.astLru = flru(5);\n        this.cachedModules = new Map();\n        this.deoptimizationTracker = new PathTracker();\n        this.entryModules = [];\n        this.modulesById = new Map();\n        this.needsTreeshakingPass = false;\n        this.phase = BuildPhase.LOAD_AND_PARSE;\n        this.scope = new GlobalScope();\n        this.watchFiles = Object.create(null);\n        this.watchMode = false;\n        this.externalModules = [];\n        this.implicitEntryModules = [];\n        this.modules = [];\n        this.getModuleInfo = (moduleId) => {\n            const foundModule = this.modulesById.get(moduleId);\n            if (!foundModule)\n                return null;\n            return foundModule.info;\n        };\n        if (options.cache !== false) {\n            if (options.cache?.modules) {\n                for (const module of options.cache.modules)\n                    this.cachedModules.set(module.id, module);\n            }\n            this.pluginCache = options.cache?.plugins || Object.create(null);\n            // increment access counter\n            for (const name in this.pluginCache) {\n                const cache = this.pluginCache[name];\n                for (const value of Object.values(cache))\n                    value[0]++;\n            }\n        }\n        if (watcher) {\n            this.watchMode = true;\n            const handleChange = (...parameters) => this.pluginDriver.hookParallel('watchChange', parameters);\n            const handleClose = () => this.pluginDriver.hookParallel('closeWatcher', []);\n            watcher.onCurrentRun('change', handleChange);\n            watcher.onCurrentRun('close', handleClose);\n        }\n        this.pluginDriver = new PluginDriver(this, options, options.plugins, this.pluginCache);\n        this.acornParser = Parser.extend(...options.acornInjectPlugins);\n        this.moduleLoader = new ModuleLoader(this, this.modulesById, this.options, this.pluginDriver);\n        this.fileOperationQueue = new Queue(options.maxParallelFileOps);\n        this.pureFunctions = getPureFunctions(options);\n    }\n    async build() {\n        timeStart('generate module graph', 2);\n        await this.generateModuleGraph();\n        timeEnd('generate module graph', 2);\n        timeStart('sort and bind modules', 2);\n        this.phase = BuildPhase.ANALYSE;\n        this.sortModules();\n        timeEnd('sort and bind modules', 2);\n        timeStart('mark included statements', 2);\n        this.includeStatements();\n        timeEnd('mark included statements', 2);\n        this.phase = BuildPhase.GENERATE;\n    }\n    contextParse(code, options = {}) {\n        const onCommentOrig = options.onComment;\n        const comments = [];\n        options.onComment =\n            onCommentOrig && typeof onCommentOrig == 'function'\n                ? (block, text, start, end, ...parameters) => {\n                    comments.push({ end, start, type: block ? 'Block' : 'Line', value: text });\n                    return onCommentOrig.call(options, block, text, start, end, ...parameters);\n                }\n                : comments;\n        const ast = this.acornParser.parse(code, {\n            ...this.options.acorn,\n            ...options\n        });\n        if (typeof onCommentOrig == 'object') {\n            onCommentOrig.push(...comments);\n        }\n        options.onComment = onCommentOrig;\n        addAnnotations(comments, ast, code);\n        return ast;\n    }\n    getCache() {\n        // handle plugin cache eviction\n        for (const name in this.pluginCache) {\n            const cache = this.pluginCache[name];\n            let allDeleted = true;\n            for (const [key, value] of Object.entries(cache)) {\n                if (value[0] >= this.options.experimentalCacheExpiry)\n                    delete cache[key];\n                else\n                    allDeleted = false;\n            }\n            if (allDeleted)\n                delete this.pluginCache[name];\n        }\n        return {\n            modules: this.modules.map(module => module.toJSON()),\n            plugins: this.pluginCache\n        };\n    }\n    async generateModuleGraph() {\n        ({ entryModules: this.entryModules, implicitEntryModules: this.implicitEntryModules } =\n            await this.moduleLoader.addEntryModules(normalizeEntryModules(this.options.input), true));\n        if (this.entryModules.length === 0) {\n            throw new Error('You must supply options.input to rollup');\n        }\n        for (const module of this.modulesById.values()) {\n            if (module instanceof Module) {\n                this.modules.push(module);\n            }\n            else {\n                this.externalModules.push(module);\n            }\n        }\n    }\n    includeStatements() {\n        const entryModules = [...this.entryModules, ...this.implicitEntryModules];\n        for (const module of entryModules) {\n            markModuleAndImpureDependenciesAsExecuted(module);\n        }\n        if (this.options.treeshake) {\n            let treeshakingPass = 1;\n            do {\n                timeStart(`treeshaking pass ${treeshakingPass}`, 3);\n                this.needsTreeshakingPass = false;\n                for (const module of this.modules) {\n                    if (module.isExecuted) {\n                        if (module.info.moduleSideEffects === 'no-treeshake') {\n                            module.includeAllInBundle();\n                        }\n                        else {\n                            module.include();\n                        }\n                    }\n                }\n                if (treeshakingPass === 1) {\n                    // We only include exports after the first pass to avoid issues with\n                    // the TDZ detection logic\n                    for (const module of entryModules) {\n                        if (module.preserveSignature !== false) {\n                            module.includeAllExports(false);\n                            this.needsTreeshakingPass = true;\n                        }\n                    }\n                }\n                timeEnd(`treeshaking pass ${treeshakingPass++}`, 3);\n            } while (this.needsTreeshakingPass);\n        }\n        else {\n            for (const module of this.modules)\n                module.includeAllInBundle();\n        }\n        for (const externalModule of this.externalModules)\n            externalModule.warnUnusedImports();\n        for (const module of this.implicitEntryModules) {\n            for (const dependant of module.implicitlyLoadedAfter) {\n                if (!(dependant.info.isEntry || dependant.isIncluded())) {\n                    error(errorImplicitDependantIsNotIncluded(dependant));\n                }\n            }\n        }\n    }\n    sortModules() {\n        const { orderedModules, cyclePaths } = analyseModuleExecution(this.entryModules);\n        for (const cyclePath of cyclePaths) {\n            this.options.onwarn(errorCircularDependency(cyclePath));\n        }\n        this.modules = orderedModules;\n        for (const module of this.modules) {\n            module.bindReferences();\n        }\n        this.warnForMissingExports();\n    }\n    warnForMissingExports() {\n        for (const module of this.modules) {\n            for (const importDescription of module.importDescriptions.values()) {\n                if (importDescription.name !== '*' &&\n                    !importDescription.module.getVariableForExportName(importDescription.name)[0]) {\n                    module.warn(errorMissingExport(importDescription.name, module.id, importDescription.module.id), importDescription.start);\n                }\n            }\n        }\n    }\n}\n\nfunction formatAction([pluginName, hookName, parameters]) {\n    const action = `(${pluginName}) ${hookName}`;\n    const s = JSON.stringify;\n    switch (hookName) {\n        case 'resolveId': {\n            return `${action} ${s(parameters[0])} ${s(parameters[1])}`;\n        }\n        case 'load': {\n            return `${action} ${s(parameters[0])}`;\n        }\n        case 'transform': {\n            return `${action} ${s(parameters[1])}`;\n        }\n        case 'shouldTransformCachedModule': {\n            return `${action} ${s(parameters[0].id)}`;\n        }\n        case 'moduleParsed': {\n            return `${action} ${s(parameters[0].id)}`;\n        }\n    }\n    return action;\n}\n// We do not directly listen on process to avoid max listeners warnings for\n// complicated build processes\nconst beforeExitEvent = 'beforeExit';\nconst beforeExitEmitter = new EventEmitter();\nbeforeExitEmitter.setMaxListeners(0);\nprocess$1.on(beforeExitEvent, () => beforeExitEmitter.emit(beforeExitEvent));\nasync function catchUnfinishedHookActions(pluginDriver, callback) {\n    let handleEmptyEventLoop;\n    const emptyEventLoopPromise = new Promise((_, reject) => {\n        handleEmptyEventLoop = () => {\n            const unfulfilledActions = pluginDriver.getUnfulfilledHookActions();\n            reject(new Error(`Unexpected early exit. This happens when Promises returned by plugins cannot resolve. Unfinished hook action(s) on exit:\\n` +\n                [...unfulfilledActions].map(formatAction).join('\\n')));\n        };\n        beforeExitEmitter.once(beforeExitEvent, handleEmptyEventLoop);\n    });\n    const result = await Promise.race([callback(), emptyEventLoopPromise]);\n    beforeExitEmitter.off(beforeExitEvent, handleEmptyEventLoop);\n    return result;\n}\n\nconst leftCurlyBrace = \"{\".charCodeAt(0);\nconst space = \" \".charCodeAt(0);\n\nconst keyword = \"assert\";\nconst FUNC_STATEMENT = 1, FUNC_NULLABLE_ID = 4;\n\nfunction importAssertions(Parser) {\n  // Use supplied version acorn version if present, to avoid\n  // reference mismatches due to different acorn versions. This\n  // allows this plugin to be used with Rollup which supplies\n  // its own internal version of acorn and thereby sidesteps\n  // the package manager.\n  const acorn = Parser.acorn || _acorn;\n  const { tokTypes: tt, TokenType } = acorn;\n\n  return class extends Parser {\n    constructor(...args) {\n      super(...args);\n      this.assertToken = new TokenType(keyword);\n    }\n\n    _codeAt(i) {\n      return this.input.charCodeAt(i);\n    }\n\n    _eat(t) {\n      if (this.type !== t) {\n        this.unexpected();\n      }\n      this.next();\n    }\n\n    readToken(code) {\n      let i = 0;\n      for (; i < keyword.length; i++) {\n        if (this._codeAt(this.pos + i) !== keyword.charCodeAt(i)) {\n          return super.readToken(code);\n        }\n      }\n\n      // ensure that the keyword is at the correct location\n      // ie `assert{...` or `assert {...`\n      for (;; i++) {\n        if (this._codeAt(this.pos + i) === leftCurlyBrace) {\n          // Found '{'\n          break;\n        } else if (this._codeAt(this.pos + i) === space) {\n          // white space is allowed between `assert` and `{`, so continue.\n          continue;\n        } else {\n          return super.readToken(code);\n        }\n      }\n\n      // If we're inside a dynamic import expression we'll parse\n      // the `assert` keyword as a standard object property name\n      // ie `import(\"\"./foo.json\", { assert: { type: \"json\" } })`\n      if (this.type.label === \"{\") {\n        return super.readToken(code);\n      }\n\n      this.pos += keyword.length;\n      return this.finishToken(this.assertToken);\n    }\n\n    parseDynamicImport(node) {\n      this.next(); // skip `(`\n\n      // Parse node.source.\n      node.source = this.parseMaybeAssign();\n\n      if (this.eat(tt.comma)) {\n        const obj = this.parseObj(false);\n        node.arguments = [obj];\n      }\n      this._eat(tt.parenR);\n      return this.finishNode(node, \"ImportExpression\");\n    }\n\n    // ported from acorn/src/statement.js pp.parseExport\n    parseExport(node, exports) {\n      this.next();\n      // export * from '...'\n      if (this.eat(tt.star)) {\n        if (this.options.ecmaVersion >= 11) {\n          if (this.eatContextual(\"as\")) {\n            node.exported = this.parseIdent(true);\n            this.checkExport(exports, node.exported.name, this.lastTokStart);\n          } else {\n            node.exported = null;\n          }\n        }\n        this.expectContextual(\"from\");\n        if (this.type !== tt.string) { this.unexpected(); }\n        node.source = this.parseExprAtom();\n\n        if (this.type === this.assertToken) {\n          this.next();\n          const assertions = this.parseImportAssertions();\n          if (assertions) {\n            node.assertions = assertions;\n          }\n        }\n\n        this.semicolon();\n        return this.finishNode(node, \"ExportAllDeclaration\")\n      }\n      if (this.eat(tt._default)) { // export default ...\n        this.checkExport(exports, \"default\", this.lastTokStart);\n        var isAsync;\n        if (this.type === tt._function || (isAsync = this.isAsyncFunction())) {\n          var fNode = this.startNode();\n          this.next();\n          if (isAsync) { this.next(); }\n          node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);\n        } else if (this.type === tt._class) {\n          var cNode = this.startNode();\n          node.declaration = this.parseClass(cNode, \"nullableID\");\n        } else {\n          node.declaration = this.parseMaybeAssign();\n          this.semicolon();\n        }\n        return this.finishNode(node, \"ExportDefaultDeclaration\")\n      }\n      // export var|const|let|function|class ...\n      if (this.shouldParseExportStatement()) {\n        node.declaration = this.parseStatement(null);\n        if (node.declaration.type === \"VariableDeclaration\")\n          { this.checkVariableExport(exports, node.declaration.declarations); }\n        else\n          { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }\n        node.specifiers = [];\n        node.source = null;\n      } else { // export { x, y as z } [from '...']\n        node.declaration = null;\n        node.specifiers = this.parseExportSpecifiers(exports);\n        if (this.eatContextual(\"from\")) {\n          if (this.type !== tt.string) { this.unexpected(); }\n          node.source = this.parseExprAtom();\n\n          if (this.type === this.assertToken) {\n            this.next();\n            const assertions = this.parseImportAssertions();\n            if (assertions) {\n              node.assertions = assertions;\n            }\n          }\n        } else {\n          for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n            // check for keywords used as local names\n            var spec = list[i];\n\n            this.checkUnreserved(spec.local);\n            // check if export is defined\n            this.checkLocalExport(spec.local);\n          }\n\n          node.source = null;\n        }\n        this.semicolon();\n      }\n      return this.finishNode(node, \"ExportNamedDeclaration\")\n    }\n\n    parseImport(node) {\n      this.next();\n      // import '...'\n      if (this.type === tt.string) {\n        node.specifiers = [];\n        node.source = this.parseExprAtom();\n      } else {\n        node.specifiers = this.parseImportSpecifiers();\n        this.expectContextual(\"from\");\n        node.source =\n          this.type === tt.string ? this.parseExprAtom() : this.unexpected();\n      }\n\n      if (this.type === this.assertToken) {\n        this.next();\n        const assertions = this.parseImportAssertions();\n        if (assertions) {\n          node.assertions = assertions;\n        }\n      }\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportAssertions() {\n      this._eat(tt.braceL);\n      const attrs = this.parseAssertEntries();\n      this._eat(tt.braceR);\n      return attrs;\n    }\n\n    parseAssertEntries() {\n      const attrs = [];\n      const attrNames = new Set();\n\n      do {\n        if (this.type === tt.braceR) {\n          break;\n        }\n\n        const node = this.startNode();\n\n        // parse AssertionKey : IdentifierName, StringLiteral\n        let assertionKeyNode;\n        if (this.type === tt.string) {\n          assertionKeyNode = this.parseLiteral(this.value);\n        } else {\n          assertionKeyNode = this.parseIdent(true);\n        }\n        this.next();\n        node.key = assertionKeyNode;\n\n        // check if we already have an entry for an attribute\n        // if a duplicate entry is found, throw an error\n        // for now this logic will come into play only when someone declares `type` twice\n        if (attrNames.has(node.key.name)) {\n          this.raise(this.pos, \"Duplicated key in assertions\");\n        }\n        attrNames.add(node.key.name);\n\n        if (this.type !== tt.string) {\n          this.raise(\n            this.pos,\n            \"Only string is supported as an assertion value\"\n          );\n        }\n\n        node.value = this.parseLiteral(this.value);\n\n        attrs.push(this.finishNode(node, \"ImportAttribute\"));\n      } while (this.eat(tt.comma));\n\n      return attrs;\n    }\n  };\n}\n\nfunction ensureArray(items) {\n    if (Array.isArray(items)) {\n        return items.filter(Boolean);\n    }\n    if (items) {\n        return [items];\n    }\n    return [];\n}\n\nasync function asyncFlatten(array) {\n    do {\n        array = (await Promise.all(array)).flat(Infinity);\n    } while (array.some((v) => v?.then));\n    return array;\n}\n\nconst defaultOnWarn = warning => console.warn(warning.message || warning);\nfunction warnUnknownOptions(passedOptions, validOptions, optionType, warn, ignoredKeys = /$./) {\n    const validOptionSet = new Set(validOptions);\n    const unknownOptions = Object.keys(passedOptions).filter(key => !(validOptionSet.has(key) || ignoredKeys.test(key)));\n    if (unknownOptions.length > 0) {\n        warn(errorUnknownOption(optionType, unknownOptions, [...validOptionSet].sort()));\n    }\n}\nconst treeshakePresets = {\n    recommended: {\n        annotations: true,\n        correctVarValueBeforeDeclaration: false,\n        manualPureFunctions: EMPTY_ARRAY,\n        moduleSideEffects: () => true,\n        propertyReadSideEffects: true,\n        tryCatchDeoptimization: true,\n        unknownGlobalSideEffects: false\n    },\n    safest: {\n        annotations: true,\n        correctVarValueBeforeDeclaration: true,\n        manualPureFunctions: EMPTY_ARRAY,\n        moduleSideEffects: () => true,\n        propertyReadSideEffects: true,\n        tryCatchDeoptimization: true,\n        unknownGlobalSideEffects: true\n    },\n    smallest: {\n        annotations: true,\n        correctVarValueBeforeDeclaration: false,\n        manualPureFunctions: EMPTY_ARRAY,\n        moduleSideEffects: () => false,\n        propertyReadSideEffects: false,\n        tryCatchDeoptimization: false,\n        unknownGlobalSideEffects: false\n    }\n};\nconst generatedCodePresets = {\n    es2015: {\n        arrowFunctions: true,\n        constBindings: true,\n        objectShorthand: true,\n        reservedNamesAsProps: true,\n        symbols: true\n    },\n    es5: {\n        arrowFunctions: false,\n        constBindings: false,\n        objectShorthand: false,\n        reservedNamesAsProps: true,\n        symbols: false\n    }\n};\nconst objectifyOption = (value) => value && typeof value === 'object' ? value : {};\nconst objectifyOptionWithPresets = (presets, optionName, urlSnippet, additionalValues) => (value) => {\n    if (typeof value === 'string') {\n        const preset = presets[value];\n        if (preset) {\n            return preset;\n        }\n        error(errorInvalidOption(optionName, urlSnippet, `valid values are ${additionalValues}${printQuotedStringList(Object.keys(presets))}. You can also supply an object for more fine-grained control`, value));\n    }\n    return objectifyOption(value);\n};\nconst getOptionWithPreset = (value, presets, optionName, urlSnippet, additionalValues) => {\n    const presetName = value?.preset;\n    if (presetName) {\n        const preset = presets[presetName];\n        if (preset) {\n            return { ...preset, ...value };\n        }\n        else {\n            error(errorInvalidOption(`${optionName}.preset`, urlSnippet, `valid values are ${printQuotedStringList(Object.keys(presets))}`, presetName));\n        }\n    }\n    return objectifyOptionWithPresets(presets, optionName, urlSnippet, additionalValues)(value);\n};\nconst normalizePluginOption = async (plugins) => (await asyncFlatten([plugins])).filter(Boolean);\n\nasync function normalizeInputOptions(config) {\n    // These are options that may trigger special warnings or behaviour later\n    // if the user did not select an explicit value\n    const unsetOptions = new Set();\n    const context = config.context ?? 'undefined';\n    const onwarn = getOnwarn(config);\n    const strictDeprecations = config.strictDeprecations || false;\n    const maxParallelFileOps = getmaxParallelFileOps(config, onwarn, strictDeprecations);\n    const options = {\n        acorn: getAcorn(config),\n        acornInjectPlugins: getAcornInjectPlugins(config),\n        cache: getCache(config),\n        context,\n        experimentalCacheExpiry: config.experimentalCacheExpiry ?? 10,\n        experimentalLogSideEffects: config.experimentalLogSideEffects || false,\n        external: getIdMatcher(config.external),\n        inlineDynamicImports: getInlineDynamicImports$1(config, onwarn, strictDeprecations),\n        input: getInput(config),\n        makeAbsoluteExternalsRelative: config.makeAbsoluteExternalsRelative ?? 'ifRelativeSource',\n        manualChunks: getManualChunks$1(config, onwarn, strictDeprecations),\n        maxParallelFileOps,\n        maxParallelFileReads: maxParallelFileOps,\n        moduleContext: getModuleContext(config, context),\n        onwarn,\n        perf: config.perf || false,\n        plugins: await normalizePluginOption(config.plugins),\n        preserveEntrySignatures: config.preserveEntrySignatures ?? 'exports-only',\n        preserveModules: getPreserveModules$1(config, onwarn, strictDeprecations),\n        preserveSymlinks: config.preserveSymlinks || false,\n        shimMissingExports: config.shimMissingExports || false,\n        strictDeprecations,\n        treeshake: getTreeshake(config)\n    };\n    warnUnknownOptions(config, [...Object.keys(options), 'watch'], 'input options', options.onwarn, /^(output)$/);\n    return { options, unsetOptions };\n}\nconst getOnwarn = (config) => {\n    const { onwarn } = config;\n    return onwarn\n        ? warning => {\n            warning.toString = () => {\n                let warningString = '';\n                if (warning.plugin)\n                    warningString += `(${warning.plugin} plugin) `;\n                if (warning.loc)\n                    warningString += `${relativeId(warning.loc.file)} (${warning.loc.line}:${warning.loc.column}) `;\n                warningString += warning.message;\n                return warningString;\n            };\n            onwarn(warning, defaultOnWarn);\n        }\n        : defaultOnWarn;\n};\nconst getAcorn = (config) => ({\n    ecmaVersion: 'latest',\n    sourceType: 'module',\n    ...config.acorn\n});\nconst getAcornInjectPlugins = (config) => [\n    importAssertions,\n    ...ensureArray(config.acornInjectPlugins)\n];\nconst getCache = (config) => config.cache === true // `true` is the default\n    ? undefined\n    : config.cache?.cache || config.cache;\nconst getIdMatcher = (option) => {\n    if (option === true) {\n        return () => true;\n    }\n    if (typeof option === 'function') {\n        return (id, ...parameters) => (!id.startsWith('\\0') && option(id, ...parameters)) || false;\n    }\n    if (option) {\n        const ids = new Set();\n        const matchers = [];\n        for (const value of ensureArray(option)) {\n            if (value instanceof RegExp) {\n                matchers.push(value);\n            }\n            else {\n                ids.add(value);\n            }\n        }\n        return (id, ..._arguments) => ids.has(id) || matchers.some(matcher => matcher.test(id));\n    }\n    return () => false;\n};\nconst getInlineDynamicImports$1 = (config, warn, strictDeprecations) => {\n    const configInlineDynamicImports = config.inlineDynamicImports;\n    if (configInlineDynamicImports) {\n        warnDeprecationWithOptions('The \"inlineDynamicImports\" option is deprecated. Use the \"output.inlineDynamicImports\" option instead.', URL_OUTPUT_INLINEDYNAMICIMPORTS, true, warn, strictDeprecations);\n    }\n    return configInlineDynamicImports;\n};\nconst getInput = (config) => {\n    const configInput = config.input;\n    return configInput == null ? [] : typeof configInput === 'string' ? [configInput] : configInput;\n};\nconst getManualChunks$1 = (config, warn, strictDeprecations) => {\n    const configManualChunks = config.manualChunks;\n    if (configManualChunks) {\n        warnDeprecationWithOptions('The \"manualChunks\" option is deprecated. Use the \"output.manualChunks\" option instead.', URL_OUTPUT_MANUALCHUNKS, true, warn, strictDeprecations);\n    }\n    return configManualChunks;\n};\nconst getmaxParallelFileOps = (config, warn, strictDeprecations) => {\n    const maxParallelFileReads = config.maxParallelFileReads;\n    if (typeof maxParallelFileReads === 'number') {\n        warnDeprecationWithOptions('The \"maxParallelFileReads\" option is deprecated. Use the \"maxParallelFileOps\" option instead.', URL_MAXPARALLELFILEOPS, true, warn, strictDeprecations);\n    }\n    const maxParallelFileOps = config.maxParallelFileOps ?? maxParallelFileReads;\n    if (typeof maxParallelFileOps === 'number') {\n        if (maxParallelFileOps <= 0)\n            return Infinity;\n        return maxParallelFileOps;\n    }\n    return 20;\n};\nconst getModuleContext = (config, context) => {\n    const configModuleContext = config.moduleContext;\n    if (typeof configModuleContext === 'function') {\n        return id => configModuleContext(id) ?? context;\n    }\n    if (configModuleContext) {\n        const contextByModuleId = Object.create(null);\n        for (const [key, moduleContext] of Object.entries(configModuleContext)) {\n            contextByModuleId[resolve(key)] = moduleContext;\n        }\n        return id => contextByModuleId[id] ?? context;\n    }\n    return () => context;\n};\nconst getPreserveModules$1 = (config, warn, strictDeprecations) => {\n    const configPreserveModules = config.preserveModules;\n    if (configPreserveModules) {\n        warnDeprecationWithOptions('The \"preserveModules\" option is deprecated. Use the \"output.preserveModules\" option instead.', URL_OUTPUT_PRESERVEMODULES, true, warn, strictDeprecations);\n    }\n    return configPreserveModules;\n};\nconst getTreeshake = (config) => {\n    const configTreeshake = config.treeshake;\n    if (configTreeshake === false) {\n        return false;\n    }\n    const configWithPreset = getOptionWithPreset(config.treeshake, treeshakePresets, 'treeshake', URL_TREESHAKE, 'false, true, ');\n    return {\n        annotations: configWithPreset.annotations !== false,\n        correctVarValueBeforeDeclaration: configWithPreset.correctVarValueBeforeDeclaration === true,\n        manualPureFunctions: configWithPreset.manualPureFunctions ?? EMPTY_ARRAY,\n        moduleSideEffects: getHasModuleSideEffects(configWithPreset.moduleSideEffects),\n        propertyReadSideEffects: configWithPreset.propertyReadSideEffects === 'always'\n            ? 'always'\n            : configWithPreset.propertyReadSideEffects !== false,\n        tryCatchDeoptimization: configWithPreset.tryCatchDeoptimization !== false,\n        unknownGlobalSideEffects: configWithPreset.unknownGlobalSideEffects !== false\n    };\n};\nconst getHasModuleSideEffects = (moduleSideEffectsOption) => {\n    if (typeof moduleSideEffectsOption === 'boolean') {\n        return () => moduleSideEffectsOption;\n    }\n    if (moduleSideEffectsOption === 'no-external') {\n        return (_id, external) => !external;\n    }\n    if (typeof moduleSideEffectsOption === 'function') {\n        return (id, external) => id.startsWith('\\0') ? true : moduleSideEffectsOption(id, external) !== false;\n    }\n    if (Array.isArray(moduleSideEffectsOption)) {\n        const ids = new Set(moduleSideEffectsOption);\n        return id => ids.has(id);\n    }\n    if (moduleSideEffectsOption) {\n        error(errorInvalidOption('treeshake.moduleSideEffects', URL_TREESHAKE_MODULESIDEEFFECTS, 'please use one of false, \"no-external\", a function or an array'));\n    }\n    return () => true;\n};\n\n// https://datatracker.ietf.org/doc/html/rfc2396\n// eslint-disable-next-line no-control-regex\nconst INVALID_CHAR_REGEX = /[\\u0000-\\u001F\"#$&*+,:;<=>?[\\]^`{|}\\u007F]/g;\nconst DRIVE_LETTER_REGEX = /^[a-z]:/i;\nfunction sanitizeFileName(name) {\n    const match = DRIVE_LETTER_REGEX.exec(name);\n    const driveLetter = match ? match[0] : '';\n    // A `:` is only allowed as part of a windows drive letter (ex: C:\\foo)\n    // Otherwise, avoid them because they can refer to NTFS alternate data streams.\n    return driveLetter + name.slice(driveLetter.length).replace(INVALID_CHAR_REGEX, '_');\n}\n\nasync function normalizeOutputOptions(config, inputOptions, unsetInputOptions) {\n    // These are options that may trigger special warnings or behaviour later\n    // if the user did not select an explicit value\n    const unsetOptions = new Set(unsetInputOptions);\n    const compact = config.compact || false;\n    const format = getFormat(config);\n    const inlineDynamicImports = getInlineDynamicImports(config, inputOptions);\n    const preserveModules = getPreserveModules(config, inlineDynamicImports, inputOptions);\n    const file = getFile(config, preserveModules, inputOptions);\n    const preferConst = getPreferConst(config, inputOptions);\n    const generatedCode = getGeneratedCode(config, preferConst);\n    const outputOptions = {\n        amd: getAmd(config),\n        assetFileNames: config.assetFileNames ?? 'assets/[name]-[hash][extname]',\n        banner: getAddon(config, 'banner'),\n        chunkFileNames: config.chunkFileNames ?? '[name]-[hash].js',\n        compact,\n        dir: getDir(config, file),\n        dynamicImportFunction: getDynamicImportFunction(config, inputOptions, format),\n        dynamicImportInCjs: config.dynamicImportInCjs ?? true,\n        entryFileNames: getEntryFileNames(config, unsetOptions),\n        esModule: config.esModule ?? 'if-default-prop',\n        experimentalDeepDynamicChunkOptimization: getExperimentalDeepDynamicChunkOptimization(config, inputOptions),\n        experimentalMinChunkSize: config.experimentalMinChunkSize || 0,\n        exports: getExports(config, unsetOptions),\n        extend: config.extend || false,\n        externalImportAssertions: config.externalImportAssertions ?? true,\n        externalLiveBindings: config.externalLiveBindings ?? true,\n        file,\n        footer: getAddon(config, 'footer'),\n        format,\n        freeze: config.freeze ?? true,\n        generatedCode,\n        globals: config.globals || {},\n        hoistTransitiveImports: config.hoistTransitiveImports ?? true,\n        indent: getIndent(config, compact),\n        inlineDynamicImports,\n        interop: getInterop(config),\n        intro: getAddon(config, 'intro'),\n        manualChunks: getManualChunks(config, inlineDynamicImports, preserveModules, inputOptions),\n        minifyInternalExports: getMinifyInternalExports(config, format, compact),\n        name: config.name,\n        namespaceToStringTag: getNamespaceToStringTag(config, generatedCode, inputOptions),\n        noConflict: config.noConflict || false,\n        outro: getAddon(config, 'outro'),\n        paths: config.paths || {},\n        plugins: await normalizePluginOption(config.plugins),\n        preferConst,\n        preserveModules,\n        preserveModulesRoot: getPreserveModulesRoot(config),\n        sanitizeFileName: typeof config.sanitizeFileName === 'function'\n            ? config.sanitizeFileName\n            : config.sanitizeFileName === false\n                ? id => id\n                : sanitizeFileName,\n        sourcemap: config.sourcemap || false,\n        sourcemapBaseUrl: getSourcemapBaseUrl(config),\n        sourcemapExcludeSources: config.sourcemapExcludeSources || false,\n        sourcemapFile: config.sourcemapFile,\n        sourcemapIgnoreList: typeof config.sourcemapIgnoreList === 'function'\n            ? config.sourcemapIgnoreList\n            : config.sourcemapIgnoreList === false\n                ? () => false\n                : relativeSourcePath => relativeSourcePath.includes('node_modules'),\n        sourcemapPathTransform: config.sourcemapPathTransform,\n        strict: config.strict ?? true,\n        systemNullSetters: config.systemNullSetters ?? true,\n        validate: config.validate || false\n    };\n    warnUnknownOptions(config, Object.keys(outputOptions), 'output options', inputOptions.onwarn);\n    return { options: outputOptions, unsetOptions };\n}\nconst getFile = (config, preserveModules, inputOptions) => {\n    const { file } = config;\n    if (typeof file === 'string') {\n        if (preserveModules) {\n            return error(errorInvalidOption('output.file', URL_OUTPUT_DIR, 'you must set \"output.dir\" instead of \"output.file\" when using the \"output.preserveModules\" option'));\n        }\n        if (!Array.isArray(inputOptions.input))\n            return error(errorInvalidOption('output.file', URL_OUTPUT_DIR, 'you must set \"output.dir\" instead of \"output.file\" when providing named inputs'));\n    }\n    return file;\n};\nconst getFormat = (config) => {\n    const configFormat = config.format;\n    switch (configFormat) {\n        case undefined:\n        case 'es':\n        case 'esm':\n        case 'module': {\n            return 'es';\n        }\n        case 'cjs':\n        case 'commonjs': {\n            return 'cjs';\n        }\n        case 'system':\n        case 'systemjs': {\n            return 'system';\n        }\n        case 'amd':\n        case 'iife':\n        case 'umd': {\n            return configFormat;\n        }\n        default: {\n            return error(errorInvalidOption('output.format', URL_OUTPUT_FORMAT, `Valid values are \"amd\", \"cjs\", \"system\", \"es\", \"iife\" or \"umd\"`, configFormat));\n        }\n    }\n};\nconst getInlineDynamicImports = (config, inputOptions) => {\n    const inlineDynamicImports = (config.inlineDynamicImports ?? inputOptions.inlineDynamicImports) || false;\n    const { input } = inputOptions;\n    if (inlineDynamicImports && (Array.isArray(input) ? input : Object.keys(input)).length > 1) {\n        return error(errorInvalidOption('output.inlineDynamicImports', URL_OUTPUT_INLINEDYNAMICIMPORTS, 'multiple inputs are not supported when \"output.inlineDynamicImports\" is true'));\n    }\n    return inlineDynamicImports;\n};\nconst getPreserveModules = (config, inlineDynamicImports, inputOptions) => {\n    const preserveModules = (config.preserveModules ?? inputOptions.preserveModules) || false;\n    if (preserveModules) {\n        if (inlineDynamicImports) {\n            return error(errorInvalidOption('output.inlineDynamicImports', URL_OUTPUT_INLINEDYNAMICIMPORTS, `this option is not supported for \"output.preserveModules\"`));\n        }\n        if (inputOptions.preserveEntrySignatures === false) {\n            return error(errorInvalidOption('preserveEntrySignatures', URL_PRESERVEENTRYSIGNATURES, 'setting this option to false is not supported for \"output.preserveModules\"'));\n        }\n    }\n    return preserveModules;\n};\nconst getPreferConst = (config, inputOptions) => {\n    const configPreferConst = config.preferConst;\n    if (configPreferConst != null) {\n        warnDeprecation(`The \"output.preferConst\" option is deprecated. Use the \"output.generatedCode.constBindings\" option instead.`, URL_OUTPUT_GENERATEDCODE_CONSTBINDINGS, true, inputOptions);\n    }\n    return !!configPreferConst;\n};\nconst getPreserveModulesRoot = (config) => {\n    const { preserveModulesRoot } = config;\n    if (preserveModulesRoot === null || preserveModulesRoot === undefined) {\n        return undefined;\n    }\n    return resolve(preserveModulesRoot);\n};\nconst getAmd = (config) => {\n    const mergedOption = {\n        autoId: false,\n        basePath: '',\n        define: 'define',\n        forceJsExtensionForImports: false,\n        ...config.amd\n    };\n    if ((mergedOption.autoId || mergedOption.basePath) && mergedOption.id) {\n        return error(errorInvalidOption('output.amd.id', URL_OUTPUT_AMD_ID, 'this option cannot be used together with \"output.amd.autoId\"/\"output.amd.basePath\"'));\n    }\n    if (mergedOption.basePath && !mergedOption.autoId) {\n        return error(errorInvalidOption('output.amd.basePath', URL_OUTPUT_AMD_BASEPATH, 'this option only works with \"output.amd.autoId\"'));\n    }\n    return mergedOption.autoId\n        ? {\n            autoId: true,\n            basePath: mergedOption.basePath,\n            define: mergedOption.define,\n            forceJsExtensionForImports: mergedOption.forceJsExtensionForImports\n        }\n        : {\n            autoId: false,\n            define: mergedOption.define,\n            forceJsExtensionForImports: mergedOption.forceJsExtensionForImports,\n            id: mergedOption.id\n        };\n};\nconst getAddon = (config, name) => {\n    const configAddon = config[name];\n    if (typeof configAddon === 'function') {\n        return configAddon;\n    }\n    return () => configAddon || '';\n};\n// eslint-disable-next-line unicorn/prevent-abbreviations\nconst getDir = (config, file) => {\n    const { dir } = config;\n    if (typeof dir === 'string' && typeof file === 'string') {\n        return error(errorInvalidOption('output.dir', URL_OUTPUT_DIR, 'you must set either \"output.file\" for a single-file build or \"output.dir\" when generating multiple chunks'));\n    }\n    return dir;\n};\nconst getDynamicImportFunction = (config, inputOptions, format) => {\n    const configDynamicImportFunction = config.dynamicImportFunction;\n    if (configDynamicImportFunction) {\n        warnDeprecation(`The \"output.dynamicImportFunction\" option is deprecated. Use the \"renderDynamicImport\" plugin hook instead.`, URL_RENDERDYNAMICIMPORT, true, inputOptions);\n        if (format !== 'es') {\n            inputOptions.onwarn(errorInvalidOption('output.dynamicImportFunction', URL_OUTPUT_DYNAMICIMPORTFUNCTION, 'this option is ignored for formats other than \"es\"'));\n        }\n    }\n    return configDynamicImportFunction;\n};\nconst getEntryFileNames = (config, unsetOptions) => {\n    const configEntryFileNames = config.entryFileNames;\n    if (configEntryFileNames == null) {\n        unsetOptions.add('entryFileNames');\n    }\n    return configEntryFileNames ?? '[name].js';\n};\nfunction getExperimentalDeepDynamicChunkOptimization(config, inputOptions) {\n    const configExperimentalDeepDynamicChunkOptimization = config.experimentalDeepDynamicChunkOptimization;\n    if (configExperimentalDeepDynamicChunkOptimization != null) {\n        warnDeprecation(`The \"output.experimentalDeepDynamicChunkOptimization\" option is deprecated as Rollup always runs the full chunking algorithm now. The option should be removed.`, URL_OUTPUT_EXPERIMENTALDEEPCHUNKOPTIMIZATION, true, inputOptions);\n    }\n    return configExperimentalDeepDynamicChunkOptimization || false;\n}\nfunction getExports(config, unsetOptions) {\n    const configExports = config.exports;\n    if (configExports == null) {\n        unsetOptions.add('exports');\n    }\n    else if (!['default', 'named', 'none', 'auto'].includes(configExports)) {\n        return error(errorInvalidExportOptionValue(configExports));\n    }\n    return configExports || 'auto';\n}\nconst getGeneratedCode = (config, preferConst) => {\n    const configWithPreset = getOptionWithPreset(config.generatedCode, generatedCodePresets, 'output.generatedCode', URL_OUTPUT_GENERATEDCODE, '');\n    return {\n        arrowFunctions: configWithPreset.arrowFunctions === true,\n        constBindings: configWithPreset.constBindings === true || preferConst,\n        objectShorthand: configWithPreset.objectShorthand === true,\n        reservedNamesAsProps: configWithPreset.reservedNamesAsProps !== false,\n        symbols: configWithPreset.symbols === true\n    };\n};\nconst getIndent = (config, compact) => {\n    if (compact) {\n        return '';\n    }\n    const configIndent = config.indent;\n    return configIndent === false ? '' : configIndent ?? true;\n};\nconst ALLOWED_INTEROP_TYPES = new Set([\n    'compat',\n    'auto',\n    'esModule',\n    'default',\n    'defaultOnly'\n]);\nconst getInterop = (config) => {\n    const configInterop = config.interop;\n    if (typeof configInterop === 'function') {\n        const interopPerId = Object.create(null);\n        let defaultInterop = null;\n        return id => id === null\n            ? defaultInterop || validateInterop((defaultInterop = configInterop(id)))\n            : id in interopPerId\n                ? interopPerId[id]\n                : validateInterop((interopPerId[id] = configInterop(id)));\n    }\n    return configInterop === undefined ? () => 'default' : () => validateInterop(configInterop);\n};\nconst validateInterop = (interop) => {\n    if (!ALLOWED_INTEROP_TYPES.has(interop)) {\n        return error(errorInvalidOption('output.interop', URL_OUTPUT_INTEROP, \n        // eslint-disable-next-line unicorn/prefer-spread\n        `use one of ${Array.from(ALLOWED_INTEROP_TYPES, value => JSON.stringify(value)).join(', ')}`, interop));\n    }\n    return interop;\n};\nconst getManualChunks = (config, inlineDynamicImports, preserveModules, inputOptions) => {\n    const configManualChunks = config.manualChunks || inputOptions.manualChunks;\n    if (configManualChunks) {\n        if (inlineDynamicImports) {\n            return error(errorInvalidOption('output.manualChunks', URL_OUTPUT_MANUALCHUNKS, 'this option is not supported for \"output.inlineDynamicImports\"'));\n        }\n        if (preserveModules) {\n            return error(errorInvalidOption('output.manualChunks', URL_OUTPUT_MANUALCHUNKS, 'this option is not supported for \"output.preserveModules\"'));\n        }\n    }\n    return configManualChunks || {};\n};\nconst getMinifyInternalExports = (config, format, compact) => config.minifyInternalExports ?? (compact || format === 'es' || format === 'system');\nconst getNamespaceToStringTag = (config, generatedCode, inputOptions) => {\n    const configNamespaceToStringTag = config.namespaceToStringTag;\n    if (configNamespaceToStringTag != null) {\n        warnDeprecation(`The \"output.namespaceToStringTag\" option is deprecated. Use the \"output.generatedCode.symbols\" option instead.`, URL_OUTPUT_GENERATEDCODE_SYMBOLS, true, inputOptions);\n        return configNamespaceToStringTag;\n    }\n    return generatedCode.symbols || false;\n};\nconst getSourcemapBaseUrl = (config) => {\n    const { sourcemapBaseUrl } = config;\n    if (sourcemapBaseUrl) {\n        if (isValidUrl(sourcemapBaseUrl)) {\n            return sourcemapBaseUrl;\n        }\n        return error(errorInvalidOption('output.sourcemapBaseUrl', URL_OUTPUT_SOURCEMAPBASEURL, `must be a valid URL, received ${JSON.stringify(sourcemapBaseUrl)}`));\n    }\n};\n\nfunction rollup(rawInputOptions) {\n    return rollupInternal(rawInputOptions, null);\n}\nasync function rollupInternal(rawInputOptions, watcher) {\n    const { options: inputOptions, unsetOptions: unsetInputOptions } = await getInputOptions(rawInputOptions, watcher !== null);\n    initialiseTimers(inputOptions);\n    const graph = new Graph(inputOptions, watcher);\n    // remove the cache object from the memory after graph creation (cache is not used anymore)\n    const useCache = rawInputOptions.cache !== false;\n    if (rawInputOptions.cache) {\n        inputOptions.cache = undefined;\n        rawInputOptions.cache = undefined;\n    }\n    timeStart('BUILD', 1);\n    await catchUnfinishedHookActions(graph.pluginDriver, async () => {\n        try {\n            timeStart('initialize', 2);\n            await graph.pluginDriver.hookParallel('buildStart', [inputOptions]);\n            timeEnd('initialize', 2);\n            await graph.build();\n        }\n        catch (error_) {\n            const watchFiles = Object.keys(graph.watchFiles);\n            if (watchFiles.length > 0) {\n                error_.watchFiles = watchFiles;\n            }\n            await graph.pluginDriver.hookParallel('buildEnd', [error_]);\n            await graph.pluginDriver.hookParallel('closeBundle', []);\n            throw error_;\n        }\n        await graph.pluginDriver.hookParallel('buildEnd', []);\n    });\n    timeEnd('BUILD', 1);\n    const result = {\n        cache: useCache ? graph.getCache() : undefined,\n        async close() {\n            if (result.closed)\n                return;\n            result.closed = true;\n            await graph.pluginDriver.hookParallel('closeBundle', []);\n        },\n        closed: false,\n        async generate(rawOutputOptions) {\n            if (result.closed)\n                return error(errorAlreadyClosed());\n            return handleGenerateWrite(false, inputOptions, unsetInputOptions, rawOutputOptions, graph);\n        },\n        watchFiles: Object.keys(graph.watchFiles),\n        async write(rawOutputOptions) {\n            if (result.closed)\n                return error(errorAlreadyClosed());\n            return handleGenerateWrite(true, inputOptions, unsetInputOptions, rawOutputOptions, graph);\n        }\n    };\n    if (inputOptions.perf)\n        result.getTimings = getTimings;\n    return result;\n}\nasync function getInputOptions(rawInputOptions, watchMode) {\n    if (!rawInputOptions) {\n        throw new Error('You must supply an options object to rollup');\n    }\n    const rawPlugins = getSortedValidatedPlugins('options', await normalizePluginOption(rawInputOptions.plugins));\n    const { options, unsetOptions } = await normalizeInputOptions(await rawPlugins.reduce(applyOptionHook(watchMode), Promise.resolve(rawInputOptions)));\n    normalizePlugins(options.plugins, ANONYMOUS_PLUGIN_PREFIX);\n    return { options, unsetOptions };\n}\nfunction applyOptionHook(watchMode) {\n    return async (inputOptions, plugin) => {\n        const handler = 'handler' in plugin.options ? plugin.options.handler : plugin.options;\n        return ((await handler.call({ meta: { rollupVersion: version$1, watchMode } }, await inputOptions)) ||\n            inputOptions);\n    };\n}\nfunction normalizePlugins(plugins, anonymousPrefix) {\n    for (const [index, plugin] of plugins.entries()) {\n        if (!plugin.name) {\n            plugin.name = `${anonymousPrefix}${index + 1}`;\n        }\n    }\n}\nasync function handleGenerateWrite(isWrite, inputOptions, unsetInputOptions, rawOutputOptions, graph) {\n    const { options: outputOptions, outputPluginDriver, unsetOptions } = await getOutputOptionsAndPluginDriver(rawOutputOptions, graph.pluginDriver, inputOptions, unsetInputOptions);\n    return catchUnfinishedHookActions(outputPluginDriver, async () => {\n        const bundle = new Bundle(outputOptions, unsetOptions, inputOptions, outputPluginDriver, graph);\n        const generated = await bundle.generate(isWrite);\n        if (isWrite) {\n            timeStart('WRITE', 1);\n            if (!outputOptions.dir && !outputOptions.file) {\n                return error(errorMissingFileOrDirOption());\n            }\n            await Promise.all(Object.values(generated).map(chunk => graph.fileOperationQueue.run(() => writeOutputFile(chunk, outputOptions))));\n            await outputPluginDriver.hookParallel('writeBundle', [outputOptions, generated]);\n            timeEnd('WRITE', 1);\n        }\n        return createOutput(generated);\n    });\n}\nasync function getOutputOptionsAndPluginDriver(rawOutputOptions, inputPluginDriver, inputOptions, unsetInputOptions) {\n    if (!rawOutputOptions) {\n        throw new Error('You must supply an options object');\n    }\n    const rawPlugins = await normalizePluginOption(rawOutputOptions.plugins);\n    normalizePlugins(rawPlugins, ANONYMOUS_OUTPUT_PLUGIN_PREFIX);\n    const outputPluginDriver = inputPluginDriver.createOutputPluginDriver(rawPlugins);\n    return {\n        ...(await getOutputOptions(inputOptions, unsetInputOptions, rawOutputOptions, outputPluginDriver)),\n        outputPluginDriver\n    };\n}\nfunction getOutputOptions(inputOptions, unsetInputOptions, rawOutputOptions, outputPluginDriver) {\n    return normalizeOutputOptions(outputPluginDriver.hookReduceArg0Sync('outputOptions', [rawOutputOptions], (outputOptions, result) => result || outputOptions, pluginContext => {\n        const emitError = () => pluginContext.error(errorCannotEmitFromOptionsHook());\n        return {\n            ...pluginContext,\n            emitFile: emitError,\n            setAssetSource: emitError\n        };\n    }), inputOptions, unsetInputOptions);\n}\nfunction createOutput(outputBundle) {\n    return {\n        output: Object.values(outputBundle).filter(outputFile => Object.keys(outputFile).length > 0).sort((outputFileA, outputFileB) => getSortingFileType(outputFileA) - getSortingFileType(outputFileB))\n    };\n}\nvar SortingFileType;\n(function (SortingFileType) {\n    SortingFileType[SortingFileType[\"ENTRY_CHUNK\"] = 0] = \"ENTRY_CHUNK\";\n    SortingFileType[SortingFileType[\"SECONDARY_CHUNK\"] = 1] = \"SECONDARY_CHUNK\";\n    SortingFileType[SortingFileType[\"ASSET\"] = 2] = \"ASSET\";\n})(SortingFileType || (SortingFileType = {}));\nfunction getSortingFileType(file) {\n    if (file.type === 'asset') {\n        return SortingFileType.ASSET;\n    }\n    if (file.isEntry) {\n        return SortingFileType.ENTRY_CHUNK;\n    }\n    return SortingFileType.SECONDARY_CHUNK;\n}\nasync function writeOutputFile(outputFile, outputOptions) {\n    const fileName = resolve(outputOptions.dir || dirname(outputOptions.file), outputFile.fileName);\n    // 'recursive: true' does not throw if the folder structure, or parts of it, already exist\n    await mkdir(dirname(fileName), { recursive: true });\n    return writeFile(fileName, outputFile.type === 'asset' ? outputFile.source : outputFile.code);\n}\n/**\n * Auxiliary function for defining rollup configuration\n * Mainly to facilitate IDE code prompts, after all, export default does not prompt, even if you add @type annotations, it is not accurate\n * @param options\n */\nfunction defineConfig(options) {\n    return options;\n}\n\nconst {\n  env = {},\n  argv = [],\n  platform = \"\",\n} = typeof process === \"undefined\" ? {} : process;\n\nconst isDisabled = \"NO_COLOR\" in env || argv.includes(\"--no-color\");\nconst isForced = \"FORCE_COLOR\" in env || argv.includes(\"--color\");\nconst isWindows = platform === \"win32\";\nconst isDumbTerminal = env.TERM === \"dumb\";\n\nconst isCompatibleTerminal =\n  tty && tty.isatty && tty.isatty(1) && env.TERM && !isDumbTerminal;\n\nconst isCI =\n  \"CI\" in env &&\n  (\"GITHUB_ACTIONS\" in env || \"GITLAB_CI\" in env || \"CIRCLECI\" in env);\n\nconst isColorSupported =\n  !isDisabled &&\n  (isForced || (isWindows && !isDumbTerminal) || isCompatibleTerminal || isCI);\n\nconst replaceClose = (\n  index,\n  string,\n  close,\n  replace,\n  head = string.substring(0, index) + replace,\n  tail = string.substring(index + close.length),\n  next = tail.indexOf(close)\n) => head + (next < 0 ? tail : replaceClose(next, tail, close, replace));\n\nconst clearBleed = (index, string, open, close, replace) =>\n  index < 0\n    ? open + string + close\n    : open + replaceClose(index, string, close, replace) + close;\n\nconst filterEmpty =\n  (open, close, replace = open, at = open.length + 1) =>\n  (string) =>\n    string || !(string === \"\" || string === undefined)\n      ? clearBleed(\n          (\"\" + string).indexOf(close, at),\n          string,\n          open,\n          close,\n          replace\n        )\n      : \"\";\n\nconst init = (open, close, replace) =>\n  filterEmpty(`\\x1b[${open}m`, `\\x1b[${close}m`, replace);\n\nconst colors = {\n  reset: init(0, 0),\n  bold: init(1, 22, \"\\x1b[22m\\x1b[1m\"),\n  dim: init(2, 22, \"\\x1b[22m\\x1b[2m\"),\n  italic: init(3, 23),\n  underline: init(4, 24),\n  inverse: init(7, 27),\n  hidden: init(8, 28),\n  strikethrough: init(9, 29),\n  black: init(30, 39),\n  red: init(31, 39),\n  green: init(32, 39),\n  yellow: init(33, 39),\n  blue: init(34, 39),\n  magenta: init(35, 39),\n  cyan: init(36, 39),\n  white: init(37, 39),\n  gray: init(90, 39),\n  bgBlack: init(40, 49),\n  bgRed: init(41, 49),\n  bgGreen: init(42, 49),\n  bgYellow: init(43, 49),\n  bgBlue: init(44, 49),\n  bgMagenta: init(45, 49),\n  bgCyan: init(46, 49),\n  bgWhite: init(47, 49),\n  blackBright: init(90, 39),\n  redBright: init(91, 39),\n  greenBright: init(92, 39),\n  yellowBright: init(93, 39),\n  blueBright: init(94, 39),\n  magentaBright: init(95, 39),\n  cyanBright: init(96, 39),\n  whiteBright: init(97, 39),\n  bgBlackBright: init(100, 49),\n  bgRedBright: init(101, 49),\n  bgGreenBright: init(102, 49),\n  bgYellowBright: init(103, 49),\n  bgBlueBright: init(104, 49),\n  bgMagentaBright: init(105, 49),\n  bgCyanBright: init(106, 49),\n  bgWhiteBright: init(107, 49),\n};\n\nconst createColors = ({ useColor = isColorSupported } = {}) =>\n  useColor\n    ? colors\n    : Object.keys(colors).reduce(\n        (colors, key) => ({ ...colors, [key]: String }),\n        {}\n      );\n\ncreateColors();\n\n// @see https://no-color.org\n// @see https://www.npmjs.com/package/chalk\nconst { bold, cyan, dim, gray, green, red, underline, yellow } = createColors({\n    useColor: env$1.FORCE_COLOR !== '0' && !env$1.NO_COLOR\n});\n\n// log to stderr to keep `rollup main.js > bundle.js` from breaking\nconst stderr = (...parameters) => process$1.stderr.write(`${parameters.join('')}\\n`);\nfunction handleError(error, recover = false) {\n    const name = error.name || error.cause?.name;\n    const nameSection = name ? `${name}: ` : '';\n    const pluginSection = error.plugin ? `(plugin ${error.plugin}) ` : '';\n    const message = `${pluginSection}${nameSection}${error.message}`;\n    const outputLines = [bold(red(`[!] ${bold(message.toString())}`))];\n    if (error.url) {\n        outputLines.push(cyan(error.url));\n    }\n    if (error.loc) {\n        outputLines.push(`${relativeId((error.loc.file || error.id))} (${error.loc.line}:${error.loc.column})`);\n    }\n    else if (error.id) {\n        outputLines.push(relativeId(error.id));\n    }\n    if (error.frame) {\n        outputLines.push(dim(error.frame));\n    }\n    if (error.stack) {\n        outputLines.push(dim(error.stack?.replace(`${nameSection}${error.message}\\n`, '')));\n    }\n    outputLines.push('', '');\n    stderr(outputLines.join('\\n'));\n    // eslint-disable-next-line unicorn/no-process-exit\n    if (!recover)\n        process$1.exit(1);\n}\n\nconst commandAliases = {\n    c: 'config',\n    d: 'dir',\n    e: 'external',\n    f: 'format',\n    g: 'globals',\n    h: 'help',\n    i: 'input',\n    m: 'sourcemap',\n    n: 'name',\n    o: 'file',\n    p: 'plugin',\n    v: 'version',\n    w: 'watch'\n};\nconst EMPTY_COMMAND_OPTIONS = { external: [], globals: undefined };\nasync function mergeOptions(config, rawCommandOptions = EMPTY_COMMAND_OPTIONS, defaultOnWarnHandler = defaultOnWarn) {\n    const command = getCommandOptions(rawCommandOptions);\n    const inputOptions = await mergeInputOptions(config, command, defaultOnWarnHandler);\n    const warn = inputOptions.onwarn;\n    if (command.output) {\n        Object.assign(command, command.output);\n    }\n    const outputOptionsArray = ensureArray(config.output);\n    if (outputOptionsArray.length === 0)\n        outputOptionsArray.push({});\n    const outputOptions = await Promise.all(outputOptionsArray.map(singleOutputOptions => mergeOutputOptions(singleOutputOptions, command, warn)));\n    warnUnknownOptions(command, [\n        ...Object.keys(inputOptions),\n        ...Object.keys(outputOptions[0]).filter(option => option !== 'sourcemapIgnoreList' && option !== 'sourcemapPathTransform'),\n        ...Object.keys(commandAliases),\n        'bundleConfigAsCjs',\n        'config',\n        'environment',\n        'plugin',\n        'silent',\n        'failAfterWarnings',\n        'stdin',\n        'waitForBundleInput',\n        'configPlugin'\n    ], 'CLI flags', warn, /^_$|output$|config/);\n    inputOptions.output = outputOptions;\n    return inputOptions;\n}\nfunction getCommandOptions(rawCommandOptions) {\n    const external = rawCommandOptions.external && typeof rawCommandOptions.external === 'string'\n        ? rawCommandOptions.external.split(',')\n        : [];\n    return {\n        ...rawCommandOptions,\n        external,\n        globals: typeof rawCommandOptions.globals === 'string'\n            ? rawCommandOptions.globals.split(',').reduce((globals, globalDefinition) => {\n                const [id, variableName] = globalDefinition.split(':');\n                globals[id] = variableName;\n                if (!external.includes(id)) {\n                    external.push(id);\n                }\n                return globals;\n            }, Object.create(null))\n            : undefined\n    };\n}\nasync function mergeInputOptions(config, overrides, defaultOnWarnHandler) {\n    const getOption = (name) => overrides[name] ?? config[name];\n    const inputOptions = {\n        acorn: getOption('acorn'),\n        acornInjectPlugins: config.acornInjectPlugins,\n        cache: config.cache,\n        context: getOption('context'),\n        experimentalCacheExpiry: getOption('experimentalCacheExpiry'),\n        experimentalLogSideEffects: getOption('experimentalLogSideEffects'),\n        external: getExternal(config, overrides),\n        inlineDynamicImports: getOption('inlineDynamicImports'),\n        input: getOption('input') || [],\n        makeAbsoluteExternalsRelative: getOption('makeAbsoluteExternalsRelative'),\n        manualChunks: getOption('manualChunks'),\n        maxParallelFileOps: getOption('maxParallelFileOps'),\n        maxParallelFileReads: getOption('maxParallelFileReads'),\n        moduleContext: getOption('moduleContext'),\n        onwarn: getOnWarn(config, defaultOnWarnHandler),\n        perf: getOption('perf'),\n        plugins: await normalizePluginOption(config.plugins),\n        preserveEntrySignatures: getOption('preserveEntrySignatures'),\n        preserveModules: getOption('preserveModules'),\n        preserveSymlinks: getOption('preserveSymlinks'),\n        shimMissingExports: getOption('shimMissingExports'),\n        strictDeprecations: getOption('strictDeprecations'),\n        treeshake: getObjectOption(config, overrides, 'treeshake', objectifyOptionWithPresets(treeshakePresets, 'treeshake', URL_TREESHAKE, 'false, true, ')),\n        watch: getWatch(config, overrides)\n    };\n    warnUnknownOptions(config, Object.keys(inputOptions), 'input options', inputOptions.onwarn, /^output$/);\n    return inputOptions;\n}\nconst getExternal = (config, overrides) => {\n    const configExternal = config.external;\n    return typeof configExternal === 'function'\n        ? (source, importer, isResolved) => configExternal(source, importer, isResolved) || overrides.external.includes(source)\n        : [...ensureArray(configExternal), ...overrides.external];\n};\nconst getOnWarn = (config, defaultOnWarnHandler) => config.onwarn ? warning => config.onwarn(warning, defaultOnWarnHandler) : defaultOnWarnHandler;\nconst getObjectOption = (config, overrides, name, objectifyValue = objectifyOption) => {\n    const commandOption = normalizeObjectOptionValue(overrides[name], objectifyValue);\n    const configOption = normalizeObjectOptionValue(config[name], objectifyValue);\n    if (commandOption !== undefined) {\n        return commandOption && { ...configOption, ...commandOption };\n    }\n    return configOption;\n};\nconst getWatch = (config, overrides) => config.watch !== false && getObjectOption(config, overrides, 'watch');\nconst normalizeObjectOptionValue = (optionValue, objectifyValue) => {\n    if (!optionValue) {\n        return optionValue;\n    }\n    if (Array.isArray(optionValue)) {\n        return optionValue.reduce((result, value) => value && result && { ...result, ...objectifyValue(value) }, {});\n    }\n    return objectifyValue(optionValue);\n};\nasync function mergeOutputOptions(config, overrides, warn) {\n    const getOption = (name) => overrides[name] ?? config[name];\n    const outputOptions = {\n        amd: getObjectOption(config, overrides, 'amd'),\n        assetFileNames: getOption('assetFileNames'),\n        banner: getOption('banner'),\n        chunkFileNames: getOption('chunkFileNames'),\n        compact: getOption('compact'),\n        dir: getOption('dir'),\n        dynamicImportFunction: getOption('dynamicImportFunction'),\n        dynamicImportInCjs: getOption('dynamicImportInCjs'),\n        entryFileNames: getOption('entryFileNames'),\n        esModule: getOption('esModule'),\n        experimentalDeepDynamicChunkOptimization: getOption('experimentalDeepDynamicChunkOptimization'),\n        experimentalMinChunkSize: getOption('experimentalMinChunkSize'),\n        exports: getOption('exports'),\n        extend: getOption('extend'),\n        externalImportAssertions: getOption('externalImportAssertions'),\n        externalLiveBindings: getOption('externalLiveBindings'),\n        file: getOption('file'),\n        footer: getOption('footer'),\n        format: getOption('format'),\n        freeze: getOption('freeze'),\n        generatedCode: getObjectOption(config, overrides, 'generatedCode', objectifyOptionWithPresets(generatedCodePresets, 'output.generatedCode', URL_OUTPUT_GENERATEDCODE, '')),\n        globals: getOption('globals'),\n        hoistTransitiveImports: getOption('hoistTransitiveImports'),\n        indent: getOption('indent'),\n        inlineDynamicImports: getOption('inlineDynamicImports'),\n        interop: getOption('interop'),\n        intro: getOption('intro'),\n        manualChunks: getOption('manualChunks'),\n        minifyInternalExports: getOption('minifyInternalExports'),\n        name: getOption('name'),\n        namespaceToStringTag: getOption('namespaceToStringTag'),\n        noConflict: getOption('noConflict'),\n        outro: getOption('outro'),\n        paths: getOption('paths'),\n        plugins: await normalizePluginOption(config.plugins),\n        preferConst: getOption('preferConst'),\n        preserveModules: getOption('preserveModules'),\n        preserveModulesRoot: getOption('preserveModulesRoot'),\n        sanitizeFileName: getOption('sanitizeFileName'),\n        sourcemap: getOption('sourcemap'),\n        sourcemapBaseUrl: getOption('sourcemapBaseUrl'),\n        sourcemapExcludeSources: getOption('sourcemapExcludeSources'),\n        sourcemapFile: getOption('sourcemapFile'),\n        sourcemapIgnoreList: getOption('sourcemapIgnoreList'),\n        sourcemapPathTransform: getOption('sourcemapPathTransform'),\n        strict: getOption('strict'),\n        systemNullSetters: getOption('systemNullSetters'),\n        validate: getOption('validate')\n    };\n    warnUnknownOptions(config, Object.keys(outputOptions), 'output options', warn);\n    return outputOptions;\n}\n\nclass WatchEmitter {\n    constructor() {\n        this.currentHandlers = Object.create(null);\n        this.persistentHandlers = Object.create(null);\n    }\n    // Will be overwritten by Rollup\n    async close() { }\n    emit(event, ...parameters) {\n        return Promise.all([...this.getCurrentHandlers(event), ...this.getPersistentHandlers(event)].map(handler => handler(...parameters)));\n    }\n    off(event, listener) {\n        const listeners = this.persistentHandlers[event];\n        if (listeners) {\n            // A hack stolen from \"mitt\": \">>> 0\" does not change numbers >= 0, but -1\n            // (which would remove the last array element if used unchanged) is turned\n            // into max_int, which is outside the array and does not change anything.\n            listeners.splice(listeners.indexOf(listener) >>> 0, 1);\n        }\n        return this;\n    }\n    on(event, listener) {\n        this.getPersistentHandlers(event).push(listener);\n        return this;\n    }\n    onCurrentRun(event, listener) {\n        this.getCurrentHandlers(event).push(listener);\n        return this;\n    }\n    once(event, listener) {\n        const selfRemovingListener = (...parameters) => {\n            this.off(event, selfRemovingListener);\n            return listener(...parameters);\n        };\n        this.on(event, selfRemovingListener);\n        return this;\n    }\n    removeAllListeners() {\n        this.removeListenersForCurrentRun();\n        this.persistentHandlers = Object.create(null);\n        return this;\n    }\n    removeListenersForCurrentRun() {\n        this.currentHandlers = Object.create(null);\n        return this;\n    }\n    getCurrentHandlers(event) {\n        return this.currentHandlers[event] || (this.currentHandlers[event] = []);\n    }\n    getPersistentHandlers(event) {\n        return this.persistentHandlers[event] || (this.persistentHandlers[event] = []);\n    }\n}\n\nlet fsEvents;\nlet fsEventsImportError;\nasync function loadFsEvents() {\n    try {\n        ({ default: fsEvents } = await import('fsevents'));\n    }\n    catch (error) {\n        fsEventsImportError = error;\n    }\n}\n// A call to this function will be injected into the chokidar code\nfunction getFsEvents() {\n    if (fsEventsImportError)\n        throw fsEventsImportError;\n    return fsEvents;\n}\n\nconst fseventsImporter = /*#__PURE__*/Object.defineProperty({\n  __proto__: null,\n  getFsEvents,\n  loadFsEvents\n}, Symbol.toStringTag, { value: 'Module' });\n\nfunction watch(configs) {\n    const emitter = new WatchEmitter();\n    watchInternal(configs, emitter).catch(error => {\n        handleError(error);\n    });\n    return emitter;\n}\nasync function watchInternal(configs, emitter) {\n    const optionsList = await Promise.all(ensureArray(configs).map(config => mergeOptions(config)));\n    const watchOptionsList = optionsList.filter(config => config.watch !== false);\n    if (watchOptionsList.length === 0) {\n        return error(errorInvalidOption('watch', URL_WATCH, 'there must be at least one config where \"watch\" is not set to \"false\"'));\n    }\n    await loadFsEvents();\n    const { Watcher } = await import('./watch.js');\n    new Watcher(watchOptionsList, emitter);\n}\n\nexport { createFilter, defineConfig, fseventsImporter, getAugmentedNamespace, picomatchExports, rollup, rollupInternal, version$1 as version, watch };\n"],"mappings":"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C,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,GAAG,CAAC;;AAE/8B;AACA,IAAIC,0BAA0B,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}