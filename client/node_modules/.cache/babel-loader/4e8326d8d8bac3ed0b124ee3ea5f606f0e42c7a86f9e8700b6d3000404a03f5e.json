{"ast":null,"code":"import { NOTES_CREATE_FAIL, NOTES_CREATE_REQUEST, NOTES_CREATE_SUCCESS, NOTES_DELETE_FAIL, NOTES_DELETE_REQUEST, NOTES_DELETE_SUCCESS, NOTES_LIST_FAIL, NOTES_LIST_REQUEST, NOTES_LIST_SUCCESS, NOTES_UPDATE_FAIL, NOTES_UPDATE_REQUEST, NOTES_UPDATE_SUCCESS } from \"../constants/notesConstants\";\nimport axios from \"axios\";\nexport const listNotes = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NOTES_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/notes`, config);\n    dispatch({\n      type: NOTES_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: NOTES_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const createNoteAction = (title, content, category) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NOTES_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/notes/create`, {\n      title,\n      content,\n      category\n    }, config);\n    dispatch({\n      type: NOTES_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: NOTES_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteNoteAction = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NOTES_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.delete(`/api/notes/${id}`, config);\n    dispatch({\n      type: NOTES_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: NOTES_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateNoteAction = (id, title, content, category) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NOTES_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/notes/${id}`, {\n      title,\n      content,\n      category\n    }, config);\n    dispatch({\n      type: NOTES_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: NOTES_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"names":["NOTES_CREATE_FAIL","NOTES_CREATE_REQUEST","NOTES_CREATE_SUCCESS","NOTES_DELETE_FAIL","NOTES_DELETE_REQUEST","NOTES_DELETE_SUCCESS","NOTES_LIST_FAIL","NOTES_LIST_REQUEST","NOTES_LIST_SUCCESS","NOTES_UPDATE_FAIL","NOTES_UPDATE_REQUEST","NOTES_UPDATE_SUCCESS","axios","listNotes","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","get","payload","error","message","response","createNoteAction","title","content","category","post","deleteNoteAction","id","delete","updateNoteAction","put"],"sources":["/Users/hrushi/Desktop/notenexus/client/src/actions/notesActions.js"],"sourcesContent":["import {\n  NOTES_CREATE_FAIL,\n  NOTES_CREATE_REQUEST,\n  NOTES_CREATE_SUCCESS,\n  NOTES_DELETE_FAIL,\n  NOTES_DELETE_REQUEST,\n  NOTES_DELETE_SUCCESS,\n  NOTES_LIST_FAIL,\n  NOTES_LIST_REQUEST,\n  NOTES_LIST_SUCCESS,\n  NOTES_UPDATE_FAIL,\n  NOTES_UPDATE_REQUEST,\n  NOTES_UPDATE_SUCCESS,\n} from \"../constants/notesConstants\";\nimport axios from \"axios\";\n\nexport const listNotes = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NOTES_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/notes`, config);\n\n    dispatch({\n      type: NOTES_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: NOTES_LIST_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const createNoteAction =\n  (title, content, category) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: NOTES_CREATE_REQUEST,\n      });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.post(\n        `/api/notes/create`,\n        { title, content, category },\n        config\n      );\n\n      dispatch({\n        type: NOTES_CREATE_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({\n        type: NOTES_CREATE_FAIL,\n        payload: message,\n      });\n    }\n  };\n\nexport const deleteNoteAction = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NOTES_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/notes/${id}`, config);\n\n    dispatch({\n      type: NOTES_DELETE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: NOTES_DELETE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const updateNoteAction =\n  (id, title, content, category) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: NOTES_UPDATE_REQUEST,\n      });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.put(\n        `/api/notes/${id}`,\n        { title, content, category },\n        config\n      );\n\n      dispatch({\n        type: NOTES_UPDATE_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({\n        type: NOTES_UPDATE_FAIL,\n        payload: message,\n      });\n    }\n  };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}